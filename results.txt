[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Nov 2, 2017 1:22:51 AM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:201:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] one warning found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:48:53: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def decode(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1868115770 => if (in.isReusableCharsEqualsTo(l, "bd"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _bd = in.readBigDecimal(_bd)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 135249149 => if (in.isReusableCharsEqualsTo(l, "os"))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def encode(obj: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs];
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           if (x.os.ne(null).&&(x.os.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "os");
[info]               out.writeVal(x.os.get)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = materialize[AnyRefs]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:50:51: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       private val reqFields: Array[String] = Array("aa", "a");
[info]       override def decode(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Arrays = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _aa: Array[Array[Int]] = new Array[Array[Int]](0);
[info]           var _a: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1396692260 => if (in.isReusableCharsEqualsTo(l, "aa"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _aa = d1(in, _aa)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 272946562 => if (in.isReusableCharsEqualsTo(l, "a"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _a = d2(in, _a)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def encode(obj: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Arrays];
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "aa");
[info]             e1(out, x.aa)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "a");
[info]             e2(out, x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: Array[Int]): Array[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               buf.+=(d0(in, new Array[Int](0)))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d2(in: JsonReader, default: Array[BigInt]): Array[BigInt] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               buf.+=(in.readBigInt(null))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: Array[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var c = false;
[info]         while (i.<(l)) 
[info]           {
[info]             c = out.writeComma(c);
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: Array[Array[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var c = false;
[info]         while (i.<(l)) 
[info]           {
[info]             c = out.writeComma(c);
[info]             e0(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: Array[BigInt]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var c = false;
[info]         while (i.<(l)) 
[info]           {
[info]             c = out.writeComma(c);
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = materialize[Arrays]
[info]                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:52:53: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       override def decode(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.BitSets = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case -311899171 => if (in.isReusableCharsEqualsTo(l, "bs"))
[info]                       _bs = d0(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 395882128 => if (in.isReusableCharsEqualsTo(l, "mbs"))
[info]                       _mbs = d1(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def encode(obj: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.BitSets];
[info]           var c = false;
[info]           if (x.bs.ne(null).&&(x.bs.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "bs");
[info]               e0(out, x.bs)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mbs.ne(null).&&(x.mbs.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "mbs");
[info]               e1(out, x.mbs)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = BitSet.newBuilder;
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = BitSet.empty;
[info]             do 
[info]               buf.add(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.mutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = materialize[BitSets]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:54:57: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       override def decode(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Iterables = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, "l"))
[info]                       _l = d0(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       _s = d1(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 753022030 => if (in.isReusableCharsEqualsTo(l, "ls"))
[info]                       _ls = d2(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def encode(obj: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Iterables];
[info]           var c = false;
[info]           if (x.l.ne(null).&&(x.l.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "l");
[info]               e0(out, x.l)
[info]             }
[info]           else
[info]             ();
[info]           if (x.s.ne(null).&&(x.s.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "s");
[info]               e1(out, x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.ls.ne(null).&&(x.ls.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "ls");
[info]               e2(out, x.ls)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: List[String]): List[String] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = List.newBuilder[String];
[info]             do 
[info]               buf.+=(in.readString(null))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = Set.newBuilder[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d2(in: JsonReader, default: List[Set[Int]]): List[Set[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               buf.+=(d1(in, Set.empty[Int]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = materialize[Iterables]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:56:47: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       override def decode(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Maps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def encode(obj: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Maps];
[info]           var c = false;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = HashMap.empty[Long, Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsInt(), d1(in, HashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = materialize[Maps]
[info]                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:58:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       override def decode(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def encode(obj: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps];
[info]           var c = false;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf.update(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               buf.update(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               buf.update(in.readObjectFieldAsInt(), d1(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = materialize[MutableMaps]
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:60:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       override def decode(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def encode(obj: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps];
[info]           var c = false;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = IntMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsInt(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = LongMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               buf.update(in.readObjectFieldAsLong(), d1(in, LongMap.empty[Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:62:59: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       override def decode(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Primitives = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 255;
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 479329913 => if (in.isReusableCharsEqualsTo(l, "b"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isReusableCharsEqualsTo(l, "i"))
[info]                       {
[info]                         req0.&=(-5);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, "l"))
[info]                       {
[info]                         req0.&=(-9);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -986815646 => if (in.isReusableCharsEqualsTo(l, "bl"))
[info]                       {
[info]                         req0.&=(-17);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1128364876 => if (in.isReusableCharsEqualsTo(l, "ch"))
[info]                       {
[info]                         req0.&=(-33);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 977778859 => if (in.isReusableCharsEqualsTo(l, "dbl"))
[info]                       {
[info]                         req0.&=(-65);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2108804597 => if (in.isReusableCharsEqualsTo(l, "f"))
[info]                       {
[info]                         req0.&=(-129);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def encode(obj: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Primitives];
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = materialize[Primitives]
[info]                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:64:65: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       private val reqFields: Array[String] = Array("s", "l");
[info]       override def decode(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, "l"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def encode(obj: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.ExtractFields];
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = materialize[ExtractFields]
[info]                                                                 ^
[warn] one warning found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
Processing 85 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 66 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce
[info] # Run progress: 0.00% complete, ETA 00:10:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 769818.828 ops/s
[info] # Warmup Iteration   2: 875243.246 ops/s
[info] # Warmup Iteration   3: 887289.818 ops/s
[info] # Warmup Iteration   4: 1118004.133 ops/s
[info] # Warmup Iteration   5: 1274393.245 ops/s
[info] Iteration   1: 1271634.766 ops/s
[info]                  ·gc.alloc.rate:                   1991.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2498.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1266109.718 ops/s
[info]                  ·gc.alloc.rate:                   1982.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2521.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1261501.926 ops/s
[info]                  ·gc.alloc.rate:                   1975.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2034.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2537.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 1263031.110 ops/s
[info]                  ·gc.alloc.rate:                   1978.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2539.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1261423.008 ops/s
[info]                  ·gc.alloc.rate:                   1975.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2119.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce":
[info]   1264740.106 ±(99.9%) 16542.290 ops/s [Average]
[info]   (min, avg, max) = (1261423.008, 1264740.106, 1271634.766), stdev = 4295.980
[info]   CI (99.9%): [1248197.816, 1281282.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1980.807 ±(99.9%) 26.020 MB/sec [Average]
[info]   (min, avg, max) = (1975.573, 1980.807, 1991.636), stdev = 6.757
[info]   CI (99.9%): [1954.787, 2006.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2464.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2464.000, 2464.000, 2464.000), stdev = 0.001
[info]   CI (99.9%): [2464.000, 2464.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1964.222 ±(99.9%) 570.936 MB/sec [Average]
[info]   (min, avg, max) = (1699.284, 1964.222, 2038.520), stdev = 148.270
[info]   CI (99.9%): [1393.286, 2535.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2443.194 ±(99.9%) 699.764 B/op [Average]
[info]   (min, avg, max) = (2119.403, 2443.194, 2539.230), stdev = 181.727
[info]   CI (99.9%): [1743.430, 3142.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.073 ±(99.9%) 0.109 B/op [Average]
[info]   (min, avg, max) = (0.052, 0.073, 0.104), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.400, 13.000), stdev = 2.881
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson
[info] # Run progress: 1.61% complete, ETA 00:16:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1006971.965 ops/s
[info] # Warmup Iteration   2: 1265204.738 ops/s
[info] # Warmup Iteration   3: 1292868.728 ops/s
[info] # Warmup Iteration   4: 1273496.011 ops/s
[info] # Warmup Iteration   5: 1269868.132 ops/s
[info] Iteration   1: 1272302.527 ops/s
[info]                  ·gc.alloc.rate:                   892.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1215.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1532923.841 ops/s
[info]                  ·gc.alloc.rate:                   1075.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1016.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1823045.388 ops/s
[info]                  ·gc.alloc.rate:                   1279.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1146.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1816471.256 ops/s
[info]                  ·gc.alloc.rate:                   1274.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1158.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1811616.287 ops/s
[info]                  ·gc.alloc.rate:                   1271.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1167.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson":
[info]   1651271.860 ±(99.9%) 943469.310 ops/s [Average]
[info]   (min, avg, max) = (1272302.527, 1651271.860, 1823045.388), stdev = 245015.984
[info]   CI (99.9%): [707802.550, 2594741.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1158.747 ±(99.9%) 661.995 MB/sec [Average]
[info]   (min, avg, max) = (892.825, 1158.747, 1279.284), stdev = 171.918
[info]   CI (99.9%): [496.752, 1820.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1196.606 ±(99.9%) 739.540 MB/sec [Average]
[info]   (min, avg, max) = (982.656, 1196.606, 1344.472), stdev = 192.056
[info]   CI (99.9%): [457.067, 1936.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1140.702 ±(99.9%) 286.485 B/op [Average]
[info]   (min, avg, max) = (1016.008, 1140.702, 1215.078), stdev = 74.399
[info]   CI (99.9%): [854.217, 1427.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.049 ±(99.9%) 0.177 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.049, 0.129), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 13.000), stdev = 4.359
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 3.23% complete, ETA 00:16:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6083913.827 ops/s
[info] # Warmup Iteration   2: 6414168.620 ops/s
[info] # Warmup Iteration   3: 6464578.278 ops/s
[info] # Warmup Iteration   4: 6425920.818 ops/s
[info] # Warmup Iteration   5: 6455604.385 ops/s
[info] Iteration   1: 6382330.607 ops/s
[info]                  ·gc.alloc.rate:                   811.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     242.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6424225.849 ops/s
[info]                  ·gc.alloc.rate:                   816.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     161.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 6344070.224 ops/s
[info]                  ·gc.alloc.rate:                   806.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     245.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 6420578.084 ops/s
[info]                  ·gc.alloc.rate:                   816.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 6406370.956 ops/s
[info]                  ·gc.alloc.rate:               814.444 MB/sec
[info]                  ·gc.alloc.rate.norm:          200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      999.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 245.482 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter":
[info]   6395515.144 ±(99.9%) 127576.605 ops/s [Average]
[info]   (min, avg, max) = (6344070.224, 6395515.144, 6424225.849), stdev = 33131.239
[info]   CI (99.9%): [6267938.539, 6523091.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   813.025 ±(99.9%) 16.270 MB/sec [Average]
[info]   (min, avg, max) = (806.453, 813.025, 816.693), stdev = 4.225
[info]   CI (99.9%): [796.755, 829.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   859.338 ±(99.9%) 697.944 MB/sec [Average]
[info]   (min, avg, max) = (657.753, 859.338, 999.657), stdev = 181.254
[info]   CI (99.9%): [161.394, 1557.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   211.533 ±(99.9%) 174.566 B/op [Average]
[info]   (min, avg, max) = (161.077, 211.533, 245.997), stdev = 45.334
[info]   CI (99.9%): [36.967, 386.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.039 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.026), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 4.000), stdev = 1.140
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay
[info] # Run progress: 4.84% complete, ETA 00:15:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 257565.371 ops/s
[info] # Warmup Iteration   2: 410832.933 ops/s
[info] # Warmup Iteration   3: 422179.457 ops/s
[info] # Warmup Iteration   4: 425928.916 ops/s
[info] # Warmup Iteration   5: 425026.408 ops/s
[info] Iteration   1: 421983.437 ops/s
[info]                  ·gc.alloc.rate:                   1115.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3685.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 420166.571 ops/s
[info]                  ·gc.alloc.rate:                   1111.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4965.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.390 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 424955.216 ops/s
[info]                  ·gc.alloc.rate:                   1123.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3704.514 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.308 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 423178.512 ops/s
[info]                  ·gc.alloc.rate:                   1118.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3732.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 424819.851 ops/s
[info]                  ·gc.alloc.rate:                   1123.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4980.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.231 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay":
[info]   423020.717 ±(99.9%) 7755.527 ops/s [Average]
[info]   (min, avg, max) = (420166.571, 423020.717, 424955.216), stdev = 2014.086
[info]   CI (99.9%): [415265.190, 430776.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1118.571 ±(99.9%) 20.364 MB/sec [Average]
[info]   (min, avg, max) = (1111.083, 1118.571, 1123.688), stdev = 5.288
[info]   CI (99.9%): [1098.207, 1138.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.880 ±(99.9%) 713.168 MB/sec [Average]
[info]   (min, avg, max) = (988.674, 1132.880, 1344.785), stdev = 185.207
[info]   CI (99.9%): [419.712, 1846.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4213.824 ±(99.9%) 2669.805 B/op [Average]
[info]   (min, avg, max) = (3685.896, 4213.824, 4980.409), stdev = 693.340
[info]   CI (99.9%): [1544.020, 6883.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.232 ±(99.9%) 0.474 B/op [Average]
[info]   (min, avg, max) = (0.077, 0.232, 0.390), stdev = 0.123
[info]   CI (99.9%): [≈ 0, 0.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 11.000), stdev = 4.037
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce
[info] # Run progress: 6.45% complete, ETA 00:15:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 347712.074 ops/s
[info] # Warmup Iteration   2: 623811.012 ops/s
[info] # Warmup Iteration   3: 622829.229 ops/s
[info] # Warmup Iteration   4: 617189.008 ops/s
[info] # Warmup Iteration   5: 630425.065 ops/s
[info] Iteration   1: 629866.945 ops/s
[info]                  ·gc.alloc.rate:                   2053.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5065.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 624506.496 ops/s
[info]                  ·gc.alloc.rate:                   2035.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5123.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 630167.193 ops/s
[info]                  ·gc.alloc.rate:                   2053.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5087.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 628715.153 ops/s
[info]                  ·gc.alloc.rate:                   2049.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5102.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 621962.935 ops/s
[info]                  ·gc.alloc.rate:                   2027.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2042.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5166.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.211 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce":
[info]   627043.744 ±(99.9%) 13986.408 ops/s [Average]
[info]   (min, avg, max) = (621962.935, 627043.744, 630167.193), stdev = 3632.226
[info]   CI (99.9%): [613057.336, 641030.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2043.828 ±(99.9%) 45.547 MB/sec [Average]
[info]   (min, avg, max) = (2027.290, 2043.828, 2053.946), stdev = 11.828
[info]   CI (99.9%): [1998.281, 2089.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5128.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5128.001, 5128.001, 5128.001), stdev = 0.001
[info]   CI (99.9%): [5128.001, 5128.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2036.254 ±(99.9%) 21.578 MB/sec [Average]
[info]   (min, avg, max) = (2027.891, 2036.254, 2042.495), stdev = 5.604
[info]   CI (99.9%): [2014.676, 2057.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5109.166 ±(99.9%) 148.394 B/op [Average]
[info]   (min, avg, max) = (5065.174, 5109.166, 5166.462), stdev = 38.537
[info]   CI (99.9%): [4960.772, 5257.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.136 ±(99.9%) 0.271 B/op [Average]
[info]   (min, avg, max) = (0.052, 0.136, 0.211), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.600, 17.000), stdev = 3.975
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson
[info] # Run progress: 8.06% complete, ETA 00:15:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 770324.813 ops/s
[info] # Warmup Iteration   2: 1202809.614 ops/s
[info] # Warmup Iteration   3: 1196691.988 ops/s
[info] # Warmup Iteration   4: 1198993.022 ops/s
[info] # Warmup Iteration   5: 1189569.659 ops/s
[info] Iteration   1: 1186725.600 ops/s
[info]                  ·gc.alloc.rate:                   1116.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1320.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1198182.814 ops/s
[info]                  ·gc.alloc.rate:                   1127.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1754.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1200488.724 ops/s
[info]                  ·gc.alloc.rate:               1129.328 MB/sec
[info]                  ·gc.alloc.rate.norm:          1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1319.167 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 1189715.485 ops/s
[info]                  ·gc.alloc.rate:               1119.166 MB/sec
[info]                  ·gc.alloc.rate.norm:          1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1010.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1335.986 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1192526.353 ops/s
[info]                  ·gc.alloc.rate:                   1121.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1781.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson":
[info]   1193527.795 ±(99.9%) 22114.414 ops/s [Average]
[info]   (min, avg, max) = (1186725.600, 1193527.795, 1200488.724), stdev = 5743.043
[info]   CI (99.9%): [1171413.381, 1215642.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1122.784 ±(99.9%) 20.774 MB/sec [Average]
[info]   (min, avg, max) = (1116.408, 1122.784, 1129.328), stdev = 5.395
[info]   CI (99.9%): [1102.010, 1143.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1139.828 ±(99.9%) 715.266 MB/sec [Average]
[info]   (min, avg, max) = (995.962, 1139.828, 1350.150), stdev = 185.752
[info]   CI (99.9%): [424.562, 1855.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1502.215 ±(99.9%) 934.618 B/op [Average]
[info]   (min, avg, max) = (1319.167, 1502.215, 1781.145), stdev = 242.717
[info]   CI (99.9%): [567.598, 2436.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.028), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 7.000), stdev = 0.837
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter
[info] # Run progress: 9.68% complete, ETA 00:15:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2074144.764 ops/s
[info] # Warmup Iteration   2: 2456707.852 ops/s
[info] # Warmup Iteration   3: 2442952.914 ops/s
[info] # Warmup Iteration   4: 2446639.866 ops/s
[info] # Warmup Iteration   5: 2445014.784 ops/s
[info] Iteration   1: 2421795.410 ops/s
[info]                  ·gc.alloc.rate:                   1108.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     644.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2472619.904 ops/s
[info]                  ·gc.alloc.rate:                   1131.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     633.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2515167.661 ops/s
[info]                  ·gc.alloc.rate:                   1151.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     835.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2505670.089 ops/s
[info]                  ·gc.alloc.rate:                   1146.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     631.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2493854.452 ops/s
[info]                  ·gc.alloc.rate:                   1141.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     849.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter":
[info]   2481821.503 ±(99.9%) 142958.422 ops/s [Average]
[info]   (min, avg, max) = (2421795.410, 2481821.503, 2515167.661), stdev = 37125.848
[info]   CI (99.9%): [2338863.081, 2624779.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1135.784 ±(99.9%) 65.446 MB/sec [Average]
[info]   (min, avg, max) = (1108.305, 1135.784, 1151.043), stdev = 16.996
[info]   CI (99.9%): [1070.338, 1201.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   720.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (720.000, 720.000, 720.000), stdev = 0.001
[info]   CI (99.9%): [720.000, 720.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1135.130 ±(99.9%) 723.325 MB/sec [Average]
[info]   (min, avg, max) = (991.909, 1135.130, 1346.104), stdev = 187.845
[info]   CI (99.9%): [411.805, 1858.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   718.891 ±(99.9%) 434.567 B/op [Average]
[info]   (min, avg, max) = (631.804, 718.891, 849.221), stdev = 112.856
[info]   CI (99.9%): [284.323, 1153.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.027 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.032, 0.040), stdev = 0.007
[info]   CI (99.9%): [0.004, 0.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.304
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay
[info] # Run progress: 11.29% complete, ETA 00:14:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 104895.669 ops/s
[info] # Warmup Iteration   2: 219815.834 ops/s
[info] # Warmup Iteration   3: 224934.453 ops/s
[info] # Warmup Iteration   4: 223631.212 ops/s
[info] # Warmup Iteration   5: 223330.130 ops/s
[info] Iteration   1: 225535.958 ops/s
[info]                  ·gc.alloc.rate:                   1336.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9232.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 226878.151 ops/s
[info]                  ·gc.alloc.rate:                   1344.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9242.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.722 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 228069.782 ops/s
[info]                  ·gc.alloc.rate:                   1351.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9242.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.431 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 225066.151 ops/s
[info]                  ·gc.alloc.rate:                   1333.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9409.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 227123.446 ops/s
[info]                  ·gc.alloc.rate:                   1345.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9352.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.289 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay":
[info]   226534.698 ±(99.9%) 4706.292 ops/s [Average]
[info]   (min, avg, max) = (225066.151, 226534.698, 228069.782), stdev = 1222.209
[info]   CI (99.9%): [221828.405, 231240.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1341.999 ±(99.9%) 27.922 MB/sec [Average]
[info]   (min, avg, max) = (1333.277, 1341.999, 1351.087), stdev = 7.251
[info]   CI (99.9%): [1314.077, 1369.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9320.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9320.002, 9320.002, 9320.002), stdev = 0.001
[info]   CI (99.9%): [9320.002, 9320.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1338.490 ±(99.9%) 40.908 MB/sec [Average]
[info]   (min, avg, max) = (1323.487, 1338.490, 1350.116), stdev = 10.624
[info]   CI (99.9%): [1297.582, 1379.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9295.782 ±(99.9%) 309.729 B/op [Average]
[info]   (min, avg, max) = (9232.248, 9295.782, 9409.700), stdev = 80.436
[info]   CI (99.9%): [8986.053, 9605.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.405 ±(99.9%) 0.723 B/op [Average]
[info]   (min, avg, max) = (0.289, 0.405, 0.722), stdev = 0.188
[info]   CI (99.9%): [≈ 0, 1.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 2.864
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson
[info] # Run progress: 12.90% complete, ETA 00:14:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1025782.500 ops/s
[info] # Warmup Iteration   2: 1590938.403 ops/s
[info] # Warmup Iteration   3: 1613741.028 ops/s
[info] # Warmup Iteration   4: 1617898.565 ops/s
[info] # Warmup Iteration   5: 1595138.514 ops/s
[info] Iteration   1: 1595024.173 ops/s
[info]                  ·gc.alloc.rate:                   1013.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1296.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1613441.058 ops/s
[info]                  ·gc.alloc.rate:                   1025.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     969.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1619552.655 ops/s
[info]                  ·gc.alloc.rate:                   1029.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     970.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1592990.511 ops/s
[info]                  ·gc.alloc.rate:                   1012.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     991.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1588614.374 ops/s
[info]                  ·gc.alloc.rate:                   1009.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     997.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson":
[info]   1601924.554 ±(99.9%) 52655.816 ops/s [Average]
[info]   (min, avg, max) = (1588614.374, 1601924.554, 1619552.655), stdev = 13674.548
[info]   CI (99.9%): [1549268.738, 1654580.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1018.230 ±(99.9%) 33.441 MB/sec [Average]
[info]   (min, avg, max) = (1009.774, 1018.230, 1029.429), stdev = 8.685
[info]   CI (99.9%): [984.789, 1051.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1000.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1000.000, 1000.000, 1000.000), stdev = 0.001
[info]   CI (99.9%): [1000.000, 1000.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1063.469 ±(99.9%) 540.088 MB/sec [Average]
[info]   (min, avg, max) = (993.968, 1063.469, 1314.217), stdev = 140.259
[info]   CI (99.9%): [523.381, 1603.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1044.778 ±(99.9%) 543.424 B/op [Average]
[info]   (min, avg, max) = (969.217, 1044.778, 1296.245), stdev = 141.125
[info]   CI (99.9%): [501.354, 1588.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.029, 0.041), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 7.000), stdev = 1.517
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 14.52% complete, ETA 00:14:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5507334.021 ops/s
[info] # Warmup Iteration   2: 6110536.822 ops/s
[info] # Warmup Iteration   3: 6200027.164 ops/s
[info] # Warmup Iteration   4: 6302337.686 ops/s
[info] # Warmup Iteration   5: 6289805.672 ops/s
[info] Iteration   1: 6279453.288 ops/s
[info]                  ·gc.alloc.rate:                   670.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     163.627 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 6273383.934 ops/s
[info]                  ·gc.alloc.rate:                   669.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     164.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6266448.509 ops/s
[info]                  ·gc.alloc.rate:                   669.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     164.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 6222002.651 ops/s
[info]                  ·gc.alloc.rate:                   664.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 6218826.978 ops/s
[info]                  ·gc.alloc.rate:                   664.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter":
[info]   6252023.072 ±(99.9%) 112594.350 ops/s [Average]
[info]   (min, avg, max) = (6218826.978, 6252023.072, 6279453.288), stdev = 29240.395
[info]   CI (99.9%): [6139428.722, 6364617.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   667.624 ±(99.9%) 12.028 MB/sec [Average]
[info]   (min, avg, max) = (664.055, 667.624, 670.551), stdev = 3.124
[info]   CI (99.9%): [655.595, 679.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   657.225 ±(99.9%) 13.000 MB/sec [Average]
[info]   (min, avg, max) = (653.096, 657.225, 661.740), stdev = 3.376
[info]   CI (99.9%): [644.226, 670.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   165.389 ±(99.9%) 6.150 B/op [Average]
[info]   (min, avg, max) = (163.627, 165.389, 167.414), stdev = 1.597
[info]   CI (99.9%): [159.239, 171.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.012, 0.016), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 5.000), stdev = 1.517
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay
[info] # Run progress: 16.13% complete, ETA 00:13:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 113202.964 ops/s
[info] # Warmup Iteration   2: 239454.805 ops/s
[info] # Warmup Iteration   3: 245328.246 ops/s
[info] # Warmup Iteration   4: 244111.239 ops/s
[info] # Warmup Iteration   5: 244833.980 ops/s
[info] Iteration   1: 244852.712 ops/s
[info]                  ·gc.alloc.rate:                   1111.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8461.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.535 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 245446.059 ops/s
[info]                  ·gc.alloc.rate:                   1114.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6371.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.534 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 248012.456 ops/s
[info]                  ·gc.alloc.rate:                   1126.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6334.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 245753.520 ops/s
[info]                  ·gc.alloc.rate:                   1115.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8566.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.267 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 248001.206 ops/s
[info]                  ·gc.alloc.rate:                   1126.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6396.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay":
[info]   246413.191 ±(99.9%) 5738.960 ops/s [Average]
[info]   (min, avg, max) = (244852.712, 246413.191, 248012.456), stdev = 1490.390
[info]   CI (99.9%): [240674.231, 252152.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1118.932 ±(99.9%) 26.136 MB/sec [Average]
[info]   (min, avg, max) = (1111.802, 1118.932, 1126.251), stdev = 6.787
[info]   CI (99.9%): [1092.796, 1145.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7144.002, 7144.002, 7144.002), stdev = 0.001
[info]   CI (99.9%): [7144.002, 7144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1131.173 ±(99.9%) 690.966 MB/sec [Average]
[info]   (min, avg, max) = (993.954, 1131.173, 1338.184), stdev = 179.442
[info]   CI (99.9%): [440.207, 1822.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7226.007 ±(99.9%) 4530.234 B/op [Average]
[info]   (min, avg, max) = (6334.779, 7226.007, 8566.665), stdev = 1176.487
[info]   CI (99.9%): [2695.773, 11756.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.320 ±(99.9%) 0.783 B/op [Average]
[info]   (min, avg, max) = (0.132, 0.320, 0.535), stdev = 0.203
[info]   CI (99.9%): [≈ 0, 1.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.600, 15.000), stdev = 4.159
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce
[info] # Run progress: 17.74% complete, ETA 00:13:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 347681.615 ops/s
[info] # Warmup Iteration   2: 551492.857 ops/s
[info] # Warmup Iteration   3: 565443.725 ops/s
[info] # Warmup Iteration   4: 557806.419 ops/s
[info] # Warmup Iteration   5: 549945.453 ops/s
[info] Iteration   1: 556307.216 ops/s
[info]                  ·gc.alloc.rate:                   1847.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4770.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 556068.996 ops/s
[info]                  ·gc.alloc.rate:                   1846.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4787.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 555076.415 ops/s
[info]                  ·gc.alloc.rate:                   1843.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5768.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 560604.459 ops/s
[info]                  ·gc.alloc.rate:                   1861.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4769.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 553316.256 ops/s
[info]                  ·gc.alloc.rate:                   1837.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5800.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.178 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce":
[info]   556274.669 ±(99.9%) 10364.326 ops/s [Average]
[info]   (min, avg, max) = (553316.256, 556274.669, 560604.459), stdev = 2691.583
[info]   CI (99.9%): [545910.343, 566638.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1847.111 ±(99.9%) 34.450 MB/sec [Average]
[info]   (min, avg, max) = (1837.220, 1847.111, 1861.472), stdev = 8.947
[info]   CI (99.9%): [1812.661, 1881.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1830.652 ±(99.9%) 727.548 MB/sec [Average]
[info]   (min, avg, max) = (1686.792, 1830.652, 2039.829), stdev = 188.942
[info]   CI (99.9%): [1103.104, 2558.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5178.985 ±(99.9%) 2128.455 B/op [Average]
[info]   (min, avg, max) = (4769.000, 5178.985, 5800.105), stdev = 552.753
[info]   CI (99.9%): [3050.530, 7307.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.177 ±(99.9%) 0.228 B/op [Average]
[info]   (min, avg, max) = (0.117, 0.177, 0.236), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.400, 15.000), stdev = 4.450
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson
[info] # Run progress: 19.35% complete, ETA 00:13:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 437991.636 ops/s
[info] # Warmup Iteration   2: 713809.859 ops/s
[info] # Warmup Iteration   3: 717069.740 ops/s
[info] # Warmup Iteration   4: 719228.904 ops/s
[info] # Warmup Iteration   5: 723193.232 ops/s
[info] Iteration   1: 717890.176 ops/s
[info]                  ·gc.alloc.rate:                   890.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2156.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 714213.559 ops/s
[info]                  ·gc.alloc.rate:                   886.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2179.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 709972.522 ops/s
[info]                  ·gc.alloc.rate:                   881.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2200.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 719659.726 ops/s
[info]                  ·gc.alloc.rate:               892.914 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1457.568 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 718990.815 ops/s
[info]                  ·gc.alloc.rate:                   892.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2196.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson":
[info]   716145.360 ±(99.9%) 15561.503 ops/s [Average]
[info]   (min, avg, max) = (709972.522, 716145.360, 719659.726), stdev = 4041.273
[info]   CI (99.9%): [700583.857, 731706.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   888.712 ±(99.9%) 18.157 MB/sec [Average]
[info]   (min, avg, max) = (881.683, 888.712, 892.914), stdev = 4.715
[info]   CI (99.9%): [870.555, 906.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   927.553 ±(99.9%) 562.105 MB/sec [Average]
[info]   (min, avg, max) = (666.743, 927.553, 1003.615), stdev = 145.977
[info]   CI (99.9%): [365.448, 1489.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2038.026 ±(99.9%) 1251.287 B/op [Average]
[info]   (min, avg, max) = (1457.568, 2038.026, 2200.985), stdev = 324.955
[info]   CI (99.9%): [786.739, 3289.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.124 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.091), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 11.000), stdev = 4.159
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 20.97% complete, ETA 00:13:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3909235.197 ops/s
[info] # Warmup Iteration   2: 4046084.533 ops/s
[info] # Warmup Iteration   3: 4158337.941 ops/s
[info] # Warmup Iteration   4: 4155663.648 ops/s
[info] # Warmup Iteration   5: 4185900.688 ops/s
[info] Iteration   1: 4069648.710 ops/s
[info]                  ·gc.alloc.rate:               186.254 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 98.930 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 4042314.940 ops/s
[info]                  ·gc.alloc.rate:               185.001 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 99.597 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 4027422.085 ops/s
[info]                  ·gc.alloc.rate:               184.313 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 99.964 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 4142387.881 ops/s
[info]                  ·gc.alloc.rate:      189.577 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4128967.711 ops/s
[info]                  ·gc.alloc.rate:                   188.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.841 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter":
[info]   4082148.266 ±(99.9%) 197838.045 ops/s [Average]
[info]   (min, avg, max) = (4027422.085, 4082148.266, 4142387.881), stdev = 51377.912
[info]   CI (99.9%): [3884310.221, 4279986.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   186.821 ±(99.9%) 9.049 MB/sec [Average]
[info]   (min, avg, max) = (184.313, 186.821, 189.577), stdev = 2.350
[info]   CI (99.9%): [177.772, 195.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   218.653 ±(99.9%) 484.774 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 218.653, 325.537), stdev = 125.894
[info]   CI (99.9%): [≈ 0, 703.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   84.506 ±(99.9%) 186.458 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 84.506, 124.041), stdev = 48.423
[info]   CI (99.9%): [≈ 0, 270.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.441 ±(99.9%) 3.801 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.441, 2.207), stdev = 0.987
[info]   CI (99.9%): [≈ 0, 4.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.168 ±(99.9%) 1.448 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.168, 0.841), stdev = 0.376
[info]   CI (99.9%): [≈ 0, 1.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.800, 6.000), stdev = 2.168
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay
[info] # Run progress: 22.58% complete, ETA 00:12:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71583.515 ops/s
[info] # Warmup Iteration   2: 190140.357 ops/s
[info] # Warmup Iteration   3: 192770.011 ops/s
[info] # Warmup Iteration   4: 194056.590 ops/s
[info] # Warmup Iteration   5: 193105.370 ops/s
[info] Iteration   1: 191692.096 ops/s
[info]                  ·gc.alloc.rate:                   980.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8075.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.171 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 193586.173 ops/s
[info]                  ·gc.alloc.rate:                   990.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8028.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.677 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 192039.562 ops/s
[info]                  ·gc.alloc.rate:                   982.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8142.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.512 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 192558.568 ops/s
[info]                  ·gc.alloc.rate:                   985.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8158.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.170 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 191871.655 ops/s
[info]                  ·gc.alloc.rate:                   981.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8226.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.171 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay":
[info]   192349.611 ±(99.9%) 2938.654 ops/s [Average]
[info]   (min, avg, max) = (191692.096, 192349.611, 193586.173), stdev = 763.159
[info]   CI (99.9%): [189410.956, 195288.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   983.970 ±(99.9%) 15.133 MB/sec [Average]
[info]   (min, avg, max) = (980.588, 983.970, 990.329), stdev = 3.930
[info]   CI (99.9%): [968.837, 999.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8048.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8048.002, 8048.002, 8048.002), stdev = 0.001
[info]   CI (99.9%): [8048.002, 8048.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   993.550 ±(99.9%) 30.047 MB/sec [Average]
[info]   (min, avg, max) = (983.925, 993.550, 1003.243), stdev = 7.803
[info]   CI (99.9%): [963.502, 1023.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8126.493 ±(99.9%) 294.676 B/op [Average]
[info]   (min, avg, max) = (8028.933, 8126.493, 8226.408), stdev = 76.526
[info]   CI (99.9%): [7831.816, 8421.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.340 ±(99.9%) 0.922 B/op [Average]
[info]   (min, avg, max) = (0.170, 0.340, 0.677), stdev = 0.239
[info]   CI (99.9%): [≈ 0, 1.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.200, 10.000), stdev = 2.950
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 24.19% complete, ETA 00:12:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2824544.762 ops/s
[info] # Warmup Iteration   2: 2991292.314 ops/s
[info] # Warmup Iteration   3: 2981722.180 ops/s
[info] # Warmup Iteration   4: 2979867.743 ops/s
[info] # Warmup Iteration   5: 3028917.913 ops/s
[info] Iteration   1: 3009947.327 ops/s
[info]                  ·gc.alloc.rate:                   1423.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     870.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 3064290.084 ops/s
[info]                  ·gc.alloc.rate:                   1449.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     688.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3077406.637 ops/s
[info]                  ·gc.alloc.rate:                   1455.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     688.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3041005.634 ops/s
[info]                  ·gc.alloc.rate:                   1438.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     873.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 3028432.197 ops/s
[info]                  ·gc.alloc.rate:                   1432.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     703.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter":
[info]   3044216.376 ±(99.9%) 104365.310 ops/s [Average]
[info]   (min, avg, max) = (3009947.327, 3044216.376, 3077406.637), stdev = 27103.340
[info]   CI (99.9%): [2939851.065, 3148581.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1439.641 ±(99.9%) 49.264 MB/sec [Average]
[info]   (min, avg, max) = (1423.459, 1439.641, 1455.278), stdev = 12.794
[info]   CI (99.9%): [1390.377, 1488.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1479.323 ±(99.9%) 697.871 MB/sec [Average]
[info]   (min, avg, max) = (1340.536, 1479.323, 1689.408), stdev = 181.235
[info]   CI (99.9%): [781.452, 2177.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   764.972 ±(99.9%) 378.101 B/op [Average]
[info]   (min, avg, max) = (688.190, 764.972, 873.977), stdev = 98.192
[info]   CI (99.9%): [386.871, 1143.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.047 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.026, 0.043), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 11.000), stdev = 3.421
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 25.81% complete, ETA 00:12:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 124175.006 ops/s
[info] # Warmup Iteration   2: 234880.999 ops/s
[info] # Warmup Iteration   3: 238623.092 ops/s
[info] # Warmup Iteration   4: 239957.703 ops/s
[info] # Warmup Iteration   5: 239405.415 ops/s
[info] Iteration   1: 240745.792 ops/s
[info]                  ·gc.alloc.rate:                   1293.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8648.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 238552.348 ops/s
[info]                  ·gc.alloc.rate:                   1282.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8785.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.412 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 237895.278 ops/s
[info]                  ·gc.alloc.rate:                   1278.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6639.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 239610.859 ops/s
[info]                  ·gc.alloc.rate:                   1287.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8829.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.273 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 241641.934 ops/s
[info]                  ·gc.alloc.rate:                   1298.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8786.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.271 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay":
[info]   239689.242 ±(99.9%) 5917.440 ops/s [Average]
[info]   (min, avg, max) = (237895.278, 239689.242, 241641.934), stdev = 1536.740
[info]   CI (99.9%): [233771.802, 245606.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1288.272 ±(99.9%) 31.680 MB/sec [Average]
[info]   (min, avg, max) = (1278.610, 1288.272, 1298.654), stdev = 8.227
[info]   CI (99.9%): [1256.592, 1319.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8456.002, 8456.002, 8456.002), stdev = 0.001
[info]   CI (99.9%): [8456.002, 8456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1270.753 ±(99.9%) 575.711 MB/sec [Average]
[info]   (min, avg, max) = (1003.927, 1270.753, 1349.352), stdev = 149.510
[info]   CI (99.9%): [695.042, 1846.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8337.911 ±(99.9%) 3665.547 B/op [Average]
[info]   (min, avg, max) = (6639.402, 8337.911, 8829.579), stdev = 951.931
[info]   CI (99.9%): [4672.364, 12003.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.274 ±(99.9%) 0.376 B/op [Average]
[info]   (min, avg, max) = (0.136, 0.274, 0.412), stdev = 0.098
[info]   CI (99.9%): [≈ 0, 0.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 11.000), stdev = 2.702
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce
[info] # Run progress: 27.42% complete, ETA 00:12:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 320933.944 ops/s
[info] # Warmup Iteration   2: 545099.114 ops/s
[info] # Warmup Iteration   3: 555157.288 ops/s
[info] # Warmup Iteration   4: 547671.297 ops/s
[info] # Warmup Iteration   5: 554286.199 ops/s
[info] Iteration   1: 533226.723 ops/s
[info]                  ·gc.alloc.rate:                   1873.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4979.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.246 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 553289.818 ops/s
[info]                  ·gc.alloc.rate:                   1944.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5779.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 555719.929 ops/s
[info]                  ·gc.alloc.rate:                   1952.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5765.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 558375.274 ops/s
[info]                  ·gc.alloc.rate:                   1961.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4788.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 550171.490 ops/s
[info]                  ·gc.alloc.rate:                   1933.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2040.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5835.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.238 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce":
[info]   550156.647 ±(99.9%) 38261.881 ops/s [Average]
[info]   (min, avg, max) = (533226.723, 550156.647, 558375.274), stdev = 9936.489
[info]   CI (99.9%): [511894.766, 588418.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1933.116 ±(99.9%) 134.391 MB/sec [Average]
[info]   (min, avg, max) = (1873.628, 1933.116, 1961.965), stdev = 34.901
[info]   CI (99.9%): [1798.725, 2067.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5528.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5528.001, 5528.001, 5528.001), stdev = 0.001
[info]   CI (99.9%): [5528.001, 5528.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1899.333 ±(99.9%) 723.734 MB/sec [Average]
[info]   (min, avg, max) = (1687.698, 1899.333, 2040.632), stdev = 187.952
[info]   CI (99.9%): [1175.598, 2623.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5429.456 ±(99.9%) 1938.560 B/op [Average]
[info]   (min, avg, max) = (4788.010, 5429.456, 5835.035), stdev = 503.438
[info]   CI (99.9%): [3490.895, 7368.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.156 ±(99.9%) 0.355 B/op [Average]
[info]   (min, avg, max) = (0.059, 0.156, 0.246), stdev = 0.092
[info]   CI (99.9%): [≈ 0, 0.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 13.200, 21.000), stdev = 6.611
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson
[info] # Run progress: 29.03% complete, ETA 00:11:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 302985.348 ops/s
[info] # Warmup Iteration   2: 523732.003 ops/s
[info] # Warmup Iteration   3: 531673.220 ops/s
[info] # Warmup Iteration   4: 530999.002 ops/s
[info] # Warmup Iteration   5: 532704.072 ops/s
[info] Iteration   1: 532793.250 ops/s
[info]                  ·gc.alloc.rate:               541.844 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1929.425 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 528940.917 ops/s
[info]                  ·gc.alloc.rate:                   537.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1952.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 532807.296 ops/s
[info]                  ·gc.alloc.rate:                   541.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     971.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 532034.462 ops/s
[info]                  ·gc.alloc.rate:               541.082 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1952.846 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 529073.592 ops/s
[info]                  ·gc.alloc.rate:                   538.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     985.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.310 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson":
[info]   531129.903 ±(99.9%) 7560.088 ops/s [Average]
[info]   (min, avg, max) = (528940.917, 531129.903, 532807.296), stdev = 1963.331
[info]   CI (99.9%): [523569.816, 538689.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   540.159 ±(99.9%) 7.677 MB/sec [Average]
[info]   (min, avg, max) = (537.928, 540.159, 541.862), stdev = 1.994
[info]   CI (99.9%): [532.482, 547.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   526.123 ±(99.9%) 688.780 MB/sec [Average]
[info]   (min, avg, max) = (328.861, 526.123, 660.406), stdev = 178.874
[info]   CI (99.9%): [≈ 0, 1214.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1558.314 ±(99.9%) 2038.744 B/op [Average]
[info]   (min, avg, max) = (971.055, 1558.314, 1952.846), stdev = 529.455
[info]   CI (99.9%): [≈ 0, 3597.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.087 ±(99.9%) 0.495 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.087, 0.310), stdev = 0.128
[info]   CI (99.9%): [≈ 0, 0.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 7.000), stdev = 2.302
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter
[info] # Run progress: 30.65% complete, ETA 00:11:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2643404.945 ops/s
[info] # Warmup Iteration   2: 2923330.502 ops/s
[info] # Warmup Iteration   3: 2925029.701 ops/s
[info] # Warmup Iteration   4: 2953389.061 ops/s
[info] # Warmup Iteration   5: 2971952.970 ops/s
[info] Iteration   1: 2940979.271 ops/s
[info]                  ·gc.alloc.rate:                   732.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     349.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2965756.369 ops/s
[info]                  ·gc.alloc.rate:                   738.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     522.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2974667.596 ops/s
[info]                  ·gc.alloc.rate:                   741.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     348.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2942958.300 ops/s
[info]                  ·gc.alloc.rate:                   733.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     353.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2974953.449 ops/s
[info]                  ·gc.alloc.rate:               741.236 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 351.012 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter":
[info]   2959862.997 ±(99.9%) 64548.372 ops/s [Average]
[info]   (min, avg, max) = (2940979.271, 2959862.997, 2974953.449), stdev = 16763.007
[info]   CI (99.9%): [2895314.625, 3024411.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   737.485 ±(99.9%) 16.070 MB/sec [Average]
[info]   (min, avg, max) = (732.777, 737.485, 741.236), stdev = 4.173
[info]   CI (99.9%): [721.416, 753.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   724.710 ±(99.9%) 561.068 MB/sec [Average]
[info]   (min, avg, max) = (653.739, 724.710, 985.273), stdev = 145.708
[info]   CI (99.9%): [163.641, 1285.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   385.145 ±(99.9%) 296.122 B/op [Average]
[info]   (min, avg, max) = (348.574, 385.145, 522.668), stdev = 76.902
[info]   CI (99.9%): [89.023, 681.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.048 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.033), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 7.000), stdev = 1.789
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay
[info] # Run progress: 32.26% complete, ETA 00:11:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 73802.506 ops/s
[info] # Warmup Iteration   2: 161886.433 ops/s
[info] # Warmup Iteration   3: 168522.881 ops/s
[info] # Warmup Iteration   4: 169361.149 ops/s
[info] # Warmup Iteration   5: 167099.275 ops/s
[info] Iteration   1: 167413.070 ops/s
[info]                  ·gc.alloc.rate:                   1146.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9284.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.783 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 166337.366 ops/s
[info]                  ·gc.alloc.rate:                   1139.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9401.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.591 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 166425.876 ops/s
[info]                  ·gc.alloc.rate:                   1140.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12599.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 165848.088 ops/s
[info]                  ·gc.alloc.rate:                   1135.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9523.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.198 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 167675.012 ops/s
[info]                  ·gc.alloc.rate:                   1148.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12618.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.195 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay":
[info]   166739.883 ±(99.9%) 2972.466 ops/s [Average]
[info]   (min, avg, max) = (165848.088, 166739.883, 167675.012), stdev = 771.940
[info]   CI (99.9%): [163767.416, 169712.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1142.111 ±(99.9%) 20.299 MB/sec [Average]
[info]   (min, avg, max) = (1135.980, 1142.111, 1148.463), stdev = 5.272
[info]   CI (99.9%): [1121.812, 1162.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10776.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10776.003, 10776.003, 10776.003), stdev = 0.001
[info]   CI (99.9%): [10776.002, 10776.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1132.731 ±(99.9%) 725.133 MB/sec [Average]
[info]   (min, avg, max) = (987.969, 1132.731, 1344.807), stdev = 188.315
[info]   CI (99.9%): [407.598, 1857.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10685.324 ±(99.9%) 6769.714 B/op [Average]
[info]   (min, avg, max) = (9284.117, 10685.324, 12618.303), stdev = 1758.073
[info]   CI (99.9%): [3915.610, 17455.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.432 ±(99.9%) 0.983 B/op [Average]
[info]   (min, avg, max) = (0.195, 0.432, 0.783), stdev = 0.255
[info]   CI (99.9%): [≈ 0, 1.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 2.510
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce
[info] # Run progress: 33.87% complete, ETA 00:11:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 247148.882 ops/s
[info] # Warmup Iteration   2: 449001.724 ops/s
[info] # Warmup Iteration   3: 461284.735 ops/s
[info] # Warmup Iteration   4: 462877.122 ops/s
[info] # Warmup Iteration   5: 465739.106 ops/s
[info] Iteration   1: 464976.878 ops/s
[info]                  ·gc.alloc.rate:                   1652.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5685.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 465942.880 ops/s
[info]                  ·gc.alloc.rate:                   1656.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5698.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 464271.850 ops/s
[info]                  ·gc.alloc.rate:                   1650.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5738.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 460519.771 ops/s
[info]                  ·gc.alloc.rate:                   1636.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5794.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 470810.711 ops/s
[info]                  ·gc.alloc.rate:               1673.451 MB/sec
[info]                  ·gc.alloc.rate.norm:          5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1699.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5678.463 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce":
[info]   465304.418 ±(99.9%) 14251.704 ops/s [Average]
[info]   (min, avg, max) = (460519.771, 465304.418, 470810.711), stdev = 3701.122
[info]   CI (99.9%): [451052.714, 479556.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1653.884 ±(99.9%) 50.678 MB/sec [Average]
[info]   (min, avg, max) = (1636.858, 1653.884, 1673.451), stdev = 13.161
[info]   CI (99.9%): [1603.206, 1704.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1691.353 ±(99.9%) 28.782 MB/sec [Average]
[info]   (min, avg, max) = (1680.340, 1691.353, 1699.325), stdev = 7.475
[info]   CI (99.9%): [1662.571, 1720.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5718.947 ±(99.9%) 184.543 B/op [Average]
[info]   (min, avg, max) = (5678.463, 5718.947, 5794.017), stdev = 47.925
[info]   CI (99.9%): [5534.404, 5903.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.099 ±(99.9%) 0.244 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.099, 0.142), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 10.000), stdev = 2.683
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson
[info] # Run progress: 35.48% complete, ETA 00:10:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 382756.573 ops/s
[info] # Warmup Iteration   2: 893857.211 ops/s
[info] # Warmup Iteration   3: 893075.827 ops/s
[info] # Warmup Iteration   4: 896574.425 ops/s
[info] # Warmup Iteration   5: 903475.591 ops/s
[info] Iteration   1: 907106.612 ops/s
[info]                  ·gc.alloc.rate:                   1070.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1728.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.253 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 907182.492 ops/s
[info]                  ·gc.alloc.rate:                   1070.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1735.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 902600.711 ops/s
[info]                  ·gc.alloc.rate:                   1064.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2337.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 902627.259 ops/s
[info]                  ·gc.alloc.rate:                   1064.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1759.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 902266.926 ops/s
[info]                  ·gc.alloc.rate:                   1064.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1764.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson":
[info]   904356.800 ±(99.9%) 9815.128 ops/s [Average]
[info]   (min, avg, max) = (902266.926, 904356.800, 907182.492), stdev = 2548.957
[info]   CI (99.9%): [894541.672, 914171.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1066.886 ±(99.9%) 11.628 MB/sec [Average]
[info]   (min, avg, max) = (1064.407, 1066.886, 1070.225), stdev = 3.020
[info]   CI (99.9%): [1055.258, 1078.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.000, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1071.844 ±(99.9%) 579.453 MB/sec [Average]
[info]   (min, avg, max) = (996.629, 1071.844, 1340.804), stdev = 150.482
[info]   CI (99.9%): [492.391, 1651.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1864.885 ±(99.9%) 1018.098 B/op [Average]
[info]   (min, avg, max) = (1728.487, 1864.885, 2337.063), stdev = 264.397
[info]   CI (99.9%): [846.788, 2882.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.146), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.101 ±(99.9%) 0.346 B/op [Average]
[info]   (min, avg, max) = (0.036, 0.101, 0.253), stdev = 0.090
[info]   CI (99.9%): [≈ 0, 0.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 6.000), stdev = 1.517
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter
[info] # Run progress: 37.10% complete, ETA 00:10:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2992330.658 ops/s
[info] # Warmup Iteration   2: 3240697.778 ops/s
[info] # Warmup Iteration   3: 3226252.586 ops/s
[info] # Warmup Iteration   4: 3264870.649 ops/s
[info] # Warmup Iteration   5: 3284324.423 ops/s
[info] Iteration   1: 3269191.605 ops/s
[info]                  ·gc.alloc.rate:                   814.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     473.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3280755.510 ops/s
[info]                  ·gc.alloc.rate:                   817.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     315.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3273417.793 ops/s
[info]                  ·gc.alloc.rate:                   815.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     476.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3297458.204 ops/s
[info]                  ·gc.alloc.rate:                   821.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     316.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3294640.172 ops/s
[info]                  ·gc.alloc.rate:                   820.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     477.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter":
[info]   3283092.657 ±(99.9%) 48402.554 ops/s [Average]
[info]   (min, avg, max) = (3269191.605, 3283092.657, 3297458.204), stdev = 12569.990
[info]   CI (99.9%): [3234690.102, 3331495.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   818.020 ±(99.9%) 12.012 MB/sec [Average]
[info]   (min, avg, max) = (814.580, 818.020, 821.602), stdev = 3.119
[info]   CI (99.9%): [806.008, 830.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   859.196 ±(99.9%) 697.974 MB/sec [Average]
[info]   (min, avg, max) = (657.740, 859.196, 999.231), stdev = 181.262
[info]   CI (99.9%): [161.222, 1557.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   411.846 ±(99.9%) 336.797 B/op [Average]
[info]   (min, avg, max) = (315.413, 411.846, 477.178), stdev = 87.465
[info]   CI (99.9%): [75.049, 748.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.044 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.024, 0.040), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 8.000), stdev = 2.510
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay
[info] # Run progress: 38.71% complete, ETA 00:10:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 146779.264 ops/s
[info] # Warmup Iteration   2: 245897.676 ops/s
[info] # Warmup Iteration   3: 254439.287 ops/s
[info] # Warmup Iteration   4: 253925.865 ops/s
[info] # Warmup Iteration   5: 254854.161 ops/s
[info] Iteration   1: 255651.302 ops/s
[info]                  ·gc.alloc.rate:                   1335.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8161.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.384 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 252892.105 ops/s
[info]                  ·gc.alloc.rate:                   1321.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8284.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.388 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 252487.446 ops/s
[info]                  ·gc.alloc.rate:                   1318.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6265.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 250587.787 ops/s
[info]                  ·gc.alloc.rate:                   1308.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8451.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 253198.187 ops/s
[info]                  ·gc.alloc.rate:                   1322.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8389.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay":
[info]   252963.365 ±(99.9%) 6983.134 ops/s [Average]
[info]   (min, avg, max) = (250587.787, 252963.365, 255651.302), stdev = 1813.498
[info]   CI (99.9%): [245980.232, 259946.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1321.241 ±(99.9%) 36.416 MB/sec [Average]
[info]   (min, avg, max) = (1308.663, 1321.241, 1335.068), stdev = 9.457
[info]   CI (99.9%): [1284.825, 1357.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8216.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8216.002, 8216.002, 8216.002), stdev = 0.001
[info]   CI (99.9%): [8216.002, 8216.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1272.120 ±(99.9%) 574.987 MB/sec [Average]
[info]   (min, avg, max) = (1005.570, 1272.120, 1350.053), stdev = 149.322
[info]   CI (99.9%): [697.133, 1847.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7910.288 ±(99.9%) 3565.261 B/op [Average]
[info]   (min, avg, max) = (6265.770, 7910.288, 8451.298), stdev = 925.887
[info]   CI (99.9%): [4345.026, 11475.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.310 ±(99.9%) 0.266 B/op [Average]
[info]   (min, avg, max) = (0.259, 0.310, 0.388), stdev = 0.069
[info]   CI (99.9%): [0.044, 0.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 13.000), stdev = 3.536
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson
[info] # Run progress: 40.32% complete, ETA 00:09:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 69857.697 ops/s
[info] # Warmup Iteration   2: 643110.040 ops/s
[info] # Warmup Iteration   3: 697860.979 ops/s
[info] # Warmup Iteration   4: 702282.338 ops/s
[info] # Warmup Iteration   5: 699039.021 ops/s
[info] Iteration   1: 696185.559 ops/s
[info]                  ·gc.alloc.rate:               902.708 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2235.656 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     16.000 ms
[info] Iteration   2: 704759.168 ops/s
[info]                  ·gc.alloc.rate:                   913.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1480.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.232 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 705464.160 ops/s
[info]                  ·gc.alloc.rate:                   914.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2229.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 701287.545 ops/s
[info]                  ·gc.alloc.rate:                   909.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2251.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 702230.320 ops/s
[info]                  ·gc.alloc.rate:                   910.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2256.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson":
[info]   701985.350 ±(99.9%) 14145.642 ops/s [Average]
[info]   (min, avg, max) = (696185.559, 701985.350, 705464.160), stdev = 3673.578
[info]   CI (99.9%): [687839.709, 716130.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   910.250 ±(99.9%) 18.353 MB/sec [Average]
[info]   (min, avg, max) = (902.708, 910.250, 914.742), stdev = 4.766
[info]   CI (99.9%): [891.897, 928.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   932.580 ±(99.9%) 580.664 MB/sec [Average]
[info]   (min, avg, max) = (663.096, 932.580, 1007.283), stdev = 150.797
[info]   CI (99.9%): [351.916, 1513.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2090.651 ±(99.9%) 1314.661 B/op [Average]
[info]   (min, avg, max) = (1480.241, 2090.651, 2256.670), stdev = 341.413
[info]   CI (99.9%): [775.990, 3405.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.084 ±(99.9%) 0.344 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.084, 0.232), stdev = 0.089
[info]   CI (99.9%): [≈ 0, 0.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.800, 16.000), stdev = 5.450
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 41.94% complete, ETA 00:09:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2015642.928 ops/s
[info] # Warmup Iteration   2: 2389325.082 ops/s
[info] # Warmup Iteration   3: 2440833.048 ops/s
[info] # Warmup Iteration   4: 2456136.367 ops/s
[info] # Warmup Iteration   5: 2418429.629 ops/s
[info] Iteration   1: 2452006.949 ops/s
[info]                  ·gc.alloc.rate:                   1670.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1073.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2441921.589 ops/s
[info]                  ·gc.alloc.rate:                   1663.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1682.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1083.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2434962.239 ops/s
[info]                  ·gc.alloc.rate:                   1659.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1091.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 2436694.153 ops/s
[info]                  ·gc.alloc.rate:                   1660.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1093.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2432120.336 ops/s
[info]                  ·gc.alloc.rate:                   1657.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1097.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter":
[info]   2439541.053 ±(99.9%) 30148.534 ops/s [Average]
[info]   (min, avg, max) = (2432120.336, 2439541.053, 2452006.949), stdev = 7829.479
[info]   CI (99.9%): [2409392.519, 2469689.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1662.243 ±(99.9%) 20.596 MB/sec [Average]
[info]   (min, avg, max) = (1657.139, 1662.243, 1670.739), stdev = 5.349
[info]   CI (99.9%): [1641.647, 1682.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   1072.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1072.000, 1072.000, 1072.000), stdev = 0.001
[info]   CI (99.9%): [1072.000, 1072.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1687.007 ±(99.9%) 38.466 MB/sec [Average]
[info]   (min, avg, max) = (1672.355, 1687.007, 1697.272), stdev = 9.990
[info]   CI (99.9%): [1648.541, 1725.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1087.996 ±(99.9%) 37.887 B/op [Average]
[info]   (min, avg, max) = (1073.037, 1087.996, 1097.962), stdev = 9.839
[info]   CI (99.9%): [1050.109, 1125.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.059 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.046, 0.067), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 12.000), stdev = 2.387
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay
[info] # Run progress: 43.55% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 138108.499 ops/s
[info] # Warmup Iteration   2: 217653.081 ops/s
[info] # Warmup Iteration   3: 225181.110 ops/s
[info] # Warmup Iteration   4: 225660.085 ops/s
[info] # Warmup Iteration   5: 225422.708 ops/s
[info] Iteration   1: 222352.223 ops/s
[info]                  ·gc.alloc.rate:                   1171.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7008.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.442 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 221663.073 ops/s
[info]                  ·gc.alloc.rate:                   1167.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9429.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.739 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 224761.353 ops/s
[info]                  ·gc.alloc.rate:                   1184.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7011.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 223069.771 ops/s
[info]                  ·gc.alloc.rate:                   1175.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9460.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.294 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 223993.700 ops/s
[info]                  ·gc.alloc.rate:                   1179.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7095.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.293 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay":
[info]   223168.024 ±(99.9%) 4778.717 ops/s [Average]
[info]   (min, avg, max) = (221663.073, 223168.024, 224761.353), stdev = 1241.018
[info]   CI (99.9%): [218389.307, 227946.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1175.658 ±(99.9%) 25.084 MB/sec [Average]
[info]   (min, avg, max) = (1167.709, 1175.658, 1184.053), stdev = 6.514
[info]   CI (99.9%): [1150.574, 1200.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8288.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8288.002, 8288.002, 8288.002), stdev = 0.001
[info]   CI (99.9%): [8288.002, 8288.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1134.484 ±(99.9%) 705.458 MB/sec [Average]
[info]   (min, avg, max) = (990.658, 1134.484, 1341.452), stdev = 183.205
[info]   CI (99.9%): [429.026, 1839.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8001.159 ±(99.9%) 5077.424 B/op [Average]
[info]   (min, avg, max) = (7008.832, 8001.159, 9460.942), stdev = 1318.591
[info]   CI (99.9%): [2923.735, 13078.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.412 ±(99.9%) 0.747 B/op [Average]
[info]   (min, avg, max) = (0.292, 0.412, 0.739), stdev = 0.194
[info]   CI (99.9%): [≈ 0, 1.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.400, 11.000), stdev = 4.506
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce
[info] # Run progress: 45.16% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127746.674 ops/s
[info] # Warmup Iteration   2: 434086.561 ops/s
[info] # Warmup Iteration   3: 454425.712 ops/s
[info] # Warmup Iteration   4: 454834.884 ops/s
[info] # Warmup Iteration   5: 455533.311 ops/s
[info] Iteration   1: 457005.266 ops/s
[info]                  ·gc.alloc.rate:                   1352.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4599.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 454915.551 ops/s
[info]                  ·gc.alloc.rate:                   1346.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4642.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 411759.110 ops/s
[info]                  ·gc.alloc.rate:                   1218.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5149.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 450630.304 ops/s
[info]                  ·gc.alloc.rate:                   1333.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4719.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 455754.624 ops/s
[info]                  ·gc.alloc.rate:                   1348.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4676.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce":
[info]   446012.971 ±(99.9%) 74309.274 ops/s [Average]
[info]   (min, avg, max) = (411759.110, 446012.971, 457005.266), stdev = 19297.882
[info]   CI (99.9%): [371703.697, 520322.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1319.945 ±(99.9%) 219.979 MB/sec [Average]
[info]   (min, avg, max) = (1218.545, 1319.945, 1352.489), stdev = 57.128
[info]   CI (99.9%): [1099.966, 1539.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1346.597 ±(99.9%) 28.714 MB/sec [Average]
[info]   (min, avg, max) = (1336.141, 1346.597, 1354.804), stdev = 7.457
[info]   CI (99.9%): [1317.883, 1375.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4757.711 ±(99.9%) 860.974 B/op [Average]
[info]   (min, avg, max) = (4599.722, 4757.711, 5149.839), stdev = 223.592
[info]   CI (99.9%): [3896.738, 5618.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.146 ±(99.9%) 0.270 B/op [Average]
[info]   (min, avg, max) = (0.072, 0.146, 0.216), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 10.000), stdev = 2.550
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson
[info] # Run progress: 46.77% complete, ETA 00:08:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 645291.018 ops/s
[info] # Warmup Iteration   2: 1019032.846 ops/s
[info] # Warmup Iteration   3: 1026361.331 ops/s
[info] # Warmup Iteration   4: 1026029.770 ops/s
[info] # Warmup Iteration   5: 1029657.961 ops/s
[info] Iteration   1: 1019892.201 ops/s
[info]                  ·gc.alloc.rate:               772.716 MB/sec
[info]                  ·gc.alloc.rate.norm:          1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1007.445 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 1015960.371 ops/s
[info]                  ·gc.alloc.rate:                   769.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1525.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1032920.219 ops/s
[info]                  ·gc.alloc.rate:               782.604 MB/sec
[info]                  ·gc.alloc.rate.norm:          1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1005.902 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 1029214.160 ops/s
[info]                  ·gc.alloc.rate:               779.798 MB/sec
[info]                  ·gc.alloc.rate.norm:          1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1013.594 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 1018304.822 ops/s
[info]                  ·gc.alloc.rate:                   771.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1544.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson":
[info]   1023258.355 ±(99.9%) 28423.926 ops/s [Average]
[info]   (min, avg, max) = (1015960.371, 1023258.355, 1032920.219), stdev = 7381.603
[info]   CI (99.9%): [994834.429, 1051682.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   775.278 ±(99.9%) 21.546 MB/sec [Average]
[info]   (min, avg, max) = (769.775, 775.278, 782.604), stdev = 5.596
[info]   CI (99.9%): [753.732, 796.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1192.000, 1192.000, 1192.000), stdev = 0.001
[info]   CI (99.9%): [1192.000, 1192.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   792.287 ±(99.9%) 703.922 MB/sec [Average]
[info]   (min, avg, max) = (653.077, 792.287, 999.559), stdev = 182.806
[info]   CI (99.9%): [88.365, 1496.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1219.407 ±(99.9%) 1109.863 B/op [Average]
[info]   (min, avg, max) = (1005.902, 1219.407, 1544.367), stdev = 288.228
[info]   CI (99.9%): [109.543, 2329.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.215 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.129), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 8.000), stdev = 2.345
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 48.39% complete, ETA 00:08:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2973533.563 ops/s
[info] # Warmup Iteration   2: 3126296.745 ops/s
[info] # Warmup Iteration   3: 3099300.241 ops/s
[info] # Warmup Iteration   4: 3132077.931 ops/s
[info] # Warmup Iteration   5: 3114168.142 ops/s
[info] Iteration   1: 3125437.183 ops/s
[info]                  ·gc.alloc.rate:      95.357 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3131111.369 ops/s
[info]                  ·gc.alloc.rate:      95.531 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3123484.423 ops/s
[info]                  ·gc.alloc.rate:               95.295 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 128.897 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 3131991.642 ops/s
[info]                  ·gc.alloc.rate:      95.557 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3130900.431 ops/s
[info]                  ·gc.alloc.rate:      95.529 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter":
[info]   3128585.010 ±(99.9%) 14822.929 ops/s [Average]
[info]   (min, avg, max) = (3123484.423, 3128585.010, 3131991.642), stdev = 3849.468
[info]   CI (99.9%): [3113762.081, 3143407.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   95.454 ±(99.9%) 0.459 MB/sec [Average]
[info]   (min, avg, max) = (95.295, 95.454, 95.557), stdev = 0.119
[info]   CI (99.9%): [94.995, 95.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   51.180 ±(99.9%) 440.677 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.180, 255.901), stdev = 114.442
[info]   CI (99.9%): [≈ 0, 491.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   25.779 ±(99.9%) 221.969 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 25.779, 128.897), stdev = 57.645
[info]   CI (99.9%): [≈ 0, 247.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 4.000), stdev = 1.789
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay
[info] # Run progress: 50.00% complete, ETA 00:08:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 84521.446 ops/s
[info] # Warmup Iteration   2: 154850.640 ops/s
[info] # Warmup Iteration   3: 159874.839 ops/s
[info] # Warmup Iteration   4: 160233.151 ops/s
[info] # Warmup Iteration   5: 159462.865 ops/s
[info] Iteration   1: 160386.876 ops/s
[info]                  ·gc.alloc.rate:                   1063.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9691.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.409 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 159963.544 ops/s
[info]                  ·gc.alloc.rate:                   1060.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9755.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.819 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 160145.023 ops/s
[info]                  ·gc.alloc.rate:                   1061.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9800.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.205 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 160350.567 ops/s
[info]                  ·gc.alloc.rate:                   1063.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9826.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 158316.420 ops/s
[info]                  ·gc.alloc.rate:                   1049.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13330.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay":
[info]   159832.486 ±(99.9%) 3328.675 ops/s [Average]
[info]   (min, avg, max) = (158316.420, 159832.486, 160386.876), stdev = 864.446
[info]   CI (99.9%): [156503.811, 163161.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1059.819 ±(99.9%) 22.074 MB/sec [Average]
[info]   (min, avg, max) = (1049.765, 1059.819, 1063.491), stdev = 5.732
[info]   CI (99.9%): [1037.746, 1081.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10432.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10432.003, 10432.003, 10432.003), stdev = 0.001
[info]   CI (99.9%): [10432.002, 10432.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1064.113 ±(99.9%) 597.348 MB/sec [Average]
[info]   (min, avg, max) = (987.961, 1064.113, 1341.459), stdev = 155.129
[info]   CI (99.9%): [466.765, 1661.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10481.025 ±(99.9%) 6137.345 B/op [Average]
[info]   (min, avg, max) = (9691.121, 10481.025, 13330.703), stdev = 1593.849
[info]   CI (99.9%): [4343.681, 16618.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.369 ±(99.9%) 1.027 B/op [Average]
[info]   (min, avg, max) = (0.204, 0.369, 0.819), stdev = 0.267
[info]   CI (99.9%): [≈ 0, 1.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 11.000), stdev = 3.633
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce
[info] # Run progress: 51.61% complete, ETA 00:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 870560.532 ops/s
[info] # Warmup Iteration   2: 1283696.945 ops/s
[info] # Warmup Iteration   3: 1319454.303 ops/s
[info] # Warmup Iteration   4: 1321691.836 ops/s
[info] # Warmup Iteration   5: 1318298.074 ops/s
[info] Iteration   1: 1303348.737 ops/s
[info]                  ·gc.alloc.rate:                   1458.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1618.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1299909.230 ops/s
[info]                  ·gc.alloc.rate:                   1454.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1629.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1299065.711 ops/s
[info]                  ·gc.alloc.rate:               1453.330 MB/sec
[info]                  ·gc.alloc.rate.norm:          1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1689.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2045.933 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1287539.075 ops/s
[info]                  ·gc.alloc.rate:                   1440.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1655.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1266053.222 ops/s
[info]                  ·gc.alloc.rate:                   1416.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1686.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce":
[info]   1291183.195 ±(99.9%) 58748.300 ops/s [Average]
[info]   (min, avg, max) = (1266053.222, 1291183.195, 1303348.737), stdev = 15256.747
[info]   CI (99.9%): [1232434.895, 1349931.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1444.469 ±(99.9%) 65.807 MB/sec [Average]
[info]   (min, avg, max) = (1416.322, 1444.469, 1458.061), stdev = 17.090
[info]   CI (99.9%): [1378.662, 1510.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1760.000, 1760.000, 1760.000), stdev = 0.001
[info]   CI (99.9%): [1760.000, 1760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1417.557 ±(99.9%) 585.800 MB/sec [Average]
[info]   (min, avg, max) = (1340.479, 1417.557, 1689.440), stdev = 152.130
[info]   CI (99.9%): [831.757, 2003.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1726.956 ±(99.9%) 693.999 B/op [Average]
[info]   (min, avg, max) = (1618.070, 1726.956, 2045.933), stdev = 180.229
[info]   CI (99.9%): [1032.957, 2420.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.088 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.800, 22.000), stdev = 7.855
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 53.23% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2591785.726 ops/s
[info] # Warmup Iteration   2: 3887890.963 ops/s
[info] # Warmup Iteration   3: 3882847.303 ops/s
[info] # Warmup Iteration   4: 3928016.979 ops/s
[info] # Warmup Iteration   5: 3911181.847 ops/s
[info] Iteration   1: 3886996.598 ops/s
[info]                  ·gc.alloc.rate:                   1067.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     402.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 3917550.519 ops/s
[info]                  ·gc.alloc.rate:                   1075.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     535.514 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3865472.694 ops/s
[info]                  ·gc.alloc.rate:                   1061.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     409.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 3895482.073 ops/s
[info]                  ·gc.alloc.rate:               1069.642 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 407.080 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 3859886.949 ops/s
[info]                  ·gc.alloc.rate:               1059.900 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1011.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 412.174 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson":
[info]   3885077.766 ±(99.9%) 90004.371 ops/s [Average]
[info]   (min, avg, max) = (3859886.949, 3885077.766, 3917550.519), stdev = 23373.849
[info]   CI (99.9%): [3795073.396, 3975082.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1066.798 ±(99.9%) 24.699 MB/sec [Average]
[info]   (min, avg, max) = (1059.900, 1066.798, 1075.716), stdev = 6.414
[info]   CI (99.9%): [1042.099, 1091.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1070.244 ±(99.9%) 567.226 MB/sec [Average]
[info]   (min, avg, max) = (993.274, 1070.244, 1333.474), stdev = 147.307
[info]   CI (99.9%): [503.018, 1637.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   433.190 ±(99.9%) 220.720 B/op [Average]
[info]   (min, avg, max) = (402.027, 433.190, 535.514), stdev = 57.320
[info]   CI (99.9%): [212.470, 653.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.039 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.025), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 8.000), stdev = 1.949
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 54.84% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13116383.309 ops/s
[info] # Warmup Iteration   2: 14564176.109 ops/s
[info] # Warmup Iteration   3: 14353564.463 ops/s
[info] # Warmup Iteration   4: 14484895.572 ops/s
[info] # Warmup Iteration   5: 14375565.378 ops/s
[info] Iteration   1: 14540727.899 ops/s
[info]                  ·gc.alloc.rate:               443.670 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35.258 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 14215983.072 ops/s
[info]                  ·gc.alloc.rate:               433.773 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36.065 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 13549226.519 ops/s
[info]                  ·gc.alloc.rate:                   413.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 14229883.396 ops/s
[info]                  ·gc.alloc.rate:               434.169 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36.140 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 14146271.514 ops/s
[info]                  ·gc.alloc.rate:                   431.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter":
[info]   14136418.480 ±(99.9%) 1392932.589 ops/s [Average]
[info]   (min, avg, max) = (13549226.519, 14136418.480, 14540727.899), stdev = 361740.170
[info]   CI (99.9%): [12743485.891, 15529351.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   431.336 ±(99.9%) 42.484 MB/sec [Average]
[info]   (min, avg, max) = (413.427, 431.336, 443.670), stdev = 11.033
[info]   CI (99.9%): [388.852, 473.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   391.620 ±(99.9%) 561.556 MB/sec [Average]
[info]   (min, avg, max) = (325.894, 391.620, 652.494), stdev = 145.834
[info]   CI (99.9%): [≈ 0, 953.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   43.914 ±(99.9%) 68.561 B/op [Average]
[info]   (min, avg, max) = (35.258, 43.914, 75.756), stdev = 17.805
[info]   CI (99.9%): [≈ 0, 112.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.015), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 8.000), stdev = 2.915
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 56.45% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 520346.607 ops/s
[info] # Warmup Iteration   2: 820396.419 ops/s
[info] # Warmup Iteration   3: 820253.546 ops/s
[info] # Warmup Iteration   4: 827957.901 ops/s
[info] # Warmup Iteration   5: 832649.163 ops/s
[info] Iteration   1: 828752.489 ops/s
[info]                  ·gc.alloc.rate:                   1226.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2511.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 816410.550 ops/s
[info]                  ·gc.alloc.rate:                   1208.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2565.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 828159.920 ops/s
[info]                  ·gc.alloc.rate:                   1225.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1906.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 832350.823 ops/s
[info]                  ·gc.alloc.rate:                   1231.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2539.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 828620.851 ops/s
[info]                  ·gc.alloc.rate:                   1226.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2560.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay":
[info]   826858.927 ±(99.9%) 23399.755 ops/s [Average]
[info]   (min, avg, max) = (816410.550, 826858.927, 832350.823), stdev = 6076.842
[info]   CI (99.9%): [803459.171, 850258.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1223.624 ±(99.9%) 34.581 MB/sec [Average]
[info]   (min, avg, max) = (1208.187, 1223.624, 1231.752), stdev = 8.981
[info]   CI (99.9%): [1189.043, 1258.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2328.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2328.001, 2328.001, 2328.001), stdev = 0.001
[info]   CI (99.9%): [2328.000, 2328.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1270.065 ±(99.9%) 574.710 MB/sec [Average]
[info]   (min, avg, max) = (1003.685, 1270.065, 1348.597), stdev = 149.250
[info]   CI (99.9%): [695.355, 1844.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2416.626 ±(99.9%) 1101.042 B/op [Average]
[info]   (min, avg, max) = (1906.571, 2416.626, 2565.803), stdev = 285.937
[info]   CI (99.9%): [1315.584, 3517.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.103 ±(99.9%) 0.140 B/op [Average]
[info]   (min, avg, max) = (0.079, 0.103, 0.161), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 15.000), stdev = 4.528
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce
[info] # Run progress: 58.06% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 293356.501 ops/s
[info] # Warmup Iteration   2: 623333.031 ops/s
[info] # Warmup Iteration   3: 662980.882 ops/s
[info] # Warmup Iteration   4: 656321.227 ops/s
[info] # Warmup Iteration   5: 666155.897 ops/s
[info] Iteration   1: 655144.332 ops/s
[info]                  ·gc.alloc.rate:                   1582.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4025.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 658958.582 ops/s
[info]                  ·gc.alloc.rate:                   1591.754 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4023.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 572150.809 ops/s
[info]                  ·gc.alloc.rate:                   1382.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3719.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 477205.876 ops/s
[info]                  ·gc.alloc.rate:                   1152.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1016.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3350.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 477194.499 ops/s
[info]                  ·gc.alloc.rate:                   1152.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1017.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3354.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce":
[info]   568130.819 ±(99.9%) 346418.629 ops/s [Average]
[info]   (min, avg, max) = (477194.499, 568130.819, 658958.582), stdev = 89963.818
[info]   CI (99.9%): [221712.191, 914549.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1372.330 ±(99.9%) 836.879 MB/sec [Average]
[info]   (min, avg, max) = (1152.632, 1372.330, 1591.754), stdev = 217.335
[info]   CI (99.9%): [535.451, 2209.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3800.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3800.001, 3800.001, 3800.001), stdev = 0.001
[info]   CI (99.9%): [3800.000, 3800.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1349.769 ±(99.9%) 1278.524 MB/sec [Average]
[info]   (min, avg, max) = (1016.325, 1349.769, 1685.502), stdev = 332.029
[info]   CI (99.9%): [71.244, 2628.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3694.932 ±(99.9%) 1294.958 B/op [Average]
[info]   (min, avg, max) = (3350.441, 3694.932, 4025.586), stdev = 336.296
[info]   CI (99.9%): [2399.975, 4989.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.079 ±(99.9%) 0.076 B/op [Average]
[info]   (min, avg, max) = (0.057, 0.079, 0.100), stdev = 0.020
[info]   CI (99.9%): [0.003, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 1.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.800, 19.000), stdev = 5.404
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson
[info] # Run progress: 59.68% complete, ETA 00:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1206419.720 ops/s
[info] # Warmup Iteration   2: 2456055.222 ops/s
[info] # Warmup Iteration   3: 2507505.208 ops/s
[info] # Warmup Iteration   4: 2482710.666 ops/s
[info] # Warmup Iteration   5: 2377250.757 ops/s
[info] Iteration   1: 1787643.185 ops/s
[info]                  ·gc.alloc.rate:               1036.344 MB/sec
[info]                  ·gc.alloc.rate.norm:          912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 881.200 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 1795850.783 ops/s
[info]                  ·gc.alloc.rate:                   1041.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     880.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2085676.803 ops/s
[info]                  ·gc.alloc.rate:                   1209.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1015.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2488522.226 ops/s
[info]                  ·gc.alloc.rate:                   1442.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     854.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 2415047.425 ops/s
[info]                  ·gc.alloc.rate:                   1399.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     882.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson":
[info]   2114548.084 ±(99.9%) 1276279.136 ops/s [Average]
[info]   (min, avg, max) = (1787643.185, 2114548.084, 2488522.226), stdev = 331445.639
[info]   CI (99.9%): [838268.948, 3390827.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1225.851 ±(99.9%) 739.789 MB/sec [Average]
[info]   (min, avg, max) = (1036.344, 1225.851, 1442.660), stdev = 192.121
[info]   CI (99.9%): [486.062, 1965.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1211.747 ±(99.9%) 732.033 MB/sec [Average]
[info]   (min, avg, max) = (1001.344, 1211.747, 1354.165), stdev = 190.107
[info]   CI (99.9%): [479.713, 1943.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   902.793 ±(99.9%) 246.684 B/op [Average]
[info]   (min, avg, max) = (854.208, 902.793, 1015.432), stdev = 64.063
[info]   CI (99.9%): [656.109, 1149.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.042 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.027), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 11.000), stdev = 3.435
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter
[info] # Run progress: 61.29% complete, ETA 00:06:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4749104.517 ops/s
[info] # Warmup Iteration   2: 4005815.024 ops/s
[info] # Warmup Iteration   3: 4060039.757 ops/s
[info] # Warmup Iteration   4: 3986450.888 ops/s
[info] # Warmup Iteration   5: 4113248.343 ops/s
[info] Iteration   1: 4075954.748 ops/s
[info]                  ·gc.alloc.rate:                   1119.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     509.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 4099205.710 ops/s
[info]                  ·gc.alloc.rate:                   1125.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     382.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 4015709.638 ops/s
[info]                  ·gc.alloc.rate:                   1102.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     392.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 4049318.538 ops/s
[info]                  ·gc.alloc.rate:                   1111.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     520.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 4056469.374 ops/s
[info]                  ·gc.alloc.rate:                   1113.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     391.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter":
[info]   4059331.601 ±(99.9%) 119890.573 ops/s [Average]
[info]   (min, avg, max) = (4015709.638, 4059331.601, 4099205.710), stdev = 31135.201
[info]   CI (99.9%): [3939441.028, 4179222.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1114.646 ±(99.9%) 32.966 MB/sec [Average]
[info]   (min, avg, max) = (1102.639, 1114.646, 1125.607), stdev = 8.561
[info]   CI (99.9%): [1081.680, 1147.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1133.493 ±(99.9%) 693.829 MB/sec [Average]
[info]   (min, avg, max) = (995.956, 1133.493, 1340.483), stdev = 180.185
[info]   CI (99.9%): [439.664, 1827.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   439.291 ±(99.9%) 268.077 B/op [Average]
[info]   (min, avg, max) = (382.241, 439.291, 520.800), stdev = 69.619
[info]   CI (99.9%): [171.214, 707.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.018, 0.024), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 8.000, 11.000), stdev = 4.062
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay
[info] # Run progress: 62.90% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 165614.223 ops/s
[info] # Warmup Iteration   2: 343823.474 ops/s
[info] # Warmup Iteration   3: 349388.469 ops/s
[info] # Warmup Iteration   4: 348946.659 ops/s
[info] # Warmup Iteration   5: 348122.297 ops/s
[info] Iteration   1: 343038.993 ops/s
[info]                  ·gc.alloc.rate:                   1224.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6060.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 345720.574 ops/s
[info]                  ·gc.alloc.rate:                   1234.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4539.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.284 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 343927.228 ops/s
[info]                  ·gc.alloc.rate:                   1227.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6113.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.381 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 343577.125 ops/s
[info]                  ·gc.alloc.rate:                   1226.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6150.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 347817.360 ops/s
[info]                  ·gc.alloc.rate:                   1241.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4572.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay":
[info]   344816.256 ±(99.9%) 7533.128 ops/s [Average]
[info]   (min, avg, max) = (343038.993, 344816.256, 347817.360), stdev = 1956.329
[info]   CI (99.9%): [337283.128, 352349.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1230.866 ±(99.9%) 26.870 MB/sec [Average]
[info]   (min, avg, max) = (1224.542, 1230.866, 1241.565), stdev = 6.978
[info]   CI (99.9%): [1203.996, 1257.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1201.931 ±(99.9%) 695.626 MB/sec [Average]
[info]   (min, avg, max) = (997.638, 1201.931, 1343.132), stdev = 180.652
[info]   CI (99.9%): [506.305, 1897.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5487.460 ±(99.9%) 3275.553 B/op [Average]
[info]   (min, avg, max) = (4539.907, 5487.460, 6150.413), stdev = 850.651
[info]   CI (99.9%): [2211.907, 8763.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.247 ±(99.9%) 0.419 B/op [Average]
[info]   (min, avg, max) = (0.096, 0.247, 0.381), stdev = 0.109
[info]   CI (99.9%): [≈ 0, 0.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.400, 12.000), stdev = 4.037
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson
[info] # Run progress: 64.52% complete, ETA 00:05:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1818864.618 ops/s
[info] # Warmup Iteration   2: 2614688.195 ops/s
[info] # Warmup Iteration   3: 2663751.068 ops/s
[info] # Warmup Iteration   4: 2614601.553 ops/s
[info] # Warmup Iteration   5: 2638708.086 ops/s
[info] Iteration   1: 2671009.668 ops/s
[info]                  ·gc.alloc.rate:               1140.882 MB/sec
[info]                  ·gc.alloc.rate.norm:          672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      997.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 587.404 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 2593112.328 ops/s
[info]                  ·gc.alloc.rate:                   1107.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     810.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   3: 2662187.937 ops/s
[info]                  ·gc.alloc.rate:                   1137.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     594.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2642953.597 ops/s
[info]                  ·gc.alloc.rate:                   1128.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     601.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 2667760.936 ops/s
[info]                  ·gc.alloc.rate:                   1139.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     796.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson":
[info]   2647404.893 ±(99.9%) 124143.544 ops/s [Average]
[info]   (min, avg, max) = (2593112.328, 2647404.893, 2671009.668), stdev = 32239.684
[info]   CI (99.9%): [2523261.350, 2771548.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1130.807 ±(99.9%) 52.974 MB/sec [Average]
[info]   (min, avg, max) = (1107.642, 1130.807, 1140.882), stdev = 13.757
[info]   CI (99.9%): [1077.833, 1183.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1140.149 ±(99.9%) 714.624 MB/sec [Average]
[info]   (min, avg, max) = (997.260, 1140.149, 1350.430), stdev = 185.586
[info]   CI (99.9%): [425.525, 1854.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   678.141 ±(99.9%) 441.570 B/op [Average]
[info]   (min, avg, max) = (587.404, 678.141, 810.655), stdev = 114.674
[info]   CI (99.9%): [236.571, 1119.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.037), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 10.600, 25.000), stdev = 9.127
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 66.13% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4264097.595 ops/s
[info] # Warmup Iteration   2: 3960409.006 ops/s
[info] # Warmup Iteration   3: 3963721.251 ops/s
[info] # Warmup Iteration   4: 4024093.517 ops/s
[info] # Warmup Iteration   5: 4001953.402 ops/s
[info] Iteration   1: 3945536.329 ops/s
[info]                  ·gc.alloc.rate:                   722.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     391.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 3932677.694 ops/s
[info]                  ·gc.alloc.rate:                   719.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 4005561.517 ops/s
[info]                  ·gc.alloc.rate:                   733.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     258.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3968701.728 ops/s
[info]                  ·gc.alloc.rate:                   726.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3941886.069 ops/s
[info]                  ·gc.alloc.rate:                   721.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     264.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter":
[info]   3958872.668 ±(99.9%) 112742.983 ops/s [Average]
[info]   (min, avg, max) = (3932677.694, 3958872.668, 4005561.517), stdev = 29278.995
[info]   CI (99.9%): [3846129.684, 4071615.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   724.704 ±(99.9%) 20.629 MB/sec [Average]
[info]   (min, avg, max) = (719.906, 724.704, 733.245), stdev = 5.357
[info]   CI (99.9%): [704.075, 745.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   724.576 ±(99.9%) 553.376 MB/sec [Average]
[info]   (min, avg, max) = (656.754, 724.576, 981.608), stdev = 143.710
[info]   CI (99.9%): [171.200, 1277.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   288.047 ±(99.9%) 222.659 B/op [Average]
[info]   (min, avg, max) = (258.858, 288.047, 391.413), stdev = 57.824
[info]   CI (99.9%): [65.388, 510.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.015, 0.033), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.800, 14.000), stdev = 4.207
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay
[info] # Run progress: 67.74% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 284445.626 ops/s
[info] # Warmup Iteration   2: 480922.453 ops/s
[info] # Warmup Iteration   3: 496356.879 ops/s
[info] # Warmup Iteration   4: 492722.842 ops/s
[info] # Warmup Iteration   5: 500417.208 ops/s
[info] Iteration   1: 498378.201 ops/s
[info]                  ·gc.alloc.rate:                   1474.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5245.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 500195.780 ops/s
[info]                  ·gc.alloc.rate:                   1480.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4208.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.393 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 497880.471 ops/s
[info]                  ·gc.alloc.rate:                   1473.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1682.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5315.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 494192.338 ops/s
[info]                  ·gc.alloc.rate:                   1462.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4298.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 495564.064 ops/s
[info]                  ·gc.alloc.rate:                   1466.546 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4297.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay":
[info]   497242.171 ±(99.9%) 9140.580 ops/s [Average]
[info]   (min, avg, max) = (494192.338, 497242.171, 500195.780), stdev = 2373.780
[info]   CI (99.9%): [488101.590, 506382.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1471.561 ±(99.9%) 27.118 MB/sec [Average]
[info]   (min, avg, max) = (1462.541, 1471.561, 1480.336), stdev = 7.043
[info]   CI (99.9%): [1444.442, 1498.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1477.146 ±(99.9%) 685.294 MB/sec [Average]
[info]   (min, avg, max) = (1338.163, 1477.146, 1682.022), stdev = 177.969
[info]   CI (99.9%): [791.852, 2162.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4673.085 ±(99.9%) 2141.006 B/op [Average]
[info]   (min, avg, max) = (4208.834, 4673.085, 5315.014), stdev = 556.013
[info]   CI (99.9%): [2532.079, 6814.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.125), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.171 ±(99.9%) 0.522 B/op [Average]
[info]   (min, avg, max) = (0.066, 0.171, 0.393), stdev = 0.136
[info]   CI (99.9%): [≈ 0, 0.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 9.000), stdev = 1.483
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 69.35% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 101254.227 ops/s
[info] # Warmup Iteration   2: 1016532.104 ops/s
[info] # Warmup Iteration   3: 1024780.962 ops/s
[info] # Warmup Iteration   4: 1035063.502 ops/s
[info] # Warmup Iteration   5: 1018255.690 ops/s
[info] Iteration   1: 1016730.041 ops/s
[info]                  ·gc.alloc.rate:                   1256.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1546.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1018929.712 ops/s
[info]                  ·gc.alloc.rate:                   1259.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2067.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1026093.479 ops/s
[info]                  ·gc.alloc.rate:                   1267.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2061.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1044848.943 ops/s
[info]                  ·gc.alloc.rate:                   1291.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2032.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1033693.288 ops/s
[info]                  ·gc.alloc.rate:                   1277.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1544.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson":
[info]   1028059.092 ±(99.9%) 44290.771 ops/s [Average]
[info]   (min, avg, max) = (1016730.041, 1028059.092, 1044848.943), stdev = 11502.172
[info]   CI (99.9%): [983768.322, 1072349.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1270.322 ±(99.9%) 54.657 MB/sec [Average]
[info]   (min, avg, max) = (1256.344, 1270.322, 1291.041), stdev = 14.194
[info]   CI (99.9%): [1215.665, 1324.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1944.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1944.000, 1944.000, 1944.000), stdev = 0.001
[info]   CI (99.9%): [1944.000, 1944.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1209.651 ±(99.9%) 711.855 MB/sec [Average]
[info]   (min, avg, max) = (999.620, 1209.651, 1349.753), stdev = 184.866
[info]   CI (99.9%): [497.796, 1921.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1850.695 ±(99.9%) 1073.277 B/op [Average]
[info]   (min, avg, max) = (1544.678, 1850.695, 2067.665), stdev = 278.727
[info]   CI (99.9%): [777.419, 2923.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.089 ±(99.9%) 0.160 B/op [Average]
[info]   (min, avg, max) = (0.063, 0.089, 0.160), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 9.000), stdev = 3.033
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 70.97% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2009889.162 ops/s
[info] # Warmup Iteration   2: 2292939.425 ops/s
[info] # Warmup Iteration   3: 2320450.838 ops/s
[info] # Warmup Iteration   4: 2326938.086 ops/s
[info] # Warmup Iteration   5: 2323603.692 ops/s
[info] Iteration   1: 2307273.075 ops/s
[info]                  ·gc.alloc.rate:                   445.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     222.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2298847.260 ops/s
[info]                  ·gc.alloc.rate:               444.212 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 223.017 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 2306175.337 ops/s
[info]                  ·gc.alloc.rate:                   445.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     445.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2307308.833 ops/s
[info]                  ·gc.alloc.rate:               445.839 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 222.885 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2303826.516 ops/s
[info]                  ·gc.alloc.rate:               445.164 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 447.126 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   2304686.204 ±(99.9%) 13698.220 ops/s [Average]
[info]   (min, avg, max) = (2298847.260, 2304686.204, 2307308.833), stdev = 3557.384
[info]   CI (99.9%): [2290987.984, 2318384.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   445.336 ±(99.9%) 2.641 MB/sec [Average]
[info]   (min, avg, max) = (444.212, 445.336, 445.839), stdev = 0.686
[info]   CI (99.9%): [442.695, 447.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.165 ±(99.9%) 690.479 MB/sec [Average]
[info]   (min, avg, max) = (325.878, 457.165, 654.751), stdev = 179.315
[info]   CI (99.9%): [≈ 0, 1147.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   312.064 ±(99.9%) 471.182 B/op [Average]
[info]   (min, avg, max) = (222.209, 312.064, 447.126), stdev = 122.364
[info]   CI (99.9%): [≈ 0, 783.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.119 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.071), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.800, 7.000), stdev = 3.271
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 72.58% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 76108.915 ops/s
[info] # Warmup Iteration   2: 241984.696 ops/s
[info] # Warmup Iteration   3: 246711.195 ops/s
[info] # Warmup Iteration   4: 247725.954 ops/s
[info] # Warmup Iteration   5: 244620.246 ops/s
[info] Iteration   1: 247253.908 ops/s
[info]                  ·gc.alloc.rate:                   969.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6261.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 248405.057 ops/s
[info]                  ·gc.alloc.rate:                   973.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6257.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.528 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 252176.707 ops/s
[info]                  ·gc.alloc.rate:                   988.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6201.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 250505.038 ops/s
[info]                  ·gc.alloc.rate:                   982.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6271.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 252237.966 ops/s
[info]                  ·gc.alloc.rate:                   988.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6257.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay":
[info]   250115.735 ±(99.9%) 8614.499 ops/s [Average]
[info]   (min, avg, max) = (247253.908, 250115.735, 252237.966), stdev = 2237.158
[info]   CI (99.9%): [241501.236, 258730.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   980.585 ±(99.9%) 33.805 MB/sec [Average]
[info]   (min, avg, max) = (969.365, 980.585, 988.916), stdev = 8.779
[info]   CI (99.9%): [946.780, 1014.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.551 ±(99.9%) 30.056 MB/sec [Average]
[info]   (min, avg, max) = (983.982, 993.551, 1003.286), stdev = 7.805
[info]   CI (99.9%): [963.495, 1023.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6249.654 ±(99.9%) 107.012 B/op [Average]
[info]   (min, avg, max) = (6201.037, 6249.654, 6271.518), stdev = 27.791
[info]   CI (99.9%): [6142.642, 6356.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.262 ±(99.9%) 0.623 B/op [Average]
[info]   (min, avg, max) = (0.130, 0.262, 0.528), stdev = 0.162
[info]   CI (99.9%): [≈ 0, 0.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 14.000), stdev = 5.215
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce
[info] # Run progress: 74.19% complete, ETA 00:04:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 408110.455 ops/s
[info] # Warmup Iteration   2: 594089.176 ops/s
[info] # Warmup Iteration   3: 610995.466 ops/s
[info] # Warmup Iteration   4: 607955.792 ops/s
[info] # Warmup Iteration   5: 611243.361 ops/s
[info] Iteration   1: 608517.186 ops/s
[info]                  ·gc.alloc.rate:                   1559.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4340.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 608350.040 ops/s
[info]                  ·gc.alloc.rate:                   1559.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3488.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 607743.505 ops/s
[info]                  ·gc.alloc.rate:                   1557.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4378.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 611731.552 ops/s
[info]                  ·gc.alloc.rate:                   1567.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3487.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 612316.546 ops/s
[info]                  ·gc.alloc.rate:                   1569.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4362.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce":
[info]   609731.766 ±(99.9%) 8172.483 ops/s [Average]
[info]   (min, avg, max) = (607743.505, 609731.766, 612316.546), stdev = 2122.368
[info]   CI (99.9%): [601559.283, 617904.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1562.685 ±(99.9%) 20.901 MB/sec [Average]
[info]   (min, avg, max) = (1557.525, 1562.685, 1569.293), stdev = 5.428
[info]   CI (99.9%): [1541.784, 1583.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4032.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4032.001, 4032.001, 4032.001), stdev = 0.001
[info]   CI (99.9%): [4032.001, 4032.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1554.644 ±(99.9%) 710.943 MB/sec [Average]
[info]   (min, avg, max) = (1348.958, 1554.644, 1698.011), stdev = 184.630
[info]   CI (99.9%): [843.701, 2265.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4011.441 ±(99.9%) 1840.791 B/op [Average]
[info]   (min, avg, max) = (3487.712, 4011.441, 4378.404), stdev = 478.048
[info]   CI (99.9%): [2170.650, 5852.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.075 ±(99.9%) 0.114 B/op [Average]
[info]   (min, avg, max) = (0.054, 0.075, 0.108), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.400, 12.000), stdev = 3.435
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson
[info] # Run progress: 75.81% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 816877.188 ops/s
[info] # Warmup Iteration   2: 1216702.868 ops/s
[info] # Warmup Iteration   3: 1220450.586 ops/s
[info] # Warmup Iteration   4: 1202665.853 ops/s
[info] # Warmup Iteration   5: 1196181.361 ops/s
[info] Iteration   1: 1203440.782 ops/s
[info]                  ·gc.alloc.rate:                   740.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     858.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1177714.189 ops/s
[info]                  ·gc.alloc.rate:                   724.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     880.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1184584.166 ops/s
[info]                  ·gc.alloc.rate:               728.818 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 878.908 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 1186388.184 ops/s
[info]                  ·gc.alloc.rate:                   729.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     881.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1189918.692 ops/s
[info]                  ·gc.alloc.rate:               732.105 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1323.874 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson":
[info]   1188409.203 ±(99.9%) 36597.614 ops/s [Average]
[info]   (min, avg, max) = (1177714.189, 1188409.203, 1203440.782), stdev = 9504.284
[info]   CI (99.9%): [1151811.589, 1225006.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   731.196 ±(99.9%) 22.520 MB/sec [Average]
[info]   (min, avg, max) = (724.648, 731.196, 740.464), stdev = 5.848
[info]   CI (99.9%): [708.676, 753.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   968.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (968.000, 968.000, 968.000), stdev = 0.001
[info]   CI (99.9%): [968.000, 968.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   728.582 ±(99.9%) 587.058 MB/sec [Average]
[info]   (min, avg, max) = (656.414, 728.582, 1001.254), stdev = 152.457
[info]   CI (99.9%): [141.524, 1315.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   964.486 ±(99.9%) 774.487 B/op [Average]
[info]   (min, avg, max) = (858.122, 964.486, 1323.874), stdev = 201.132
[info]   CI (99.9%): [189.999, 1738.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.028), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 6.000), stdev = 1.483
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 77.42% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4461621.614 ops/s
[info] # Warmup Iteration   2: 4571688.762 ops/s
[info] # Warmup Iteration   3: 4498355.843 ops/s
[info] # Warmup Iteration   4: 4558203.938 ops/s
[info] # Warmup Iteration   5: 4547683.973 ops/s
[info] Iteration   1: 4604083.169 ops/s
[info]                  ·gc.alloc.rate:                   772.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     335.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 4561642.953 ops/s
[info]                  ·gc.alloc.rate:                   765.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     226.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 4488477.221 ops/s
[info]                  ·gc.alloc.rate:                   754.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     230.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 4536891.496 ops/s
[info]                  ·gc.alloc.rate:                   761.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     344.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 4538716.827 ops/s
[info]                  ·gc.alloc.rate:                   761.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     230.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter":
[info]   4545962.333 ±(99.9%) 161809.870 ops/s [Average]
[info]   (min, avg, max) = (4488477.221, 4545962.333, 4604083.169), stdev = 42021.509
[info]   CI (99.9%): [4384152.463, 4707772.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   763.006 ±(99.9%) 25.950 MB/sec [Average]
[info]   (min, avg, max) = (754.094, 763.006, 772.569), stdev = 6.739
[info]   CI (99.9%): [737.056, 788.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   790.834 ±(99.9%) 692.047 MB/sec [Average]
[info]   (min, avg, max) = (657.082, 790.834, 993.321), stdev = 179.722
[info]   CI (99.9%): [98.788, 1482.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   273.417 ±(99.9%) 234.424 B/op [Average]
[info]   (min, avg, max) = (226.624, 273.417, 344.447), stdev = 60.879
[info]   CI (99.9%): [38.993, 507.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.032 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.017, 0.029), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 14.000), stdev = 4.025
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay
[info] # Run progress: 79.03% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 196047.252 ops/s
[info] # Warmup Iteration   2: 366790.593 ops/s
[info] # Warmup Iteration   3: 373945.375 ops/s
[info] # Warmup Iteration   4: 371009.430 ops/s
[info] # Warmup Iteration   5: 372142.169 ops/s
[info] Iteration   1: 371223.599 ops/s
[info]                  ·gc.alloc.rate:                   1270.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5611.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 375073.069 ops/s
[info]                  ·gc.alloc.rate:                   1283.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4188.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 371676.287 ops/s
[info]                  ·gc.alloc.rate:                   1271.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5667.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.353 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 373052.570 ops/s
[info]                  ·gc.alloc.rate:                   1276.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5671.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 373413.826 ops/s
[info]                  ·gc.alloc.rate:                   1277.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5685.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay":
[info]   372887.870 ±(99.9%) 5876.675 ops/s [Average]
[info]   (min, avg, max) = (371223.599, 372887.870, 375073.069), stdev = 1526.154
[info]   CI (99.9%): [367011.195, 378764.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1276.084 ±(99.9%) 20.134 MB/sec [Average]
[info]   (min, avg, max) = (1270.418, 1276.084, 1283.588), stdev = 5.229
[info]   CI (99.9%): [1255.950, 1296.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5384.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5384.001, 5384.001, 5384.001), stdev = 0.001
[info]   CI (99.9%): [5384.001, 5384.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1271.163 ±(99.9%) 587.808 MB/sec [Average]
[info]   (min, avg, max) = (998.622, 1271.163, 1349.463), stdev = 152.652
[info]   CI (99.9%): [683.355, 1858.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5364.923 ±(99.9%) 2534.187 B/op [Average]
[info]   (min, avg, max) = (4188.713, 5364.923, 5685.599), stdev = 658.120
[info]   CI (99.9%): [2830.736, 7899.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.193 ±(99.9%) 0.442 B/op [Average]
[info]   (min, avg, max) = (0.088, 0.193, 0.353), stdev = 0.115
[info]   CI (99.9%): [≈ 0, 0.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 11.000), stdev = 3.347
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce
[info] # Run progress: 80.65% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 147998.244 ops/s
[info] # Warmup Iteration   2: 327771.754 ops/s
[info] # Warmup Iteration   3: 350184.074 ops/s
[info] # Warmup Iteration   4: 346502.042 ops/s
[info] # Warmup Iteration   5: 350285.373 ops/s
[info] Iteration   1: 348323.958 ops/s
[info]                  ·gc.alloc.rate:                   1025.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4456.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 350531.445 ops/s
[info]                  ·gc.alloc.rate:                   1032.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4458.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 350036.275 ops/s
[info]                  ·gc.alloc.rate:                   1030.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4488.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 348019.661 ops/s
[info]                  ·gc.alloc.rate:               1024.625 MB/sec
[info]                  ·gc.alloc.rate.norm:          4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4535.358 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 347308.221 ops/s
[info]                  ·gc.alloc.rate:                   1022.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4562.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce":
[info]   348843.912 ±(99.9%) 5299.913 ops/s [Average]
[info]   (min, avg, max) = (347308.221, 348843.912, 350531.445), stdev = 1376.371
[info]   CI (99.9%): [343543.998, 354143.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1027.059 ±(99.9%) 15.557 MB/sec [Average]
[info]   (min, avg, max) = (1022.557, 1027.059, 1032.016), stdev = 4.040
[info]   CI (99.9%): [1011.502, 1042.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4632.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4632.001, 4632.001, 4632.001), stdev = 0.001
[info]   CI (99.9%): [4632.001, 4632.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   997.807 ±(99.9%) 31.361 MB/sec [Average]
[info]   (min, avg, max) = (986.640, 997.807, 1007.279), stdev = 8.144
[info]   CI (99.9%): [966.446, 1029.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4500.184 ±(99.9%) 182.622 B/op [Average]
[info]   (min, avg, max) = (4456.294, 4500.184, 4562.793), stdev = 47.426
[info]   CI (99.9%): [4317.562, 4682.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.094 ±(99.9%) 0.255 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.094, 0.187), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 6.000), stdev = 1.643
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson
[info] # Run progress: 82.26% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123655.615 ops/s
[info] # Warmup Iteration   2: 1036409.934 ops/s
[info] # Warmup Iteration   3: 1035971.300 ops/s
[info] # Warmup Iteration   4: 1038671.514 ops/s
[info] # Warmup Iteration   5: 1031224.767 ops/s
[info] Iteration   1: 1027035.694 ops/s
[info]                  ·gc.alloc.rate:                   1065.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1524.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 1039495.689 ops/s
[info]                  ·gc.alloc.rate:                   1078.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2019.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1034094.134 ops/s
[info]                  ·gc.alloc.rate:                   1072.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1529.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1038510.927 ops/s
[info]                  ·gc.alloc.rate:                   1077.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1527.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1032752.695 ops/s
[info]                  ·gc.alloc.rate:                   1071.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1541.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson":
[info]   1034377.828 ±(99.9%) 19243.926 ops/s [Average]
[info]   (min, avg, max) = (1027035.694, 1034377.828, 1039495.689), stdev = 4997.586
[info]   CI (99.9%): [1015133.902, 1053621.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1072.995 ±(99.9%) 20.019 MB/sec [Average]
[info]   (min, avg, max) = (1065.381, 1072.995, 1078.312), stdev = 5.199
[info]   CI (99.9%): [1052.976, 1093.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1071.044 ±(99.9%) 566.849 MB/sec [Average]
[info]   (min, avg, max) = (995.271, 1071.044, 1334.142), stdev = 147.209
[info]   CI (99.9%): [504.195, 1637.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1628.545 ±(99.9%) 841.265 B/op [Average]
[info]   (min, avg, max) = (1524.602, 1628.545, 2019.194), stdev = 218.474
[info]   CI (99.9%): [787.280, 2469.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.057 ±(99.9%) 0.103 B/op [Average]
[info]   (min, avg, max) = (0.032, 0.057, 0.096), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.200, 14.000), stdev = 4.324
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter
[info] # Run progress: 83.87% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2044352.729 ops/s
[info] # Warmup Iteration   2: 2272515.417 ops/s
[info] # Warmup Iteration   3: 2311138.591 ops/s
[info] # Warmup Iteration   4: 2312190.349 ops/s
[info] # Warmup Iteration   5: 2247755.954 ops/s
[info] Iteration   1: 2314259.621 ops/s
[info]                  ·gc.alloc.rate:                   553.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     443.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2301215.883 ops/s
[info]                  ·gc.alloc.rate:                   549.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     446.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2322695.379 ops/s
[info]                  ·gc.alloc.rate:               555.011 MB/sec
[info]                  ·gc.alloc.rate.norm:          376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 221.404 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 2308703.214 ops/s
[info]                  ·gc.alloc.rate:                   551.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     447.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2320812.824 ops/s
[info]                  ·gc.alloc.rate:                   554.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     445.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter":
[info]   2313537.384 ±(99.9%) 34035.811 ops/s [Average]
[info]   (min, avg, max) = (2301215.883, 2313537.384, 2322695.379), stdev = 8838.992
[info]   CI (99.9%): [2279501.573, 2347573.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   552.907 ±(99.9%) 8.013 MB/sec [Average]
[info]   (min, avg, max) = (549.991, 552.907, 555.011), stdev = 2.081
[info]   CI (99.9%): [544.895, 560.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   376.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (376.000, 376.000, 376.000), stdev = 0.001
[info]   CI (99.9%): [376.000, 376.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   589.229 ±(99.9%) 564.941 MB/sec [Average]
[info]   (min, avg, max) = (326.813, 589.229, 657.755), stdev = 146.713
[info]   CI (99.9%): [24.288, 1154.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   400.873 ±(99.9%) 386.362 B/op [Average]
[info]   (min, avg, max) = (221.404, 400.873, 447.308), stdev = 100.337
[info]   CI (99.9%): [14.510, 787.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.105 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.071), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.600, 7.000), stdev = 3.050
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay
[info] # Run progress: 85.48% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 118888.961 ops/s
[info] # Warmup Iteration   2: 248575.182 ops/s
[info] # Warmup Iteration   3: 254685.557 ops/s
[info] # Warmup Iteration   4: 255578.463 ops/s
[info] # Warmup Iteration   5: 251496.380 ops/s
[info] Iteration   1: 254996.731 ops/s
[info]                  ·gc.alloc.rate:                   930.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              5744.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6070.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 257153.727 ops/s
[info]                  ·gc.alloc.rate:                   938.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              5744.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4030.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 256525.802 ops/s
[info]                  ·gc.alloc.rate:                   936.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              5744.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6081.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.255 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 257265.068 ops/s
[info]                  ·gc.alloc.rate:                   939.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              5744.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6100.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 257171.532 ops/s
[info]                  ·gc.alloc.rate:                   938.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              5744.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6127.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay":
[info]   256622.572 ±(99.9%) 3677.821 ops/s [Average]
[info]   (min, avg, max) = (254996.731, 256622.572, 257265.068), stdev = 955.118
[info]   CI (99.9%): [252944.751, 260300.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   936.936 ±(99.9%) 13.454 MB/sec [Average]
[info]   (min, avg, max) = (930.981, 936.936, 939.265), stdev = 3.494
[info]   CI (99.9%): [923.482, 950.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5744.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5744.002, 5744.002, 5744.002), stdev = 0.001
[info]   CI (99.9%): [5744.002, 5744.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.700 ±(99.9%) 577.393 MB/sec [Average]
[info]   (min, avg, max) = (658.731, 926.700, 1001.613), stdev = 149.947
[info]   CI (99.9%): [349.307, 1504.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5682.057 ±(99.9%) 3557.027 B/op [Average]
[info]   (min, avg, max) = (4030.052, 5682.057, 6127.374), stdev = 923.749
[info]   CI (99.9%): [2125.030, 9239.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.204 ±(99.9%) 0.438 B/op [Average]
[info]   (min, avg, max) = (0.127, 0.204, 0.382), stdev = 0.114
[info]   CI (99.9%): [≈ 0, 0.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 10.000), stdev = 3.347
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce
[info] # Run progress: 87.10% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 141483.365 ops/s
[info] # Warmup Iteration   2: 341338.059 ops/s
[info] # Warmup Iteration   3: 352830.541 ops/s
[info] # Warmup Iteration   4: 354584.987 ops/s
[info] # Warmup Iteration   5: 352708.514 ops/s
[info] Iteration   1: 351761.746 ops/s
[info]                  ·gc.alloc.rate:                   1026.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4445.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 353201.185 ops/s
[info]                  ·gc.alloc.rate:                   1030.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4445.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 352085.929 ops/s
[info]                  ·gc.alloc.rate:                   1027.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4483.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 353559.029 ops/s
[info]                  ·gc.alloc.rate:               1031.949 MB/sec
[info]                  ·gc.alloc.rate.norm:          4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4479.130 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 349369.681 ops/s
[info]                  ·gc.alloc.rate:               1019.716 MB/sec
[info]                  ·gc.alloc.rate.norm:          4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1010.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4549.371 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce":
[info]   351995.514 ±(99.9%) 6343.648 ops/s [Average]
[info]   (min, avg, max) = (349369.681, 351995.514, 353559.029), stdev = 1647.425
[info]   CI (99.9%): [345651.866, 358339.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   1027.399 ±(99.9%) 18.543 MB/sec [Average]
[info]   (min, avg, max) = (1019.716, 1027.399, 1031.949), stdev = 4.816
[info]   CI (99.9%): [1008.856, 1045.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4592.001, 4592.001, 4592.001), stdev = 0.001
[info]   CI (99.9%): [4592.001, 4592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1002.408 ±(99.9%) 25.163 MB/sec [Average]
[info]   (min, avg, max) = (993.961, 1002.408, 1010.249), stdev = 6.535
[info]   CI (99.9%): [977.245, 1027.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4480.428 ±(99.9%) 163.771 B/op [Average]
[info]   (min, avg, max) = (4445.119, 4480.428, 4549.371), stdev = 42.531
[info]   CI (99.9%): [4316.657, 4644.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.074 ±(99.9%) 0.299 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.074, 0.186), stdev = 0.078
[info]   CI (99.9%): [≈ 0, 0.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 10.000), stdev = 2.608
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 88.71% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103369.653 ops/s
[info] # Warmup Iteration   2: 1047474.263 ops/s
[info] # Warmup Iteration   3: 1064893.773 ops/s
[info] # Warmup Iteration   4: 1064581.008 ops/s
[info] # Warmup Iteration   5: 1056558.093 ops/s
[info] Iteration   1: 1046061.467 ops/s
[info]                  ·gc.alloc.rate:                   1037.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1496.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1051718.380 ops/s
[info]                  ·gc.alloc.rate:                   1042.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1495.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1046977.002 ops/s
[info]                  ·gc.alloc.rate:                   1038.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1508.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1045971.242 ops/s
[info]                  ·gc.alloc.rate:                   1037.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1516.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 1044130.711 ops/s
[info]                  ·gc.alloc.rate:                   1035.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1523.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson":
[info]   1046971.760 ±(99.9%) 10964.478 ops/s [Average]
[info]   (min, avg, max) = (1044130.711, 1046971.760, 1051718.380), stdev = 2847.440
[info]   CI (99.9%): [1036007.283, 1057936.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1038.147 ±(99.9%) 10.912 MB/sec [Average]
[info]   (min, avg, max) = (1035.325, 1038.147, 1042.872), stdev = 2.834
[info]   CI (99.9%): [1027.235, 1049.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1003.687 ±(99.9%) 24.272 MB/sec [Average]
[info]   (min, avg, max) = (995.263, 1003.687, 1010.953), stdev = 6.303
[info]   CI (99.9%): [979.415, 1027.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1508.237 ±(99.9%) 46.333 B/op [Average]
[info]   (min, avg, max) = (1495.811, 1508.237, 1523.279), stdev = 12.033
[info]   CI (99.9%): [1461.904, 1554.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.063 ±(99.9%) 0.148 B/op [Average]
[info]   (min, avg, max) = (0.031, 0.063, 0.125), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.600, 14.000), stdev = 4.775
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 90.32% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1787693.881 ops/s
[info] # Warmup Iteration   2: 1969242.602 ops/s
[info] # Warmup Iteration   3: 2005339.668 ops/s
[info] # Warmup Iteration   4: 2013818.523 ops/s
[info] # Warmup Iteration   5: 2036539.272 ops/s
[info] Iteration   1: 2017910.254 ops/s
[info]                  ·gc.alloc.rate:                   492.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     508.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2032521.412 ops/s
[info]                  ·gc.alloc.rate:               496.079 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 252.246 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 2016084.972 ops/s
[info]                  ·gc.alloc.rate:                   492.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     509.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2022198.424 ops/s
[info]                  ·gc.alloc.rate:               493.585 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 254.302 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 2014229.143 ops/s
[info]                  ·gc.alloc.rate:               491.622 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 511.675 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter":
[info]   2020588.841 ±(99.9%) 28091.394 ops/s [Average]
[info]   (min, avg, max) = (2014229.143, 2020588.841, 2032521.412), stdev = 7295.246
[info]   CI (99.9%): [1992497.447, 2048680.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   493.179 ±(99.9%) 6.841 MB/sec [Average]
[info]   (min, avg, max) = (491.622, 493.179, 496.079), stdev = 1.777
[info]   CI (99.9%): [486.338, 500.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   384.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (384.000, 384.000, 384.000), stdev = 0.001
[info]   CI (99.9%): [384.000, 384.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.462 ±(99.9%) 689.299 MB/sec [Average]
[info]   (min, avg, max) = (325.870, 522.462, 655.080), stdev = 179.009
[info]   CI (99.9%): [≈ 0, 1211.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   407.145 ±(99.9%) 540.908 B/op [Average]
[info]   (min, avg, max) = (252.246, 407.145, 511.675), stdev = 140.472
[info]   CI (99.9%): [≈ 0, 948.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.122 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.065), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 7.000), stdev = 1.924
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 91.94% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 99150.437 ops/s
[info] # Warmup Iteration   2: 247297.186 ops/s
[info] # Warmup Iteration   3: 251716.177 ops/s
[info] # Warmup Iteration   4: 255780.950 ops/s
[info] # Warmup Iteration   5: 252519.077 ops/s
[info] Iteration   1: 256451.698 ops/s
[info]                  ·gc.alloc.rate:                   987.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6034.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.383 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 255099.284 ops/s
[info]                  ·gc.alloc.rate:                   981.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6090.829 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.385 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 252393.780 ops/s
[info]                  ·gc.alloc.rate:                   971.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6195.583 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 251547.836 ops/s
[info]                  ·gc.alloc.rate:                   968.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6241.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 254174.174 ops/s
[info]                  ·gc.alloc.rate:                   978.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6210.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay":
[info]   253933.354 ±(99.9%) 7657.949 ops/s [Average]
[info]   (min, avg, max) = (251547.836, 253933.354, 256451.698), stdev = 1988.745
[info]   CI (99.9%): [246275.406, 261591.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   977.471 ±(99.9%) 29.458 MB/sec [Average]
[info]   (min, avg, max) = (968.304, 977.471, 987.154), stdev = 7.650
[info]   CI (99.9%): [948.013, 1006.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6056.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6056.002, 6056.002, 6056.002), stdev = 0.001
[info]   CI (99.9%): [6056.001, 6056.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.284 ±(99.9%) 30.317 MB/sec [Average]
[info]   (min, avg, max) = (983.626, 993.284, 1003.300), stdev = 7.873
[info]   CI (99.9%): [962.967, 1023.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6154.468 ±(99.9%) 338.047 B/op [Average]
[info]   (min, avg, max) = (6034.358, 6154.468, 6241.425), stdev = 87.790
[info]   CI (99.9%): [5816.421, 6492.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.232 ±(99.9%) 0.537 B/op [Average]
[info]   (min, avg, max) = (0.129, 0.232, 0.385), stdev = 0.139
[info]   CI (99.9%): [≈ 0, 0.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 8.200, 11.000), stdev = 4.087
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce
[info] # Run progress: 93.55% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 362259.510 ops/s
[info] # Warmup Iteration   2: 630177.230 ops/s
[info] # Warmup Iteration   3: 638774.759 ops/s
[info] # Warmup Iteration   4: 640541.180 ops/s
[info] # Warmup Iteration   5: 641112.809 ops/s
[info] Iteration   1: 645466.180 ops/s
[info]                  ·gc.alloc.rate:               1263.649 MB/sec
[info]                  ·gc.alloc.rate.norm:          3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1332.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3248.573 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 636789.060 ops/s
[info]                  ·gc.alloc.rate:                   1246.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3311.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 634717.902 ops/s
[info]                  ·gc.alloc.rate:                   1242.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2500.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 631285.092 ops/s
[info]                  ·gc.alloc.rate:                   1235.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3364.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 642729.291 ops/s
[info]                  ·gc.alloc.rate:                   1258.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3312.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce":
[info]   638197.505 ±(99.9%) 22390.389 ops/s [Average]
[info]   (min, avg, max) = (631285.092, 638197.505, 645466.180), stdev = 5814.713
[info]   CI (99.9%): [615807.116, 660587.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1249.432 ±(99.9%) 43.784 MB/sec [Average]
[info]   (min, avg, max) = (1235.915, 1249.432, 1263.649), stdev = 11.370
[info]   CI (99.9%): [1205.649, 1293.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3080.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3080.001, 3080.001, 3080.001), stdev = 0.001
[info]   CI (99.9%): [3080.001, 3080.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1277.193 ±(99.9%) 578.200 MB/sec [Average]
[info]   (min, avg, max) = (1008.980, 1277.193, 1353.467), stdev = 150.157
[info]   CI (99.9%): [698.993, 1855.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3147.808 ±(99.9%) 1401.559 B/op [Average]
[info]   (min, avg, max) = (2500.885, 3147.808, 3364.824), stdev = 363.981
[info]   CI (99.9%): [1746.249, 4549.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.051 ±(99.9%) 0.139 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.051, 0.102), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 12.000), stdev = 3.347
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson
[info] # Run progress: 95.16% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1129571.715 ops/s
[info] # Warmup Iteration   2: 1632023.381 ops/s
[info] # Warmup Iteration   3: 1634799.584 ops/s
[info] # Warmup Iteration   4: 1615319.906 ops/s
[info] # Warmup Iteration   5: 1605783.435 ops/s
[info] Iteration   1: 1592905.290 ops/s
[info]                  ·gc.alloc.rate:                   712.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     645.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 1612538.201 ops/s
[info]                  ·gc.alloc.rate:                   721.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.364 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     963.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1608144.364 ops/s
[info]                  ·gc.alloc.rate:                   719.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     647.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1597451.806 ops/s
[info]                  ·gc.alloc.rate:               714.844 MB/sec
[info]                  ·gc.alloc.rate.norm:          704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 653.702 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 1607558.704 ops/s
[info]                  ·gc.alloc.rate:                   719.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     651.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson":
[info]   1603719.673 ±(99.9%) 31537.662 ops/s [Average]
[info]   (min, avg, max) = (1592905.290, 1603719.673, 1612538.201), stdev = 8190.231
[info]   CI (99.9%): [1572182.011, 1635257.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   717.648 ±(99.9%) 14.111 MB/sec [Average]
[info]   (min, avg, max) = (712.816, 717.648, 721.613), stdev = 3.665
[info]   CI (99.9%): [703.537, 731.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   704.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (704.000, 704.000, 704.000), stdev = 0.001
[info]   CI (99.9%): [704.000, 704.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   726.489 ±(99.9%) 561.826 MB/sec [Average]
[info]   (min, avg, max) = (653.781, 726.489, 987.364), stdev = 145.905
[info]   CI (99.9%): [164.663, 1288.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   712.325 ±(99.9%) 540.309 B/op [Average]
[info]   (min, avg, max) = (645.696, 712.325, 963.266), stdev = 140.317
[info]   CI (99.9%): [172.016, 1252.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.066 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.041), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 6.200, 12.000), stdev = 3.962
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 96.77% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3583355.789 ops/s
[info] # Warmup Iteration   2: 4054581.054 ops/s
[info] # Warmup Iteration   3: 4030588.691 ops/s
[info] # Warmup Iteration   4: 3985466.668 ops/s
[info] # Warmup Iteration   5: 4098317.210 ops/s
[info] Iteration   1: 4179036.745 ops/s
[info]                  ·gc.alloc.rate:                   340.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.804 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4135189.682 ops/s
[info]                  ·gc.alloc.rate:                   336.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 4138083.567 ops/s
[info]                  ·gc.alloc.rate:                   336.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4104268.359 ops/s
[info]                  ·gc.alloc.rate:               333.943 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 124.913 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 4127660.384 ops/s
[info]                  ·gc.alloc.rate:                   335.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter":
[info]   4136847.747 ±(99.9%) 104216.882 ops/s [Average]
[info]   (min, avg, max) = (4104268.359, 4136847.747, 4179036.745), stdev = 27064.793
[info]   CI (99.9%): [4032630.865, 4241064.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   336.578 ±(99.9%) 8.456 MB/sec [Average]
[info]   (min, avg, max) = (333.943, 336.578, 340.008), stdev = 2.196
[info]   CI (99.9%): [328.123, 345.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.811 ±(99.9%) 1.091 MB/sec [Average]
[info]   (min, avg, max) = (325.542, 325.811, 326.222), stdev = 0.283
[info]   CI (99.9%): [324.720, 326.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   123.910 ±(99.9%) 3.351 B/op [Average]
[info]   (min, avg, max) = (122.554, 123.910, 124.913), stdev = 0.870
[info]   CI (99.9%): [120.559, 127.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.444 ±(99.9%) 3.641 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.444, 2.135), stdev = 0.945
[info]   CI (99.9%): [≈ 0, 4.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.167 ±(99.9%) 1.370 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.167, 0.804), stdev = 0.356
[info]   CI (99.9%): [≈ 0, 1.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay
[info] # Run progress: 98.39% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 105710.817 ops/s
[info] # Warmup Iteration   2: 203797.721 ops/s
[info] # Warmup Iteration   3: 209159.411 ops/s
[info] # Warmup Iteration   4: 211793.319 ops/s
[info] # Warmup Iteration   5: 213620.011 ops/s
[info] Iteration   1: 211603.506 ops/s
[info]                  ·gc.alloc.rate:                   1101.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7345.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.465 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 208138.816 ops/s
[info]                  ·gc.alloc.rate:                   1083.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10008.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.944 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 211896.236 ops/s
[info]                  ·gc.alloc.rate:                   1103.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7414.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.773 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 212238.335 ops/s
[info]                  ·gc.alloc.rate:                   1105.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7436.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.309 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 209543.669 ops/s
[info]                  ·gc.alloc.rate:                   1091.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10084.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.469 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay":
[info]   210684.113 ±(99.9%) 6809.569 ops/s [Average]
[info]   (min, avg, max) = (208138.816, 210684.113, 212238.335), stdev = 1768.423
[info]   CI (99.9%): [203874.544, 217493.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1097.054 ±(99.9%) 35.394 MB/sec [Average]
[info]   (min, avg, max) = (1083.843, 1097.054, 1105.166), stdev = 9.192
[info]   CI (99.9%): [1061.660, 1132.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8192.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8192.002, 8192.002, 8192.002), stdev = 0.001
[info]   CI (99.9%): [8192.002, 8192.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1131.436 ±(99.9%) 711.644 MB/sec [Average]
[info]   (min, avg, max) = (987.942, 1131.436, 1343.119), stdev = 184.812
[info]   CI (99.9%): [419.793, 1843.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8457.920 ±(99.9%) 5586.345 B/op [Average]
[info]   (min, avg, max) = (7345.329, 8457.920, 10084.145), stdev = 1450.756
[info]   CI (99.9%): [2871.575, 14044.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.125), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.592 ±(99.9%) 0.998 B/op [Average]
[info]   (min, avg, max) = (0.309, 0.592, 0.944), stdev = 0.259
[info]   CI (99.9%): [≈ 0, 1.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 13.000), stdev = 4.159
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:16:39
[info] Benchmark                                                                         Mode  Cnt         Score         Error   Units
[info] JsonCodecBenchmark.readAnyRefsCirce                                              thrpt    5   1264740.106 ±   16542.290   ops/s
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate                               thrpt    5      1980.807 ±      26.020  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                          thrpt    5      2464.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1964.222 ±     570.936  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2443.194 ±     699.764    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.058 ±       0.088  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.073 ±       0.109    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.count                                    thrpt    5        29.000                counts
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.time                                     thrpt    5        47.000                    ms
[info] JsonCodecBenchmark.readAnyRefsJackson                                            thrpt    5   1651271.860 ±  943469.310   ops/s
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                             thrpt    5      1158.747 ±     661.995  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                        thrpt    5      1104.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1196.606 ±     739.540  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1140.702 ±     286.485    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.046 ±       0.132  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.049 ±       0.177    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.count                                  thrpt    5        18.000                counts
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.time                                   thrpt    5        40.000                    ms
[info] JsonCodecBenchmark.readAnyRefsJsoniter                                           thrpt    5   6395515.144 ±  127576.605   ops/s
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                            thrpt    5       813.025 ±      16.270  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                       thrpt    5       200.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       859.338 ±     697.944  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       211.533 ±     174.566    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.054 ±       0.156  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.013 ±       0.039    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.count                                 thrpt    5        13.000                counts
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.time                                  thrpt    5        13.000                    ms
[info] JsonCodecBenchmark.readAnyRefsPlay                                               thrpt    5    423020.717 ±    7755.527   ops/s
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                thrpt    5      1118.571 ±      20.364  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                           thrpt    5      4160.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1132.880 ±     713.168  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      4213.824 ±    2669.805    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.062 ±       0.127  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.232 ±       0.474    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.count                                     thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.time                                      thrpt    5        33.000                    ms
[info] JsonCodecBenchmark.readArraysCirce                                               thrpt    5    627043.744 ±   13986.408   ops/s
[info] JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate                                thrpt    5      2043.828 ±      45.547  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate.norm                           thrpt    5      5128.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                       thrpt    5      2036.254 ±      21.578  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5109.166 ±     148.394    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                   thrpt    5         0.054 ±       0.108  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.136 ±       0.271    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.count                                     thrpt    5        30.000                counts
[info] JsonCodecBenchmark.readArraysCirce:·gc.time                                      thrpt    5        58.000                    ms
[info] JsonCodecBenchmark.readArraysJackson                                             thrpt    5   1193527.795 ±   22114.414   ops/s
[info] JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate                              thrpt    5      1122.784 ±      20.774  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate.norm                         thrpt    5      1480.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                     thrpt    5      1139.828 ±     715.266  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5      1502.215 ±     934.618    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                 thrpt    5         0.012 ±       0.044  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.016 ±       0.058    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.count                                   thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readArraysJackson:·gc.time                                    thrpt    5        31.000                    ms
[info] JsonCodecBenchmark.readArraysJsoniter                                            thrpt    5   2481821.503 ±  142958.422   ops/s
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate                             thrpt    5      1135.784 ±      65.446  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                        thrpt    5       720.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5      1135.130 ±     723.325  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5       718.891 ±     434.567    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5         0.050 ±       0.044  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.032 ±       0.027    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.count                                  thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.time                                   thrpt    5        31.000                    ms
[info] JsonCodecBenchmark.readArraysPlay                                                thrpt    5    226534.698 ±    4706.292   ops/s
[info] JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate                                 thrpt    5      1341.999 ±      27.922  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate.norm                            thrpt    5      9320.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                        thrpt    5      1338.490 ±      40.908  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5      9295.782 ±     309.729    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                    thrpt    5         0.058 ±       0.105  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.405 ±       0.723    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.count                                      thrpt    5        20.000                counts
[info] JsonCodecBenchmark.readArraysPlay:·gc.time                                       thrpt    5        36.000                    ms
[info] JsonCodecBenchmark.readBitSetsJackson                                            thrpt    5   1601924.554 ±   52655.816   ops/s
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate                             thrpt    5      1018.230 ±      33.441  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                        thrpt    5      1000.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1063.469 ±     540.088  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1044.778 ±     543.424    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.029 ±       0.044  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.029 ±       0.043    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.count                                  thrpt    5        16.000                counts
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.time                                   thrpt    5        23.000                    ms
[info] JsonCodecBenchmark.readBitSetsJsoniter                                           thrpt    5   6252023.072 ±  112594.350   ops/s
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                            thrpt    5       667.624 ±      12.028  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                       thrpt    5       168.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       657.225 ±      13.000  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       165.389 ±       6.150    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.046 ±       0.088  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.012 ±       0.022    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.count                                 thrpt    5        10.000                counts
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.time                                  thrpt    5        13.000                    ms
[info] JsonCodecBenchmark.readBitSetsPlay                                               thrpt    5    246413.191 ±    5738.960   ops/s
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate                                thrpt    5      1118.932 ±      26.136  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                           thrpt    5      7144.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1131.173 ±     690.966  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      7226.007 ±    4530.234    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.050 ±       0.122  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.320 ±       0.783    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.count                                     thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.time                                      thrpt    5        48.000                    ms
[info] JsonCodecBenchmark.readExtractFieldsCirce                                        thrpt    5    556274.669 ±   10364.326   ops/s
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate                         thrpt    5      1847.111 ±      34.450  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                    thrpt    5      5224.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                thrpt    5      1830.652 ±     727.548  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm           thrpt    5      5178.985 ±    2128.455    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space            thrpt    5         0.062 ±       0.080  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.177 ±       0.228    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.count                              thrpt    5        27.000                counts
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.time                               thrpt    5        47.000                    ms
[info] JsonCodecBenchmark.readExtractFieldsJackson                                      thrpt    5    716145.360 ±   15561.503   ops/s
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate                       thrpt    5       888.712 ±      18.157  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                  thrpt    5      1952.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space              thrpt    5       927.553 ±     562.105  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm         thrpt    5      2038.026 ±    1251.287    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space          thrpt    5         0.021 ±       0.057  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.046 ±       0.124    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.count                            thrpt    5        14.000                counts
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.time                             thrpt    5        28.000                    ms
[info] JsonCodecBenchmark.readExtractFieldsJsoniter                                     thrpt    5   4082148.266 ±  197838.045   ops/s
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                      thrpt    5       186.821 ±       9.049  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                 thrpt    5        72.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space             thrpt    5       218.653 ±     484.774  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm        thrpt    5        84.506 ±     186.458    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space         thrpt    5         0.441 ±       3.801  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm    thrpt    5         0.168 ±       1.448    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.count                           thrpt    5         4.000                counts
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.time                            thrpt    5        14.000                    ms
[info] JsonCodecBenchmark.readExtractFieldsPlay                                         thrpt    5    192349.611 ±    2938.654   ops/s
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate                          thrpt    5       983.970 ±      15.133  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                     thrpt    5      8048.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                 thrpt    5       993.550 ±      30.047  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm            thrpt    5      8126.493 ±     294.676    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space             thrpt    5         0.042 ±       0.113  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.340 ±       0.922    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.count                               thrpt    5        15.000                counts
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.time                                thrpt    5        41.000                    ms
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter                                    thrpt    5   3044216.376 ±  104365.310   ops/s
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                     thrpt    5      1439.641 ±      49.264  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                thrpt    5       744.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space            thrpt    5      1479.323 ±     697.871  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm       thrpt    5       764.972 ±     378.101    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space        thrpt    5         0.050 ±       0.091  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.026 ±       0.047    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                          thrpt    5        22.000                counts
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                           thrpt    5        26.000                    ms
[info] JsonCodecBenchmark.readIntAndLongMapsPlay                                        thrpt    5    239689.242 ±    5917.440   ops/s
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                         thrpt    5      1288.272 ±      31.680  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                    thrpt    5      8456.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                thrpt    5      1270.753 ±     575.711  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm           thrpt    5      8337.911 ±    3665.547    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space            thrpt    5         0.042 ±       0.057  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.274 ±       0.376    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.count                              thrpt    5        19.000                counts
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.time                               thrpt    5        42.000                    ms
[info] JsonCodecBenchmark.readIterablesCirce                                            thrpt    5    550156.647 ±   38261.881   ops/s
[info] JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate                             thrpt    5      1933.116 ±     134.391  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm                        thrpt    5      5528.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                    thrpt    5      1899.333 ±     723.734  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm               thrpt    5      5429.456 ±    1938.560    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                thrpt    5         0.054 ±       0.122  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.156 ±       0.355    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.count                                  thrpt    5        28.000                counts
[info] JsonCodecBenchmark.readIterablesCirce:·gc.time                                   thrpt    5        66.000                    ms
[info] JsonCodecBenchmark.readIterablesJackson                                          thrpt    5    531129.903 ±    7560.088   ops/s
[info] JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate                           thrpt    5       540.159 ±       7.677  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                      thrpt    5      1600.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                  thrpt    5       526.123 ±     688.780  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm             thrpt    5      1558.314 ±    2038.744    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space              thrpt    5         0.029 ±       0.166  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.087 ±       0.495    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.count                                thrpt    5         8.000                counts
[info] JsonCodecBenchmark.readIterablesJackson:·gc.time                                 thrpt    5        17.000                    ms
[info] JsonCodecBenchmark.readIterablesJsoniter                                         thrpt    5   2959862.997 ±   64548.372   ops/s
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                          thrpt    5       737.485 ±      16.070  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                     thrpt    5       392.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                 thrpt    5       724.710 ±     561.068  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm            thrpt    5       385.145 ±     296.122    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space             thrpt    5         0.033 ±       0.091  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.018 ±       0.048    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.count                               thrpt    5        11.000                counts
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.time                                thrpt    5        21.000                    ms
[info] JsonCodecBenchmark.readIterablesPlay                                             thrpt    5    166739.883 ±    2972.466   ops/s
[info] JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate                              thrpt    5      1142.111 ±      20.299  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                         thrpt    5     10776.003 ±       0.001    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                     thrpt    5      1132.731 ±     725.133  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                thrpt    5     10685.324 ±    6769.714    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                 thrpt    5         0.046 ±       0.105  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.432 ±       0.983    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.count                                   thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readIterablesPlay:·gc.time                                    thrpt    5        38.000                    ms
[info] JsonCodecBenchmark.readMapsCirce                                                 thrpt    5    465304.418 ±   14251.704   ops/s
[info] JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate                                  thrpt    5      1653.884 ±      50.678  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate.norm                             thrpt    5      5592.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                         thrpt    5      1691.353 ±      28.782  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5718.947 ±     184.543    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                     thrpt    5         0.029 ±       0.072  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.099 ±       0.244    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.count                                       thrpt    5        25.000                counts
[info] JsonCodecBenchmark.readMapsCirce:·gc.time                                        thrpt    5        26.000                    ms
[info] JsonCodecBenchmark.readMapsJackson                                               thrpt    5    904356.800 ±    9815.128   ops/s
[info] JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate                                thrpt    5      1066.886 ±      11.628  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1856.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1071.844 ±     579.453  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1864.885 ±    1018.098    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.058 ±       0.200  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.101 ±       0.346    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.count                                     thrpt    5        16.000                counts
[info] JsonCodecBenchmark.readMapsJackson:·gc.time                                      thrpt    5        22.000                    ms
[info] JsonCodecBenchmark.readMapsJsoniter                                              thrpt    5   3283092.657 ±   48402.554   ops/s
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate                               thrpt    5       818.020 ±      12.012  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       392.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       859.196 ±     697.974  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       411.846 ±     336.797    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.050 ±       0.091  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.024 ±       0.044    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.count                                    thrpt    5        13.000                counts
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.time                                     thrpt    5        22.000                    ms
[info] JsonCodecBenchmark.readMapsPlay                                                  thrpt    5    252963.365 ±    6983.134   ops/s
[info] JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate                                   thrpt    5      1321.241 ±      36.416  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                              thrpt    5      8216.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1272.120 ±     574.987  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      7910.288 ±    3565.261    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.050 ±       0.044  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.310 ±       0.266    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.count                                        thrpt    5        19.000                counts
[info] JsonCodecBenchmark.readMapsPlay:·gc.time                                         thrpt    5        35.000                    ms
[info] JsonCodecBenchmark.readMutableMapsJackson                                        thrpt    5    701985.350 ±   14145.642   ops/s
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                         thrpt    5       910.250 ±      18.353  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                    thrpt    5      2040.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                thrpt    5       932.580 ±     580.664  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5      2090.651 ±    1314.661    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.037 ±       0.154  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.084 ±       0.344    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.count                              thrpt    5        14.000                counts
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.time                               thrpt    5        39.000                    ms
[info] JsonCodecBenchmark.readMutableMapsJsoniter                                       thrpt    5   2439541.053 ±   30148.534   ops/s
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                        thrpt    5      1662.243 ±      20.596  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                   thrpt    5      1072.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space               thrpt    5      1687.007 ±      38.466  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5      1087.996 ±      37.887    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.071 ±       0.091  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.046 ±       0.059    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.count                             thrpt    5        25.000                counts
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.time                              thrpt    5        44.000                    ms
[info] JsonCodecBenchmark.readMutableMapsPlay                                           thrpt    5    223168.024 ±    4778.717   ops/s
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                            thrpt    5      1175.658 ±      25.084  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                       thrpt    5      8288.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1134.484 ±     705.458  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8001.159 ±    5077.424    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.058 ±       0.105  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.412 ±       0.747    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.count                                 thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.time                                  thrpt    5        37.000                    ms
[info] JsonCodecBenchmark.readPrimitivesCirce                                           thrpt    5    446012.971 ±   74309.274   ops/s
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate                            thrpt    5      1319.945 ±     219.979  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                       thrpt    5      4656.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                   thrpt    5      1346.597 ±      28.714  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm              thrpt    5      4757.711 ±     860.974    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space               thrpt    5         0.042 ±       0.080  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.146 ±       0.270    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.count                                 thrpt    5        20.000                counts
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.time                                  thrpt    5        30.000                    ms
[info] JsonCodecBenchmark.readPrimitivesJackson                                         thrpt    5   1023258.355 ±   28423.926   ops/s
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                          thrpt    5       775.278 ±      21.546  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                     thrpt    5      1192.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       792.287 ±     703.922  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5      1219.407 ±    1109.863    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.021 ±       0.139  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.032 ±       0.215    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.count                               thrpt    5        12.000                counts
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.time                                thrpt    5        25.000                    ms
[info] JsonCodecBenchmark.readPrimitivesJsoniter                                        thrpt    5   3128585.010 ±   14822.929   ops/s
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                         thrpt    5        95.454 ±       0.459  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                    thrpt    5        48.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5        51.180 ±     440.677  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5        25.779 ±     221.969    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.count                              thrpt    5         1.000                counts
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.time                               thrpt    5         4.000                    ms
[info] JsonCodecBenchmark.readPrimitivesPlay                                            thrpt    5    159832.486 ±    3328.675   ops/s
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                             thrpt    5      1059.819 ±      22.074  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                        thrpt    5     10432.003 ±       0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1064.113 ±     597.348  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5     10481.025 ±    6137.345    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.037 ±       0.105  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.369 ±       1.027    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.count                                  thrpt    5        16.000                counts
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.time                                   thrpt    5        31.000                    ms
[info] JsonCodecBenchmark.writeAnyRefsCirce                                             thrpt    5   1291183.195 ±   58748.300   ops/s
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate                              thrpt    5      1444.469 ±      65.807  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                         thrpt    5      1760.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                     thrpt    5      1417.557 ±     585.800  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                thrpt    5      1726.956 ±     693.999    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                 thrpt    5         0.033 ±       0.072  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.041 ±       0.088    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.count                                   thrpt    5        21.000                counts
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.time                                    thrpt    5        44.000                    ms
[info] JsonCodecBenchmark.writeAnyRefsJackson                                           thrpt    5   3885077.766 ±   90004.371   ops/s
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                            thrpt    5      1066.798 ±      24.699  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                       thrpt    5       432.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1070.244 ±     567.226  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       433.190 ±     220.720    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.021 ±       0.098  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.008 ±       0.039    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.count                                 thrpt    5        16.000                counts
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.time                                  thrpt    5        28.000                    ms
[info] JsonCodecBenchmark.writeAnyRefsJsoniter                                          thrpt    5  14136418.480 ± 1392932.589   ops/s
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                           thrpt    5       431.336 ±      42.484  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                      thrpt    5        48.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       391.620 ±     561.556  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5        43.914 ±      68.561    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.029 ±       0.209  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.003 ±       0.024    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.count                                thrpt    5         6.000                counts
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.time                                 thrpt    5        15.000                    ms
[info] JsonCodecBenchmark.writeAnyRefsPlay                                              thrpt    5    826858.927 ±   23399.755   ops/s
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                               thrpt    5      1223.624 ±      34.581  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                          thrpt    5      2328.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1270.065 ±     574.710  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2416.626 ±    1101.042    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.054 ±       0.072  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.103 ±       0.140    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.count                                    thrpt    5        19.000                counts
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.time                                     thrpt    5        40.000                    ms
[info] JsonCodecBenchmark.writeArraysCirce                                              thrpt    5    568130.819 ±  346418.629   ops/s
[info] JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate                               thrpt    5      1372.330 ±     836.879  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm                          thrpt    5      3800.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1349.769 ±    1278.524  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      3694.932 ±    1294.958    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.029 ±       0.044  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.079 ±       0.076    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.count                                    thrpt    5        20.000                counts
[info] JsonCodecBenchmark.writeArraysCirce:·gc.time                                     thrpt    5        54.000                    ms
[info] JsonCodecBenchmark.writeArraysJackson                                            thrpt    5   2114548.084 ± 1276279.136   ops/s
[info] JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate                             thrpt    5      1225.851 ±     739.789  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm                        thrpt    5       912.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1211.747 ±     732.033  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5       902.793 ±     246.684    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.025 ±       0.067  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.017 ±       0.042    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.count                                  thrpt    5        18.000                counts
[info] JsonCodecBenchmark.writeArraysJackson:·gc.time                                   thrpt    5        38.000                    ms
[info] JsonCodecBenchmark.writeArraysJsoniter                                           thrpt    5   4059331.601 ±  119890.573   ops/s
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate                            thrpt    5      1114.646 ±      32.966  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                       thrpt    5       432.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1133.493 ±     693.829  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       439.291 ±     268.077    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.046 ±       0.067  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.018 ±       0.026    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.count                                 thrpt    5        17.000                counts
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.time                                  thrpt    5        40.000                    ms
[info] JsonCodecBenchmark.writeArraysPlay                                               thrpt    5    344816.256 ±    7533.128   ops/s
[info] JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate                                thrpt    5      1230.866 ±      26.870  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm                           thrpt    5      5616.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1201.931 ±     695.626  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5487.460 ±    3275.553    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.054 ±       0.091  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.247 ±       0.419    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.count                                     thrpt    5        18.000                counts
[info] JsonCodecBenchmark.writeArraysPlay:·gc.time                                      thrpt    5        32.000                    ms
[info] JsonCodecBenchmark.writeBitSetsJackson                                           thrpt    5   2647404.893 ±  124143.544   ops/s
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                            thrpt    5      1130.807 ±      52.974  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                       thrpt    5       672.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1140.149 ±     714.624  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       678.141 ±     441.570    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.029 ±       0.091  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.017 ±       0.054    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.count                                 thrpt    5        17.000                counts
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.time                                  thrpt    5        53.000                    ms
[info] JsonCodecBenchmark.writeBitSetsJsoniter                                          thrpt    5   3958872.668 ±  112742.983   ops/s
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                           thrpt    5       724.704 ±      20.629  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                      thrpt    5       288.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       724.576 ±     553.376  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5       288.047 ±     222.659    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.037 ±       0.105  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.015 ±       0.041    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.count                                thrpt    5        11.000                counts
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.time                                 thrpt    5        39.000                    ms
[info] JsonCodecBenchmark.writeBitSetsPlay                                              thrpt    5    497242.171 ±    9140.580   ops/s
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate                               thrpt    5      1471.561 ±      27.118  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                          thrpt    5      4656.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1477.146 ±     685.294  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      4673.085 ±    2141.006    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.054 ±       0.166  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.171 ±       0.522    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.count                                    thrpt    5        22.000                counts
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.time                                     thrpt    5        34.000                    ms
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson                                    thrpt    5   1028059.092 ±   44290.771   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                     thrpt    5      1270.322 ±      54.657  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                thrpt    5      1944.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space            thrpt    5      1209.651 ±     711.855  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm       thrpt    5      1850.695 ±    1073.277    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space        thrpt    5         0.058 ±       0.105  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.089 ±       0.160    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.count                          thrpt    5        18.000                counts
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.time                           thrpt    5        31.000                    ms
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter                                   thrpt    5   2304686.204 ±   13698.220   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                    thrpt    5       445.336 ±       2.641  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm               thrpt    5       304.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space           thrpt    5       457.165 ±     690.479  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm      thrpt    5       312.064 ±     471.182    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space       thrpt    5         0.025 ±       0.174  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.017 ±       0.119    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                         thrpt    5         7.000                counts
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                          thrpt    5        19.000                    ms
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay                                       thrpt    5    250115.735 ±    8614.499   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                        thrpt    5       980.585 ±      33.805  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                   thrpt    5      6168.002 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space               thrpt    5       993.551 ±      30.056  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm          thrpt    5      6249.654 ±     107.012    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space           thrpt    5         0.042 ±       0.098  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.262 ±       0.623    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.count                             thrpt    5        15.000                counts
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.time                              thrpt    5        34.000                    ms
[info] JsonCodecBenchmark.writeIterablesCirce                                           thrpt    5    609731.766 ±    8172.483   ops/s
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate                            thrpt    5      1562.685 ±      20.901  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                       thrpt    5      4032.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                   thrpt    5      1554.644 ±     710.943  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm              thrpt    5      4011.441 ±    1840.791    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space               thrpt    5         0.029 ±       0.044  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.075 ±       0.114    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.count                                 thrpt    5        23.000                counts
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.time                                  thrpt    5        47.000                    ms
[info] JsonCodecBenchmark.writeIterablesJackson                                         thrpt    5   1188409.203 ±   36597.614   ops/s
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate                          thrpt    5       731.196 ±      22.520  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                     thrpt    5       968.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       728.582 ±     587.058  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5       964.486 ±     774.487    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.012 ±       0.044  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.017 ±       0.058    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.count                               thrpt    5        11.000                counts
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.time                                thrpt    5        19.000                    ms
[info] JsonCodecBenchmark.writeIterablesJsoniter                                        thrpt    5   4545962.333 ±  161809.870   ops/s
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                         thrpt    5       763.006 ±      25.950  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                    thrpt    5       264.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       790.834 ±     692.047  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       273.417 ±     234.424    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.050 ±       0.091  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.017 ±       0.032    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.count                              thrpt    5        12.000                counts
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.time                               thrpt    5        34.000                    ms
[info] JsonCodecBenchmark.writeIterablesPlay                                            thrpt    5    372887.870 ±    5876.675   ops/s
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate                             thrpt    5      1276.084 ±      20.134  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                        thrpt    5      5384.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1271.163 ±     587.808  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5      5364.923 ±    2534.187    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.046 ±       0.105  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.193 ±       0.442    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.count                                  thrpt    5        19.000                counts
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.time                                   thrpt    5        36.000                    ms
[info] JsonCodecBenchmark.writeMapsCirce                                                thrpt    5    348843.912 ±    5299.913   ops/s
[info] JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate                                 thrpt    5      1027.059 ±      15.557  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm                            thrpt    5      4632.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                        thrpt    5       997.807 ±      31.361  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5      4500.184 ±     182.622    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                    thrpt    5         0.021 ±       0.057  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.094 ±       0.255    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.count                                      thrpt    5        15.000                counts
[info] JsonCodecBenchmark.writeMapsCirce:·gc.time                                       thrpt    5        16.000                    ms
[info] JsonCodecBenchmark.writeMapsJackson                                              thrpt    5   1034377.828 ±   19243.926   ops/s
[info] JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate                               thrpt    5      1072.995 ±      20.019  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                          thrpt    5      1632.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                      thrpt    5      1071.044 ±     566.849  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                 thrpt    5      1628.545 ±     841.265    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                  thrpt    5         0.037 ±       0.067  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.057 ±       0.103    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.count                                    thrpt    5        16.000                counts
[info] JsonCodecBenchmark.writeMapsJackson:·gc.time                                     thrpt    5        41.000                    ms
[info] JsonCodecBenchmark.writeMapsJsoniter                                             thrpt    5   2313537.384 ±   34035.811   ops/s
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                              thrpt    5       552.907 ±       8.013  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                         thrpt    5       376.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5       589.229 ±     564.941  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5       400.873 ±     386.362    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.058 ±       0.154  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.040 ±       0.105    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.count                                   thrpt    5         9.000                counts
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.time                                    thrpt    5        18.000                    ms
[info] JsonCodecBenchmark.writeMapsPlay                                                 thrpt    5    256622.572 ±    3677.821   ops/s
[info] JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate                                  thrpt    5       936.936 ±      13.454  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                             thrpt    5      5744.002 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                         thrpt    5       926.700 ±     577.393  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5682.057 ±    3557.027    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.033 ±       0.072  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.204 ±       0.438    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.count                                       thrpt    5        14.000                counts
[info] JsonCodecBenchmark.writeMapsPlay:·gc.time                                        thrpt    5        29.000                    ms
[info] JsonCodecBenchmark.writeMutableMapsCirce                                         thrpt    5    351995.514 ±    6343.648   ops/s
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate                          thrpt    5      1027.399 ±      18.543  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                     thrpt    5      4592.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                 thrpt    5      1002.408 ±      25.163  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm            thrpt    5      4480.428 ±     163.771    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space             thrpt    5         0.017 ±       0.067  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.074 ±       0.299    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.count                               thrpt    5        15.000                counts
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.time                                thrpt    5        33.000                    ms
[info] JsonCodecBenchmark.writeMutableMapsJackson                                       thrpt    5   1046971.760 ±   10964.478   ops/s
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                        thrpt    5      1038.147 ±      10.912  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                   thrpt    5      1560.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space               thrpt    5      1003.687 ±      24.272  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm          thrpt    5      1508.237 ±      46.333    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space           thrpt    5         0.042 ±       0.098  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.063 ±       0.148    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.count                             thrpt    5        15.000                counts
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.time                              thrpt    5        33.000                    ms
[info] JsonCodecBenchmark.writeMutableMapsJsoniter                                      thrpt    5   2020588.841 ±   28091.394   ops/s
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                       thrpt    5       493.179 ±       6.841  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                  thrpt    5       384.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space              thrpt    5       522.462 ±     689.299  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm         thrpt    5       407.145 ±     540.908    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space          thrpt    5         0.029 ±       0.156  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.023 ±       0.122    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.count                            thrpt    5         8.000                counts
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.time                             thrpt    5        19.000                    ms
[info] JsonCodecBenchmark.writeMutableMapsPlay                                          thrpt    5    253933.354 ±    7657.949   ops/s
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                           thrpt    5       977.471 ±      29.458  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                      thrpt    5      6056.002 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                  thrpt    5       993.284 ±      30.317  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm             thrpt    5      6154.468 ±     338.047    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space              thrpt    5         0.037 ±       0.088  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.232 ±       0.537    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.count                                thrpt    5        15.000                counts
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.time                                 thrpt    5        41.000                    ms
[info] JsonCodecBenchmark.writePrimitivesCirce                                          thrpt    5    638197.505 ±   22390.389   ops/s
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate                           thrpt    5      1249.432 ±      43.784  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                      thrpt    5      3080.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                  thrpt    5      1277.193 ±     578.200  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm             thrpt    5      3147.808 ±    1401.559    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space              thrpt    5         0.021 ±       0.057  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.051 ±       0.139    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.count                                thrpt    5        19.000                counts
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.time                                 thrpt    5        34.000                    ms
[info] JsonCodecBenchmark.writePrimitivesJackson                                        thrpt    5   1603719.673 ±   31537.662   ops/s
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                         thrpt    5       717.648 ±      14.111  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                    thrpt    5       704.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                thrpt    5       726.489 ±     561.826  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5       712.325 ±     540.309    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.025 ±       0.067  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.025 ±       0.066    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.count                              thrpt    5        11.000                counts
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.time                               thrpt    5        31.000                    ms
[info] JsonCodecBenchmark.writePrimitivesJsoniter                                       thrpt    5   4136847.747 ±  104216.882   ops/s
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                        thrpt    5       336.578 ±       8.456  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                   thrpt    5       128.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space               thrpt    5       325.811 ±       1.091  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5       123.910 ±       3.351    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.444 ±       3.641  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.167 ±       1.370    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.count                             thrpt    5         5.000                counts
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.time                              thrpt    5         6.000                    ms
[info] JsonCodecBenchmark.writePrimitivesPlay                                           thrpt    5    210684.113 ±    6809.569   ops/s
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                            thrpt    5      1097.054 ±      35.394  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                       thrpt    5      8192.002 ±       0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1131.436 ±     711.644  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8457.920 ±    5586.345    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.079 ±       0.132  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.592 ±       0.998    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.count                                 thrpt    5        17.000                counts
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.time                                  thrpt    5        42.000                    ms
[success] Total time: 1034 s, completed Nov 2, 2017 1:40:05 AM
