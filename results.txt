[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Nov 20, 2017 9:21:46 AM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 4 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:208:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] one warning found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:60:81: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "i");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.MissingReqFields(s = _s, i = _i)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val missingReqFieldCodec: JsonCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:62:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.AnyRefs = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "bd");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1868115770 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         _bd = in.readBigDecimal(_bd);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 135249149 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           {
[info]             val v = x.os;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "os");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:64:52: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Arrays = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = e0(x, out);
[info]       private val v0: Array[Array[Int]] = new Array[Array[Int]](0);
[info]       private val v1: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private val v2: Array[Int] = new Array[Int](0);
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _aa: Array[Array[Int]] = v0;
[info]           var _a: Array[BigInt] = v1;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1396692260 => if (in.isCharBufEqualsTo(l, "aa"))
[info]                       _aa = d1(in, _aa)
[info]                     else
[info]                       in.skip()
[info]                     case 272946562 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       _a = d3(in, _a)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d3(in: JsonReader, default: Array[BigInt]): Array[BigInt] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               x.+=(in.readBigInt(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               x.+=(d2(in, v2))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: Array[Int]): Array[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.aa;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 c = out.writeObjectField(c, "aa");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.a;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 c = out.writeObjectField(c, "a");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: Array[Array[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             e2(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = make[Arrays](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:66:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.BitSets = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = e0(x, out);
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -311899171 => if (in.isCharBufEqualsTo(l, "bs"))
[info]                       _bs = d1(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 395882128 => if (in.isCharBufEqualsTo(l, "mbs"))
[info]                       _mbs = d2(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               BitSet.empty;
[info]             do 
[info]               x.add(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = BitSet.newBuilder;
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.bs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "bs");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mbs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mbs");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = make[BitSets](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:68:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Iterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 753022030 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d3(in: JsonReader, default: List[Set[Int]]): List[Set[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               x.+=(d2(in, Set.empty[Int]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: List[String]): List[String] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: List[Set[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e2(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: List[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = make[Iterables](CodecMakerConfig())
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:70:46: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Maps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsInt(), d3(in, HashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[Long, Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[String, Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.HashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = make[Maps](CodecMakerConfig())
[info]                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:72:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.MutableMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               x.update(in.readObjectFieldAsInt(), d3(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               OpenHashMap.empty[Long, Double];
[info]             do 
[info]               x.update(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               HashMap.empty[String, Double];
[info]             do 
[info]               x.update(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.OpenHashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.mutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = make[MutableMaps](CodecMakerConfig())
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:74:76: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               x.update(in.readObjectFieldAsLong(), d3(in, LongMap.empty[Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = LongMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsInt(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.LongMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.IntMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = make[IntAndLongMaps](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:76:64: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Primitives = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 255;
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 479329913 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readByte();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readShort();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -986815646 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         _bl = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1128364876 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         _ch = in.readChar();
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 977778859 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         _dbl = in.readDouble();
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2108804597 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         _f = in.readFloat();
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:78:73: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.ExtractFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "l");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:460:62: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("status");
[info]       private val r1: Array[String] = Array("distance", "duration", "status");
[info]       private val r2: Array[String] = Array("text", "value");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 1;
[info]           var _destination_addresses: Seq[String] = Seq.empty[String];
[info]           var _origin_addresses: Seq[String] = Seq.empty[String];
[info]           var _rows: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows];
[info]           var _status: String = null;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -553105946 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       _destination_addresses = d1(in, _destination_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 14144516 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       _origin_addresses = d1(in, _origin_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case -11755678 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       _rows = d2(in, _rows)
[info]                     else
[info]                       in.skip()
[info]                     case -270730887 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows]): Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _elements: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -1690673754 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       _elements = d4(in, _elements)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows(elements = _elements)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements]): Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 7;
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = null;
[info]           var _status: String = null;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -1882203379 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         _distance = d6(in, _distance);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -739937554 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         _duration = d6(in, _duration);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -270730887 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements(distance = _distance, duration = _duration, status = _status)
[info]           else
[info]             in.requiredObjectFieldError(r1, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1749161762 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -854843732 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         _value = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value(text = _text, value = _value)
[info]           else
[info]             in.requiredObjectFieldError(r2, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: Seq[String]): Seq[String] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.destination_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "destination_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.origin_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "origin_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.rows;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "rows");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e3(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.elements;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "elements");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "distance");
[info]             e6(x.distance, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "duration");
[info]             e6(x.duration, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e6(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "value");
[info]             out.writeVal(x.value)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val codec: JsonCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:602:54: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet];
[info]       def decode(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = d0(in, default);
[info]       def encode(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "lang");
[info]       private val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private val r4: Array[String] = Array("url", "description");
[info]       private val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "lang");
[info]       private def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 32767;
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Option[Boolean] = None;
[info]           var _lang: String = null;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -165119785 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1749161762 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -957169247 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1962218059 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1722056278 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -56041286 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -685957369 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1195124586 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1480131160 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -836182436 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1249433185 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d9(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -779037686 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1764808365 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -232934172 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 2116377836 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -350359215 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         _retweeted_status = d12(in, _retweeted_status);
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1834482941 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1363420571 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1279943733 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -941232733 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -41089286 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -724879728 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       _possibly_sensitive = Option(in.readBoolean())
[info]                     else
[info]                       in.skip()
[info]                     case -1733553572 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 16383;
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Option[Boolean] = None;
[info]           var _lang: String = null;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -165119785 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1749161762 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -957169247 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1962218059 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1722056278 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -56041286 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -685957369 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1195124586 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1480131160 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -836182436 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1249433185 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d9(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -779037686 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1764808365 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -232934172 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 2116377836 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1834482941 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1363420571 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1279943733 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -941232733 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -41089286 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -724879728 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       _possibly_sensitive = Option(in.readBoolean())
[info]                     else
[info]                       in.skip()
[info]                     case -1733553572 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredObjectFieldError(r5, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = -1;
[info]           var req1 = 1023;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1198843867 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 985531917 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1994874891 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         _location = in.readString(_location);
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -626201443 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = in.readString(_description);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -64069972 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1962218059 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d10(in, _entities);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -422319283 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         _protected = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1231204836 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         _followers_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1565337738 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         _friends_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -903425777 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         _listed_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -165119785 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1481771385 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         _favourites_count = in.readInt();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1617333980 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         _utc_offset = in.readInt();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1034472816 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         _time_zone = in.readString(_time_zone);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1096575944 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         _geo_enabled = in.readBoolean();
[info]                         req0.&=(-65537)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1766340764 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         _verified = in.readBoolean();
[info]                         req0.&=(-131073)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 656981833 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         _statuses_count = in.readInt();
[info]                         req0.&=(-262145)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1733553572 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-524289)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1692587979 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         _contributors_enabled = in.readBoolean();
[info]                         req0.&=(-1048577)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -761280539 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         _is_translator = in.readBoolean();
[info]                         req0.&=(-2097153)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1523152584 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         _is_translation_enabled = in.readBoolean();
[info]                         req0.&=(-4194305)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1042811670 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         _profile_background_color = in.readString(_profile_background_color);
[info]                         req0.&=(-8388609)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1322051899 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url);
[info]                         req0.&=(-16777217)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 430342393 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https);
[info]                         req0.&=(-33554433)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1547487212 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         _profile_background_tile = in.readBoolean();
[info]                         req0.&=(-67108865)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -738485249 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         _profile_image_url = in.readString(_profile_image_url);
[info]                         req0.&=(-134217729)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -869817957 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https);
[info]                         req0.&=(-268435457)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1479864213 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         _profile_banner_url = in.readString(_profile_banner_url);
[info]                         req0.&=(-536870913)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 892046337 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         _profile_link_color = in.readString(_profile_link_color);
[info]                         req0.&=(-1073741825)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1815398146 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color);
[info]                         req0.&=(2147483647)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1854913126 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color);
[info]                         req1.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1700955824 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         _profile_text_color = in.readString(_profile_text_color);
[info]                         req1.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2002464660 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         _profile_use_background_image = in.readBoolean();
[info]                         req1.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 196017265 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         _has_extended_profile = in.readBoolean();
[info]                         req1.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1725122937 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         _default_profile = in.readBoolean();
[info]                         req1.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1346866717 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         _default_profile_image = in.readBoolean();
[info]                         req1.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1251129302 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         _following = in.readBoolean();
[info]                         req1.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1343246339 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         _follow_request_sent = in.readBoolean();
[info]                         req1.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 929396071 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         _notifications = in.readBoolean();
[info]                         req1.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 356376530 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         _translator_type = in.readString(_translator_type);
[info]                         req1.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0).&&(req1.==(0)))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]           else
[info]             in.requiredObjectFieldError(r3, req0, req1)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = null;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -64069972 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = d11(in, _url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -626201443 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = d11(in, _description);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities(url = _url, description = _description)
[info]           else
[info]             in.requiredObjectFieldError(r4, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -1327041850 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url(urls = _urls)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -1567327321 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       _hashtags = d3(in, _hashtags)
[info]                     else
[info]                       in.skip()
[info]                     case -2118257363 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       _symbols = d3(in, _symbols)
[info]                     else
[info]                       in.skip()
[info]                     case -560369018 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       _user_mentions = d4(in, _user_mentions)
[info]                     else
[info]                       in.skip()
[info]                     case -1327041850 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 7;
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -64069972 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1125392404 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         _expanded_url = in.readString(_expanded_url);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -758822041 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         _display_url = in.readString(_display_url);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1070335372 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]           else
[info]             in.requiredObjectFieldError(r2, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 15;
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 985531917 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1198843867 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1070335372 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]           else
[info]             in.requiredObjectFieldError(r1, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d3(in: JsonReader, default: Seq[String]): Seq[String] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweeted_status");
[info]             e13(x.retweeted_status, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             val v = x.possibly_sensitive;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "possibly_sensitive");
[info]                 e14(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e13(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             val v = x.possibly_sensitive;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "possibly_sensitive");
[info]                 e14(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e14(x: Option[Boolean], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e10(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "location");
[info]             out.writeVal(x.location)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "description");
[info]             out.writeVal(x.description)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "entities");
[info]             e11(x.entities, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "protected");
[info]             out.writeVal(x.`protected`)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "followers_count");
[info]             out.writeVal(x.followers_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "friends_count");
[info]             out.writeVal(x.friends_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "listed_count");
[info]             out.writeVal(x.listed_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favourites_count");
[info]             out.writeVal(x.favourites_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "utc_offset");
[info]             out.writeVal(x.utc_offset)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "time_zone");
[info]             out.writeVal(x.time_zone)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "geo_enabled");
[info]             out.writeVal(x.geo_enabled)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "verified");
[info]             out.writeVal(x.verified)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "statuses_count");
[info]             out.writeVal(x.statuses_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "contributors_enabled");
[info]             out.writeVal(x.contributors_enabled)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "is_translator");
[info]             out.writeVal(x.is_translator)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "is_translation_enabled");
[info]             out.writeVal(x.is_translation_enabled)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_background_color");
[info]             out.writeVal(x.profile_background_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_background_image_url");
[info]             out.writeVal(x.profile_background_image_url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_background_image_url_https");
[info]             out.writeVal(x.profile_background_image_url_https)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_background_tile");
[info]             out.writeVal(x.profile_background_tile)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_image_url");
[info]             out.writeVal(x.profile_image_url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_image_url_https");
[info]             out.writeVal(x.profile_image_url_https)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_banner_url");
[info]             out.writeVal(x.profile_banner_url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_link_color");
[info]             out.writeVal(x.profile_link_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_sidebar_border_color");
[info]             out.writeVal(x.profile_sidebar_border_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_sidebar_fill_color");
[info]             out.writeVal(x.profile_sidebar_fill_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_text_color");
[info]             out.writeVal(x.profile_text_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_use_background_image");
[info]             out.writeVal(x.profile_use_background_image)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "has_extended_profile");
[info]             out.writeVal(x.has_extended_profile)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "default_profile");
[info]             out.writeVal(x.default_profile)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "default_profile_image");
[info]             out.writeVal(x.default_profile_image)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "following");
[info]             out.writeVal(x.following)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "follow_request_sent");
[info]             out.writeVal(x.follow_request_sent)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "notifications");
[info]             out.writeVal(x.notifications)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "translator_type");
[info]             out.writeVal(x.translator_type)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e11(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "url");
[info]             e12(x.url, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "description");
[info]             e12(x.description, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e12(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e9(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.hashtags;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "hashtags");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.symbols;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "symbols");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.user_mentions;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "user_mentions");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e8(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "expanded_url");
[info]             out.writeVal(x.expanded_url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "display_url");
[info]             out.writeVal(x.display_url)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val codec: JsonCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                      ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:455:23: local val format3 in value format is never used
[warn]     implicit lazy val format3 = Json.format[Value]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:456:23: local val format2 in value format is never used
[warn]     implicit lazy val format2 = Json.format[Elements]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:457:23: local val format1 in value format is never used
[warn]     implicit lazy val format1 = Json.format[Rows]
[warn]                       ^
[warn] three warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 215 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 86 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecMakerBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce
[info] # Run progress: 0.00% complete, ETA 00:13:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 808057.465 ops/s
[info] # Warmup Iteration   2: 1194640.845 ops/s
[info] # Warmup Iteration   3: 1236680.855 ops/s
[info] # Warmup Iteration   4: 1223981.968 ops/s
[info] # Warmup Iteration   5: 1270316.766 ops/s
[info] Iteration   1: 1256470.903 ops/s
[info]                  ·gc.alloc.rate:                   2057.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              2576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2538.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1241866.796 ops/s
[info]                  ·gc.alloc.rate:                   2033.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              2576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2576.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 1254835.166 ops/s
[info]                  ·gc.alloc.rate:                   2054.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              2576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2554.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1262906.968 ops/s
[info]                  ·gc.alloc.rate:                   2067.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              2576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2540.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1249699.938 ops/s
[info]                  ·gc.alloc.rate:                   2046.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              2576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2042.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2571.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce":
[info]   1253155.954 ±(99.9%) 30337.114 ops/s [Average]
[info]   (min, avg, max) = (1241866.796, 1253155.954, 1262906.968), stdev = 7878.452
[info]   CI (99.9%): [1222818.840, 1283493.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate":
[info]   2051.844 ±(99.9%) 49.663 MB/sec [Average]
[info]   (min, avg, max) = (2033.355, 2051.844, 2067.810), stdev = 12.897
[info]   CI (99.9%): [2002.180, 2101.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm":
[info]   2576.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2576.000, 2576.000, 2576.000), stdev = 0.001
[info]   CI (99.9%): [2576.000, 2576.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space":
[info]   2036.096 ±(99.9%) 22.564 MB/sec [Average]
[info]   (min, avg, max) = (2027.196, 2036.096, 2042.496), stdev = 5.860
[info]   CI (99.9%): [2013.532, 2058.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2556.310 ±(99.9%) 67.239 B/op [Average]
[info]   (min, avg, max) = (2538.339, 2556.310, 2576.642), stdev = 17.462
[info]   CI (99.9%): [2489.071, 2623.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.079 ±(99.9%) 0.102 B/op [Average]
[info]   (min, avg, max) = (0.052, 0.079, 0.106), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.000, 14.000), stdev = 2.345
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson
[info] # Run progress: 1.22% complete, ETA 00:22:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 88875.036 ops/s
[info] # Warmup Iteration   2: 212032.441 ops/s
[info] # Warmup Iteration   3: 213346.564 ops/s
[info] # Warmup Iteration   4: 213483.685 ops/s
[info] # Warmup Iteration   5: 213346.820 ops/s
[info] Iteration   1: 214173.998 ops/s
[info]                  ·gc.alloc.rate:               504.269 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      319.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2347.324 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 211066.642 ops/s
[info]                  ·gc.alloc.rate:                   496.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4793.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.776 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 209182.639 ops/s
[info]                  ·gc.alloc.rate:               492.503 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2433.385 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 198720.468 ops/s
[info]                  ·gc.alloc.rate:                   467.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5136.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.660 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 205846.116 ops/s
[info]                  ·gc.alloc.rate:               484.649 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2485.586 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson":
[info]   207797.973 ±(99.9%) 22737.232 ops/s [Average]
[info]   (min, avg, max) = (198720.468, 207797.973, 214173.998), stdev = 5904.787
[info]   CI (99.9%): [185060.740, 230535.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate":
[info]   489.245 ±(99.9%) 53.573 MB/sec [Average]
[info]   (min, avg, max) = (467.856, 489.245, 504.269), stdev = 13.913
[info]   CI (99.9%): [435.672, 542.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm":
[info]   3704.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3704.002, 3704.002, 3704.002), stdev = 0.001
[info]   CI (99.9%): [3704.002, 3704.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space":
[info]   452.046 ±(99.9%) 681.655 MB/sec [Average]
[info]   (min, avg, max) = (319.569, 452.046, 648.758), stdev = 177.024
[info]   CI (99.9%): [≈ 0, 1133.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3439.205 ±(99.9%) 5386.517 B/op [Average]
[info]   (min, avg, max) = (2347.324, 3439.205, 5136.199), stdev = 1398.861
[info]   CI (99.9%): [≈ 0, 8825.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.287 ±(99.9%) 1.522 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.287, 0.776), stdev = 0.395
[info]   CI (99.9%): [≈ 0, 1.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter
[info] # Run progress: 2.44% complete, ETA 00:21:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 431093.186 ops/s
[info] # Warmup Iteration   2: 456206.329 ops/s
[info] # Warmup Iteration   3: 457281.367 ops/s
[info] # Warmup Iteration   4: 460365.031 ops/s
[info] # Warmup Iteration   5: 460096.722 ops/s
[info] Iteration   1: 459190.660 ops/s
[info]                  ·gc.alloc.rate:                   427.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2231.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.285 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 461216.713 ops/s
[info]                  ·gc.alloc.rate:               429.184 MB/sec
[info]                  ·gc.alloc.rate.norm:          1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1111.613 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 461608.544 ops/s
[info]                  ·gc.alloc.rate:                   429.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1111.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 455983.508 ops/s
[info]                  ·gc.alloc.rate:                   424.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2253.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 443815.388 ops/s
[info]                  ·gc.alloc.rate:               412.980 MB/sec
[info]                  ·gc.alloc.rate.norm:          1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1158.740 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter":
[info]   456362.963 ±(99.9%) 28339.307 ops/s [Average]
[info]   (min, avg, max) = (443815.388, 456362.963, 461608.544), stdev = 7359.628
[info]   CI (99.9%): [428023.656, 484702.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate":
[info]   424.664 ±(99.9%) 26.385 MB/sec [Average]
[info]   (min, avg, max) = (412.980, 424.664, 429.544), stdev = 6.852
[info]   CI (99.9%): [398.279, 451.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm":
[info]   1464.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1464.001, 1464.001, 1464.001), stdev = 0.001
[info]   CI (99.9%): [1464.001, 1464.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space":
[info]   456.692 ±(99.9%) 687.428 MB/sec [Average]
[info]   (min, avg, max) = (325.879, 456.692, 653.089), stdev = 178.523
[info]   CI (99.9%): [≈ 0, 1144.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1573.473 ±(99.9%) 2353.432 B/op [Average]
[info]   (min, avg, max) = (1111.613, 1573.473, 2253.321), stdev = 611.179
[info]   CI (99.9%): [≈ 0, 3926.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.100 ±(99.9%) 0.459 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.100, 0.285), stdev = 0.119
[info]   CI (99.9%): [≈ 0, 0.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.000, 9.000), stdev = 3.082
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless
[info] # Run progress: 3.66% complete, ETA 00:21:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1558039.103 ops/s
[info] # Warmup Iteration   2: 1728184.603 ops/s
[info] # Warmup Iteration   3: 1730606.702 ops/s
[info] # Warmup Iteration   4: 1743033.004 ops/s
[info] # Warmup Iteration   5: 1727036.320 ops/s
[info] Iteration   1: 1706431.207 ops/s
[info]                  ·gc.alloc.rate:                   1058.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     912.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1715461.178 ops/s
[info]                  ·gc.alloc.rate:                   1064.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1217.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1717488.829 ops/s
[info]                  ·gc.alloc.rate:                   1065.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     917.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1720556.206 ops/s
[info]                  ·gc.alloc.rate:                   1067.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     918.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1703423.366 ops/s
[info]                  ·gc.alloc.rate:               1056.733 MB/sec
[info]                  ·gc.alloc.rate.norm:          976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 931.214 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless":
[info]   1712672.157 ±(99.9%) 28402.694 ops/s [Average]
[info]   (min, avg, max) = (1703423.366, 1712672.157, 1720556.206), stdev = 7376.090
[info]   CI (99.9%): [1684269.463, 1741074.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate":
[info]   1062.512 ±(99.9%) 17.685 MB/sec [Average]
[info]   (min, avg, max) = (1056.733, 1062.512, 1067.436), stdev = 4.593
[info]   CI (99.9%): [1044.827, 1080.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.000), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   1066.213 ±(99.9%) 563.235 MB/sec [Average]
[info]   (min, avg, max) = (989.344, 1066.213, 1327.561), stdev = 146.270
[info]   CI (99.9%): [502.978, 1629.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   979.312 ±(99.9%) 513.372 B/op [Average]
[info]   (min, avg, max) = (912.101, 979.312, 1217.471), stdev = 133.321
[info]   CI (99.9%): [465.940, 1492.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.053 ±(99.9%) 0.159 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.053, 0.115), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 10.000), stdev = 3.033
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump
[info] # Run progress: 4.88% complete, ETA 00:21:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3469650.712 ops/s
[info] # Warmup Iteration   2: 3689918.040 ops/s
[info] # Warmup Iteration   3: 3670733.166 ops/s
[info] # Warmup Iteration   4: 3698535.294 ops/s
[info] # Warmup Iteration   5: 3697091.777 ops/s
[info] Iteration   1: 3704880.537 ops/s
[info]                  ·gc.alloc.rate:                   527.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     276.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3705577.695 ops/s
[info]                  ·gc.alloc.rate:               527.600 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 138.500 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 3623423.043 ops/s
[info]                  ·gc.alloc.rate:                   515.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     283.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3699656.078 ops/s
[info]                  ·gc.alloc.rate:               526.760 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139.426 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 3615022.054 ops/s
[info]                  ·gc.alloc.rate:                   514.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     285.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump":
[info]   3669711.881 ±(99.9%) 178063.448 ops/s [Average]
[info]   (min, avg, max) = (3615022.054, 3669711.881, 3705577.695), stdev = 46242.512
[info]   CI (99.9%): [3491648.433, 3847775.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   522.493 ±(99.9%) 25.386 MB/sec [Average]
[info]   (min, avg, max) = (514.687, 522.493, 527.600), stdev = 6.593
[info]   CI (99.9%): [497.107, 547.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   224.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (224.000, 224.000, 224.000), stdev = 0.001
[info]   CI (99.9%): [224.000, 224.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   523.337 ±(99.9%) 690.027 MB/sec [Average]
[info]   (min, avg, max) = (326.215, 523.337, 656.732), stdev = 179.198
[info]   CI (99.9%): [≈ 0, 1213.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   224.901 ±(99.9%) 302.356 B/op [Average]
[info]   (min, avg, max) = (138.500, 224.901, 285.820), stdev = 78.521
[info]   CI (99.9%): [≈ 0, 527.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.072 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.045), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay
[info] # Run progress: 6.10% complete, ETA 00:20:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45883.891 ops/s
[info] # Warmup Iteration   2: 121068.025 ops/s
[info] # Warmup Iteration   3: 125109.025 ops/s
[info] # Warmup Iteration   4: 129947.508 ops/s
[info] # Warmup Iteration   5: 129813.473 ops/s
[info] Iteration   1: 127510.985 ops/s
[info]                  ·gc.alloc.rate:                   1064.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12140.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.514 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 127058.062 ops/s
[info]                  ·gc.alloc.rate:                   1060.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16354.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.774 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 125532.663 ops/s
[info]                  ·gc.alloc.rate:                   1047.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12498.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.522 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 125363.302 ops/s
[info]                  ·gc.alloc.rate:                   1046.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12565.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.523 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 126261.860 ops/s
[info]                  ·gc.alloc.rate:                   1053.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12530.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.519 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay":
[info]   126345.374 ±(99.9%) 3601.183 ops/s [Average]
[info]   (min, avg, max) = (125363.302, 126345.374, 127510.985), stdev = 935.216
[info]   CI (99.9%): [122744.192, 129946.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate":
[info]   1054.304 ±(99.9%) 30.087 MB/sec [Average]
[info]   (min, avg, max) = (1046.105, 1054.304, 1064.044), stdev = 7.813
[info]   CI (99.9%): [1024.217, 1084.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm":
[info]   13128.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13128.003, 13128.003, 13128.004), stdev = 0.001
[info]   CI (99.9%): [13128.003, 13128.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space":
[info]   1061.812 ±(99.9%) 558.540 MB/sec [Average]
[info]   (min, avg, max) = (983.970, 1061.812, 1320.882), stdev = 145.051
[info]   CI (99.9%): [503.271, 1620.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm":
[info]   13217.899 ±(99.9%) 6784.899 B/op [Average]
[info]   (min, avg, max) = (12140.065, 13217.899, 16354.990), stdev = 1762.017
[info]   CI (99.9%): [6433.000, 20002.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.046, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.010, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.570 ±(99.9%) 0.438 B/op [Average]
[info]   (min, avg, max) = (0.514, 0.570, 0.774), stdev = 0.114
[info]   CI (99.9%): [0.132, 1.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 10.000), stdev = 3.114
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce
[info] # Run progress: 7.32% complete, ETA 00:20:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 760909.195 ops/s
[info] # Warmup Iteration   2: 1184852.386 ops/s
[info] # Warmup Iteration   3: 1174228.209 ops/s
[info] # Warmup Iteration   4: 1175100.541 ops/s
[info] # Warmup Iteration   5: 1172183.884 ops/s
[info] Iteration   1: 1179055.651 ops/s
[info]                  ·gc.alloc.rate:                   1858.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2250.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 1174208.644 ops/s
[info]                  ·gc.alloc.rate:                   1850.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2721.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1171698.253 ops/s
[info]                  ·gc.alloc.rate:                   1846.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2277.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1181252.214 ops/s
[info]                  ·gc.alloc.rate:                   1862.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2715.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1180703.270 ops/s
[info]                  ·gc.alloc.rate:                   1861.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2264.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce":
[info]   1177383.606 ±(99.9%) 16244.247 ops/s [Average]
[info]   (min, avg, max) = (1171698.253, 1177383.606, 1181252.214), stdev = 4218.579
[info]   CI (99.9%): [1161139.359, 1193627.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1855.976 ±(99.9%) 25.635 MB/sec [Average]
[info]   (min, avg, max) = (1846.972, 1855.976, 1862.049), stdev = 6.657
[info]   CI (99.9%): [1830.341, 1881.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2480.000, 2480.000, 2480.000), stdev = 0.001
[info]   CI (99.9%): [2480.000, 2480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1830.527 ±(99.9%) 719.662 MB/sec [Average]
[info]   (min, avg, max) = (1686.679, 1830.527, 2039.099), stdev = 186.894
[info]   CI (99.9%): [1110.865, 2550.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2445.962 ±(99.9%) 959.280 B/op [Average]
[info]   (min, avg, max) = (2250.518, 2445.962, 2721.503), stdev = 249.122
[info]   CI (99.9%): [1486.682, 3405.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.061 ±(99.9%) 0.090 B/op [Average]
[info]   (min, avg, max) = (0.028, 0.061, 0.084), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.000, 13.000), stdev = 2.550
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson
[info] # Run progress: 8.54% complete, ETA 00:20:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1201856.167 ops/s
[info] # Warmup Iteration   2: 1828875.384 ops/s
[info] # Warmup Iteration   3: 1826636.577 ops/s
[info] # Warmup Iteration   4: 1837134.860 ops/s
[info] # Warmup Iteration   5: 1841243.805 ops/s
[info] Iteration   1: 1836828.586 ops/s
[info]                  ·gc.alloc.rate:                   1307.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1146.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1844737.907 ops/s
[info]                  ·gc.alloc.rate:                   1313.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1146.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1827281.647 ops/s
[info]                  ·gc.alloc.rate:                   1300.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1161.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1842566.318 ops/s
[info]                  ·gc.alloc.rate:                   1311.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1155.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1847554.823 ops/s
[info]                  ·gc.alloc.rate:                   1315.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1154.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson":
[info]   1839793.856 ±(99.9%) 30907.924 ops/s [Average]
[info]   (min, avg, max) = (1827281.647, 1839793.856, 1847554.823), stdev = 8026.690
[info]   CI (99.9%): [1808885.933, 1870701.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1309.754 ±(99.9%) 21.975 MB/sec [Average]
[info]   (min, avg, max) = (1300.863, 1309.754, 1315.254), stdev = 5.707
[info]   CI (99.9%): [1287.779, 1331.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1348.267 ±(99.9%) 25.504 MB/sec [Average]
[info]   (min, avg, max) = (1338.797, 1348.267, 1355.468), stdev = 6.623
[info]   CI (99.9%): [1322.763, 1373.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1152.945 ±(99.9%) 24.484 B/op [Average]
[info]   (min, avg, max) = (1146.696, 1152.945, 1161.860), stdev = 6.358
[info]   CI (99.9%): [1128.462, 1177.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.032, 0.054), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 10.000), stdev = 2.588
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter
[info] # Run progress: 9.76% complete, ETA 00:19:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5790176.396 ops/s
[info] # Warmup Iteration   2: 6180413.700 ops/s
[info] # Warmup Iteration   3: 6380223.317 ops/s
[info] # Warmup Iteration   4: 6375711.115 ops/s
[info] # Warmup Iteration   5: 6258787.781 ops/s
[info] Iteration   1: 6386992.690 ops/s
[info]                  ·gc.alloc.rate:                   811.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     242.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 6346178.320 ops/s
[info]                  ·gc.alloc.rate:                   806.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     163.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6395708.028 ops/s
[info]                  ·gc.alloc.rate:                   813.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 6251822.006 ops/s
[info]                  ·gc.alloc.rate:                   794.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     250.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 6325610.378 ops/s
[info]                  ·gc.alloc.rate:                   804.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     165.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter":
[info]   6341262.284 ±(99.9%) 222241.892 ops/s [Average]
[info]   (min, avg, max) = (6251822.006, 6341262.284, 6395708.028), stdev = 57715.514
[info]   CI (99.9%): [6119020.392, 6563504.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   806.135 ±(99.9%) 28.262 MB/sec [Average]
[info]   (min, avg, max) = (794.768, 806.135, 813.061), stdev = 7.339
[info]   CI (99.9%): [777.873, 834.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.370 ±(99.9%) 691.348 MB/sec [Average]
[info]   (min, avg, max) = (657.767, 792.370, 995.274), stdev = 179.541
[info]   CI (99.9%): [101.022, 1483.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   196.720 ±(99.9%) 174.547 B/op [Average]
[info]   (min, avg, max) = (162.456, 196.720, 250.457), stdev = 45.329
[info]   CI (99.9%): [22.173, 371.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.010, 0.021), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 8.000), stdev = 2.793
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay
[info] # Run progress: 10.98% complete, ETA 00:19:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 258404.288 ops/s
[info] # Warmup Iteration   2: 431439.805 ops/s
[info] # Warmup Iteration   3: 443406.896 ops/s
[info] # Warmup Iteration   4: 440951.652 ops/s
[info] # Warmup Iteration   5: 445492.019 ops/s
[info] Iteration   1: 443421.807 ops/s
[info]                  ·gc.alloc.rate:                   1172.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4677.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.222 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 436347.117 ops/s
[info]                  ·gc.alloc.rate:                   1152.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3588.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.225 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 446205.005 ops/s
[info]                  ·gc.alloc.rate:                   1179.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4706.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.294 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 440659.911 ops/s
[info]                  ·gc.alloc.rate:               1165.183 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3590.305 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 442506.252 ops/s
[info]                  ·gc.alloc.rate:                   1169.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4786.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay":
[info]   441828.019 ±(99.9%) 14090.797 ops/s [Average]
[info]   (min, avg, max) = (436347.117, 441828.019, 446205.005), stdev = 3659.335
[info]   CI (99.9%): [427737.222, 455918.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1168.060 ±(99.9%) 38.588 MB/sec [Average]
[info]   (min, avg, max) = (1152.840, 1168.060, 1179.833), stdev = 10.021
[info]   CI (99.9%): [1129.472, 1206.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1199.881 ±(99.9%) 703.614 MB/sec [Average]
[info]   (min, avg, max) = (994.482, 1199.881, 1346.047), stdev = 182.726
[info]   CI (99.9%): [496.267, 1903.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4269.863 ±(99.9%) 2396.657 B/op [Average]
[info]   (min, avg, max) = (3588.570, 4269.863, 4786.103), stdev = 622.404
[info]   CI (99.9%): [1873.205, 6666.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.178 ±(99.9%) 0.431 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.178, 0.294), stdev = 0.112
[info]   CI (99.9%): [≈ 0, 0.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 16.000), stdev = 4.604
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce
[info] # Run progress: 12.20% complete, ETA 00:19:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 364708.206 ops/s
[info] # Warmup Iteration   2: 574037.225 ops/s
[info] # Warmup Iteration   3: 600052.792 ops/s
[info] # Warmup Iteration   4: 599612.868 ops/s
[info] # Warmup Iteration   5: 609396.659 ops/s
[info] Iteration   1: 609155.340 ops/s
[info]                  ·gc.alloc.rate:                   1991.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5233.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 610930.359 ops/s
[info]                  ·gc.alloc.rate:                   1997.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5235.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.215 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 607822.315 ops/s
[info]                  ·gc.alloc.rate:                   1987.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5272.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 602294.353 ops/s
[info]                  ·gc.alloc.rate:                   1969.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4438.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 604049.927 ops/s
[info]                  ·gc.alloc.rate:                   1974.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2041.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5318.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.217 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce":
[info]   606850.459 ±(99.9%) 13817.274 ops/s [Average]
[info]   (min, avg, max) = (602294.353, 606850.459, 610930.359), stdev = 3588.302
[info]   CI (99.9%): [593033.185, 620667.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   1984.176 ±(99.9%) 45.306 MB/sec [Average]
[info]   (min, avg, max) = (1969.256, 1984.176, 1997.541), stdev = 11.766
[info]   CI (99.9%): [1938.871, 2029.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5144.001, 5144.001, 5144.001), stdev = 0.001
[info]   CI (99.9%): [5144.001, 5144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1967.538 ±(99.9%) 577.845 MB/sec [Average]
[info]   (min, avg, max) = (1699.288, 1967.538, 2041.782), stdev = 150.065
[info]   CI (99.9%): [1389.693, 2545.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5099.734 ±(99.9%) 1428.874 B/op [Average]
[info]   (min, avg, max) = (4438.804, 5099.734, 5318.025), stdev = 371.074
[info]   CI (99.9%): [3670.860, 6528.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.140 ±(99.9%) 0.278 B/op [Average]
[info]   (min, avg, max) = (0.054, 0.140, 0.217), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.800, 14.000), stdev = 3.962
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson
[info] # Run progress: 13.41% complete, ETA 00:19:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 836835.338 ops/s
[info] # Warmup Iteration   2: 1200050.750 ops/s
[info] # Warmup Iteration   3: 1221220.185 ops/s
[info] # Warmup Iteration   4: 1209768.780 ops/s
[info] # Warmup Iteration   5: 1215035.166 ops/s
[info] Iteration   1: 1210016.474 ops/s
[info]                  ·gc.alloc.rate:                   1138.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1712.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1203489.020 ops/s
[info]                  ·gc.alloc.rate:                   1132.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1301.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1209813.464 ops/s
[info]                  ·gc.alloc.rate:                   1138.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1735.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1206871.424 ops/s
[info]                  ·gc.alloc.rate:                   1135.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1311.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1197973.157 ops/s
[info]                  ·gc.alloc.rate:               1126.978 MB/sec
[info]                  ·gc.alloc.rate.norm:          1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1009.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1325.445 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson":
[info]   1205632.708 ±(99.9%) 19396.572 ops/s [Average]
[info]   (min, avg, max) = (1197973.157, 1205632.708, 1210016.474), stdev = 5037.228
[info]   CI (99.9%): [1186236.136, 1225029.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1134.171 ±(99.9%) 18.191 MB/sec [Average]
[info]   (min, avg, max) = (1126.978, 1134.171, 1138.259), stdev = 4.724
[info]   CI (99.9%): [1115.980, 1152.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1132.564 ±(99.9%) 679.990 MB/sec [Average]
[info]   (min, avg, max) = (995.967, 1132.564, 1334.803), stdev = 176.591
[info]   CI (99.9%): [452.575, 1812.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1477.335 ±(99.9%) 868.195 B/op [Average]
[info]   (min, avg, max) = (1301.952, 1477.335, 1735.798), stdev = 225.468
[info]   CI (99.9%): [609.140, 2345.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.074 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.054), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.800, 12.000), stdev = 3.899
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter
[info] # Run progress: 14.63% complete, ETA 00:18:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2237050.669 ops/s
[info] # Warmup Iteration   2: 2528402.288 ops/s
[info] # Warmup Iteration   3: 2595111.410 ops/s
[info] # Warmup Iteration   4: 2542995.324 ops/s
[info] # Warmup Iteration   5: 2599621.640 ops/s
[info] Iteration   1: 2590540.416 ops/s
[info]                  ·gc.alloc.rate:                   1080.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     600.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2577225.745 ops/s
[info]                  ·gc.alloc.rate:                   1074.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     607.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2588162.385 ops/s
[info]                  ·gc.alloc.rate:                   1079.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     810.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2565471.540 ops/s
[info]                  ·gc.alloc.rate:                   1069.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     616.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2553487.618 ops/s
[info]                  ·gc.alloc.rate:                   1064.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     621.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter":
[info]   2574977.541 ±(99.9%) 60065.061 ops/s [Average]
[info]   (min, avg, max) = (2553487.618, 2574977.541, 2590540.416), stdev = 15598.705
[info]   CI (99.9%): [2514912.480, 2635042.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1073.690 ±(99.9%) 25.004 MB/sec [Average]
[info]   (min, avg, max) = (1064.752, 1073.690, 1080.164), stdev = 6.493
[info]   CI (99.9%): [1048.686, 1098.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1066.200 ±(99.9%) 576.184 MB/sec [Average]
[info]   (min, avg, max) = (989.282, 1066.200, 1333.534), stdev = 149.633
[info]   CI (99.9%): [490.015, 1642.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   651.252 ±(99.9%) 344.324 B/op [Average]
[info]   (min, avg, max) = (600.806, 651.252, 810.597), stdev = 89.420
[info]   CI (99.9%): [306.928, 995.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.033 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.033, 0.051), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.400, 17.000), stdev = 5.941
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay
[info] # Run progress: 15.85% complete, ETA 00:18:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 114775.253 ops/s
[info] # Warmup Iteration   2: 227975.834 ops/s
[info] # Warmup Iteration   3: 232842.376 ops/s
[info] # Warmup Iteration   4: 232306.786 ops/s
[info] # Warmup Iteration   5: 229982.746 ops/s
[info] Iteration   1: 233785.686 ops/s
[info]                  ·gc.alloc.rate:                   1432.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8939.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.280 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 226303.310 ops/s
[info]                  ·gc.alloc.rate:                   1386.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9291.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.290 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   3: 229810.484 ops/s
[info]                  ·gc.alloc.rate:                   1408.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9195.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.285 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 233232.814 ops/s
[info]                  ·gc.alloc.rate:                   1429.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9096.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.421 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 230752.202 ops/s
[info]                  ·gc.alloc.rate:                   1413.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11524.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.284 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay":
[info]   230776.899 ±(99.9%) 11557.046 ops/s [Average]
[info]   (min, avg, max) = (226303.310, 230776.899, 233785.686), stdev = 3001.328
[info]   CI (99.9%): [219219.853, 242333.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1414.067 ±(99.9%) 70.680 MB/sec [Average]
[info]   (min, avg, max) = (1386.713, 1414.067, 1432.467), stdev = 18.355
[info]   CI (99.9%): [1343.387, 1484.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9640.002, 9640.002, 9640.002), stdev = 0.001
[info]   CI (99.9%): [9640.002, 9640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1409.398 ±(99.9%) 605.379 MB/sec [Average]
[info]   (min, avg, max) = (1328.440, 1409.398, 1690.313), stdev = 157.215
[info]   CI (99.9%): [804.019, 2014.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9609.481 ±(99.9%) 4153.094 B/op [Average]
[info]   (min, avg, max) = (8939.938, 9609.481, 11524.785), stdev = 1078.545
[info]   CI (99.9%): [5456.386, 13762.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.046, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.010, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.312 ±(99.9%) 0.236 B/op [Average]
[info]   (min, avg, max) = (0.280, 0.312, 0.421), stdev = 0.061
[info]   CI (99.9%): [0.076, 0.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 9.600, 21.000), stdev = 7.987
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson
[info] # Run progress: 17.07% complete, ETA 00:18:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 999170.209 ops/s
[info] # Warmup Iteration   2: 1588570.986 ops/s
[info] # Warmup Iteration   3: 1594054.459 ops/s
[info] # Warmup Iteration   4: 1584403.141 ops/s
[info] # Warmup Iteration   5: 1594563.655 ops/s
[info] Iteration   1: 1604259.165 ops/s
[info]                  ·gc.alloc.rate:                   1036.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     978.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1573493.582 ops/s
[info]                  ·gc.alloc.rate:                   1016.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1001.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1557448.277 ops/s
[info]                  ·gc.alloc.rate:                   1005.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1015.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   4: 1602164.342 ops/s
[info]                  ·gc.alloc.rate:                   1034.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     990.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1600989.925 ops/s
[info]                  ·gc.alloc.rate:               1033.895 MB/sec
[info]                  ·gc.alloc.rate.norm:          1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1326.116 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson":
[info]   1587671.058 ±(99.9%) 81161.630 ops/s [Average]
[info]   (min, avg, max) = (1557448.277, 1587671.058, 1604259.165), stdev = 21077.417
[info]   CI (99.9%): [1506509.428, 1668832.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1025.305 ±(99.9%) 52.430 MB/sec [Average]
[info]   (min, avg, max) = (1005.764, 1025.305, 1036.022), stdev = 13.616
[info]   CI (99.9%): [972.874, 1077.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1072.646 ±(99.9%) 596.116 MB/sec [Average]
[info]   (min, avg, max) = (997.609, 1072.646, 1349.473), stdev = 154.809
[info]   CI (99.9%): [476.530, 1668.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1062.490 ±(99.9%) 569.956 B/op [Average]
[info]   (min, avg, max) = (978.330, 1062.490, 1326.116), stdev = 148.016
[info]   CI (99.9%): [492.535, 1632.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.066 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 11.000, 30.000), stdev = 11.091
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter
[info] # Run progress: 18.29% complete, ETA 00:18:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3089760.093 ops/s
[info] # Warmup Iteration   2: 3512829.440 ops/s
[info] # Warmup Iteration   3: 3653460.026 ops/s
[info] # Warmup Iteration   4: 3624633.634 ops/s
[info] # Warmup Iteration   5: 3658636.836 ops/s
[info] Iteration   1: 3630800.129 ops/s
[info]                  ·gc.alloc.rate:               480.021 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 282.414 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 3635744.395 ops/s
[info]                  ·gc.alloc.rate:               480.677 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 141.157 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 3615489.188 ops/s
[info]                  ·gc.alloc.rate:                   477.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     284.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3605010.888 ops/s
[info]                  ·gc.alloc.rate:               476.619 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 142.653 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 3683648.546 ops/s
[info]                  ·gc.alloc.rate:               487.014 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 140.034 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter":
[info]   3634138.629 ±(99.9%) 116496.821 ops/s [Average]
[info]   (min, avg, max) = (3605010.888, 3634138.629, 3683648.546), stdev = 30253.854
[info]   CI (99.9%): [3517641.808, 3750635.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   480.466 ±(99.9%) 15.403 MB/sec [Average]
[info]   (min, avg, max) = (476.619, 480.466, 487.014), stdev = 4.000
[info]   CI (99.9%): [465.063, 495.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.161 ±(99.9%) 686.374 MB/sec [Average]
[info]   (min, avg, max) = (326.205, 457.161, 653.089), stdev = 178.249
[info]   CI (99.9%): [≈ 0, 1143.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   198.090 ±(99.9%) 299.565 B/op [Average]
[info]   (min, avg, max) = (140.034, 198.090, 284.190), stdev = 77.796
[info]   CI (99.9%): [≈ 0, 497.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.062 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.036), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.800, 6.000), stdev = 2.588
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay
[info] # Run progress: 19.51% complete, ETA 00:17:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 130258.666 ops/s
[info] # Warmup Iteration   2: 251435.091 ops/s
[info] # Warmup Iteration   3: 255666.713 ops/s
[info] # Warmup Iteration   4: 255414.615 ops/s
[info] # Warmup Iteration   5: 258035.836 ops/s
[info] Iteration   1: 258379.010 ops/s
[info]                  ·gc.alloc.rate:                   1200.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              7312.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8030.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 258872.861 ops/s
[info]                  ·gc.alloc.rate:                   1203.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              7312.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8073.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.380 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 259651.665 ops/s
[info]                  ·gc.alloc.rate:                   1206.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              7312.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6069.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.379 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 259584.850 ops/s
[info]                  ·gc.alloc.rate:                   1206.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              7312.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8129.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 257985.824 ops/s
[info]                  ·gc.alloc.rate:                   1198.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              7312.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6160.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay":
[info]   258894.842 ±(99.9%) 2817.669 ops/s [Average]
[info]   (min, avg, max) = (257985.824, 258894.842, 259651.665), stdev = 731.740
[info]   CI (99.9%): [256077.174, 261712.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1203.258 ±(99.9%) 13.200 MB/sec [Average]
[info]   (min, avg, max) = (1198.928, 1203.258, 1206.778), stdev = 3.428
[info]   CI (99.9%): [1190.058, 1216.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7312.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7312.002, 7312.002, 7312.002), stdev = 0.001
[info]   CI (99.9%): [7312.001, 7312.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1200.144 ±(99.9%) 683.537 MB/sec [Average]
[info]   (min, avg, max) = (1001.636, 1200.144, 1341.443), stdev = 177.512
[info]   CI (99.9%): [516.607, 1883.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7292.822 ±(99.9%) 4144.386 B/op [Average]
[info]   (min, avg, max) = (6069.022, 7292.822, 8129.936), stdev = 1076.284
[info]   CI (99.9%): [3148.437, 11437.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.253 ±(99.9%) 0.486 B/op [Average]
[info]   (min, avg, max) = (0.126, 0.253, 0.380), stdev = 0.126
[info]   CI (99.9%): [≈ 0, 0.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.600, 17.000), stdev = 6.025
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce
[info] # Run progress: 20.73% complete, ETA 00:17:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 364888.960 ops/s
[info] # Warmup Iteration   2: 524486.440 ops/s
[info] # Warmup Iteration   3: 544629.388 ops/s
[info] # Warmup Iteration   4: 544742.555 ops/s
[info] # Warmup Iteration   5: 547597.753 ops/s
[info] Iteration   1: 532377.304 ops/s
[info]                  ·gc.alloc.rate:                   1762.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4979.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 541868.724 ops/s
[info]                  ·gc.alloc.rate:                   1793.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5893.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 539960.990 ops/s
[info]                  ·gc.alloc.rate:                   1787.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4941.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 540953.268 ops/s
[info]                  ·gc.alloc.rate:                   1790.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4940.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 542597.711 ops/s
[info]                  ·gc.alloc.rate:                   1796.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4927.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce":
[info]   539551.599 ±(99.9%) 15905.846 ops/s [Average]
[info]   (min, avg, max) = (532377.304, 539551.599, 542597.711), stdev = 4130.698
[info]   CI (99.9%): [523645.753, 555457.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1786.075 ±(99.9%) 52.697 MB/sec [Average]
[info]   (min, avg, max) = (1762.318, 1786.075, 1796.180), stdev = 13.685
[info]   CI (99.9%): [1733.378, 1838.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5208.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5208.001, 5208.001, 5208.001), stdev = 0.001
[info]   CI (99.9%): [5208.001, 5208.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1761.767 ±(99.9%) 577.476 MB/sec [Average]
[info]   (min, avg, max) = (1685.015, 1761.767, 2029.841), stdev = 149.969
[info]   CI (99.9%): [1184.291, 2339.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5136.419 ±(99.9%) 1631.140 B/op [Average]
[info]   (min, avg, max) = (4927.283, 5136.419, 5893.376), stdev = 423.602
[info]   CI (99.9%): [3505.278, 6767.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.042), stdev = 0.009
[info]   CI (99.9%): [0.002, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.109 ±(99.9%) 0.102 B/op [Average]
[info]   (min, avg, max) = (0.062, 0.109, 0.121), stdev = 0.027
[info]   CI (99.9%): [0.007, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 11.200, 18.000), stdev = 4.868
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson
[info] # Run progress: 21.95% complete, ETA 00:17:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 394991.844 ops/s
[info] # Warmup Iteration   2: 673014.452 ops/s
[info] # Warmup Iteration   3: 679761.616 ops/s
[info] # Warmup Iteration   4: 668228.965 ops/s
[info] # Warmup Iteration   5: 673825.045 ops/s
[info] Iteration   1: 679477.059 ops/s
[info]                  ·gc.alloc.rate:               849.993 MB/sec
[info]                  ·gc.alloc.rate.norm:          1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1532.232 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 681997.816 ops/s
[info]                  ·gc.alloc.rate:                   853.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2301.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 683033.350 ops/s
[info]                  ·gc.alloc.rate:                   854.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1537.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 680405.434 ops/s
[info]                  ·gc.alloc.rate:                   851.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2321.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 680782.856 ops/s
[info]                  ·gc.alloc.rate:               851.600 MB/sec
[info]                  ·gc.alloc.rate.norm:          1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1552.392 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson":
[info]   681139.303 ±(99.9%) 5360.952 ops/s [Average]
[info]   (min, avg, max) = (679477.059, 681139.303, 683033.350), stdev = 1392.222
[info]   CI (99.9%): [675778.351, 686500.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   852.072 ±(99.9%) 6.736 MB/sec [Average]
[info]   (min, avg, max) = (849.993, 852.072, 854.460), stdev = 1.749
[info]   CI (99.9%): [845.336, 858.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1968.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1968.001, 1968.001, 1968.001), stdev = 0.001
[info]   CI (99.9%): [1968.001, 1968.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   800.533 ±(99.9%) 704.278 MB/sec [Average]
[info]   (min, avg, max) = (661.781, 800.533, 1003.999), stdev = 182.899
[info]   CI (99.9%): [96.255, 1504.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1848.937 ±(99.9%) 1626.049 B/op [Average]
[info]   (min, avg, max) = (1532.232, 1848.937, 2321.389), stdev = 422.280
[info]   CI (99.9%): [222.888, 3474.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.155 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.096), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 5.000), stdev = 1.304
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 23.17% complete, ETA 00:16:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4113841.217 ops/s
[info] # Warmup Iteration   2: 4315706.945 ops/s
[info] # Warmup Iteration   3: 4349308.511 ops/s
[info] # Warmup Iteration   4: 4366983.155 ops/s
[info] # Warmup Iteration   5: 4367766.203 ops/s
[info] Iteration   1: 4385419.287 ops/s
[info]                  ·gc.alloc.rate:      200.697 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 4352942.640 ops/s
[info]                  ·gc.alloc.rate:               199.209 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 92.489 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 4349065.356 ops/s
[info]                  ·gc.alloc.rate:                   199.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4357414.731 ops/s
[info]                  ·gc.alloc.rate:      199.418 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4366507.476 ops/s
[info]                  ·gc.alloc.rate:                   199.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.155 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.777 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter":
[info]   4362269.898 ±(99.9%) 55760.648 ops/s [Average]
[info]   (min, avg, max) = (4349065.356, 4362269.898, 4385419.287), stdev = 14480.863
[info]   CI (99.9%): [4306509.250, 4418030.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   199.637 ±(99.9%) 2.550 MB/sec [Average]
[info]   (min, avg, max) = (199.035, 199.637, 200.697), stdev = 0.662
[info]   CI (99.9%): [197.088, 202.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   167.468 ±(99.9%) 598.766 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 167.468, 325.541), stdev = 155.498
[info]   CI (99.9%): [≈ 0, 766.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   60.471 ±(99.9%) 216.100 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 60.471, 117.295), stdev = 56.120
[info]   CI (99.9%): [≈ 0, 276.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.437 ±(99.9%) 3.699 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.437, 2.155), stdev = 0.961
[info]   CI (99.9%): [≈ 0, 4.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.158 ±(99.9%) 1.333 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.158, 0.777), stdev = 0.346
[info]   CI (99.9%): [≈ 0, 1.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 4.000), stdev = 1.673
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay
[info] # Run progress: 24.39% complete, ETA 00:16:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68467.702 ops/s
[info] # Warmup Iteration   2: 195852.808 ops/s
[info] # Warmup Iteration   3: 204381.037 ops/s
[info] # Warmup Iteration   4: 204387.674 ops/s
[info] # Warmup Iteration   5: 204940.529 ops/s
[info] Iteration   1: 204263.795 ops/s
[info]                  ·gc.alloc.rate:                   1134.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7606.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.481 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 200739.538 ops/s
[info]                  ·gc.alloc.rate:                   1114.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10375.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.816 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 202896.142 ops/s
[info]                  ·gc.alloc.rate:                   1126.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7743.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.484 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 202595.917 ops/s
[info]                  ·gc.alloc.rate:                   1125.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10391.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 202346.347 ops/s
[info]                  ·gc.alloc.rate:                   1123.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7839.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay":
[info]   202568.348 ±(99.9%) 4861.802 ops/s [Average]
[info]   (min, avg, max) = (200739.538, 202568.348, 204263.795), stdev = 1262.595
[info]   CI (99.9%): [197706.545, 207430.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1124.852 ±(99.9%) 26.967 MB/sec [Average]
[info]   (min, avg, max) = (1114.690, 1124.852, 1134.228), stdev = 7.003
[info]   CI (99.9%): [1097.885, 1151.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8736.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8736.002, 8736.002, 8736.002), stdev = 0.001
[info]   CI (99.9%): [8736.002, 8736.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1131.316 ±(99.9%) 702.827 MB/sec [Average]
[info]   (min, avg, max) = (987.602, 1131.316, 1338.197), stdev = 182.522
[info]   CI (99.9%): [428.489, 1834.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8791.127 ±(99.9%) 5605.463 B/op [Average]
[info]   (min, avg, max) = (7606.671, 8791.127, 10391.214), stdev = 1455.721
[info]   CI (99.9%): [3185.664, 14396.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.421 ±(99.9%) 1.051 B/op [Average]
[info]   (min, avg, max) = (0.162, 0.421, 0.816), stdev = 0.273
[info]   CI (99.9%): [≈ 0, 1.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 19.000), stdev = 7.085
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce
[info] # Run progress: 25.61% complete, ETA 00:16:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2889.879 ops/s
[info] # Warmup Iteration   2: 4891.656 ops/s
[info] # Warmup Iteration   3: 5006.677 ops/s
[info] # Warmup Iteration   4: 5132.547 ops/s
[info] # Warmup Iteration   5: 5088.968 ops/s
[info] Iteration   1: 5091.498 ops/s
[info]                  ·gc.alloc.rate:                   1271.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              392944.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     411977.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.121 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37.397 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 5080.489 ops/s
[info]                  ·gc.alloc.rate:                   1269.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              392944.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     414829.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.071 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.963 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 5095.342 ops/s
[info]                  ·gc.alloc.rate:                   1272.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              392944.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     415459.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.096 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.533 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 5116.667 ops/s
[info]                  ·gc.alloc.rate:                   1278.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              392944.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     414984.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.606 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 5119.542 ops/s
[info]                  ·gc.alloc.rate:                   1278.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              392944.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     311644.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.012 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.799 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce":
[info]   5100.708 ±(99.9%) 64.773 ops/s [Average]
[info]   (min, avg, max) = (5080.489, 5100.708, 5119.542), stdev = 16.821
[info]   CI (99.9%): [5035.935, 5165.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1274.039 ±(99.9%) 16.104 MB/sec [Average]
[info]   (min, avg, max) = (1269.045, 1274.039, 1278.709), stdev = 4.182
[info]   CI (99.9%): [1257.935, 1290.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   392944.088 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (392944.084, 392944.088, 392944.091), stdev = 0.003
[info]   CI (99.9%): [392944.075, 392944.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   1276.504 ±(99.9%) 565.251 MB/sec [Average]
[info]   (min, avg, max) = (1014.146, 1276.504, 1349.717), stdev = 146.794
[info]   CI (99.9%): [711.253, 1841.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   393779.141 ±(99.9%) 176878.991 B/op [Average]
[info]   (min, avg, max) = (311644.732, 393779.141, 415459.924), stdev = 45934.912
[info]   CI (99.9%): [216900.150, 570658.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.159 MB/sec [Average]
[info]   (min, avg, max) = (0.012, 0.071, 0.121), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   21.860 ±(99.9%) 49.240 B/op [Average]
[info]   (min, avg, max) = (3.799, 21.860, 37.397), stdev = 12.787
[info]   CI (99.9%): [≈ 0, 71.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 12.000), stdev = 3.742
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson
[info] # Run progress: 26.83% complete, ETA 00:16:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5889.363 ops/s
[info] # Warmup Iteration   2: 9644.665 ops/s
[info] # Warmup Iteration   3: 9778.726 ops/s
[info] # Warmup Iteration   4: 9796.953 ops/s
[info] # Warmup Iteration   5: 9797.549 ops/s
[info] Iteration   1: 9737.869 ops/s
[info]                  ·gc.alloc.rate:               262.686 MB/sec
[info]                  ·gc.alloc.rate.norm:          42440.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 41344.407 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 9800.330 ops/s
[info]                  ·gc.alloc.rate:               264.404 MB/sec
[info]                  ·gc.alloc.rate.norm:          42440.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 51990.200 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 9785.374 ops/s
[info]                  ·gc.alloc.rate:                   263.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              42440.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52069.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.044 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 9770.458 ops/s
[info]                  ·gc.alloc.rate:               263.572 MB/sec
[info]                  ·gc.alloc.rate.norm:          42440.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52471.722 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 9762.135 ops/s
[info]                  ·gc.alloc.rate:                   263.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              42440.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52514.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.356 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson":
[info]   9771.233 ±(99.9%) 91.187 ops/s [Average]
[info]   (min, avg, max) = (9737.869, 9771.233, 9800.330), stdev = 23.681
[info]   CI (99.9%): [9680.046, 9862.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   263.598 ±(99.9%) 2.497 MB/sec [Average]
[info]   (min, avg, max) = (262.686, 263.598, 264.404), stdev = 0.648
[info]   CI (99.9%): [261.102, 266.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   42440.045 ±(99.9%) 0.005 B/op [Average]
[info]   (min, avg, max) = (42440.044, 42440.045, 42440.047), stdev = 0.001
[info]   CI (99.9%): [42440.040, 42440.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   311.085 ±(99.9%) 118.842 MB/sec [Average]
[info]   (min, avg, max) = (255.904, 311.085, 325.874), stdev = 30.863
[info]   CI (99.9%): [192.243, 429.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   50078.185 ±(99.9%) 18821.656 B/op [Average]
[info]   (min, avg, max) = (41344.407, 50078.185, 52514.714), stdev = 4887.924
[info]   CI (99.9%): [31256.529, 68899.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.680 ±(99.9%) 16.811 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.680, 10.044), stdev = 4.366
[info]   CI (99.9%): [≈ 0, 19.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.000, 7.000), stdev = 2.236
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter
[info] # Run progress: 28.05% complete, ETA 00:15:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12462.797 ops/s
[info] # Warmup Iteration   2: 15013.954 ops/s
[info] # Warmup Iteration   3: 15151.800 ops/s
[info] # Warmup Iteration   4: 15204.868 ops/s
[info] # Warmup Iteration   5: 15259.365 ops/s
[info] Iteration   1: 15274.697 ops/s
[info]                  ·gc.alloc.rate:               285.915 MB/sec
[info]                  ·gc.alloc.rate.norm:          29448.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26356.823 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 15290.941 ops/s
[info]                  ·gc.alloc.rate:                   286.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33460.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.266 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 233.119 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 15293.684 ops/s
[info]                  ·gc.alloc.rate:                   286.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33453.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.142 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 15052.757 ops/s
[info]                  ·gc.alloc.rate:               281.755 MB/sec
[info]                  ·gc.alloc.rate.norm:          29448.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33989.046 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 15267.877 ops/s
[info]                  ·gc.alloc.rate:                   285.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33510.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.146 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter":
[info]   15235.991 ±(99.9%) 396.624 ops/s [Average]
[info]   (min, avg, max) = (15052.757, 15235.991, 15293.684), stdev = 103.002
[info]   CI (99.9%): [14839.367, 15632.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   285.187 ±(99.9%) 7.429 MB/sec [Average]
[info]   (min, avg, max) = (281.755, 285.187, 286.273), stdev = 1.929
[info]   CI (99.9%): [277.758, 292.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   29448.031 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (29448.028, 29448.031, 29448.041), stdev = 0.006
[info]   CI (99.9%): [29448.009, 29448.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   311.345 ±(99.9%) 119.346 MB/sec [Average]
[info]   (min, avg, max) = (255.902, 311.345, 325.212), stdev = 30.994
[info]   CI (99.9%): [191.999, 430.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   32153.992 ±(99.9%) 12508.567 B/op [Average]
[info]   (min, avg, max) = (26356.823, 32153.992, 33989.046), stdev = 3248.435
[info]   CI (99.9%): [19645.425, 44662.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.461 ±(99.9%) 3.884 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.461, 2.266), stdev = 1.009
[info]   CI (99.9%): [≈ 0, 4.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   47.482 ±(99.9%) 399.621 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 47.482, 233.119), stdev = 103.780
[info]   CI (99.9%): [≈ 0, 447.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay
[info] # Run progress: 29.27% complete, ETA 00:15:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1003.469 ops/s
[info] # Warmup Iteration   2: 1839.313 ops/s
[info] # Warmup Iteration   3: 1863.716 ops/s
[info] # Warmup Iteration   4: 1853.888 ops/s
[info] # Warmup Iteration   5: 1868.221 ops/s
[info] Iteration   1: 1840.331 ops/s
[info]                  ·gc.alloc.rate:                   1152.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              985528.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1131163.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.397 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 1871.671 ops/s
[info]                  ·gc.alloc.rate:                   1172.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              985528.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     839925.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1863.687 ops/s
[info]                  ·gc.alloc.rate:                   1167.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              985528.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1129538.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.140 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1869.951 ops/s
[info]                  ·gc.alloc.rate:                   1171.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              985528.265 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     847939.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.514 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1894.577 ops/s
[info]                  ·gc.alloc.rate:                   1186.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              985528.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1119956.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.584 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay":
[info]   1868.043 ±(99.9%) 74.760 ops/s [Average]
[info]   (min, avg, max) = (1840.331, 1868.043, 1894.577), stdev = 19.415
[info]   CI (99.9%): [1793.283, 1942.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1170.323 ±(99.9%) 46.673 MB/sec [Average]
[info]   (min, avg, max) = (1152.932, 1170.323, 1186.813), stdev = 12.121
[info]   CI (99.9%): [1123.650, 1216.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   985528.238 ±(99.9%) 0.059 B/op [Average]
[info]   (min, avg, max) = (985528.228, 985528.238, 985528.265), stdev = 0.015
[info]   CI (99.9%): [985528.179, 985528.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1203.541 ±(99.9%) 703.519 MB/sec [Average]
[info]   (min, avg, max) = (999.291, 1203.541, 1348.697), stdev = 182.702
[info]   CI (99.9%): [500.022, 1907.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   1013704.692 ±(99.9%) 597100.772 B/op [Average]
[info]   (min, avg, max) = (839925.060, 1013704.692, 1131163.463), stdev = 155065.174
[info]   CI (99.9%): [416603.920, 1610805.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   35.129 ±(99.9%) 48.872 B/op [Average]
[info]   (min, avg, max) = (17.514, 35.129, 53.397), stdev = 12.692
[info]   CI (99.9%): [≈ 0, 84.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.800, 19.000), stdev = 6.760
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 30.49% complete, ETA 00:15:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2225741.569 ops/s
[info] # Warmup Iteration   2: 2786409.115 ops/s
[info] # Warmup Iteration   3: 2873390.747 ops/s
[info] # Warmup Iteration   4: 2915851.270 ops/s
[info] # Warmup Iteration   5: 2941341.807 ops/s
[info] Iteration   1: 2945129.184 ops/s
[info]                  ·gc.alloc.rate:                   883.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     350.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2947641.378 ops/s
[info]                  ·gc.alloc.rate:                   884.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     527.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2914171.529 ops/s
[info]                  ·gc.alloc.rate:                   874.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     536.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 2924056.683 ops/s
[info]                  ·gc.alloc.rate:                   877.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     357.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2933967.367 ops/s
[info]                  ·gc.alloc.rate:                   880.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     536.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter":
[info]   2932993.228 ±(99.9%) 54351.291 ops/s [Average]
[info]   (min, avg, max) = (2914171.529, 2932993.228, 2947641.378), stdev = 14114.858
[info]   CI (99.9%): [2878641.937, 2987344.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   879.941 ±(99.9%) 16.314 MB/sec [Average]
[info]   (min, avg, max) = (874.272, 879.941, 884.349), stdev = 4.237
[info]   CI (99.9%): [863.627, 896.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   472.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (472.000, 472.000, 472.000), stdev = 0.001
[info]   CI (99.9%): [472.000, 472.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   860.534 ±(99.9%) 704.878 MB/sec [Average]
[info]   (min, avg, max) = (655.752, 860.534, 1001.252), stdev = 183.055
[info]   CI (99.9%): [155.655, 1565.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   461.645 ±(99.9%) 379.178 B/op [Average]
[info]   (min, avg, max) = (350.299, 461.645, 536.909), stdev = 98.471
[info]   CI (99.9%): [82.468, 840.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.036 ±(99.9%) 0.063 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.036, 0.056), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 16.000), stdev = 6.066
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 31.71% complete, ETA 00:15:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 136106.402 ops/s
[info] # Warmup Iteration   2: 243825.569 ops/s
[info] # Warmup Iteration   3: 249382.897 ops/s
[info] # Warmup Iteration   4: 248793.957 ops/s
[info] # Warmup Iteration   5: 246401.322 ops/s
[info] Iteration   1: 246584.077 ops/s
[info]                  ·gc.alloc.rate:                   1325.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8461.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 248634.528 ops/s
[info]                  ·gc.alloc.rate:                   1336.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8446.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.395 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 245473.166 ops/s
[info]                  ·gc.alloc.rate:                   1319.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6444.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.400 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 248942.398 ops/s
[info]                  ·gc.alloc.rate:                   1337.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8507.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.395 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 248374.725 ops/s
[info]                  ·gc.alloc.rate:                   1334.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8552.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay":
[info]   247601.779 ±(99.9%) 5784.939 ops/s [Average]
[info]   (min, avg, max) = (245473.166, 247601.779, 248942.398), stdev = 1502.330
[info]   CI (99.9%): [241816.840, 253386.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1330.788 ±(99.9%) 31.109 MB/sec [Average]
[info]   (min, avg, max) = (1319.315, 1330.788, 1337.898), stdev = 8.079
[info]   CI (99.9%): [1299.679, 1361.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8456.002, 8456.002, 8456.002), stdev = 0.001
[info]   CI (99.9%): [8456.002, 8456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1272.532 ±(99.9%) 575.844 MB/sec [Average]
[info]   (min, avg, max) = (1005.550, 1272.532, 1350.124), stdev = 149.545
[info]   CI (99.9%): [696.688, 1848.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8082.265 ±(99.9%) 3528.055 B/op [Average]
[info]   (min, avg, max) = (6444.956, 8082.265, 8552.017), stdev = 916.225
[info]   CI (99.9%): [4554.210, 11610.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.291 ±(99.9%) 0.558 B/op [Average]
[info]   (min, avg, max) = (0.132, 0.291, 0.400), stdev = 0.145
[info]   CI (99.9%): [≈ 0, 0.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.140
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce
[info] # Run progress: 32.93% complete, ETA 00:14:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 330807.058 ops/s
[info] # Warmup Iteration   2: 538368.479 ops/s
[info] # Warmup Iteration   3: 556370.762 ops/s
[info] # Warmup Iteration   4: 555685.438 ops/s
[info] # Warmup Iteration   5: 564512.822 ops/s
[info] Iteration   1: 557323.007 ops/s
[info]                  ·gc.alloc.rate:                   1958.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5718.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 568905.823 ops/s
[info]                  ·gc.alloc.rate:                   1999.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4683.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 568720.460 ops/s
[info]                  ·gc.alloc.rate:                   1998.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5633.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 554459.547 ops/s
[info]                  ·gc.alloc.rate:                   1948.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5786.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 555288.229 ops/s
[info]                  ·gc.alloc.rate:                   1951.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2041.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5782.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce":
[info]   560939.413 ±(99.9%) 27967.667 ops/s [Average]
[info]   (min, avg, max) = (554459.547, 560939.413, 568905.823), stdev = 7263.114
[info]   CI (99.9%): [532971.747, 588907.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1971.040 ±(99.9%) 98.355 MB/sec [Average]
[info]   (min, avg, max) = (1948.178, 1971.040, 1999.045), stdev = 25.542
[info]   CI (99.9%): [1872.685, 2069.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5528.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5528.001, 5528.001, 5528.001), stdev = 0.001
[info]   CI (99.9%): [5528.001, 5528.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1967.327 ±(99.9%) 589.290 MB/sec [Average]
[info]   (min, avg, max) = (1693.767, 1967.327, 2041.140), stdev = 153.037
[info]   CI (99.9%): [1378.037, 2556.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5521.050 ±(99.9%) 1817.927 B/op [Average]
[info]   (min, avg, max) = (4683.809, 5521.050, 5786.092), stdev = 472.110
[info]   CI (99.9%): [3703.122, 7338.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.152 ±(99.9%) 0.260 B/op [Average]
[info]   (min, avg, max) = (0.058, 0.152, 0.236), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 13.000), stdev = 3.701
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson
[info] # Run progress: 34.15% complete, ETA 00:14:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 309801.145 ops/s
[info] # Warmup Iteration   2: 519404.562 ops/s
[info] # Warmup Iteration   3: 527692.732 ops/s
[info] # Warmup Iteration   4: 527890.520 ops/s
[info] # Warmup Iteration   5: 527412.951 ops/s
[info] Iteration   1: 526205.403 ops/s
[info]                  ·gc.alloc.rate:               535.144 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1953.629 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 520808.415 ops/s
[info]                  ·gc.alloc.rate:               529.666 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 989.458 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 523562.162 ops/s
[info]                  ·gc.alloc.rate:                   532.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1976.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 528764.172 ops/s
[info]                  ·gc.alloc.rate:                   537.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1964.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 526849.770 ops/s
[info]                  ·gc.alloc.rate:                   535.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     990.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.311 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson":
[info]   525237.984 ±(99.9%) 11930.352 ops/s [Average]
[info]   (min, avg, max) = (520808.415, 525237.984, 528764.172), stdev = 3098.274
[info]   CI (99.9%): [513307.633, 537168.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   534.163 ±(99.9%) 12.111 MB/sec [Average]
[info]   (min, avg, max) = (529.666, 534.163, 537.748), stdev = 3.145
[info]   CI (99.9%): [522.052, 546.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   526.134 ±(99.9%) 691.133 MB/sec [Average]
[info]   (min, avg, max) = (327.551, 526.134, 660.413), stdev = 179.485
[info]   CI (99.9%): [≈ 0, 1217.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1574.916 ±(99.9%) 2057.163 B/op [Average]
[info]   (min, avg, max) = (989.458, 1574.916, 1976.469), stdev = 534.239
[info]   CI (99.9%): [≈ 0, 3632.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.099 ±(99.9%) 0.496 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.099, 0.311), stdev = 0.129
[info]   CI (99.9%): [≈ 0, 0.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.800, 6.000), stdev = 2.168
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter
[info] # Run progress: 35.37% complete, ETA 00:14:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2056349.423 ops/s
[info] # Warmup Iteration   2: 2307676.569 ops/s
[info] # Warmup Iteration   3: 2327011.114 ops/s
[info] # Warmup Iteration   4: 2357973.272 ops/s
[info] # Warmup Iteration   5: 2354057.205 ops/s
[info] Iteration   1: 2354998.939 ops/s
[info]                  ·gc.alloc.rate:                   634.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     435.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2332217.515 ops/s
[info]                  ·gc.alloc.rate:                   628.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     441.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2312767.091 ops/s
[info]                  ·gc.alloc.rate:                   623.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     446.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2288772.976 ops/s
[info]                  ·gc.alloc.rate:                   616.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     452.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2331579.644 ops/s
[info]                  ·gc.alloc.rate:                   628.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     445.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter":
[info]   2324067.233 ±(99.9%) 95357.130 ops/s [Average]
[info]   (min, avg, max) = (2288772.976, 2324067.233, 2354998.939), stdev = 24763.944
[info]   CI (99.9%): [2228710.103, 2419424.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   626.353 ±(99.9%) 25.672 MB/sec [Average]
[info]   (min, avg, max) = (616.869, 626.353, 634.702), stdev = 6.667
[info]   CI (99.9%): [600.682, 652.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   424.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (424.000, 424.000, 424.000), stdev = 0.001
[info]   CI (99.9%): [424.000, 424.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   656.015 ±(99.9%) 12.210 MB/sec [Average]
[info]   (min, avg, max) = (652.451, 656.015, 660.395), stdev = 3.171
[info]   CI (99.9%): [643.805, 668.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   444.129 ±(99.9%) 23.406 B/op [Average]
[info]   (min, avg, max) = (435.857, 444.129, 452.107), stdev = 6.079
[info]   CI (99.9%): [420.722, 467.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.125), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.037 ±(99.9%) 0.108 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.037, 0.086), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 8.000), stdev = 2.302
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay
[info] # Run progress: 36.59% complete, ETA 00:13:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58641.292 ops/s
[info] # Warmup Iteration   2: 164507.647 ops/s
[info] # Warmup Iteration   3: 168790.635 ops/s
[info] # Warmup Iteration   4: 170718.415 ops/s
[info] # Warmup Iteration   5: 168766.561 ops/s
[info] Iteration   1: 170815.447 ops/s
[info]                  ·gc.alloc.rate:                   1210.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              11152.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12146.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 168545.543 ops/s
[info]                  ·gc.alloc.rate:                   1194.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              11152.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9290.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.778 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 171714.988 ops/s
[info]                  ·gc.alloc.rate:                   1217.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              11152.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12229.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 170807.468 ops/s
[info]                  ·gc.alloc.rate:                   1210.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              11152.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9262.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 169294.825 ops/s
[info]                  ·gc.alloc.rate:                   1199.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              11152.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12509.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.581 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay":
[info]   170235.654 ±(99.9%) 4943.691 ops/s [Average]
[info]   (min, avg, max) = (168545.543, 170235.654, 171714.988), stdev = 1283.861
[info]   CI (99.9%): [165291.963, 175179.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1206.692 ±(99.9%) 35.133 MB/sec [Average]
[info]   (min, avg, max) = (1194.732, 1206.692, 1217.200), stdev = 9.124
[info]   CI (99.9%): [1171.559, 1241.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   11152.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11152.003, 11152.003, 11152.003), stdev = 0.001
[info]   CI (99.9%): [11152.002, 11152.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1200.122 ±(99.9%) 702.989 MB/sec [Average]
[info]   (min, avg, max) = (995.309, 1200.122, 1346.040), stdev = 182.564
[info]   CI (99.9%): [497.132, 1903.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11087.832 ±(99.9%) 6388.796 B/op [Average]
[info]   (min, avg, max) = (9262.160, 11087.832, 12509.958), stdev = 1659.150
[info]   CI (99.9%): [4699.036, 17476.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.425 ±(99.9%) 0.980 B/op [Average]
[info]   (min, avg, max) = (0.192, 0.425, 0.778), stdev = 0.255
[info]   CI (99.9%): [≈ 0, 1.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 9.000), stdev = 2.236
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce
[info] # Run progress: 37.80% complete, ETA 00:13:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 228105.064 ops/s
[info] # Warmup Iteration   2: 448642.203 ops/s
[info] # Warmup Iteration   3: 460601.403 ops/s
[info] # Warmup Iteration   4: 458851.971 ops/s
[info] # Warmup Iteration   5: 458268.258 ops/s
[info] Iteration   1: 462329.875 ops/s
[info]                  ·gc.alloc.rate:                   1643.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5718.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.354 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 459462.476 ops/s
[info]                  ·gc.alloc.rate:                   1633.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5778.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 457160.331 ops/s
[info]                  ·gc.alloc.rate:                   1624.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4660.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 461851.823 ops/s
[info]                  ·gc.alloc.rate:                   1641.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5777.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.426 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 458608.230 ops/s
[info]                  ·gc.alloc.rate:                   1630.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5827.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce":
[info]   459882.547 ±(99.9%) 8409.552 ops/s [Average]
[info]   (min, avg, max) = (457160.331, 459882.547, 462329.875), stdev = 2183.934
[info]   CI (99.9%): [451472.995, 468292.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1634.589 ±(99.9%) 29.906 MB/sec [Average]
[info]   (min, avg, max) = (1624.901, 1634.589, 1643.296), stdev = 7.767
[info]   CI (99.9%): [1604.683, 1664.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1623.353 ±(99.9%) 580.213 MB/sec [Average]
[info]   (min, avg, max) = (1354.117, 1623.353, 1698.644), stdev = 150.679
[info]   CI (99.9%): [1043.140, 2203.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5552.328 ±(99.9%) 1926.333 B/op [Average]
[info]   (min, avg, max) = (4660.114, 5552.328, 5827.302), stdev = 500.263
[info]   CI (99.9%): [3625.995, 7478.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.227 ±(99.9%) 0.590 B/op [Average]
[info]   (min, avg, max) = (0.072, 0.227, 0.426), stdev = 0.153
[info]   CI (99.9%): [≈ 0, 0.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 16.000), stdev = 4.930
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson
[info] # Run progress: 39.02% complete, ETA 00:13:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 391477.709 ops/s
[info] # Warmup Iteration   2: 890758.208 ops/s
[info] # Warmup Iteration   3: 906010.953 ops/s
[info] # Warmup Iteration   4: 910298.467 ops/s
[info] # Warmup Iteration   5: 909738.930 ops/s
[info] Iteration   1: 900472.188 ops/s
[info]                  ·gc.alloc.rate:                   1062.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1740.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.255 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 912854.548 ops/s
[info]                  ·gc.alloc.rate:                   1076.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2301.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 900924.001 ops/s
[info]                  ·gc.alloc.rate:                   1062.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1756.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 904081.370 ops/s
[info]                  ·gc.alloc.rate:                   1066.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1756.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 916970.159 ops/s
[info]                  ·gc.alloc.rate:                   1081.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1735.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson":
[info]   907060.453 ±(99.9%) 28667.909 ops/s [Average]
[info]   (min, avg, max) = (900472.188, 907060.453, 916970.159), stdev = 7444.965
[info]   CI (99.9%): [878392.544, 935728.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1070.079 ±(99.9%) 33.827 MB/sec [Average]
[info]   (min, avg, max) = (1062.272, 1070.079, 1081.756), stdev = 8.785
[info]   CI (99.9%): [1036.252, 1103.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.000, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1071.593 ±(99.9%) 568.541 MB/sec [Average]
[info]   (min, avg, max) = (995.937, 1071.593, 1335.503), stdev = 147.648
[info]   CI (99.9%): [503.053, 1640.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1857.952 ±(99.9%) 955.757 B/op [Average]
[info]   (min, avg, max) = (1735.065, 1857.952, 2301.624), stdev = 248.207
[info]   CI (99.9%): [902.195, 2813.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.204 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.146), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.109 ±(99.9%) 0.357 B/op [Average]
[info]   (min, avg, max) = (0.036, 0.109, 0.255), stdev = 0.093
[info]   CI (99.9%): [≈ 0, 0.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 11.000), stdev = 3.808
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter
[info] # Run progress: 40.24% complete, ETA 00:13:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2686762.914 ops/s
[info] # Warmup Iteration   2: 3110966.381 ops/s
[info] # Warmup Iteration   3: 3151251.917 ops/s
[info] # Warmup Iteration   4: 3187065.567 ops/s
[info] # Warmup Iteration   5: 3125156.292 ops/s
[info] Iteration   1: 3176568.794 ops/s
[info]                  ·gc.alloc.rate:                   791.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     324.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3185458.386 ops/s
[info]                  ·gc.alloc.rate:                   793.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     486.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 3208366.505 ops/s
[info]                  ·gc.alloc.rate:                   799.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     323.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3100606.077 ops/s
[info]                  ·gc.alloc.rate:                   772.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     336.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3163458.842 ops/s
[info]                  ·gc.alloc.rate:                   788.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     496.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter":
[info]   3166891.721 ±(99.9%) 155987.867 ops/s [Average]
[info]   (min, avg, max) = (3100606.077, 3166891.721, 3208366.505), stdev = 40509.554
[info]   CI (99.9%): [3010903.854, 3322879.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   789.081 ±(99.9%) 38.869 MB/sec [Average]
[info]   (min, avg, max) = (772.563, 789.081, 799.397), stdev = 10.094
[info]   CI (99.9%): [750.212, 827.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.360 ±(99.9%) 701.293 MB/sec [Average]
[info]   (min, avg, max) = (654.777, 792.360, 997.918), stdev = 182.124
[info]   CI (99.9%): [91.066, 1493.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   393.528 ±(99.9%) 345.328 B/op [Average]
[info]   (min, avg, max) = (323.837, 393.528, 496.301), stdev = 89.680
[info]   CI (99.9%): [48.200, 738.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.021, 0.041), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 9.000), stdev = 2.864
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay
[info] # Run progress: 41.46% complete, ETA 00:12:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 151867.662 ops/s
[info] # Warmup Iteration   2: 247726.152 ops/s
[info] # Warmup Iteration   3: 252774.744 ops/s
[info] # Warmup Iteration   4: 252673.603 ops/s
[info] # Warmup Iteration   5: 255327.812 ops/s
[info] Iteration   1: 254899.130 ops/s
[info]                  ·gc.alloc.rate:                   1331.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8185.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 250862.364 ops/s
[info]                  ·gc.alloc.rate:                   1310.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8366.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.522 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 247952.062 ops/s
[info]                  ·gc.alloc.rate:                   1294.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6380.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.529 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 247312.810 ops/s
[info]                  ·gc.alloc.rate:                   1291.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8563.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 255273.054 ops/s
[info]                  ·gc.alloc.rate:                   1333.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8321.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay":
[info]   251259.884 ±(99.9%) 14411.488 ops/s [Average]
[info]   (min, avg, max) = (247312.810, 251259.884, 255273.054), stdev = 3742.618
[info]   CI (99.9%): [236848.396, 265671.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1312.128 ±(99.9%) 75.349 MB/sec [Average]
[info]   (min, avg, max) = (1291.433, 1312.128, 1333.087), stdev = 19.568
[info]   CI (99.9%): [1236.779, 1387.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8216.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8216.002, 8216.002, 8216.002), stdev = 0.001
[info]   CI (99.9%): [8216.002, 8216.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1272.424 ±(99.9%) 575.496 MB/sec [Average]
[info]   (min, avg, max) = (1005.614, 1272.424, 1350.143), stdev = 149.455
[info]   CI (99.9%): [696.928, 1847.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7963.460 ±(99.9%) 3446.747 B/op [Average]
[info]   (min, avg, max) = (6380.710, 7963.460, 8563.403), stdev = 895.109
[info]   CI (99.9%): [4516.712, 11410.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.315 ±(99.9%) 0.772 B/op [Average]
[info]   (min, avg, max) = (0.128, 0.315, 0.529), stdev = 0.200
[info]   CI (99.9%): [≈ 0, 1.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 9.000), stdev = 1.643
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson
[info] # Run progress: 42.68% complete, ETA 00:12:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 132512.067 ops/s
[info] # Warmup Iteration   2: 683090.159 ops/s
[info] # Warmup Iteration   3: 696537.902 ops/s
[info] # Warmup Iteration   4: 696630.648 ops/s
[info] # Warmup Iteration   5: 693146.231 ops/s
[info] Iteration   1: 691885.002 ops/s
[info]                  ·gc.alloc.rate:                   897.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2249.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 696881.546 ops/s
[info]                  ·gc.alloc.rate:                   903.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2248.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.282 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 682607.252 ops/s
[info]                  ·gc.alloc.rate:                   885.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1535.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 682994.519 ops/s
[info]                  ·gc.alloc.rate:                   885.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2309.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 695237.375 ops/s
[info]                  ·gc.alloc.rate:               901.438 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2279.356 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson":
[info]   689921.139 ±(99.9%) 25976.681 ops/s [Average]
[info]   (min, avg, max) = (682607.252, 689921.139, 696881.546), stdev = 6746.061
[info]   CI (99.9%): [663944.458, 715897.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   894.588 ±(99.9%) 33.642 MB/sec [Average]
[info]   (min, avg, max) = (885.135, 894.588, 903.626), stdev = 8.737
[info]   CI (99.9%): [860.945, 928.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   932.292 ±(99.9%) 572.867 MB/sec [Average]
[info]   (min, avg, max) = (666.438, 932.292, 1007.205), stdev = 148.772
[info]   CI (99.9%): [359.425, 1505.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2124.549 ±(99.9%) 1270.669 B/op [Average]
[info]   (min, avg, max) = (1535.961, 2124.549, 2309.531), stdev = 329.989
[info]   CI (99.9%): [853.880, 3395.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.114 ±(99.9%) 0.417 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.114, 0.282), stdev = 0.108
[info]   CI (99.9%): [≈ 0, 0.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 8.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter
[info] # Run progress: 43.90% complete, ETA 00:12:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2089064.864 ops/s
[info] # Warmup Iteration   2: 2221247.265 ops/s
[info] # Warmup Iteration   3: 2239022.517 ops/s
[info] # Warmup Iteration   4: 2242832.184 ops/s
[info] # Warmup Iteration   5: 2279522.686 ops/s
[info] Iteration   1: 2284775.762 ops/s
[info]                  ·gc.alloc.rate:                   1080.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     681.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2280464.632 ops/s
[info]                  ·gc.alloc.rate:                   1078.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     916.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2284540.097 ops/s
[info]                  ·gc.alloc.rate:                   1080.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     689.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2276495.388 ops/s
[info]                  ·gc.alloc.rate:                   1076.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     694.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 2285356.157 ops/s
[info]                  ·gc.alloc.rate:                   1080.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     694.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter":
[info]   2282326.407 ±(99.9%) 14605.332 ops/s [Average]
[info]   (min, avg, max) = (2276495.388, 2282326.407, 2285356.157), stdev = 3792.958
[info]   CI (99.9%): [2267721.075, 2296931.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1079.318 ±(99.9%) 6.853 MB/sec [Average]
[info]   (min, avg, max) = (1076.568, 1079.318, 1080.724), stdev = 1.780
[info]   CI (99.9%): [1072.466, 1086.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1066.326 ±(99.9%) 564.415 MB/sec [Average]
[info]   (min, avg, max) = (989.269, 1066.326, 1328.220), stdev = 146.577
[info]   CI (99.9%): [501.910, 1630.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   735.083 ±(99.9%) 390.605 B/op [Average]
[info]   (min, avg, max) = (681.198, 735.083, 916.294), stdev = 101.439
[info]   CI (99.9%): [344.478, 1125.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.099 B/op [Average]
[info]   (min, avg, max) = (0.029, 0.040, 0.086), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 11.000), stdev = 3.701
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay
[info] # Run progress: 45.12% complete, ETA 00:12:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 122526.114 ops/s
[info] # Warmup Iteration   2: 217459.324 ops/s
[info] # Warmup Iteration   3: 223720.259 ops/s
[info] # Warmup Iteration   4: 222288.123 ops/s
[info] # Warmup Iteration   5: 224533.204 ops/s
[info] Iteration   1: 223781.993 ops/s
[info]                  ·gc.alloc.rate:                   1183.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9271.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.293 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 222082.630 ops/s
[info]                  ·gc.alloc.rate:                   1174.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9411.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.590 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 221598.098 ops/s
[info]                  ·gc.alloc.rate:                   1171.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7110.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.296 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 220855.797 ops/s
[info]                  ·gc.alloc.rate:                   1167.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9555.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.297 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 224311.124 ops/s
[info]                  ·gc.alloc.rate:                   1186.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7085.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay":
[info]   222525.928 ±(99.9%) 5649.874 ops/s [Average]
[info]   (min, avg, max) = (220855.797, 222525.928, 224311.124), stdev = 1467.254
[info]   CI (99.9%): [216876.054, 228175.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1176.812 ±(99.9%) 29.849 MB/sec [Average]
[info]   (min, avg, max) = (1167.961, 1176.812, 1186.235), stdev = 7.752
[info]   CI (99.9%): [1146.963, 1206.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8320.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8320.002, 8320.002, 8320.002), stdev = 0.001
[info]   CI (99.9%): [8320.002, 8320.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1200.132 ±(99.9%) 683.402 MB/sec [Average]
[info]   (min, avg, max) = (1001.620, 1200.132, 1341.456), stdev = 177.477
[info]   CI (99.9%): [516.729, 1883.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8487.063 ±(99.9%) 4896.918 B/op [Average]
[info]   (min, avg, max) = (7085.794, 8487.063, 9555.899), stdev = 1271.714
[info]   CI (99.9%): [3590.146, 13383.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.353 ±(99.9%) 0.509 B/op [Average]
[info]   (min, avg, max) = (0.292, 0.353, 0.590), stdev = 0.132
[info]   CI (99.9%): [≈ 0, 0.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.800, 14.000), stdev = 4.438
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce
[info] # Run progress: 46.34% complete, ETA 00:11:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108864.446 ops/s
[info] # Warmup Iteration   2: 437730.353 ops/s
[info] # Warmup Iteration   3: 468619.134 ops/s
[info] # Warmup Iteration   4: 465990.002 ops/s
[info] # Warmup Iteration   5: 463119.313 ops/s
[info] Iteration   1: 460354.708 ops/s
[info]                  ·gc.alloc.rate:                   1362.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4564.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 463764.715 ops/s
[info]                  ·gc.alloc.rate:                   1372.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5693.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 458981.190 ops/s
[info]                  ·gc.alloc.rate:                   1358.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4623.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 458754.468 ops/s
[info]                  ·gc.alloc.rate:                   1357.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4639.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 460359.144 ops/s
[info]                  ·gc.alloc.rate:                   1362.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4632.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.214 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce":
[info]   460442.845 ±(99.9%) 7710.103 ops/s [Average]
[info]   (min, avg, max) = (458754.468, 460442.845, 463764.715), stdev = 2002.289
[info]   CI (99.9%): [452732.743, 468152.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1362.643 ±(99.9%) 22.813 MB/sec [Average]
[info]   (min, avg, max) = (1357.664, 1362.643, 1372.467), stdev = 5.924
[info]   CI (99.9%): [1339.830, 1385.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1414.192 ±(99.9%) 569.364 MB/sec [Average]
[info]   (min, avg, max) = (1335.500, 1414.192, 1678.338), stdev = 147.862
[info]   CI (99.9%): [844.828, 1983.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4830.604 ±(99.9%) 1861.315 B/op [Average]
[info]   (min, avg, max) = (4564.086, 4830.604, 5693.647), stdev = 483.377
[info]   CI (99.9%): [2969.290, 6691.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.128 ±(99.9%) 0.229 B/op [Average]
[info]   (min, avg, max) = (0.071, 0.128, 0.214), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.000, 12.000), stdev = 2.449
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson
[info] # Run progress: 47.56% complete, ETA 00:11:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 646306.209 ops/s
[info] # Warmup Iteration   2: 975974.304 ops/s
[info] # Warmup Iteration   3: 984664.300 ops/s
[info] # Warmup Iteration   4: 993388.456 ops/s
[info] # Warmup Iteration   5: 996733.436 ops/s
[info] Iteration   1: 992790.920 ops/s
[info]                  ·gc.alloc.rate:                   762.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1046.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 990978.774 ops/s
[info]                  ·gc.alloc.rate:                   760.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1052.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 996112.730 ops/s
[info]                  ·gc.alloc.rate:               764.853 MB/sec
[info]                  ·gc.alloc.rate.norm:          1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1050.939 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 976553.279 ops/s
[info]                  ·gc.alloc.rate:                   749.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1613.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 995882.258 ops/s
[info]                  ·gc.alloc.rate:               764.663 MB/sec
[info]                  ·gc.alloc.rate.norm:          1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1058.028 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson":
[info]   990463.592 ±(99.9%) 31071.940 ops/s [Average]
[info]   (min, avg, max) = (976553.279, 990463.592, 996112.730), stdev = 8069.284
[info]   CI (99.9%): [959391.652, 1021535.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   760.514 ±(99.9%) 23.854 MB/sec [Average]
[info]   (min, avg, max) = (749.833, 760.514, 764.853), stdev = 6.195
[info]   CI (99.9%): [736.660, 784.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1208.000, 1208.000, 1208.000), stdev = 0.001
[info]   CI (99.9%): [1208.000, 1208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   732.047 ±(99.9%) 580.384 MB/sec [Average]
[info]   (min, avg, max) = (660.418, 732.047, 1001.600), stdev = 150.724
[info]   CI (99.9%): [151.663, 1312.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1164.358 ±(99.9%) 967.166 B/op [Average]
[info]   (min, avg, max) = (1046.537, 1164.358, 1613.603), stdev = 251.170
[info]   CI (99.9%): [197.192, 2131.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.053 ±(99.9%) 0.213 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.053, 0.132), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 8.000), stdev = 2.828
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter
[info] # Run progress: 48.78% complete, ETA 00:11:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2917589.180 ops/s
[info] # Warmup Iteration   2: 3232676.629 ops/s
[info] # Warmup Iteration   3: 3228952.576 ops/s
[info] # Warmup Iteration   4: 3261327.991 ops/s
[info] # Warmup Iteration   5: 3242930.031 ops/s
[info] Iteration   1: 3274095.974 ops/s
[info]                  ·gc.alloc.rate:      99.893 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3274176.374 ops/s
[info]                  ·gc.alloc.rate:      99.896 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3229658.700 ops/s
[info]                  ·gc.alloc.rate:               98.537 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 124.659 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 3181506.331 ops/s
[info]                  ·gc.alloc.rate:      97.075 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3206705.802 ops/s
[info]                  ·gc.alloc.rate:                   97.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     125.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter":
[info]   3233228.636 ±(99.9%) 158043.704 ops/s [Average]
[info]   (min, avg, max) = (3181506.331, 3233228.636, 3274176.374), stdev = 41043.448
[info]   CI (99.9%): [3075184.932, 3391272.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   98.648 ±(99.9%) 4.813 MB/sec [Average]
[info]   (min, avg, max) = (97.075, 98.648, 99.896), stdev = 1.250
[info]   CI (99.9%): [93.835, 103.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   102.364 ±(99.9%) 539.738 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.364, 255.914), stdev = 140.168
[info]   CI (99.9%): [≈ 0, 642.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   50.043 ±(99.9%) 263.863 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 50.043, 125.554), stdev = 68.524
[info]   CI (99.9%): [≈ 0, 313.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay
[info] # Run progress: 50.00% complete, ETA 00:11:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 81476.575 ops/s
[info] # Warmup Iteration   2: 160679.330 ops/s
[info] # Warmup Iteration   3: 163009.918 ops/s
[info] # Warmup Iteration   4: 164025.228 ops/s
[info] # Warmup Iteration   5: 163128.665 ops/s
[info] Iteration   1: 163733.587 ops/s
[info]                  ·gc.alloc.rate:                   1112.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12652.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 163594.658 ops/s
[info]                  ·gc.alloc.rate:                   1111.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9558.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 165039.897 ops/s
[info]                  ·gc.alloc.rate:                   1121.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9519.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.794 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 163107.127 ops/s
[info]                  ·gc.alloc.rate:                   1108.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12906.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.603 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 164615.536 ops/s
[info]                  ·gc.alloc.rate:                   1118.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9636.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.199 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay":
[info]   164018.161 ±(99.9%) 3038.791 ops/s [Average]
[info]   (min, avg, max) = (163107.127, 164018.161, 165039.897), stdev = 789.164
[info]   CI (99.9%): [160979.370, 167056.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1114.260 ±(99.9%) 20.639 MB/sec [Average]
[info]   (min, avg, max) = (1108.080, 1114.260, 1121.198), stdev = 5.360
[info]   CI (99.9%): [1093.621, 1134.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10688.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10688.003, 10688.003, 10688.003), stdev = 0.001
[info]   CI (99.9%): [10688.002, 10688.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1131.147 ±(99.9%) 690.961 MB/sec [Average]
[info]   (min, avg, max) = (993.932, 1131.147, 1338.132), stdev = 179.440
[info]   CI (99.9%): [440.186, 1822.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10854.773 ±(99.9%) 6777.708 B/op [Average]
[info]   (min, avg, max) = (9519.457, 10854.773, 12906.975), stdev = 1760.149
[info]   CI (99.9%): [4077.065, 17632.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.559 ±(99.9%) 1.377 B/op [Average]
[info]   (min, avg, max) = (0.199, 0.559, 1.001), stdev = 0.358
[info]   CI (99.9%): [≈ 0, 1.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 9.000), stdev = 1.871
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce
[info] # Run progress: 51.22% complete, ETA 00:10:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2576.660 ops/s
[info] # Warmup Iteration   2: 4327.159 ops/s
[info] # Warmup Iteration   3: 5179.390 ops/s
[info] # Warmup Iteration   4: 7315.041 ops/s
[info] # Warmup Iteration   5: 7498.354 ops/s
[info] Iteration   1: 7437.111 ops/s
[info]                  ·gc.alloc.rate:                   1051.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              222392.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     279375.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.186 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.328 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 7503.556 ops/s
[info]                  ·gc.alloc.rate:                   1060.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              222392.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     208807.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 7464.523 ops/s
[info]                  ·gc.alloc.rate:                   1055.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              222392.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211021.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.167 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 7501.806 ops/s
[info]                  ·gc.alloc.rate:                   1060.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              222392.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     210679.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.367 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 7574.331 ops/s
[info]                  ·gc.alloc.rate:                   1070.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              222414.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     209410.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.650 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce":
[info]   7496.265 ±(99.9%) 199.016 ops/s [Average]
[info]   (min, avg, max) = (7437.111, 7496.265, 7574.331), stdev = 51.684
[info]   CI (99.9%): [7297.250, 7695.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate":
[info]   1059.721 ±(99.9%) 28.195 MB/sec [Average]
[info]   (min, avg, max) = (1051.386, 1059.721, 1070.822), stdev = 7.322
[info]   CI (99.9%): [1031.526, 1087.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm":
[info]   222396.452 ±(99.9%) 37.813 B/op [Average]
[info]   (min, avg, max) = (222392.058, 222396.452, 222414.018), stdev = 9.820
[info]   CI (99.9%): [222358.638, 222434.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   1066.160 ±(99.9%) 548.376 MB/sec [Average]
[info]   (min, avg, max) = (995.895, 1066.160, 1320.784), stdev = 142.411
[info]   CI (99.9%): [517.784, 1614.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   223858.909 ±(99.9%) 119555.361 B/op [Average]
[info]   (min, avg, max) = (208807.040, 223858.909, 279375.942), stdev = 31048.148
[info]   CI (99.9%): [104303.548, 343414.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.066 ±(99.9%) 0.267 MB/sec [Average]
[info]   (min, avg, max) = (0.019, 0.066, 0.186), stdev = 0.069
[info]   CI (99.9%): [≈ 0, 0.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   13.913 ±(99.9%) 56.544 B/op [Average]
[info]   (min, avg, max) = (4.053, 13.913, 39.328), stdev = 14.684
[info]   CI (99.9%): [≈ 0, 70.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 14.000), stdev = 4.183
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson
[info] # Run progress: 52.44% complete, ETA 00:10:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3813.249 ops/s
[info] # Warmup Iteration   2: 11349.256 ops/s
[info] # Warmup Iteration   3: 11998.919 ops/s
[info] # Warmup Iteration   4: 12110.140 ops/s
[info] # Warmup Iteration   5: 12069.978 ops/s
[info] Iteration   1: 12044.216 ops/s
[info]                  ·gc.alloc.rate:               190.841 MB/sec
[info]                  ·gc.alloc.rate.norm:          24928.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33426.298 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 12120.691 ops/s
[info]                  ·gc.alloc.rate:      192.061 MB/sec
[info]                  ·gc.alloc.rate.norm: 24928.036 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 12072.264 ops/s
[info]                  ·gc.alloc.rate:               191.287 MB/sec
[info]                  ·gc.alloc.rate.norm:          24928.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33348.781 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 12027.848 ops/s
[info]                  ·gc.alloc.rate:                   190.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              24928.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42274.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.724 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 12109.150 ops/s
[info]                  ·gc.alloc.rate:      191.867 MB/sec
[info]                  ·gc.alloc.rate.norm: 24928.049 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson":
[info]   12074.834 ±(99.9%) 154.413 ops/s [Average]
[info]   (min, avg, max) = (12027.848, 12074.834, 12120.691), stdev = 40.101
[info]   CI (99.9%): [11920.421, 12229.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate":
[info]   191.329 ±(99.9%) 2.445 MB/sec [Average]
[info]   (min, avg, max) = (190.589, 191.329, 192.061), stdev = 0.635
[info]   CI (99.9%): [188.884, 193.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   24928.039 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (24928.036, 24928.039, 24928.049), stdev = 0.005
[info]   CI (99.9%): [24928.019, 24928.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   167.003 ±(99.9%) 596.499 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 167.003, 323.210), stdev = 154.909
[info]   CI (99.9%): [≈ 0, 763.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   21809.868 ±(99.9%) 77927.273 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 21809.868, 42274.261), stdev = 20237.465
[info]   CI (99.9%): [≈ 0, 99737.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.545 ±(99.9%) 4.691 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.545, 2.724), stdev = 1.218
[info]   CI (99.9%): [≈ 0, 5.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter
[info] # Run progress: 53.66% complete, ETA 00:10:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8558.200 ops/s
[info] # Warmup Iteration   2: 17413.233 ops/s
[info] # Warmup Iteration   3: 20585.139 ops/s
[info] # Warmup Iteration   4: 20608.198 ops/s
[info] # Warmup Iteration   5: 20417.921 ops/s
[info] Iteration   1: 20606.977 ops/s
[info]                  ·gc.alloc.rate:      226.759 MB/sec
[info]                  ·gc.alloc.rate.norm: 17312.030 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 20580.267 ops/s
[info]                  ·gc.alloc.rate:               226.466 MB/sec
[info]                  ·gc.alloc.rate.norm:          17310.431 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19561.464 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 20505.199 ops/s
[info]                  ·gc.alloc.rate:                   225.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              17312.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19632.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.995 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 20678.579 ops/s
[info]                  ·gc.alloc.rate:                   227.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              17312.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24741.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.218 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 168.738 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 20638.386 ops/s
[info]                  ·gc.alloc.rate:      227.103 MB/sec
[info]                  ·gc.alloc.rate.norm: 17312.022 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter":
[info]   20601.882 ±(99.9%) 251.443 ops/s [Average]
[info]   (min, avg, max) = (20505.199, 20601.882, 20678.579), stdev = 65.299
[info]   CI (99.9%): [20350.439, 20853.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate":
[info]   226.705 ±(99.9%) 2.762 MB/sec [Average]
[info]   (min, avg, max) = (225.646, 226.705, 227.553), stdev = 0.717
[info]   CI (99.9%): [223.943, 229.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   17311.705 ±(99.9%) 2.743 B/op [Average]
[info]   (min, avg, max) = (17310.431, 17311.705, 17312.030), stdev = 0.712
[info]   CI (99.9%): [17308.962, 17314.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   167.404 ±(99.9%) 598.449 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 167.404, 325.208), stdev = 155.415
[info]   CI (99.9%): [≈ 0, 765.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   12787.206 ±(99.9%) 45670.629 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12787.206, 24741.567), stdev = 11860.517
[info]   CI (99.9%): [≈ 0, 58457.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.454 ±(99.9%) 3.798 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.454, 2.218), stdev = 0.986
[info]   CI (99.9%): [≈ 0, 4.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   34.547 ±(99.9%) 288.934 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 34.547, 168.738), stdev = 75.035
[info]   CI (99.9%): [≈ 0, 323.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 5.000), stdev = 2.280
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce
[info] # Run progress: 54.88% complete, ETA 00:09:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 875245.154 ops/s
[info] # Warmup Iteration   2: 1381973.390 ops/s
[info] # Warmup Iteration   3: 1424973.760 ops/s
[info] # Warmup Iteration   4: 1420763.793 ops/s
[info] # Warmup Iteration   5: 1416886.877 ops/s
[info] Iteration   1: 1406725.375 ops/s
[info]                  ·gc.alloc.rate:               1559.371 MB/sec
[info]                  ·gc.alloc.rate.norm:          1744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1501.048 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     18.000 ms
[info] Iteration   2: 1392241.873 ops/s
[info]                  ·gc.alloc.rate:                   1543.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              1744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1904.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 1395678.821 ops/s
[info]                  ·gc.alloc.rate:                   1547.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              1744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1906.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1395619.145 ops/s
[info]                  ·gc.alloc.rate:                   1547.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              1744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1528.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1395875.674 ops/s
[info]                  ·gc.alloc.rate:                   1547.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              1744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1913.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce":
[info]   1397228.177 ±(99.9%) 21255.307 ops/s [Average]
[info]   (min, avg, max) = (1392241.873, 1397228.177, 1406725.375), stdev = 5519.936
[info]   CI (99.9%): [1375972.871, 1418483.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1548.894 ±(99.9%) 23.447 MB/sec [Average]
[info]   (min, avg, max) = (1543.393, 1548.894, 1559.371), stdev = 6.089
[info]   CI (99.9%): [1525.447, 1572.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1744.000, 1744.000, 1744.000), stdev = 0.001
[info]   CI (99.9%): [1744.000, 1744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1554.651 ±(99.9%) 722.735 MB/sec [Average]
[info]   (min, avg, max) = (1342.139, 1554.651, 1698.043), stdev = 187.692
[info]   CI (99.9%): [831.917, 2277.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1750.946 ±(99.9%) 830.642 B/op [Average]
[info]   (min, avg, max) = (1501.048, 1750.946, 1913.827), stdev = 215.715
[info]   CI (99.9%): [920.304, 2581.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.064 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.047), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 12.200, 18.000), stdev = 4.207
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson
[info] # Run progress: 56.10% complete, ETA 00:09:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2464523.994 ops/s
[info] # Warmup Iteration   2: 3750226.895 ops/s
[info] # Warmup Iteration   3: 3710897.496 ops/s
[info] # Warmup Iteration   4: 3708337.420 ops/s
[info] # Warmup Iteration   5: 3734862.105 ops/s
[info] Iteration   1: 3702272.524 ops/s
[info]                  ·gc.alloc.rate:                   1016.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.676 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     419.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 3675807.576 ops/s
[info]                  ·gc.alloc.rate:                   1009.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     425.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 3769551.422 ops/s
[info]                  ·gc.alloc.rate:               1035.055 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      999.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 417.068 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 3743379.472 ops/s
[info]                  ·gc.alloc.rate:                   1027.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     421.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3758844.754 ops/s
[info]                  ·gc.alloc.rate:                   1032.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     421.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson":
[info]   3729971.150 ±(99.9%) 152586.748 ops/s [Average]
[info]   (min, avg, max) = (3675807.576, 3729971.150, 3769551.422), stdev = 39626.294
[info]   CI (99.9%): [3577384.402, 3882557.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1024.215 ±(99.9%) 41.831 MB/sec [Average]
[info]   (min, avg, max) = (1009.349, 1024.215, 1035.055), stdev = 10.863
[info]   CI (99.9%): [982.385, 1066.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   998.234 ±(99.9%) 31.620 MB/sec [Average]
[info]   (min, avg, max) = (986.676, 998.234, 1007.590), stdev = 8.212
[info]   CI (99.9%): [966.614, 1029.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   421.059 ±(99.9%) 12.050 B/op [Average]
[info]   (min, avg, max) = (417.068, 421.059, 425.420), stdev = 3.129
[info]   CI (99.9%): [409.009, 433.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.018), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 9.000), stdev = 3.033
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 57.32% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14216575.424 ops/s
[info] # Warmup Iteration   2: 16298556.235 ops/s
[info] # Warmup Iteration   3: 16189096.351 ops/s
[info] # Warmup Iteration   4: 16683236.046 ops/s
[info] # Warmup Iteration   5: 16284461.036 ops/s
[info] Iteration   1: 16498824.007 ops/s
[info]                  ·gc.alloc.rate:                   503.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 16292633.379 ops/s
[info]                  ·gc.alloc.rate:                   497.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 16285680.534 ops/s
[info]                  ·gc.alloc.rate:               496.875 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31.577 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 16560268.832 ops/s
[info]                  ·gc.alloc.rate:                   505.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 16590885.352 ops/s
[info]                  ·gc.alloc.rate:                   506.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter":
[info]   16445658.421 ±(99.9%) 564820.608 ops/s [Average]
[info]   (min, avg, max) = (16285680.534, 16445658.421, 16590885.352), stdev = 146682.118
[info]   CI (99.9%): [15880837.813, 17010479.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   501.752 ±(99.9%) 17.214 MB/sec [Average]
[info]   (min, avg, max) = (496.875, 501.752, 506.173), stdev = 4.471
[info]   CI (99.9%): [484.538, 518.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.737 ±(99.9%) 686.751 MB/sec [Average]
[info]   (min, avg, max) = (326.873, 522.737, 654.747), stdev = 178.347
[info]   CI (99.9%): [≈ 0, 1209.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   50.004 ±(99.9%) 65.643 B/op [Average]
[info]   (min, avg, max) = (31.092, 50.004, 63.000), stdev = 17.047
[info]   CI (99.9%): [≈ 0, 115.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.010), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 4.000), stdev = 1.342
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay
[info] # Run progress: 58.54% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 722732.203 ops/s
[info] # Warmup Iteration   2: 1061696.127 ops/s
[info] # Warmup Iteration   3: 1075424.324 ops/s
[info] # Warmup Iteration   4: 1088450.928 ops/s
[info] # Warmup Iteration   5: 1068286.730 ops/s
[info] Iteration   1: 1089087.853 ops/s
[info]                  ·gc.alloc.rate:                   1611.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1928.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1081154.338 ops/s
[info]                  ·gc.alloc.rate:                   1599.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2441.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1064633.820 ops/s
[info]                  ·gc.alloc.rate:                   1575.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2491.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 1075650.453 ops/s
[info]                  ·gc.alloc.rate:                   1591.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2474.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1055364.050 ops/s
[info]                  ·gc.alloc.rate:                   1561.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2022.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay":
[info]   1073178.103 ±(99.9%) 51417.209 ops/s [Average]
[info]   (min, avg, max) = (1055364.050, 1073178.103, 1089087.853), stdev = 13352.886
[info]   CI (99.9%): [1021760.894, 1124595.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1588.004 ±(99.9%) 76.166 MB/sec [Average]
[info]   (min, avg, max) = (1561.615, 1588.004, 1611.555), stdev = 19.780
[info]   CI (99.9%): [1511.838, 1664.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2328.000, 2328.000, 2328.000), stdev = 0.001
[info]   CI (99.9%): [2328.000, 2328.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1549.393 ±(99.9%) 717.150 MB/sec [Average]
[info]   (min, avg, max) = (1334.805, 1549.393, 1691.677), stdev = 186.242
[info]   CI (99.9%): [832.243, 2266.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2271.591 ±(99.9%) 1052.033 B/op [Average]
[info]   (min, avg, max) = (1928.216, 2271.591, 2491.554), stdev = 273.210
[info]   CI (99.9%): [1219.558, 3323.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.125), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.116 ±(99.9%) 0.192 B/op [Average]
[info]   (min, avg, max) = (0.062, 0.116, 0.182), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 10.000, 17.000), stdev = 6.671
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce
[info] # Run progress: 59.76% complete, ETA 00:08:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 395217.164 ops/s
[info] # Warmup Iteration   2: 708319.525 ops/s
[info] # Warmup Iteration   3: 724807.721 ops/s
[info] # Warmup Iteration   4: 717836.569 ops/s
[info] # Warmup Iteration   5: 728780.349 ops/s
[info] Iteration   1: 724327.318 ops/s
[info]                  ·gc.alloc.rate:                   1749.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3631.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 722972.916 ops/s
[info]                  ·gc.alloc.rate:                   1746.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4393.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 728083.965 ops/s
[info]                  ·gc.alloc.rate:                   1758.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3652.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 714632.563 ops/s
[info]                  ·gc.alloc.rate:                   1726.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3730.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 721871.614 ops/s
[info]                  ·gc.alloc.rate:                   1743.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3700.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce":
[info]   722377.675 ±(99.9%) 18958.314 ops/s [Average]
[info]   (min, avg, max) = (714632.563, 722377.675, 728083.965), stdev = 4923.414
[info]   CI (99.9%): [703419.361, 741335.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1744.792 ±(99.9%) 45.774 MB/sec [Average]
[info]   (min, avg, max) = (1726.083, 1744.792, 1758.554), stdev = 11.887
[info]   CI (99.9%): [1699.019, 1790.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3800.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3800.001, 3800.001, 3800.001), stdev = 0.001
[info]   CI (99.9%): [3800.001, 3800.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1754.761 ±(99.9%) 570.654 MB/sec [Average]
[info]   (min, avg, max) = (1671.686, 1754.761, 2019.240), stdev = 148.197
[info]   CI (99.9%): [1184.107, 2325.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3821.771 ±(99.9%) 1240.931 B/op [Average]
[info]   (min, avg, max) = (3631.008, 3821.771, 4393.973), stdev = 322.266
[info]   CI (99.9%): [2580.840, 5062.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.063 ±(99.9%) 0.096 B/op [Average]
[info]   (min, avg, max) = (0.045, 0.063, 0.091), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 12.000), stdev = 3.493
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson
[info] # Run progress: 60.98% complete, ETA 00:08:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1703983.507 ops/s
[info] # Warmup Iteration   2: 2737288.644 ops/s
[info] # Warmup Iteration   3: 2747418.873 ops/s
[info] # Warmup Iteration   4: 2758285.787 ops/s
[info] # Warmup Iteration   5: 2733425.246 ops/s
[info] Iteration   1: 2772515.087 ops/s
[info]                  ·gc.alloc.rate:                   1395.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     943.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2804004.420 ops/s
[info]                  ·gc.alloc.rate:                   1411.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     751.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2781032.499 ops/s
[info]                  ·gc.alloc.rate:                   1399.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     761.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 2796326.174 ops/s
[info]                  ·gc.alloc.rate:                   1407.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     759.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2764146.100 ops/s
[info]                  ·gc.alloc.rate:                   1391.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     770.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson":
[info]   2783604.856 ±(99.9%) 63454.398 ops/s [Average]
[info]   (min, avg, max) = (2764146.100, 2783604.856, 2804004.420), stdev = 16478.906
[info]   CI (99.9%): [2720150.457, 2847059.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1401.306 ±(99.9%) 32.040 MB/sec [Average]
[info]   (min, avg, max) = (1391.515, 1401.306, 1411.610), stdev = 8.321
[info]   CI (99.9%): [1369.267, 1433.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   792.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (792.000, 792.000, 792.000), stdev = 0.001
[info]   CI (99.9%): [792.000, 792.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1410.463 ±(99.9%) 542.501 MB/sec [Average]
[info]   (min, avg, max) = (1340.171, 1410.463, 1662.330), stdev = 140.886
[info]   CI (99.9%): [867.962, 1952.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   797.349 ±(99.9%) 315.177 B/op [Average]
[info]   (min, avg, max) = (751.919, 797.349, 943.296), stdev = 81.850
[info]   CI (99.9%): [482.172, 1112.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.050 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.021, 0.035), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 12.000), stdev = 3.435
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter
[info] # Run progress: 62.20% complete, ETA 00:08:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4340476.539 ops/s
[info] # Warmup Iteration   2: 4766684.857 ops/s
[info] # Warmup Iteration   3: 4825306.574 ops/s
[info] # Warmup Iteration   4: 4806373.710 ops/s
[info] # Warmup Iteration   5: 4844513.589 ops/s
[info] Iteration   1: 4776569.207 ops/s
[info]                  ·gc.alloc.rate:                   1311.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     437.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 4773544.388 ops/s
[info]                  ·gc.alloc.rate:                   1310.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     440.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4749380.834 ops/s
[info]                  ·gc.alloc.rate:                   1304.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     445.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 4715433.446 ops/s
[info]                  ·gc.alloc.rate:                   1294.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     337.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 4742312.514 ops/s
[info]                  ·gc.alloc.rate:                   1302.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     448.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter":
[info]   4751448.078 ±(99.9%) 96345.077 ops/s [Average]
[info]   (min, avg, max) = (4715433.446, 4751448.078, 4776569.207), stdev = 25020.511
[info]   CI (99.9%): [4655103.000, 4847793.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1304.688 ±(99.9%) 26.395 MB/sec [Average]
[info]   (min, avg, max) = (1294.822, 1304.688, 1311.574), stdev = 6.855
[info]   CI (99.9%): [1278.294, 1331.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1274.630 ±(99.9%) 568.540 MB/sec [Average]
[info]   (min, avg, max) = (1010.929, 1274.630, 1352.129), stdev = 147.648
[info]   CI (99.9%): [706.090, 1843.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   421.897 ±(99.9%) 182.814 B/op [Average]
[info]   (min, avg, max) = (337.283, 421.897, 448.564), stdev = 47.476
[info]   CI (99.9%): [239.083, 604.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.083), stdev = 0.019
[info]   CI (99.9%): [0.003, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.025, 0.028), stdev = 0.006
[info]   CI (99.9%): [0.001, 0.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 3.114
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay
[info] # Run progress: 63.41% complete, ETA 00:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 184076.014 ops/s
[info] # Warmup Iteration   2: 330546.963 ops/s
[info] # Warmup Iteration   3: 338425.701 ops/s
[info] # Warmup Iteration   4: 332117.050 ops/s
[info] # Warmup Iteration   5: 337081.518 ops/s
[info] Iteration   1: 342002.264 ops/s
[info]                  ·gc.alloc.rate:                   1220.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4553.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 336300.643 ops/s
[info]                  ·gc.alloc.rate:                   1200.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6214.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.585 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 334008.841 ops/s
[info]                  ·gc.alloc.rate:                   1192.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6294.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.392 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 335939.601 ops/s
[info]                  ·gc.alloc.rate:                   1199.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4714.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 340726.963 ops/s
[info]                  ·gc.alloc.rate:                   1216.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6221.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay":
[info]   337795.662 ±(99.9%) 13101.824 ops/s [Average]
[info]   (min, avg, max) = (334008.841, 337795.662, 342002.264), stdev = 3402.502
[info]   CI (99.9%): [324693.838, 350897.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1205.818 ±(99.9%) 46.753 MB/sec [Average]
[info]   (min, avg, max) = (1192.288, 1205.818, 1220.823), stdev = 12.142
[info]   CI (99.9%): [1159.065, 1252.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1201.786 ±(99.9%) 716.192 MB/sec [Average]
[info]   (min, avg, max) = (989.922, 1201.786, 1347.464), stdev = 185.993
[info]   CI (99.9%): [485.594, 1917.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5599.881 ±(99.9%) 3404.402 B/op [Average]
[info]   (min, avg, max) = (4553.815, 5599.881, 6294.884), stdev = 884.112
[info]   CI (99.9%): [2195.479, 9004.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.272 ±(99.9%) 0.817 B/op [Average]
[info]   (min, avg, max) = (0.096, 0.272, 0.585), stdev = 0.212
[info]   CI (99.9%): [≈ 0, 1.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.000, 13.000), stdev = 4.123
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson
[info] # Run progress: 64.63% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1405717.727 ops/s
[info] # Warmup Iteration   2: 2030691.253 ops/s
[info] # Warmup Iteration   3: 2019747.285 ops/s
[info] # Warmup Iteration   4: 2046830.039 ops/s
[info] # Warmup Iteration   5: 2026086.323 ops/s
[info] Iteration   1: 1996760.439 ops/s
[info]                  ·gc.alloc.rate:                   1055.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     782.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1997025.411 ops/s
[info]                  ·gc.alloc.rate:                   1056.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1051.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 2060680.055 ops/s
[info]                  ·gc.alloc.rate:                   1089.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     767.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2053506.480 ops/s
[info]                  ·gc.alloc.rate:                   1085.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     772.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2055642.703 ops/s
[info]                  ·gc.alloc.rate:                   1087.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     774.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson":
[info]   2032723.018 ±(99.9%) 126346.991 ops/s [Average]
[info]   (min, avg, max) = (1996760.439, 2032723.018, 2060680.055), stdev = 32811.912
[info]   CI (99.9%): [1906376.027, 2159070.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1074.979 ±(99.9%) 66.764 MB/sec [Average]
[info]   (min, avg, max) = (1055.964, 1074.979, 1089.753), stdev = 17.338
[info]   CI (99.9%): [1008.215, 1141.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   832.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (832.000, 832.000, 832.000), stdev = 0.001
[info]   CI (99.9%): [832.000, 832.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1070.785 ±(99.9%) 567.619 MB/sec [Average]
[info]   (min, avg, max) = (993.272, 1070.785, 1334.172), stdev = 147.409
[info]   CI (99.9%): [503.165, 1638.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   829.774 ±(99.9%) 476.732 B/op [Average]
[info]   (min, avg, max) = (767.765, 829.774, 1051.040), stdev = 123.806
[info]   CI (99.9%): [353.043, 1306.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.034 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.023, 0.033), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 14.000), stdev = 3.701
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter
[info] # Run progress: 65.85% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3896076.946 ops/s
[info] # Warmup Iteration   2: 4247953.156 ops/s
[info] # Warmup Iteration   3: 4288819.569 ops/s
[info] # Warmup Iteration   4: 4256625.047 ops/s
[info] # Warmup Iteration   5: 4296032.947 ops/s
[info] Iteration   1: 4303294.263 ops/s
[info]                  ·gc.alloc.rate:                   787.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     239.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4271894.911 ops/s
[info]                  ·gc.alloc.rate:                   782.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     362.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 4261375.694 ops/s
[info]                  ·gc.alloc.rate:                   780.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     243.817 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4278618.648 ops/s
[info]                  ·gc.alloc.rate:                   783.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     243.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4310751.759 ops/s
[info]                  ·gc.alloc.rate:                   789.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     364.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter":
[info]   4285187.055 ±(99.9%) 80960.442 ops/s [Average]
[info]   (min, avg, max) = (4261375.694, 4285187.055, 4310751.759), stdev = 21025.170
[info]   CI (99.9%): [4204226.613, 4366147.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   784.438 ±(99.9%) 14.798 MB/sec [Average]
[info]   (min, avg, max) = (780.079, 784.438, 789.107), stdev = 3.843
[info]   CI (99.9%): [769.640, 799.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.350 ±(99.9%) 701.316 MB/sec [Average]
[info]   (min, avg, max) = (654.717, 792.350, 997.924), stdev = 182.130
[info]   CI (99.9%): [91.034, 1493.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   290.839 ±(99.9%) 255.868 B/op [Average]
[info]   (min, avg, max) = (239.363, 290.839, 364.212), stdev = 66.448
[info]   CI (99.9%): [34.971, 546.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.017, 0.031), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.600, 13.000), stdev = 4.827
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay
[info] # Run progress: 67.07% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 278676.614 ops/s
[info] # Warmup Iteration   2: 495157.041 ops/s
[info] # Warmup Iteration   3: 508141.575 ops/s
[info] # Warmup Iteration   4: 510694.570 ops/s
[info] # Warmup Iteration   5: 512832.699 ops/s
[info] Iteration   1: 505047.887 ops/s
[info]                  ·gc.alloc.rate:                   1494.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4145.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.195 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 505998.830 ops/s
[info]                  ·gc.alloc.rate:                   1497.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5206.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.518 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 493204.465 ops/s
[info]                  ·gc.alloc.rate:                   1459.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4293.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.199 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 497060.494 ops/s
[info]                  ·gc.alloc.rate:                   1471.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5342.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   5: 508262.225 ops/s
[info]                  ·gc.alloc.rate:                   1504.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4193.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay":
[info]   501914.780 ±(99.9%) 24822.438 ops/s [Average]
[info]   (min, avg, max) = (493204.465, 501914.780, 508262.225), stdev = 6446.308
[info]   CI (99.9%): [477092.343, 526737.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1485.412 ±(99.9%) 73.472 MB/sec [Average]
[info]   (min, avg, max) = (1459.620, 1485.412, 1504.179), stdev = 19.080
[info]   CI (99.9%): [1411.941, 1558.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1478.879 ±(99.9%) 712.564 MB/sec [Average]
[info]   (min, avg, max) = (1330.851, 1478.879, 1687.965), stdev = 185.051
[info]   CI (99.9%): [766.314, 2191.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4636.507 ±(99.9%) 2260.466 B/op [Average]
[info]   (min, avg, max) = (4145.488, 4636.507, 5342.560), stdev = 587.036
[info]   CI (99.9%): [2376.041, 6896.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.167), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.235 ±(99.9%) 0.624 B/op [Average]
[info]   (min, avg, max) = (0.129, 0.235, 0.518), stdev = 0.162
[info]   CI (99.9%): [≈ 0, 0.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 8.800, 18.000), stdev = 6.140
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce
[info] # Run progress: 68.29% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3590.887 ops/s
[info] # Warmup Iteration   2: 5152.437 ops/s
[info] # Warmup Iteration   3: 5288.380 ops/s
[info] # Warmup Iteration   4: 5405.970 ops/s
[info] # Warmup Iteration   5: 5404.500 ops/s
[info] Iteration   1: 5350.488 ops/s
[info]                  ·gc.alloc.rate:                   1483.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     394583.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.368 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 5334.634 ops/s
[info]                  ·gc.alloc.rate:                   1479.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     397342.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.141 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 5332.212 ops/s
[info]                  ·gc.alloc.rate:                   1478.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     498633.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.286 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 5356.848 ops/s
[info]                  ·gc.alloc.rate:                   1485.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     398059.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.115 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 5360.949 ops/s
[info]                  ·gc.alloc.rate:                   1486.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     497887.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.989 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce":
[info]   5347.026 ±(99.9%) 50.034 ops/s [Average]
[info]   (min, avg, max) = (5332.212, 5347.026, 5360.949), stdev = 12.994
[info]   CI (99.9%): [5296.992, 5397.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1482.664 ±(99.9%) 13.823 MB/sec [Average]
[info]   (min, avg, max) = (1478.569, 1482.664, 1486.510), stdev = 3.590
[info]   CI (99.9%): [1468.841, 1496.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   436224.081 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (436224.081, 436224.081, 436224.081), stdev = 0.001
[info]   CI (99.9%): [436224.080, 436224.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   1486.313 ±(99.9%) 728.128 MB/sec [Average]
[info]   (min, avg, max) = (1342.026, 1486.313, 1696.640), stdev = 189.093
[info]   CI (99.9%): [758.185, 2214.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   437301.606 ±(99.9%) 214340.957 B/op [Average]
[info]   (min, avg, max) = (394583.994, 437301.606, 498633.863), stdev = 55663.666
[info]   CI (99.9%): [222960.649, 651642.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.047 ±(99.9%) 0.069 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.047, 0.065), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   13.780 ±(99.9%) 20.259 B/op [Average]
[info]   (min, avg, max) = (6.141, 13.780, 19.115), stdev = 5.261
[info]   CI (99.9%): [≈ 0, 34.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 11.000), stdev = 2.168
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson
[info] # Run progress: 69.51% complete, ETA 00:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15322.945 ops/s
[info] # Warmup Iteration   2: 22469.306 ops/s
[info] # Warmup Iteration   3: 22457.960 ops/s
[info] # Warmup Iteration   4: 22510.828 ops/s
[info] # Warmup Iteration   5: 22528.747 ops/s
[info] Iteration   1: 22593.748 ops/s
[info]                  ·gc.alloc.rate:                   377.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              26319.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22551.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.900 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 22446.077 ops/s
[info]                  ·gc.alloc.rate:               375.523 MB/sec
[info]                  ·gc.alloc.rate.norm:          26319.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22864.179 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 22479.586 ops/s
[info]                  ·gc.alloc.rate:               376.082 MB/sec
[info]                  ·gc.alloc.rate.norm:          26319.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45799.121 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 22260.685 ops/s
[info]                  ·gc.alloc.rate:               372.432 MB/sec
[info]                  ·gc.alloc.rate.norm:          26319.840 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23194.416 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   5: 22405.880 ops/s
[info]                  ·gc.alloc.rate:                   374.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              26319.702 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23138.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.462 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson":
[info]   22437.195 ±(99.9%) 465.758 ops/s [Average]
[info]   (min, avg, max) = (22260.685, 22437.195, 22593.748), stdev = 120.956
[info]   CI (99.9%): [21971.438, 22902.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   375.373 ±(99.9%) 7.775 MB/sec [Average]
[info]   (min, avg, max) = (372.432, 375.373, 377.990), stdev = 2.019
[info]   CI (99.9%): [367.598, 383.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   26319.821 ±(99.9%) 0.545 B/op [Average]
[info]   (min, avg, max) = (26319.652, 26319.821, 26319.960), stdev = 0.141
[info]   CI (99.9%): [26319.277, 26320.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   392.449 ±(99.9%) 563.965 MB/sec [Average]
[info]   (min, avg, max) = (323.867, 392.449, 654.417), stdev = 146.460
[info]   CI (99.9%): [≈ 0, 956.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   27509.538 ±(99.9%) 39382.007 B/op [Average]
[info]   (min, avg, max) = (22551.019, 27509.538, 45799.121), stdev = 10227.382
[info]   CI (99.9%): [≈ 0, 66891.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.872 ±(99.9%) 4.999 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.872, 2.900), stdev = 1.298
[info]   CI (99.9%): [≈ 0, 5.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.400, 12.000), stdev = 4.722
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter
[info] # Run progress: 70.73% complete, ETA 00:06:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29477.448 ops/s
[info] # Warmup Iteration   2: 34477.476 ops/s
[info] # Warmup Iteration   3: 34025.023 ops/s
[info] # Warmup Iteration   4: 33677.276 ops/s
[info] # Warmup Iteration   5: 33690.275 ops/s
[info] Iteration   1: 34218.130 ops/s
[info]                  ·gc.alloc.rate:               262.393 MB/sec
[info]                  ·gc.alloc.rate.norm:          12064.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11765.572 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 33962.910 ops/s
[info]                  ·gc.alloc.rate:                   260.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              12064.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15048.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.245 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 103.990 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 34360.077 ops/s
[info]                  ·gc.alloc.rate:      263.487 MB/sec
[info]                  ·gc.alloc.rate.norm: 12064.014 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 34089.120 ops/s
[info]                  ·gc.alloc.rate:                   261.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              12064.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14993.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.845 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 34199.496 ops/s
[info]                  ·gc.alloc.rate:               262.234 MB/sec
[info]                  ·gc.alloc.rate.norm:          12064.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14960.387 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter":
[info]   34165.947 ±(99.9%) 573.286 ops/s [Average]
[info]   (min, avg, max) = (33962.910, 34165.947, 34360.077), stdev = 148.880
[info]   CI (99.9%): [33592.661, 34739.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   261.991 ±(99.9%) 4.393 MB/sec [Average]
[info]   (min, avg, max) = (260.443, 261.991, 263.487), stdev = 1.141
[info]   CI (99.9%): [257.598, 266.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   12064.013 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12064.013, 12064.013, 12064.014), stdev = 0.001
[info]   CI (99.9%): [12064.011, 12064.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   246.171 ±(99.9%) 542.277 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 246.171, 325.193), stdev = 140.828
[info]   CI (99.9%): [≈ 0, 788.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   11353.714 ±(99.9%) 25028.335 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11353.714, 15048.893), stdev = 6499.779
[info]   CI (99.9%): [≈ 0, 36382.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.466 ±(99.9%) 3.833 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.466, 2.245), stdev = 0.995
[info]   CI (99.9%): [≈ 0, 4.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   21.567 ±(99.9%) 177.537 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 21.567, 103.990), stdev = 46.106
[info]   CI (99.9%): [≈ 0, 199.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.800, 5.000), stdev = 1.789
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay
[info] # Run progress: 71.95% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2701.539 ops/s
[info] # Warmup Iteration   2: 4355.304 ops/s
[info] # Warmup Iteration   3: 4533.004 ops/s
[info] # Warmup Iteration   4: 4552.437 ops/s
[info] # Warmup Iteration   5: 4533.110 ops/s
[info] Iteration   1: 4439.872 ops/s
[info]                  ·gc.alloc.rate:                   1327.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              470334.869 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     469627.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.757 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 4481.189 ops/s
[info]                  ·gc.alloc.rate:                   1339.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              470337.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     468139.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.933 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4528.309 ops/s
[info]                  ·gc.alloc.rate:                   1353.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              470335.138 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     465827.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.470 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 4542.942 ops/s
[info]                  ·gc.alloc.rate:                   1358.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              470335.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     466136.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.845 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 4576.227 ops/s
[info]                  ·gc.alloc.rate:                   1368.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              470336.402 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     464379.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.478 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay":
[info]   4513.708 ±(99.9%) 206.340 ops/s [Average]
[info]   (min, avg, max) = (4439.872, 4513.708, 4576.227), stdev = 53.586
[info]   CI (99.9%): [4307.368, 4720.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1349.429 ±(99.9%) 61.603 MB/sec [Average]
[info]   (min, avg, max) = (1327.394, 1349.429, 1368.154), stdev = 15.998
[info]   CI (99.9%): [1287.826, 1411.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   470335.885 ±(99.9%) 3.453 B/op [Average]
[info]   (min, avg, max) = (470334.869, 470335.885, 470337.048), stdev = 0.897
[info]   CI (99.9%): [470332.431, 470339.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1339.292 ±(99.9%) 38.845 MB/sec [Average]
[info]   (min, avg, max) = (1325.398, 1339.292, 1350.825), stdev = 10.088
[info]   CI (99.9%): [1300.448, 1378.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   466822.159 ±(99.9%) 7946.293 B/op [Average]
[info]   (min, avg, max) = (464379.190, 466822.159, 469627.936), stdev = 2063.627
[info]   CI (99.9%): [458875.866, 474768.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   20.297 ±(99.9%) 22.925 B/op [Average]
[info]   (min, avg, max) = (14.470, 20.297, 28.845), stdev = 5.954
[info]   CI (99.9%): [≈ 0, 43.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.800, 15.000), stdev = 4.868
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 73.17% complete, ETA 00:05:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 101668.893 ops/s
[info] # Warmup Iteration   2: 683616.865 ops/s
[info] # Warmup Iteration   3: 688650.721 ops/s
[info] # Warmup Iteration   4: 680986.832 ops/s
[info] # Warmup Iteration   5: 696815.098 ops/s
[info] Iteration   1: 698856.405 ops/s
[info]                  ·gc.alloc.rate:                   1535.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3013.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 699644.604 ops/s
[info]                  ·gc.alloc.rate:                   1536.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3781.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 677035.977 ops/s
[info]                  ·gc.alloc.rate:                   1487.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3137.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 691879.813 ops/s
[info]                  ·gc.alloc.rate:                   1519.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3848.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 684775.970 ops/s
[info]                  ·gc.alloc.rate:                   1504.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3116.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson":
[info]   690438.554 ±(99.9%) 37003.402 ops/s [Average]
[info]   (min, avg, max) = (677035.977, 690438.554, 699644.604), stdev = 9609.666
[info]   CI (99.9%): [653435.152, 727441.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1516.721 ±(99.9%) 81.299 MB/sec [Average]
[info]   (min, avg, max) = (1487.257, 1516.721, 1536.942), stdev = 21.113
[info]   CI (99.9%): [1435.422, 1598.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   3456.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3456.001, 3456.001, 3456.001), stdev = 0.001
[info]   CI (99.9%): [3456.001, 3456.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1483.911 ±(99.9%) 714.583 MB/sec [Average]
[info]   (min, avg, max) = (1338.830, 1483.911, 1692.375), stdev = 185.575
[info]   CI (99.9%): [769.328, 2198.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3379.492 ±(99.9%) 1543.677 B/op [Average]
[info]   (min, avg, max) = (3013.895, 3379.492, 3848.262), stdev = 400.888
[info]   CI (99.9%): [1835.815, 4923.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.095 ±(99.9%) 0.125 B/op [Average]
[info]   (min, avg, max) = (0.048, 0.095, 0.140), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.400, 10.000), stdev = 1.673
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 74.39% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2051761.969 ops/s
[info] # Warmup Iteration   2: 2366753.705 ops/s
[info] # Warmup Iteration   3: 2387966.077 ops/s
[info] # Warmup Iteration   4: 2405995.320 ops/s
[info] # Warmup Iteration   5: 2416014.580 ops/s
[info] Iteration   1: 2422940.752 ops/s
[info]                  ·gc.alloc.rate:                   468.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2420520.972 ops/s
[info]                  ·gc.alloc.rate:                   467.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     423.841 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2425424.669 ops/s
[info]                  ·gc.alloc.rate:               468.681 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 211.600 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2412955.023 ops/s
[info]                  ·gc.alloc.rate:                   466.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     426.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2418556.570 ops/s
[info]                  ·gc.alloc.rate:                   467.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     213.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter":
[info]   2420079.597 ±(99.9%) 18268.251 ops/s [Average]
[info]   (min, avg, max) = (2412955.023, 2420079.597, 2425424.669), stdev = 4744.207
[info]   CI (99.9%): [2401811.346, 2438347.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   467.653 ±(99.9%) 3.515 MB/sec [Average]
[info]   (min, avg, max) = (466.274, 467.653, 468.681), stdev = 0.913
[info]   CI (99.9%): [464.138, 471.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.187 ±(99.9%) 688.146 MB/sec [Average]
[info]   (min, avg, max) = (325.893, 457.187, 653.786), stdev = 178.709
[info]   CI (99.9%): [≈ 0, 1145.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   297.317 ±(99.9%) 449.013 B/op [Average]
[info]   (min, avg, max) = (211.600, 297.317, 426.254), stdev = 116.607
[info]   CI (99.9%): [≈ 0, 746.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.100 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.068), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 4.000), stdev = 1.140
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 75.61% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 113555.347 ops/s
[info] # Warmup Iteration   2: 241778.095 ops/s
[info] # Warmup Iteration   3: 248933.849 ops/s
[info] # Warmup Iteration   4: 250256.359 ops/s
[info] # Warmup Iteration   5: 249228.175 ops/s
[info] Iteration   1: 247836.480 ops/s
[info]                  ·gc.alloc.rate:               971.653 MB/sec
[info]                  ·gc.alloc.rate.norm:          6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6246.157 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 250103.940 ops/s
[info]                  ·gc.alloc.rate:                   980.546 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6218.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.655 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 246342.466 ops/s
[info]                  ·gc.alloc.rate:                   965.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6347.951 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.399 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 247959.496 ops/s
[info]                  ·gc.alloc.rate:                   972.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6335.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.396 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 249000.623 ops/s
[info]                  ·gc.alloc.rate:                   976.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6339.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay":
[info]   248248.601 ±(99.9%) 5409.639 ops/s [Average]
[info]   (min, avg, max) = (246342.466, 248248.601, 250103.940), stdev = 1404.866
[info]   CI (99.9%): [242838.962, 253658.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   973.271 ±(99.9%) 21.196 MB/sec [Average]
[info]   (min, avg, max) = (965.799, 973.271, 980.546), stdev = 5.505
[info]   CI (99.9%): [952.075, 994.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.692 ±(99.9%) 29.609 MB/sec [Average]
[info]   (min, avg, max) = (983.964, 993.692, 1003.267), stdev = 7.689
[info]   CI (99.9%): [964.083, 1023.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6297.580 ±(99.9%) 232.484 B/op [Average]
[info]   (min, avg, max) = (6218.792, 6297.580, 6347.951), stdev = 60.375
[info]   CI (99.9%): [6065.096, 6530.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.343 ±(99.9%) 0.918 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.343, 0.655), stdev = 0.238
[info]   CI (99.9%): [≈ 0, 1.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 9.000), stdev = 3.114
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce
[info] # Run progress: 76.83% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 401150.288 ops/s
[info] # Warmup Iteration   2: 603274.535 ops/s
[info] # Warmup Iteration   3: 617863.079 ops/s
[info] # Warmup Iteration   4: 629284.727 ops/s
[info] # Warmup Iteration   5: 618692.012 ops/s
[info] Iteration   1: 609435.613 ops/s
[info]                  ·gc.alloc.rate:                   1555.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4331.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 607711.600 ops/s
[info]                  ·gc.alloc.rate:                   1551.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3491.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 612642.968 ops/s
[info]                  ·gc.alloc.rate:                   1563.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4343.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 615937.985 ops/s
[info]                  ·gc.alloc.rate:                   1572.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4330.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 612745.954 ops/s
[info]                  ·gc.alloc.rate:                   1564.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1358.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3487.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce":
[info]   611694.824 ±(99.9%) 12324.824 ops/s [Average]
[info]   (min, avg, max) = (607711.600, 611694.824, 615937.985), stdev = 3200.718
[info]   CI (99.9%): [599370.000, 624019.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1561.449 ±(99.9%) 31.427 MB/sec [Average]
[info]   (min, avg, max) = (1551.285, 1561.449, 1572.252), stdev = 8.161
[info]   CI (99.9%): [1530.022, 1592.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4016.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4016.001, 4016.001, 4016.001), stdev = 0.001
[info]   CI (99.9%): [4016.001, 4016.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1554.318 ±(99.9%) 706.542 MB/sec [Average]
[info]   (min, avg, max) = (1348.805, 1554.318, 1695.294), stdev = 183.487
[info]   CI (99.9%): [847.776, 2260.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3996.854 ±(99.9%) 1783.621 B/op [Average]
[info]   (min, avg, max) = (3487.137, 3996.854, 4343.177), stdev = 463.201
[info]   CI (99.9%): [2213.234, 5780.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.097 ±(99.9%) 0.174 B/op [Average]
[info]   (min, avg, max) = (0.053, 0.097, 0.162), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 10.000), stdev = 2.683
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson
[info] # Run progress: 78.05% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1001128.053 ops/s
[info] # Warmup Iteration   2: 1477636.102 ops/s
[info] # Warmup Iteration   3: 1467620.916 ops/s
[info] # Warmup Iteration   4: 1461875.470 ops/s
[info] # Warmup Iteration   5: 1464307.090 ops/s
[info] Iteration   1: 1483992.144 ops/s
[info]                  ·gc.alloc.rate:               845.168 MB/sec
[info]                  ·gc.alloc.rate.norm:          896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 693.078 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 1481051.809 ops/s
[info]                  ·gc.alloc.rate:                   843.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1048.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1468152.207 ops/s
[info]                  ·gc.alloc.rate:               836.152 MB/sec
[info]                  ·gc.alloc.rate.norm:          896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1064.401 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1474313.203 ops/s
[info]                  ·gc.alloc.rate:               839.663 MB/sec
[info]                  ·gc.alloc.rate.norm:          896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 709.717 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 1485122.207 ops/s
[info]                  ·gc.alloc.rate:                   845.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1061.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson":
[info]   1478526.314 ±(99.9%) 27575.264 ops/s [Average]
[info]   (min, avg, max) = (1468152.207, 1478526.314, 1485122.207), stdev = 7161.208
[info]   CI (99.9%): [1450951.050, 1506101.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   842.056 ±(99.9%) 15.675 MB/sec [Average]
[info]   (min, avg, max) = (836.152, 842.056, 845.784), stdev = 4.071
[info]   CI (99.9%): [826.381, 857.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   896.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (896.000, 896.000, 896.000), stdev = 0.001
[info]   CI (99.9%): [896.000, 896.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   860.145 ±(99.9%) 706.034 MB/sec [Average]
[info]   (min, avg, max) = (653.758, 860.145, 1001.924), stdev = 183.355
[info]   CI (99.9%): [154.111, 1566.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   915.329 ±(99.9%) 752.714 B/op [Average]
[info]   (min, avg, max) = (693.078, 915.329, 1064.401), stdev = 195.478
[info]   CI (99.9%): [162.615, 1668.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.076 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.044), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 8.000), stdev = 2.408
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter
[info] # Run progress: 79.27% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4059065.750 ops/s
[info] # Warmup Iteration   2: 4460171.342 ops/s
[info] # Warmup Iteration   3: 4558786.690 ops/s
[info] # Warmup Iteration   4: 4610195.888 ops/s
[info] # Warmup Iteration   5: 4634417.938 ops/s
[info] Iteration   1: 4617819.331 ops/s
[info]                  ·gc.alloc.rate:                   704.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     333.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4609210.186 ops/s
[info]                  ·gc.alloc.rate:                   703.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     223.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 4549701.229 ops/s
[info]                  ·gc.alloc.rate:                   694.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 4541919.581 ops/s
[info]                  ·gc.alloc.rate:               692.865 MB/sec
[info]                  ·gc.alloc.rate.norm:          240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 228.753 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 4582081.205 ops/s
[info]                  ·gc.alloc.rate:                   698.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter":
[info]   4580146.306 ±(99.9%) 131372.647 ops/s [Average]
[info]   (min, avg, max) = (4541919.581, 4580146.306, 4617819.331), stdev = 34117.059
[info]   CI (99.9%): [4448773.659, 4711518.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   698.745 ±(99.9%) 19.808 MB/sec [Average]
[info]   (min, avg, max) = (692.865, 698.745, 704.439), stdev = 5.144
[info]   CI (99.9%): [678.938, 718.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   723.282 ±(99.9%) 552.640 MB/sec [Average]
[info]   (min, avg, max) = (655.739, 723.282, 979.967), stdev = 143.519
[info]   CI (99.9%): [170.642, 1275.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   248.261 ±(99.9%) 184.419 B/op [Average]
[info]   (min, avg, max) = (223.826, 248.261, 333.871), stdev = 47.893
[info]   CI (99.9%): [63.842, 432.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.030 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.022), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 7.000), stdev = 1.483
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay
[info] # Run progress: 80.49% complete, ETA 00:04:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 201655.143 ops/s
[info] # Warmup Iteration   2: 381717.968 ops/s
[info] # Warmup Iteration   3: 384762.964 ops/s
[info] # Warmup Iteration   4: 381074.330 ops/s
[info] # Warmup Iteration   5: 381486.352 ops/s
[info] Iteration   1: 377717.735 ops/s
[info]                  ·gc.alloc.rate:                   1300.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5515.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 380768.769 ops/s
[info]                  ·gc.alloc.rate:                   1310.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5506.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.344 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 379545.427 ops/s
[info]                  ·gc.alloc.rate:                   1306.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5553.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 378034.930 ops/s
[info]                  ·gc.alloc.rate:                   1301.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5602.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 378359.388 ops/s
[info]                  ·gc.alloc.rate:                   1302.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5614.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay":
[info]   378885.250 ±(99.9%) 4850.185 ops/s [Average]
[info]   (min, avg, max) = (377717.735, 378885.250, 380768.769), stdev = 1259.578
[info]   CI (99.9%): [374035.065, 383735.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1304.316 ±(99.9%) 16.698 MB/sec [Average]
[info]   (min, avg, max) = (1300.309, 1304.316, 1310.786), stdev = 4.336
[info]   CI (99.9%): [1287.618, 1321.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5416.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5416.001, 5416.001, 5416.001), stdev = 0.001
[info]   CI (99.9%): [5416.001, 5416.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1338.611 ±(99.9%) 40.109 MB/sec [Average]
[info]   (min, avg, max) = (1324.153, 1338.611, 1350.145), stdev = 10.416
[info]   CI (99.9%): [1298.503, 1378.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5558.468 ±(99.9%) 188.224 B/op [Average]
[info]   (min, avg, max) = (5506.880, 5558.468, 5614.086), stdev = 48.881
[info]   CI (99.9%): [5370.244, 5746.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.190 ±(99.9%) 0.362 B/op [Average]
[info]   (min, avg, max) = (0.087, 0.190, 0.344), stdev = 0.094
[info]   CI (99.9%): [≈ 0, 0.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 12.000), stdev = 3.507
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce
[info] # Run progress: 81.71% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 141093.464 ops/s
[info] # Warmup Iteration   2: 351125.640 ops/s
[info] # Warmup Iteration   3: 360548.743 ops/s
[info] # Warmup Iteration   4: 361199.451 ops/s
[info] # Warmup Iteration   5: 360477.025 ops/s
[info] Iteration   1: 360475.572 ops/s
[info]                  ·gc.alloc.rate:                   1072.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5715.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 357859.854 ops/s
[info]                  ·gc.alloc.rate:                   1064.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.676 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4355.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 360595.401 ops/s
[info]                  ·gc.alloc.rate:               1072.705 MB/sec
[info]                  ·gc.alloc.rate.norm:          4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      996.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4348.253 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 357887.951 ops/s
[info]                  ·gc.alloc.rate:                   1064.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4404.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 359523.427 ops/s
[info]                  ·gc.alloc.rate:               1069.508 MB/sec
[info]                  ·gc.alloc.rate.norm:          4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4402.044 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce":
[info]   359268.441 ±(99.9%) 5156.440 ops/s [Average]
[info]   (min, avg, max) = (357859.854, 359268.441, 360595.401), stdev = 1339.111
[info]   CI (99.9%): [354112.001, 364424.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1068.755 ±(99.9%) 15.342 MB/sec [Average]
[info]   (min, avg, max) = (1064.574, 1068.755, 1072.705), stdev = 3.984
[info]   CI (99.9%): [1053.413, 1084.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4680.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4680.001, 4680.001, 4680.001), stdev = 0.001
[info]   CI (99.9%): [4680.001, 4680.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1060.974 ±(99.9%) 535.549 MB/sec [Average]
[info]   (min, avg, max) = (990.676, 1060.974, 1309.555), stdev = 139.080
[info]   CI (99.9%): [525.425, 1596.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4645.052 ±(99.9%) 2305.820 B/op [Average]
[info]   (min, avg, max) = (4348.253, 4645.052, 5715.238), stdev = 598.814
[info]   CI (99.9%): [2339.232, 6950.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.110 ±(99.9%) 0.385 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.110, 0.183), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 10.000), stdev = 2.510
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson
[info] # Run progress: 82.93% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106269.803 ops/s
[info] # Warmup Iteration   2: 758017.115 ops/s
[info] # Warmup Iteration   3: 765326.575 ops/s
[info] # Warmup Iteration   4: 767182.279 ops/s
[info] # Warmup Iteration   5: 766987.679 ops/s
[info] Iteration   1: 761451.901 ops/s
[info]                  ·gc.alloc.rate:                   1196.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2061.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 768464.257 ops/s
[info]                  ·gc.alloc.rate:                   1207.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2739.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 773868.285 ops/s
[info]                  ·gc.alloc.rate:                   1215.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2733.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 762867.662 ops/s
[info]                  ·gc.alloc.rate:                   1198.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2086.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 756461.329 ops/s
[info]                  ·gc.alloc.rate:               1188.688 MB/sec
[info]                  ·gc.alloc.rate.norm:          2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1351.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2811.495 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson":
[info]   764622.687 ±(99.9%) 25829.506 ops/s [Average]
[info]   (min, avg, max) = (756461.329, 764622.687, 773868.285), stdev = 6707.841
[info]   CI (99.9%): [738793.181, 790452.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1201.446 ±(99.9%) 40.491 MB/sec [Average]
[info]   (min, avg, max) = (1188.688, 1201.446, 1215.968), stdev = 10.515
[info]   CI (99.9%): [1160.955, 1241.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   2472.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2472.001, 2472.001, 2472.001), stdev = 0.001
[info]   CI (99.9%): [2472.000, 2472.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1208.974 ±(99.9%) 717.601 MB/sec [Average]
[info]   (min, avg, max) = (997.945, 1208.974, 1351.938), stdev = 186.359
[info]   CI (99.9%): [491.373, 1926.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2486.792 ±(99.9%) 1454.657 B/op [Average]
[info]   (min, avg, max) = (2061.893, 2486.792, 2811.495), stdev = 377.770
[info]   CI (99.9%): [1032.135, 3941.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.051 ±(99.9%) 0.138 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.051, 0.086), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 3.082
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter
[info] # Run progress: 84.15% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2194949.373 ops/s
[info] # Warmup Iteration   2: 2479403.759 ops/s
[info] # Warmup Iteration   3: 2515865.953 ops/s
[info] # Warmup Iteration   4: 2536573.008 ops/s
[info] # Warmup Iteration   5: 2542583.242 ops/s
[info] Iteration   1: 2560397.386 ops/s
[info]                  ·gc.alloc.rate:                   533.820 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     200.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2500942.997 ops/s
[info]                  ·gc.alloc.rate:                   521.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     410.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2543651.185 ops/s
[info]                  ·gc.alloc.rate:                   530.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     404.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2524897.409 ops/s
[info]                  ·gc.alloc.rate:               526.382 MB/sec
[info]                  ·gc.alloc.rate.norm:          328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 204.302 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 2512506.174 ops/s
[info]                  ·gc.alloc.rate:                   523.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     411.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter":
[info]   2528479.030 ±(99.9%) 91835.416 ops/s [Average]
[info]   (min, avg, max) = (2500942.997, 2528479.030, 2560397.386), stdev = 23849.366
[info]   CI (99.9%): [2436643.614, 2620314.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   527.140 ±(99.9%) 19.188 MB/sec [Average]
[info]   (min, avg, max) = (521.397, 527.140, 533.820), stdev = 4.983
[info]   CI (99.9%): [507.952, 546.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (328.000, 328.000, 328.000), stdev = 0.001
[info]   CI (99.9%): [328.000, 328.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   523.326 ±(99.9%) 690.567 MB/sec [Average]
[info]   (min, avg, max) = (325.893, 523.326, 656.717), stdev = 179.338
[info]   CI (99.9%): [≈ 0, 1213.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   326.109 ±(99.9%) 435.460 B/op [Average]
[info]   (min, avg, max) = (200.242, 326.109, 411.231), stdev = 113.088
[info]   CI (99.9%): [≈ 0, 761.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.077 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.052), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.800, 9.000), stdev = 3.033
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay
[info] # Run progress: 85.37% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 102736.071 ops/s
[info] # Warmup Iteration   2: 246714.255 ops/s
[info] # Warmup Iteration   3: 251190.265 ops/s
[info] # Warmup Iteration   4: 253506.263 ops/s
[info] # Warmup Iteration   5: 256653.411 ops/s
[info] Iteration   1: 256852.519 ops/s
[info]                  ·gc.alloc.rate:               946.904 MB/sec
[info]                  ·gc.alloc.rate.norm:          5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6026.815 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 256912.324 ops/s
[info]                  ·gc.alloc.rate:                   947.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4031.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.383 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 259171.823 ops/s
[info]                  ·gc.alloc.rate:                   955.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6017.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.253 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 256335.924 ops/s
[info]                  ·gc.alloc.rate:                   945.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6122.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.383 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 255980.869 ops/s
[info]                  ·gc.alloc.rate:                   943.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6156.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay":
[info]   257050.692 ±(99.9%) 4799.048 ops/s [Average]
[info]   (min, avg, max) = (255980.869, 257050.692, 259171.823), stdev = 1246.297
[info]   CI (99.9%): [252251.644, 261849.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   947.649 ±(99.9%) 17.641 MB/sec [Average]
[info]   (min, avg, max) = (943.674, 947.649, 955.437), stdev = 4.581
[info]   CI (99.9%): [930.008, 965.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.002, 5800.002, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.002, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.581 ±(99.9%) 577.781 MB/sec [Average]
[info]   (min, avg, max) = (658.435, 926.581, 1001.599), stdev = 150.048
[info]   CI (99.9%): [348.800, 1504.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5671.032 ±(99.9%) 3535.880 B/op [Average]
[info]   (min, avg, max) = (4031.902, 5671.032, 6156.023), stdev = 918.257
[info]   CI (99.9%): [2135.152, 9206.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.255 ±(99.9%) 0.602 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.255, 0.383), stdev = 0.156
[info]   CI (99.9%): [≈ 0, 0.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 10.000), stdev = 2.387
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce
[info] # Run progress: 86.59% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 142179.719 ops/s
[info] # Warmup Iteration   2: 335808.029 ops/s
[info] # Warmup Iteration   3: 343130.573 ops/s
[info] # Warmup Iteration   4: 338898.863 ops/s
[info] # Warmup Iteration   5: 339622.013 ops/s
[info] Iteration   1: 339861.974 ops/s
[info]                  ·gc.alloc.rate:                   985.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4536.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 339101.719 ops/s
[info]                  ·gc.alloc.rate:                   982.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4583.680 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 338597.694 ops/s
[info]                  ·gc.alloc.rate:                   981.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4615.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.290 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 343133.627 ops/s
[info]                  ·gc.alloc.rate:                   994.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4584.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 343146.754 ops/s
[info]                  ·gc.alloc.rate:                   994.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4602.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce":
[info]   340768.354 ±(99.9%) 8515.555 ops/s [Average]
[info]   (min, avg, max) = (338597.694, 340768.354, 343146.754), stdev = 2211.462
[info]   CI (99.9%): [332252.799, 349283.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   987.709 ±(99.9%) 24.574 MB/sec [Average]
[info]   (min, avg, max) = (981.430, 987.709, 994.570), stdev = 6.382
[info]   CI (99.9%): [963.135, 1012.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4560.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4560.001, 4560.001, 4560.001), stdev = 0.001
[info]   CI (99.9%): [4560.001, 4560.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   993.048 ±(99.9%) 36.618 MB/sec [Average]
[info]   (min, avg, max) = (980.013, 993.048, 1003.945), stdev = 9.510
[info]   CI (99.9%): [956.430, 1029.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4584.635 ±(99.9%) 115.549 B/op [Average]
[info]   (min, avg, max) = (4536.412, 4584.635, 4615.274), stdev = 30.008
[info]   CI (99.9%): [4469.086, 4700.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.154 ±(99.9%) 0.335 B/op [Average]
[info]   (min, avg, max) = (0.095, 0.154, 0.290), stdev = 0.087
[info]   CI (99.9%): [≈ 0, 0.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson
[info] # Run progress: 87.80% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 85973.147 ops/s
[info] # Warmup Iteration   2: 526213.946 ops/s
[info] # Warmup Iteration   3: 748516.694 ops/s
[info] # Warmup Iteration   4: 750366.930 ops/s
[info] # Warmup Iteration   5: 745628.855 ops/s
[info] Iteration   1: 747236.362 ops/s
[info]                  ·gc.alloc.rate:                   1113.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2094.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 764166.136 ops/s
[info]                  ·gc.alloc.rate:                   1138.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2746.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 764305.111 ops/s
[info]                  ·gc.alloc.rate:                   1138.754 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2069.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 767691.551 ops/s
[info]                  ·gc.alloc.rate:                   1143.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2067.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 767530.663 ops/s
[info]                  ·gc.alloc.rate:                   1143.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2764.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson":
[info]   762185.964 ±(99.9%) 32831.102 ops/s [Average]
[info]   (min, avg, max) = (747236.362, 762185.964, 767691.551), stdev = 8526.133
[info]   CI (99.9%): [729354.863, 795017.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1135.626 ±(99.9%) 48.907 MB/sec [Average]
[info]   (min, avg, max) = (1113.359, 1135.626, 1143.838), stdev = 12.701
[info]   CI (99.9%): [1086.718, 1184.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2344.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2344.001, 2344.001, 2344.001), stdev = 0.001
[info]   CI (99.9%): [2344.000, 2344.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1138.356 ±(99.9%) 714.877 MB/sec [Average]
[info]   (min, avg, max) = (994.664, 1138.356, 1348.896), stdev = 185.651
[info]   CI (99.9%): [423.478, 1853.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2348.407 ±(99.9%) 1432.846 B/op [Average]
[info]   (min, avg, max) = (2067.003, 2348.407, 2764.806), stdev = 372.105
[info]   CI (99.9%): [915.562, 3781.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.104 ±(99.9%) 0.194 B/op [Average]
[info]   (min, avg, max) = (0.043, 0.104, 0.175), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 10.000), stdev = 3.362
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 89.02% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1827582.129 ops/s
[info] # Warmup Iteration   2: 2050077.895 ops/s
[info] # Warmup Iteration   3: 2039254.147 ops/s
[info] # Warmup Iteration   4: 2035872.691 ops/s
[info] # Warmup Iteration   5: 2021493.480 ops/s
[info] Iteration   1: 2032643.526 ops/s
[info]                  ·gc.alloc.rate:                   496.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     504.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2041547.428 ops/s
[info]                  ·gc.alloc.rate:                   498.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     502.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2047980.862 ops/s
[info]                  ·gc.alloc.rate:               499.868 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 251.110 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2041973.409 ops/s
[info]                  ·gc.alloc.rate:                   498.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     504.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2044693.395 ops/s
[info]                  ·gc.alloc.rate:                   499.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     252.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter":
[info]   2041767.724 ±(99.9%) 21994.599 ops/s [Average]
[info]   (min, avg, max) = (2032643.526, 2041767.724, 2047980.862), stdev = 5711.928
[info]   CI (99.9%): [2019773.124, 2063762.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   498.348 ±(99.9%) 5.347 MB/sec [Average]
[info]   (min, avg, max) = (496.134, 498.348, 499.868), stdev = 1.389
[info]   CI (99.9%): [493.002, 503.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   384.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (384.000, 384.000, 384.000), stdev = 0.001
[info]   CI (99.9%): [384.000, 384.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.601 ±(99.9%) 686.266 MB/sec [Average]
[info]   (min, avg, max) = (326.880, 522.601, 654.740), stdev = 178.221
[info]   CI (99.9%): [≈ 0, 1208.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   402.914 ±(99.9%) 531.563 B/op [Average]
[info]   (min, avg, max) = (251.110, 402.914, 504.463), stdev = 138.045
[info]   CI (99.9%): [≈ 0, 934.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.070 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.048), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 6.000), stdev = 2.236
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay
[info] # Run progress: 90.24% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108134.981 ops/s
[info] # Warmup Iteration   2: 255671.720 ops/s
[info] # Warmup Iteration   3: 258617.196 ops/s
[info] # Warmup Iteration   4: 259341.531 ops/s
[info] # Warmup Iteration   5: 258861.057 ops/s
[info] Iteration   1: 259925.183 ops/s
[info]                  ·gc.alloc.rate:                   987.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5951.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 260468.871 ops/s
[info]                  ·gc.alloc.rate:                   989.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5963.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.629 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 256028.754 ops/s
[info]                  ·gc.alloc.rate:                   972.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6107.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 259125.445 ops/s
[info]                  ·gc.alloc.rate:               984.282 MB/sec
[info]                  ·gc.alloc.rate.norm:          5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      997.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6058.829 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 257435.323 ops/s
[info]                  ·gc.alloc.rate:                   977.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6131.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.255 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay":
[info]   258596.715 ±(99.9%) 7072.147 ops/s [Average]
[info]   (min, avg, max) = (256028.754, 258596.715, 260468.871), stdev = 1836.614
[info]   CI (99.9%): [251524.568, 265668.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   982.277 ±(99.9%) 26.889 MB/sec [Average]
[info]   (min, avg, max) = (972.520, 982.277, 989.387), stdev = 6.983
[info]   CI (99.9%): [955.388, 1009.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   5976.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5976.002, 5976.002, 5976.002), stdev = 0.001
[info]   CI (99.9%): [5976.001, 5976.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.142 ±(99.9%) 30.851 MB/sec [Average]
[info]   (min, avg, max) = (983.294, 993.142, 1003.251), stdev = 8.012
[info]   CI (99.9%): [962.291, 1023.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6042.511 ±(99.9%) 315.882 B/op [Average]
[info]   (min, avg, max) = (5951.470, 6042.511, 6131.226), stdev = 82.033
[info]   CI (99.9%): [5726.629, 6358.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.278 ±(99.9%) 0.866 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.278, 0.629), stdev = 0.225
[info]   CI (99.9%): [≈ 0, 1.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 9.000), stdev = 2.280
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce
[info] # Run progress: 91.46% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 360779.711 ops/s
[info] # Warmup Iteration   2: 612274.796 ops/s
[info] # Warmup Iteration   3: 632918.840 ops/s
[info] # Warmup Iteration   4: 628960.321 ops/s
[info] # Warmup Iteration   5: 629879.964 ops/s
[info] Iteration   1: 631343.889 ops/s
[info]                  ·gc.alloc.rate:                   1235.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3319.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 632118.842 ops/s
[info]                  ·gc.alloc.rate:                   1237.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2498.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 622159.055 ops/s
[info]                  ·gc.alloc.rate:               1217.954 MB/sec
[info]                  ·gc.alloc.rate.norm:          3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3400.785 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 628405.566 ops/s
[info]                  ·gc.alloc.rate:                   1230.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3380.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 617961.145 ops/s
[info]                  ·gc.alloc.rate:                   1209.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2583.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce":
[info]   626397.699 ±(99.9%) 23609.295 ops/s [Average]
[info]   (min, avg, max) = (617961.145, 626397.699, 632118.842), stdev = 6131.259
[info]   CI (99.9%): [602788.404, 650006.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1226.298 ±(99.9%) 46.257 MB/sec [Average]
[info]   (min, avg, max) = (1209.788, 1226.298, 1237.510), stdev = 12.013
[info]   CI (99.9%): [1180.041, 1272.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3080.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3080.001, 3080.001, 3080.001), stdev = 0.001
[info]   CI (99.9%): [3080.001, 3080.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1209.200 ±(99.9%) 702.768 MB/sec [Average]
[info]   (min, avg, max) = (1003.936, 1209.200, 1350.164), stdev = 182.507
[info]   CI (99.9%): [506.431, 1911.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3036.647 ±(99.9%) 1748.767 B/op [Average]
[info]   (min, avg, max) = (2498.667, 3036.647, 3400.785), stdev = 454.149
[info]   CI (99.9%): [1287.880, 4785.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.042 ±(99.9%) 0.090 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.053), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 9.000), stdev = 2.074
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson
[info] # Run progress: 92.68% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 967248.101 ops/s
[info] # Warmup Iteration   2: 1328316.201 ops/s
[info] # Warmup Iteration   3: 1330629.358 ops/s
[info] # Warmup Iteration   4: 1340862.868 ops/s
[info] # Warmup Iteration   5: 1338796.757 ops/s
[info] Iteration   1: 1327910.947 ops/s
[info]                  ·gc.alloc.rate:                   634.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     772.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1300503.226 ops/s
[info]                  ·gc.alloc.rate:                   621.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     792.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1345300.659 ops/s
[info]                  ·gc.alloc.rate:                   643.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     770.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1326956.693 ops/s
[info]                  ·gc.alloc.rate:               634.254 MB/sec
[info]                  ·gc.alloc.rate.norm:          752.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 784.591 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1320141.707 ops/s
[info]                  ·gc.alloc.rate:                   630.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     791.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson":
[info]   1324162.646 ±(99.9%) 62227.174 ops/s [Average]
[info]   (min, avg, max) = (1300503.226, 1324162.646, 1345300.659), stdev = 16160.200
[info]   CI (99.9%): [1261935.472, 1386389.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   632.922 ±(99.9%) 29.764 MB/sec [Average]
[info]   (min, avg, max) = (621.617, 632.922, 643.046), stdev = 7.730
[info]   CI (99.9%): [603.158, 662.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   752.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (752.000, 752.000, 752.000), stdev = 0.001
[info]   CI (99.9%): [752.000, 752.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   658.410 ±(99.9%) 17.730 MB/sec [Average]
[info]   (min, avg, max) = (652.386, 658.410, 663.734), stdev = 4.604
[info]   CI (99.9%): [640.680, 676.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   782.369 ±(99.9%) 39.595 B/op [Average]
[info]   (min, avg, max) = (770.385, 782.369, 792.895), stdev = 10.283
[info]   CI (99.9%): [742.774, 821.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.086 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.050), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 6.000), stdev = 1.949
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter
[info] # Run progress: 93.90% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3303105.238 ops/s
[info] # Warmup Iteration   2: 4313522.779 ops/s
[info] # Warmup Iteration   3: 4316810.769 ops/s
[info] # Warmup Iteration   4: 4369577.926 ops/s
[info] # Warmup Iteration   5: 4356277.140 ops/s
[info] Iteration   1: 4328829.951 ops/s
[info]                  ·gc.alloc.rate:                   352.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.795 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4276582.048 ops/s
[info]                  ·gc.alloc.rate:               347.946 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119.755 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 4343617.983 ops/s
[info]                  ·gc.alloc.rate:                   353.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4361919.233 ops/s
[info]                  ·gc.alloc.rate:               354.897 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 117.538 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 4394885.647 ops/s
[info]                  ·gc.alloc.rate:                   357.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     233.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter":
[info]   4341166.972 ±(99.9%) 168350.381 ops/s [Average]
[info]   (min, avg, max) = (4276582.048, 4341166.972, 4394885.647), stdev = 43720.059
[info]   CI (99.9%): [4172816.592, 4509517.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   353.199 ±(99.9%) 13.701 MB/sec [Average]
[info]   (min, avg, max) = (347.946, 353.199, 357.568), stdev = 3.558
[info]   CI (99.9%): [339.499, 366.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   391.056 ±(99.9%) 562.627 MB/sec [Average]
[info]   (min, avg, max) = (325.533, 391.056, 652.429), stdev = 146.113
[info]   CI (99.9%): [≈ 0, 953.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   141.439 ±(99.9%) 198.307 B/op [Average]
[info]   (min, avg, max) = (117.538, 141.439, 233.553), stdev = 51.500
[info]   CI (99.9%): [≈ 0, 339.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.458 ±(99.9%) 3.723 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.458, 2.187), stdev = 0.967
[info]   CI (99.9%): [≈ 0, 4.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.166 ±(99.9%) 1.353 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.166, 0.795), stdev = 0.351
[info]   CI (99.9%): [≈ 0, 1.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay
[info] # Run progress: 95.12% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 119906.925 ops/s
[info] # Warmup Iteration   2: 209342.560 ops/s
[info] # Warmup Iteration   3: 215742.795 ops/s
[info] # Warmup Iteration   4: 215036.146 ops/s
[info] # Warmup Iteration   5: 214673.387 ops/s
[info] Iteration   1: 211289.444 ops/s
[info]                  ·gc.alloc.rate:                   1076.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9810.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.465 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   2: 213697.757 ops/s
[info]                  ·gc.alloc.rate:                   1088.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7317.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.460 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 216633.696 ops/s
[info]                  ·gc.alloc.rate:                   1103.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7252.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.302 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 213270.199 ops/s
[info]                  ·gc.alloc.rate:                   1086.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7400.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.307 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 212643.590 ops/s
[info]                  ·gc.alloc.rate:                   1083.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9937.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.308 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay":
[info]   213506.937 ±(99.9%) 7587.753 ops/s [Average]
[info]   (min, avg, max) = (211289.444, 213506.937, 216633.696), stdev = 1970.515
[info]   CI (99.9%): [205919.184, 221094.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1087.853 ±(99.9%) 38.685 MB/sec [Average]
[info]   (min, avg, max) = (1076.550, 1087.853, 1103.801), stdev = 10.046
[info]   CI (99.9%): [1049.167, 1126.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8016.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8016.002, 8016.002, 8016.002), stdev = 0.001
[info]   CI (99.9%): [8016.002, 8016.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1131.303 ±(99.9%) 700.647 MB/sec [Average]
[info]   (min, avg, max) = (993.935, 1131.303, 1343.176), stdev = 181.956
[info]   CI (99.9%): [430.656, 1831.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8343.671 ±(99.9%) 5385.308 B/op [Average]
[info]   (min, avg, max) = (7252.370, 8343.671, 9937.438), stdev = 1398.547
[info]   CI (99.9%): [2958.362, 13728.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.369 ±(99.9%) 0.330 B/op [Average]
[info]   (min, avg, max) = (0.302, 0.369, 0.465), stdev = 0.086
[info]   CI (99.9%): [0.038, 0.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.400, 23.000), stdev = 8.234
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce
[info] # Run progress: 96.34% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3018.261 ops/s
[info] # Warmup Iteration   2: 6526.531 ops/s
[info] # Warmup Iteration   3: 7441.648 ops/s
[info] # Warmup Iteration   4: 7494.938 ops/s
[info] # Warmup Iteration   5: 7432.560 ops/s
[info] Iteration   1: 7412.898 ops/s
[info]                  ·gc.alloc.rate:                   943.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              200328.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     210521.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.679 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 7436.453 ops/s
[info]                  ·gc.alloc.rate:                   946.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              200328.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     210969.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.811 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 7434.779 ops/s
[info]                  ·gc.alloc.rate:                   946.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              200328.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212154.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.478 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 7476.192 ops/s
[info]                  ·gc.alloc.rate:                   952.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              200329.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211664.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.146 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 7478.507 ops/s
[info]                  ·gc.alloc.rate:                   952.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              200376.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     141445.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.381 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce":
[info]   7447.766 ±(99.9%) 110.021 ops/s [Average]
[info]   (min, avg, max) = (7412.898, 7447.766, 7478.507), stdev = 28.572
[info]   CI (99.9%): [7337.745, 7557.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate":
[info]   948.405 ±(99.9%) 14.352 MB/sec [Average]
[info]   (min, avg, max) = (943.887, 948.405, 952.519), stdev = 3.727
[info]   CI (99.9%): [934.053, 962.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm":
[info]   200337.967 ±(99.9%) 82.032 B/op [Average]
[info]   (min, avg, max) = (200328.058, 200337.967, 200376.058), stdev = 21.304
[info]   CI (99.9%): [200255.935, 200420.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   933.995 ±(99.9%) 563.510 MB/sec [Average]
[info]   (min, avg, max) = (672.384, 933.995, 1005.884), stdev = 146.342
[info]   CI (99.9%): [370.485, 1497.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   197351.174 ±(99.9%) 120365.197 B/op [Average]
[info]   (min, avg, max) = (141445.613, 197351.174, 212154.733), stdev = 31258.459
[info]   CI (99.9%): [76985.977, 317716.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   9.699 ±(99.9%) 22.111 B/op [Average]
[info]   (min, avg, max) = (4.381, 9.699, 17.679), stdev = 5.742
[info]   CI (99.9%): [≈ 0, 31.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 5.000), stdev = 1.483
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson
[info] # Run progress: 97.56% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11770.850 ops/s
[info] # Warmup Iteration   2: 25363.573 ops/s
[info] # Warmup Iteration   3: 25577.763 ops/s
[info] # Warmup Iteration   4: 25569.110 ops/s
[info] # Warmup Iteration   5: 25856.266 ops/s
[info] Iteration   1: 25851.402 ops/s
[info]                  ·gc.alloc.rate:                   369.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              22461.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19710.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.267 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 25930.634 ops/s
[info]                  ·gc.alloc.rate:               370.216 MB/sec
[info]                  ·gc.alloc.rate.norm:          22461.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19770.722 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 25749.076 ops/s
[info]                  ·gc.alloc.rate:                   367.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              22460.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19910.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.272 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 25776.399 ops/s
[info]                  ·gc.alloc.rate:               368.015 MB/sec
[info]                  ·gc.alloc.rate.norm:          22461.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19990.501 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 25889.498 ops/s
[info]                  ·gc.alloc.rate:                   369.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              22461.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19904.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.266 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson":
[info]   25839.402 ±(99.9%) 292.656 ops/s [Average]
[info]   (min, avg, max) = (25749.076, 25839.402, 25930.634), stdev = 76.002
[info]   CI (99.9%): [25546.746, 26132.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate":
[info]   368.911 ±(99.9%) 4.182 MB/sec [Average]
[info]   (min, avg, max) = (367.618, 368.911, 370.216), stdev = 1.086
[info]   CI (99.9%): [364.728, 373.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   22461.065 ±(99.9%) 0.370 B/op [Average]
[info]   (min, avg, max) = (22460.996, 22461.065, 22461.233), stdev = 0.096
[info]   CI (99.9%): [22460.695, 22461.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   326.141 ±(99.9%) 5.841 MB/sec [Average]
[info]   (min, avg, max) = (323.875, 326.141, 327.548), stdev = 1.517
[info]   CI (99.9%): [320.300, 331.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   19857.185 ±(99.9%) 438.520 B/op [Average]
[info]   (min, avg, max) = (19710.228, 19857.185, 19990.501), stdev = 113.882
[info]   CI (99.9%): [19418.665, 20295.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.761 ±(99.9%) 2.675 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.761, 1.272), stdev = 0.695
[info]   CI (99.9%): [≈ 0, 3.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter
[info] # Run progress: 98.78% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27959.772 ops/s
[info] # Warmup Iteration   2: 37983.056 ops/s
[info] # Warmup Iteration   3: 38503.292 ops/s
[info] # Warmup Iteration   4: 38649.813 ops/s
[info] # Warmup Iteration   5: 38700.805 ops/s
[info] Iteration   1: 38742.469 ops/s
[info]                  ·gc.alloc.rate:               260.833 MB/sec
[info]                  ·gc.alloc.rate.norm:          10592.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10391.586 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 39423.873 ops/s
[info]                  ·gc.alloc.rate:      265.430 MB/sec
[info]                  ·gc.alloc.rate.norm: 10592.011 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 38555.575 ops/s
[info]                  ·gc.alloc.rate:                   259.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              10592.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13256.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.176 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88.802 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 38297.514 ops/s
[info]                  ·gc.alloc.rate:                   257.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              10592.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13345.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.566 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 38336.475 ops/s
[info]                  ·gc.alloc.rate:                   258.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              10592.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13346.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.709 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter":
[info]   38671.181 ±(99.9%) 1761.061 ops/s [Average]
[info]   (min, avg, max) = (38297.514, 38671.181, 39423.873), stdev = 457.342
[info]   CI (99.9%): [36910.120, 40432.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate":
[info]   260.363 ±(99.9%) 11.849 MB/sec [Average]
[info]   (min, avg, max) = (257.851, 260.363, 265.430), stdev = 3.077
[info]   CI (99.9%): [248.513, 272.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   10592.011 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (10592.011, 10592.011, 10592.012), stdev = 0.001
[info]   CI (99.9%): [10592.010, 10592.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   246.179 ±(99.9%) 542.301 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 246.179, 325.224), stdev = 140.834
[info]   CI (99.9%): [≈ 0, 788.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   10067.975 ±(99.9%) 22214.334 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10067.975, 13346.159), stdev = 5768.992
[info]   CI (99.9%): [≈ 0, 32282.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.456 ±(99.9%) 3.704 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.456, 2.176), stdev = 0.962
[info]   CI (99.9%): [≈ 0, 4.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   18.616 ±(99.9%) 151.143 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18.616, 88.802), stdev = 39.251
[info]   CI (99.9%): [≈ 0, 169.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.600, 10.000), stdev = 3.912
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:22:01
[info] Benchmark                                                                                         Mode  Cnt         Score        Error   Units
[info] JsonCodecMakerBenchmark.missingReqFieldCirce                                                     thrpt    5   1253155.954 ±  30337.114   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate                                      thrpt    5      2051.844 ±     49.663  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm                                 thrpt    5      2576.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space                             thrpt    5      2036.096 ±     22.564  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2556.310 ±     67.239    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.062 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.079 ±      0.102    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count                                           thrpt    5        30.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time                                            thrpt    5        50.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJackson                                                   thrpt    5    207797.973 ±  22737.232   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate                                    thrpt    5       489.245 ±     53.573  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm                               thrpt    5      3704.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space                           thrpt    5       452.046 ±    681.655  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      3439.205 ±   5386.517    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.037 ±      0.200  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.287 ±      1.522    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count                                         thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time                                          thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter                                                  thrpt    5    456362.963 ±  28339.307   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate                                   thrpt    5       424.664 ±     26.385  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm                              thrpt    5      1464.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       456.692 ±    687.428  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1573.473 ±   2353.432    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.029 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.100 ±      0.459    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count                                        thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time                                         thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless                                         thrpt    5   1712672.157 ±  28402.694   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate                          thrpt    5      1062.512 ±     17.685  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm                     thrpt    5       976.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space                 thrpt    5      1066.213 ±    563.235  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm            thrpt    5       979.312 ±    513.372    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space             thrpt    5         0.058 ±      0.174  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.053 ±      0.159    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count                               thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time                                thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump                                   thrpt    5   3669711.881 ± 178063.448   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate                    thrpt    5       522.493 ±     25.386  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm               thrpt    5       224.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space           thrpt    5       523.337 ±    690.027  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm      thrpt    5       224.901 ±    302.356    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space       thrpt    5         0.033 ±      0.166  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.014 ±      0.072    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count                         thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time                          thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldPlay                                                      thrpt    5    126345.374 ±   3601.183   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate                                       thrpt    5      1054.304 ±     30.087  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm                                  thrpt    5     13128.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1061.812 ±    558.540  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5     13217.899 ±   6784.899    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.570 ±      0.438    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time                                             thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsCirce                                                         thrpt    5   1177383.606 ±  16244.247   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate                                          thrpt    5      1855.976 ±     25.635  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                                     thrpt    5      2480.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1830.527 ±    719.662  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2445.962 ±    959.280    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.046 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.061 ±      0.090    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count                                               thrpt    5        27.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time                                                thrpt    5        55.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsJackson                                                       thrpt    5   1839793.856 ±  30907.924   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate                                        thrpt    5      1309.754 ±     21.975  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                                   thrpt    5      1120.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1348.267 ±     25.504  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1152.945 ±     24.484    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.037 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.032 ±      0.058    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count                                             thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time                                              thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter                                                      thrpt    5   6341262.284 ± 222241.892   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                                       thrpt    5       806.135 ±     28.262  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       200.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       792.370 ±    691.348  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       196.720 ±    174.547    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.042 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.010 ±      0.024    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count                                            thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time                                             thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsPlay                                                          thrpt    5    441828.019 ±  14090.797   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate                                           thrpt    5      1168.060 ±     38.588  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                                      thrpt    5      4160.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1199.881 ±    703.614  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      4269.863 ±   2396.657    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.178 ±      0.431    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count                                                thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time                                                 thrpt    5        41.000                   ms
[info] JsonCodecMakerBenchmark.readArraysCirce                                                          thrpt    5    606850.459 ±  13817.274   ops/s
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate                                           thrpt    5      1984.176 ±     45.306  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm                                      thrpt    5      5144.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                                  thrpt    5      1967.538 ±    577.845  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5099.734 ±   1428.874    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                              thrpt    5         0.054 ±      0.108  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.140 ±      0.278    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.count                                                thrpt    5        29.000               counts
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.time                                                 thrpt    5        44.000                   ms
[info] JsonCodecMakerBenchmark.readArraysJackson                                                        thrpt    5   1205632.708 ±  19396.572   ops/s
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate                                         thrpt    5      1134.171 ±     18.191  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm                                    thrpt    5      1480.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                                thrpt    5      1132.564 ±    679.990  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1477.335 ±    868.195    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                            thrpt    5         0.021 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.027 ±      0.074    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.count                                              thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.time                                               thrpt    5        39.000                   ms
[info] JsonCodecMakerBenchmark.readArraysJsoniter                                                       thrpt    5   2574977.541 ±  60065.061   ops/s
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate                                        thrpt    5      1073.690 ±     25.004  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                                   thrpt    5       656.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5      1066.200 ±    576.184  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5       651.252 ±    344.324    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.033 ±      0.055    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count                                             thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time                                              thrpt    5        37.000                   ms
[info] JsonCodecMakerBenchmark.readArraysPlay                                                           thrpt    5    230776.899 ±  11557.046   ops/s
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate                                            thrpt    5      1414.067 ±     70.680  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm                                       thrpt    5      9640.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                                   thrpt    5      1409.398 ±    605.379  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5      9609.481 ±   4153.094    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                               thrpt    5         0.046 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.312 ±      0.236    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.count                                                 thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.time                                                  thrpt    5        48.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsJackson                                                       thrpt    5   1587671.058 ±  81161.630   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate                                        thrpt    5      1025.305 ±     52.430  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                                   thrpt    5      1016.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1072.646 ±    596.116  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1062.490 ±    569.956    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.025 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.025 ±      0.066    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count                                             thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time                                              thrpt    5        55.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter                                                      thrpt    5   3634138.629 ± 116496.821   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate                                       thrpt    5       480.466 ±     15.403  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       208.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       457.161 ±    686.374  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       198.090 ±    299.565    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.017 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.007 ±      0.062    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count                                            thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time                                             thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsPlay                                                          thrpt    5    258894.842 ±   2817.669   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate                                           thrpt    5      1203.258 ±     13.200  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                                      thrpt    5      7312.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1200.144 ±    683.537  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      7292.822 ±   4144.386    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.042 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.253 ±      0.486    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count                                                thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time                                                 thrpt    5        43.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce                                                   thrpt    5    539551.599 ±  15905.846   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate                                    thrpt    5      1786.075 ±     52.697  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                               thrpt    5      5208.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                           thrpt    5      1761.767 ±    577.476  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5      5136.419 ±   1631.140    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.037 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.109 ±      0.102    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count                                         thrpt    5        26.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time                                          thrpt    5        56.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson                                                 thrpt    5    681139.303 ±   5360.952   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate                                  thrpt    5       852.072 ±      6.736  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                             thrpt    5      1968.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space                         thrpt    5       800.533 ±    704.278  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5      1848.937 ±   1626.049    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.017 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.038 ±      0.155    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count                                       thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time                                        thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter                                                thrpt    5   4362269.898 ±  55760.648   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                                 thrpt    5       199.637 ±      2.550  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                            thrpt    5        72.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       167.468 ±    598.766  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5        60.471 ±    216.100    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.437 ±      3.699  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.158 ±      1.333    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count                                      thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time                                       thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay                                                    thrpt    5    202568.348 ±   4861.802   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate                                     thrpt    5      1124.852 ±     26.967  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                                thrpt    5      8736.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1131.316 ±    702.827  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5      8791.127 ±   5605.463    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.054 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.421 ±      1.051    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count                                          thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time                                           thrpt    5        34.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce                                                   thrpt    5      5100.708 ±     64.773   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate                                    thrpt    5      1274.039 ±     16.104  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm                               thrpt    5    392944.088 ±      0.013    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                           thrpt    5      1276.504 ±    565.251  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5    393779.141 ± 176878.991    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.071 ±      0.159  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        21.860 ±     49.240    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count                                         thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time                                          thrpt    5        35.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson                                                 thrpt    5      9771.233 ±     91.187   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate                                  thrpt    5       263.598 ±      2.497  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm                             thrpt    5     42440.045 ±      0.005    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                         thrpt    5       311.085 ±    118.842  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5     50078.185 ±  18821.656    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.017 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         2.680 ±     16.811    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count                                       thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time                                        thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter                                                thrpt    5     15235.991 ±    396.624   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate                                 thrpt    5       285.187 ±      7.429  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                            thrpt    5     29448.031 ±      0.021    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       311.345 ±    119.346  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5     32153.992 ±  12508.567    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.461 ±      3.884  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5        47.482 ±    399.621    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count                                      thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time                                       thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay                                                    thrpt    5      1868.043 ±     74.760   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate                                     thrpt    5      1170.323 ±     46.673  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm                                thrpt    5    985528.238 ±      0.059    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1203.541 ±    703.519  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5   1013704.692 ± 597100.772    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.042 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5        35.129 ±     48.872    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count                                          thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time                                           thrpt    5        39.000                   ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter                                               thrpt    5   2932993.228 ±  54351.291   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                                thrpt    5       879.941 ±     16.314  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                           thrpt    5       472.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       860.534 ±    704.878  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5       461.645 ±    379.178    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.067 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.036 ±      0.063    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count                                     thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time                                      thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay                                                   thrpt    5    247601.779 ±   5784.939   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                                    thrpt    5      1330.788 ±     31.109  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                               thrpt    5      8456.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1272.532 ±    575.844  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5      8082.265 ±   3528.055    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.046 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.291 ±      0.558    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count                                         thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time                                          thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesCirce                                                       thrpt    5    560939.413 ±  27967.667   ops/s
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate                                        thrpt    5      1971.040 ±     98.355  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm                                   thrpt    5      5528.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                               thrpt    5      1967.327 ±    589.290  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5521.050 ±   1817.927    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                           thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.152 ±      0.260    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.count                                             thrpt    5        29.000               counts
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.time                                              thrpt    5        41.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesJackson                                                     thrpt    5    525237.984 ±  11930.352   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate                                      thrpt    5       534.163 ±     12.111  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm                                 thrpt    5      1600.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                             thrpt    5       526.134 ±    691.133  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5      1574.916 ±   2057.163    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space                         thrpt    5         0.033 ±      0.166  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.099 ±      0.496    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.count                                           thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.time                                            thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesJsoniter                                                    thrpt    5   2324067.233 ±  95357.130   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate                                     thrpt    5       626.353 ±     25.672  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                                thrpt    5       424.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5       656.015 ±     12.210  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5       444.129 ±     23.406    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5         0.054 ±      0.156  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.037 ±      0.108    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count                                          thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time                                           thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesPlay                                                        thrpt    5    170235.654 ±   4943.691   ops/s
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate                                         thrpt    5      1206.692 ±     35.133  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm                                    thrpt    5     11152.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                                thrpt    5      1200.122 ±    702.989  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5     11087.832 ±   6388.796    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                            thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.425 ±      0.980    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.count                                              thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.time                                               thrpt    5        30.000                   ms
[info] JsonCodecMakerBenchmark.readMapsCirce                                                            thrpt    5    459882.547 ±   8409.552   ops/s
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate                                             thrpt    5      1634.589 ±     29.906  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm                                        thrpt    5      5592.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1623.353 ±    580.213  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5552.328 ±   1926.333    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.067 ±      0.174  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.227 ±      0.590    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.count                                                  thrpt    5        24.000               counts
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.time                                                   thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.readMapsJackson                                                          thrpt    5    907060.453 ±  28667.909   ops/s
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate                                           thrpt    5      1070.079 ±     33.827  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm                                      thrpt    5      1856.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                                  thrpt    5      1071.593 ±    568.541  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5      1857.952 ±    955.757    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.062 ±      0.204  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.109 ±      0.357    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.count                                                thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.time                                                 thrpt    5        35.000                   ms
[info] JsonCodecMakerBenchmark.readMapsJsoniter                                                         thrpt    5   3166891.721 ± 155987.867   ops/s
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate                                          thrpt    5       789.081 ±     38.869  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                                     thrpt    5       392.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       792.360 ±    701.293  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5       393.528 ±    345.328    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.042 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.021 ±      0.055    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count                                               thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time                                                thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readMapsPlay                                                             thrpt    5    251259.884 ±  14411.488   ops/s
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate                                              thrpt    5      1312.128 ±     75.349  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm                                         thrpt    5      8216.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                                     thrpt    5      1272.424 ±    575.496  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      7963.460 ±   3446.747    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.315 ±      0.772    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.count                                                   thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.time                                                    thrpt    5        34.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsJackson                                                   thrpt    5    689921.139 ±  25976.681   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate                                    thrpt    5       894.588 ±     33.642  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                               thrpt    5      2040.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                           thrpt    5       932.292 ±    572.867  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      2124.549 ±   1270.669    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.050 ±      0.185  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.114 ±      0.417    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count                                         thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time                                          thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter                                                  thrpt    5   2282326.407 ±  14605.332   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                                   thrpt    5      1079.318 ±      6.853  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                              thrpt    5       744.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5      1066.326 ±    564.415  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       735.083 ±    390.605    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.058 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.040 ±      0.099    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count                                        thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time                                         thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsPlay                                                      thrpt    5    222525.928 ±   5649.874   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate                                       thrpt    5      1176.812 ±     29.849  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                                  thrpt    5      8320.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1200.132 ±    683.402  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8487.063 ±   4896.918    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.050 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.353 ±      0.509    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count                                            thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time                                             thrpt    5        39.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesCirce                                                      thrpt    5    460442.845 ±   7710.103   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate                                       thrpt    5      1362.643 ±     22.813  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                                  thrpt    5      4656.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1414.192 ±    569.364  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      4830.604 ±   1861.315    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.037 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.128 ±      0.229    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count                                            thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time                                             thrpt    5        45.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesJackson                                                    thrpt    5    990463.592 ±  31071.940   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate                                     thrpt    5       760.514 ±     23.854  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                                thrpt    5      1208.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       732.047 ±    580.384  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1164.358 ±    967.166    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.033 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.053 ±      0.213    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count                                          thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time                                           thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter                                                   thrpt    5   3233228.636 ± 158043.704   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                                    thrpt    5        98.648 ±      4.813  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                               thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       102.364 ±    539.738  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5        50.043 ±    263.863    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.004 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.002 ±      0.018    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count                                         thrpt    5         2.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time                                          thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesPlay                                                       thrpt    5    164018.161 ±   3038.791   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate                                        thrpt    5      1114.260 ±     20.639  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                                   thrpt    5     10688.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1131.147 ±    690.961  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5     10854.773 ±   6777.708    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.058 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.559 ±      1.377    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time                                              thrpt    5        30.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPICirce                                                      thrpt    5      7496.265 ±    199.016   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate                                       thrpt    5      1059.721 ±     28.195  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm                                  thrpt    5    222396.452 ±     37.813    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space                              thrpt    5      1066.160 ±    548.376  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5    223858.909 ± 119555.361    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.066 ±      0.267  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5        13.913 ±     56.544    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time                                             thrpt    5        40.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson                                                    thrpt    5     12074.834 ±    154.413   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate                                     thrpt    5       191.329 ±      2.445  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm                                thrpt    5     24928.039 ±      0.021    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space                            thrpt    5       167.003 ±    596.499  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5     21809.868 ±  77927.273    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.004 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.545 ±      4.691    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count                                          thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time                                           thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter                                                   thrpt    5     20601.882 ±    251.443   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate                                    thrpt    5       226.705 ±      2.762  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm                               thrpt    5     17311.705 ±      2.743    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       167.404 ±    598.449  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5     12787.206 ±  45670.629    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.454 ±      3.798  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        34.547 ±    288.934    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count                                         thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time                                          thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce                                                        thrpt    5   1397228.177 ±  21255.307   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate                                         thrpt    5      1548.894 ±     23.447  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                                    thrpt    5      1744.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                                thrpt    5      1554.651 ±    722.735  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1750.946 ±    830.642    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                            thrpt    5         0.021 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.023 ±      0.064    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count                                              thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time                                               thrpt    5        61.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson                                                      thrpt    5   3729971.150 ± 152586.748   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate                                       thrpt    5      1024.215 ±     41.831  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                              thrpt    5       998.234 ±     31.620  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       421.059 ±     12.050    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.021 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.009 ±      0.024    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count                                            thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time                                             thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter                                                     thrpt    5  16445658.421 ± 564820.608   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                                      thrpt    5       501.752 ±     17.214  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                                 thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       522.737 ±    686.751  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5        50.004 ±     65.643    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.037 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.004 ±      0.015    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count                                           thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time                                            thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay                                                         thrpt    5   1073178.103 ±  51417.209   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate                                          thrpt    5      1588.004 ±     76.166  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                                     thrpt    5      2328.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1549.393 ±    717.150  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2271.591 ±   1052.033    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.079 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.116 ±      0.192    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count                                               thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time                                                thrpt    5        50.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysCirce                                                         thrpt    5    722377.675 ±  18958.314   ops/s
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate                                          thrpt    5      1744.792 ±     45.774  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm                                     thrpt    5      3800.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1754.761 ±    570.654  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      3821.771 ±   1240.931    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.029 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.063 ±      0.096    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.count                                               thrpt    5        26.000               counts
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.time                                                thrpt    5        44.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysJackson                                                       thrpt    5   2783604.856 ±  63454.398   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate                                        thrpt    5      1401.306 ±     32.040  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm                                   thrpt    5       792.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1410.463 ±    542.501  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5       797.349 ±    315.177    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.037 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.021 ±      0.050    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.count                                             thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.time                                              thrpt    5        37.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysJsoniter                                                      thrpt    5   4751448.078 ±  96345.077   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate                                       thrpt    5      1304.688 ±     26.395  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5      1274.630 ±    568.540  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       421.897 ±    182.814    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.075 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.025 ±      0.023    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count                                            thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time                                             thrpt    5        36.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysPlay                                                          thrpt    5    337795.662 ±  13101.824   ops/s
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate                                           thrpt    5      1205.818 ±     46.753  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm                                      thrpt    5      5616.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1201.786 ±    716.192  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5599.881 ±   3404.402    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.058 ±      0.174  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.272 ±      0.817    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.count                                                thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.time                                                 thrpt    5        30.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsJackson                                                      thrpt    5   2032723.018 ± 126346.991   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate                                       thrpt    5      1074.979 ±     66.764  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                                  thrpt    5       832.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1070.785 ±    567.619  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       829.774 ±    476.732    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.029 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.023 ±      0.034    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time                                             thrpt    5        41.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter                                                     thrpt    5   4285187.055 ±  80960.442   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                                      thrpt    5       784.438 ±     14.798  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                                 thrpt    5       288.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       792.350 ±    701.316  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5       290.839 ±    255.868    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.046 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.017 ±      0.049    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count                                           thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time                                            thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsPlay                                                         thrpt    5    501914.780 ±  24822.438   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate                                          thrpt    5      1485.412 ±     73.472  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                                     thrpt    5      4656.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1478.879 ±    712.564  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      4636.507 ±   2260.466    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.075 ±      0.201  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.235 ±      0.624    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count                                               thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time                                                thrpt    5        44.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce                                                  thrpt    5      5347.026 ±     50.034   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate                                   thrpt    5      1482.664 ±     13.823  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm                              thrpt    5    436224.081 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                          thrpt    5      1486.313 ±    728.128  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5    437301.606 ± 214340.957    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                      thrpt    5         0.047 ±      0.069  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5        13.780 ±     20.259    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count                                        thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time                                         thrpt    5        44.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson                                                thrpt    5     22437.195 ±    465.758   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate                                 thrpt    5       375.373 ±      7.775  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm                            thrpt    5     26319.821 ±      0.545    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                        thrpt    5       392.449 ±    563.965  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5     27509.538 ±  39382.007    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                    thrpt    5         0.012 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.872 ±      4.999    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count                                      thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time                                       thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter                                               thrpt    5     34165.947 ±    573.286   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate                                thrpt    5       261.991 ±      4.393  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                           thrpt    5     12064.013 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       246.171 ±    542.277  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5     11353.714 ±  25028.335    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.466 ±      3.833  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5        21.567 ±    177.537    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count                                     thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time                                      thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay                                                   thrpt    5      4513.708 ±    206.340   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate                                    thrpt    5      1349.429 ±     61.603  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm                               thrpt    5    470335.885 ±      3.453    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1339.292 ±     38.845  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5    466822.159 ±   7946.293    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.058 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        20.297 ±     22.925    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count                                         thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time                                          thrpt    5        44.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson                                               thrpt    5    690438.554 ±  37003.402   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                                thrpt    5      1516.721 ±     81.299  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                           thrpt    5      3456.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1483.911 ±    714.583  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      3379.492 ±   1543.677    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.042 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.095 ±      0.125    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count                                     thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time                                      thrpt    5        37.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter                                              thrpt    5   2420079.597 ±  18268.251   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                               thrpt    5       467.653 ±      3.515  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       304.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       457.187 ±    688.146  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       297.317 ±    449.013    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.037 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.024 ±      0.100    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count                                    thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time                                     thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay                                                  thrpt    5    248248.601 ±   5409.639   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                                   thrpt    5       973.271 ±     21.196  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                              thrpt    5      6168.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5       993.692 ±     29.609  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      6297.580 ±    232.484    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.054 ±      0.146  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.343 ±      0.918    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count                                        thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time                                         thrpt    5        29.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesCirce                                                      thrpt    5    611694.824 ±  12324.824   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate                                       thrpt    5      1561.449 ±     31.427  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                                  thrpt    5      4016.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1554.318 ±    706.542  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      3996.854 ±   1783.621    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.037 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.097 ±      0.174    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count                                            thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time                                             thrpt    5        36.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesJackson                                                    thrpt    5   1478526.314 ±  27575.264   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate                                     thrpt    5       842.056 ±     15.675  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                                thrpt    5       896.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       860.145 ±    706.034  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5       915.329 ±    752.714    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.012 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.013 ±      0.076    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count                                          thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time                                           thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter                                                   thrpt    5   4580146.306 ± 131372.647   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate                                    thrpt    5       698.745 ±     19.808  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                               thrpt    5       240.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       723.282 ±    552.640  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5       248.261 ±    184.419    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.037 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.013 ±      0.030    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count                                         thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time                                          thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesPlay                                                       thrpt    5    378885.250 ±   4850.185   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate                                        thrpt    5      1304.316 ±     16.698  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                                   thrpt    5      5416.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1338.611 ±     40.109  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5558.468 ±    188.224    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.046 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.190 ±      0.362    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count                                             thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time                                              thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsCirce                                                           thrpt    5    359268.441 ±   5156.440   ops/s
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate                                            thrpt    5      1068.755 ±     15.342  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm                                       thrpt    5      4680.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                                   thrpt    5      1060.974 ±    535.549  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                              thrpt    5      4645.052 ±   2305.820    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                               thrpt    5         0.025 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.110 ±      0.385    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.count                                                 thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.time                                                  thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsJackson                                                         thrpt    5    764622.687 ±  25829.506   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate                                          thrpt    5      1201.446 ±     40.491  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm                                     thrpt    5      2472.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                                 thrpt    5      1208.974 ±    717.601  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2486.792 ±   1454.657    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                             thrpt    5         0.025 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.051 ±      0.138    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.count                                               thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.time                                                thrpt    5        35.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsJsoniter                                                        thrpt    5   2528479.030 ±  91835.416   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate                                         thrpt    5       527.140 ±     19.188  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                                    thrpt    5       328.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                                thrpt    5       523.326 ±    690.567  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                           thrpt    5       326.109 ±    435.460    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                            thrpt    5         0.033 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.021 ±      0.077    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count                                              thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time                                               thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsPlay                                                            thrpt    5    257050.692 ±   4799.048   ops/s
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate                                             thrpt    5       947.649 ±     17.641  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm                                        thrpt    5      5800.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                                    thrpt    5       926.581 ±    577.781  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5671.032 ±   3535.880    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                                thrpt    5         0.042 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.255 ±      0.602    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.count                                                  thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.time                                                   thrpt    5        36.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce                                                    thrpt    5    340768.354 ±   8515.555   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate                                     thrpt    5       987.709 ±     24.574  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                                thrpt    5      4560.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                            thrpt    5       993.048 ±     36.618  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5      4584.635 ±    115.549    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space                        thrpt    5         0.033 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.154 ±      0.335    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count                                          thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time                                           thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson                                                  thrpt    5    762185.964 ±  32831.102   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate                                   thrpt    5      1135.626 ±     48.907  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                              thrpt    5      2344.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space                          thrpt    5      1138.356 ±    714.877  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5      2348.407 ±   1432.846    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space                      thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.104 ±      0.194    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count                                        thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time                                         thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter                                                 thrpt    5   2041767.724 ±  21994.599   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                                  thrpt    5       498.348 ±      5.347  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                             thrpt    5       384.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5       522.601 ±    686.266  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5       402.914 ±    531.563    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5         0.029 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.022 ±      0.070    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count                                       thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time                                        thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay                                                     thrpt    5    258596.715 ±   7072.147   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate                                      thrpt    5       982.277 ±     26.889  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                                 thrpt    5      5976.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                             thrpt    5       993.142 ±     30.851  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5      6042.511 ±    315.882    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space                         thrpt    5         0.046 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.278 ±      0.866    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count                                           thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time                                            thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesCirce                                                     thrpt    5    626397.699 ±  23609.295   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate                                      thrpt    5      1226.298 ±     46.257  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                                 thrpt    5      3080.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                             thrpt    5      1209.200 ±    702.768  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      3036.647 ±   1748.767    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.017 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.042 ±      0.090    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count                                           thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time                                            thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJackson                                                   thrpt    5   1324162.646 ±  62227.174   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate                                    thrpt    5       632.922 ±     29.764  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                               thrpt    5       752.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                           thrpt    5       658.410 ±     17.730  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5       782.369 ±     39.595    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.029 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.035 ±      0.086    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count                                         thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time                                          thrpt    5        17.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter                                                  thrpt    5   4341166.972 ± 168350.381   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                                   thrpt    5       353.199 ±     13.701  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                              thrpt    5       128.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       391.056 ±    562.627  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       141.439 ±    198.307    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.458 ±      3.723  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.166 ±      1.353    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count                                        thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time                                         thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesPlay                                                      thrpt    5    213506.937 ±   7587.753   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate                                       thrpt    5      1087.853 ±     38.685  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                                  thrpt    5      8016.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1131.303 ±    700.647  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8343.671 ±   5385.308    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.050 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.369 ±      0.330    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count                                            thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time                                             thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce                                                     thrpt    5      7447.766 ±    110.021   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate                                      thrpt    5       948.405 ±     14.352  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm                                 thrpt    5    200337.967 ±     82.032    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space                             thrpt    5       933.995 ±    563.510  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5    197351.174 ± 120365.197    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.046 ±      0.104  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         9.699 ±     22.111    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count                                           thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time                                            thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson                                                   thrpt    5     25839.402 ±    292.656   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate                                    thrpt    5       368.911 ±      4.182  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm                               thrpt    5     22461.065 ±      0.370    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space                           thrpt    5       326.141 ±      5.841  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5     19857.185 ±    438.520    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.012 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.761 ±      2.675    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count                                         thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time                                          thrpt    5         5.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter                                                  thrpt    5     38671.181 ±   1761.061   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate                                   thrpt    5       260.363 ±     11.849  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm                              thrpt    5     10592.011 ±      0.002    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       246.179 ±    542.301  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5     10067.975 ±  22214.334    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.456 ±      3.704  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5        18.616 ±    151.143    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count                                        thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time                                         thrpt    5        18.000                   ms
[success] Total time: 1374 s, completed Nov 20, 2017 9:44:40 AM
