[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Nov 30, 2017 8:42:22 AM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 4 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:208:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] one warning found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Compiling 6 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/GoogleMapsAPI.scala:32:62: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("status");
[info]       private val r1: Array[String] = Array("distance", "duration", "status");
[info]       private val r2: Array[String] = Array("text", "value");
[info]       private def d1(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1749161762 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -854843732 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         _value = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value(text = _text, value = _value)
[info]           else
[info]             in.requiredObjectFieldError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = null;
[info]           var _status: String = null;
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1882203379 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         _distance = d6(in, _distance);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -739937554 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         _duration = d6(in, _duration);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -270730887 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements(distance = _distance, duration = _duration, status = _status)
[info]           else
[info]             in.requiredObjectFieldError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements]): Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1690673754 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       _elements = d4(in, _elements)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows]): Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: Seq[String] = Seq.empty[String];
[info]           var _origin_addresses: Seq[String] = Seq.empty[String];
[info]           var _rows: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows];
[info]           var _status: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -553105946 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       _destination_addresses = d1(in, _destination_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 14144516 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       _origin_addresses = d1(in, _origin_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case -11755678 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       _rows = d2(in, _rows)
[info]                     else
[info]                       in.skip()
[info]                     case -270730887 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e6(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "value");
[info]             out.writeVal(x.value)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "distance");
[info]             e6(x.distance, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "duration");
[info]             e6(x.duration, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.elements;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "elements");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e3(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.destination_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "destination_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.origin_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "origin_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.rows;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "rows");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val codec: JsonCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/GoogleMapsAPI.scala:27:18: local val v1 in value format is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/GoogleMapsAPI.scala:28:18: local val v2 in value format is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/GoogleMapsAPI.scala:29:18: local val v3 in value format is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:61:81: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "i");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.MissingReqFields(s = _s, i = _i)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val missingReqFieldCodec: JsonCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:63:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.AnyRefs = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "bd");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1868115770 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         _bd = in.readBigDecimal(_bd);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 135249149 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           {
[info]             val v = x.os;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "os");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:65:52: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Arrays = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = e0(x, out);
[info]       private val v0: Array[Array[Int]] = new Array[Array[Int]](0);
[info]       private val v1: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private val v2: Array[Int] = new Array[Int](0);
[info]       private def d2(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               x.+=(d2(in, v2))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               x.+=(in.readBigInt(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = if (in.isNextToken('{'))
[info]         {
[info]           var _aa: Array[Array[Int]] = v0;
[info]           var _a: Array[BigInt] = v1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1396692260 => if (in.isCharBufEqualsTo(l, "aa"))
[info]                       _aa = d1(in, _aa)
[info]                     else
[info]                       in.skip()
[info]                     case 272946562 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       _a = d3(in, _a)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e2(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: Array[Array[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             e2(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.aa;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 c = out.writeObjectField(c, "aa");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.a;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 c = out.writeObjectField(c, "a");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = make[Arrays](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:67:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.BitSets = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = BitSet.newBuilder;
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               BitSet.empty;
[info]             do 
[info]               x.add(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = if (in.isNextToken('{'))
[info]         {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -311899171 => if (in.isCharBufEqualsTo(l, "bs"))
[info]                       _bs = d1(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 395882128 => if (in.isCharBufEqualsTo(l, "mbs"))
[info]                       _mbs = d2(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.bs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "bs");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mbs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mbs");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = make[BitSets](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:69:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Iterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Vector[String]): scala.collection.immutable.Vector[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.immutable.HashSet[Long]): scala.collection.immutable.HashSet[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = HashSet.newBuilder[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: List[scala.collection.immutable.HashSet[Long]]): List[scala.collection.immutable.HashSet[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[scala.collection.immutable.HashSet[Long]];
[info]             do 
[info]               x.+=(d4(in, HashSet.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.immutable.Vector[String] = Vector.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[scala.collection.immutable.HashSet[Long]] = List.empty[scala.collection.immutable.HashSet[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 753022030 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.Vector[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e4(x: scala.collection.immutable.HashSet[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: List[scala.collection.immutable.HashSet[Long]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e4(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = make[Iterables](CodecMakerConfig())
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:71:82: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableIterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableIterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.MutableIterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.MutableIterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MutableIterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[String]): scala.collection.mutable.ArrayBuffer[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               ArrayBuffer.empty[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.TreeSet[Int]): scala.collection.mutable.TreeSet[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               TreeSet.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.mutable.Set[Long]): scala.collection.mutable.Set[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Set.empty[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]]): scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = ResizableArray.newBuilder[scala.collection.mutable.Set[Long]];
[info]             do 
[info]               x.+=(d4(in, Set.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.MutableIterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.mutable.ArrayBuffer[String] = ArrayBuffer.empty[String];
[info]           var _s: scala.collection.mutable.TreeSet[Int] = TreeSet.empty[Int];
[info]           var _ls: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = ResizableArray.empty[scala.collection.mutable.Set[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 753022030 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableIterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.ArrayBuffer[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.TreeSet[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e4(x: scala.collection.mutable.Set[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e4(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.MutableIterables, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableIterablesCodec: JsonCodec[MutableIterables] = make[MutableIterables](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:73:46: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Maps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[String, Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[Long, Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsInt(), d3(in, HashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.HashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = make[Maps](CodecMakerConfig())
[info]                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:75:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.MutableMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               HashMap.empty[String, Double];
[info]             do 
[info]               x.update(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               OpenHashMap.empty[Long, Double];
[info]             do 
[info]               x.update(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               x.update(in.readObjectFieldAsInt(), d3(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.OpenHashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = make[MutableMaps](CodecMakerConfig())
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:77:76: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsInt(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = LongMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               x.update(in.readObjectFieldAsLong(), d3(in, LongMap.empty[Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.IntMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.LongMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = make[IntAndLongMaps](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:79:64: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Primitives = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var req0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 479329913 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readByte();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readShort();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -986815646 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         _bl = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1128364876 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         _ch = in.readChar();
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 977778859 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         _dbl = in.readDouble();
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2108804597 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         _f = in.readFloat();
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:81:73: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.ExtractFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "l");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:83:51: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.AdtBase = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AdtBase): com.github.plokhotnyuk.jsoniter_scala.AdtBase = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("a");
[info]       private val r1: Array[String] = Array("b");
[info]       private val r2: Array[String] = Array("l", "r");
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.A): com.github.plokhotnyuk.jsoniter_scala.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 272946562 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         _a = in.readInt();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -115772676 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.A(a = _a)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.B): com.github.plokhotnyuk.jsoniter_scala.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 479329913 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readString(_b);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -115772676 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.B(b = _b)
[info]           else
[info]             in.requiredObjectFieldError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.C): com.github.plokhotnyuk.jsoniter_scala.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.AdtBase = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = d0(in, _l);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1283270383 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         _r = d0(in, _r);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -115772676 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.C(l = _l, r = _r)
[info]           else
[info]             in.requiredObjectFieldError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AdtBase): com.github.plokhotnyuk.jsoniter_scala.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           {
[info]             in.scanToObjectField("type");
[info]             val l = in.readValueAsCharBuf();
[info]             (in.charBufToHashCode(l): @switch) match {
[info]               case 1042714897 => if (in.isCharBufEqualsTo(l, "A"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d1(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case 1249097774 => if (in.isCharBufEqualsTo(l, "B"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d2(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case -251352298 => if (in.isCharBufEqualsTo(l, "C"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d3(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case _ => in.discriminatorValueError("type")
[info]             }
[info]           }
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.A, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "type");
[info]             out.writeVal("A")
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "a");
[info]             out.writeVal(x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.B, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "type");
[info]             out.writeVal("B")
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "b");
[info]             out.writeVal(x.b)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.C, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "type");
[info]             out.writeVal("C")
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             e0(x.l, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "r");
[info]             e0(x.r, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.C)) => e3(x, out)
[info]         case null => out.writeNull()
[info]         case _ => out.encodeError("unexpected type: ".+(x.getClass))
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val adtCodec: JsonCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/TwitterAPI.scala:284:54: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet];
[info]       def decode(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = d0(in, default);
[info]       def encode(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private val r4: Array[String] = Array("url", "description");
[info]       private val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 985531917 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1198843867 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1070335372 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]           else
[info]             in.requiredObjectFieldError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -64069972 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1125392404 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         _expanded_url = in.readString(_expanded_url);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -758822041 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         _display_url = in.readString(_display_url);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1070335372 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]           else
[info]             in.requiredObjectFieldError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1567327321 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       _hashtags = d3(in, _hashtags)
[info]                     else
[info]                       in.skip()
[info]                     case -2118257363 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       _symbols = d3(in, _symbols)
[info]                     else
[info]                       in.skip()
[info]                     case -560369018 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       _user_mentions = d4(in, _user_mentions)
[info]                     else
[info]                       in.skip()
[info]                     case -1327041850 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1327041850 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -64069972 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = d11(in, _url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -626201443 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = d11(in, _description);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities(url = _url, description = _description)
[info]           else
[info]             in.requiredObjectFieldError(r4, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var req0 = -1;
[info]           var req1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1198843867 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 985531917 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1994874891 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         _location = in.readString(_location);
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -626201443 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = in.readString(_description);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -64069972 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1962218059 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d10(in, _entities);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -422319283 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         _protected = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1231204836 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         _followers_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1565337738 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         _friends_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -903425777 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         _listed_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -165119785 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1481771385 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         _favourites_count = in.readInt();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1617333980 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         _utc_offset = in.readInt();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1034472816 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         _time_zone = in.readString(_time_zone);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1096575944 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         _geo_enabled = in.readBoolean();
[info]                         req0.&=(-65537)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1766340764 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         _verified = in.readBoolean();
[info]                         req0.&=(-131073)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 656981833 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         _statuses_count = in.readInt();
[info]                         req0.&=(-262145)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1733553572 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-524289)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1692587979 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         _contributors_enabled = in.readBoolean();
[info]                         req0.&=(-1048577)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -761280539 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         _is_translator = in.readBoolean();
[info]                         req0.&=(-2097153)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1523152584 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         _is_translation_enabled = in.readBoolean();
[info]                         req0.&=(-4194305)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1042811670 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         _profile_background_color = in.readString(_profile_background_color);
[info]                         req0.&=(-8388609)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1322051899 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url);
[info]                         req0.&=(-16777217)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 430342393 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https);
[info]                         req0.&=(-33554433)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1547487212 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         _profile_background_tile = in.readBoolean();
[info]                         req0.&=(-67108865)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -738485249 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         _profile_image_url = in.readString(_profile_image_url);
[info]                         req0.&=(-134217729)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -869817957 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https);
[info]                         req0.&=(-268435457)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1479864213 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         _profile_banner_url = in.readString(_profile_banner_url);
[info]                         req0.&=(-536870913)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 892046337 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         _profile_link_color = in.readString(_profile_link_color);
[info]                         req0.&=(-1073741825)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1815398146 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color);
[info]                         req0.&=(2147483647)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1854913126 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color);
[info]                         req1.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1700955824 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         _profile_text_color = in.readString(_profile_text_color);
[info]                         req1.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2002464660 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         _profile_use_background_image = in.readBoolean();
[info]                         req1.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 196017265 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         _has_extended_profile = in.readBoolean();
[info]                         req1.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1725122937 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         _default_profile = in.readBoolean();
[info]                         req1.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1346866717 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         _default_profile_image = in.readBoolean();
[info]                         req1.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1251129302 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         _following = in.readBoolean();
[info]                         req1.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1343246339 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         _follow_request_sent = in.readBoolean();
[info]                         req1.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 929396071 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         _notifications = in.readBoolean();
[info]                         req1.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 356376530 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         _translator_type = in.readString(_translator_type);
[info]                         req1.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0).&&(req1.==(0)))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]           else
[info]             in.requiredObjectFieldError(r3, req0, req1)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 32767;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -165119785 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1749161762 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -957169247 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1962218059 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1722056278 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -56041286 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -685957369 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1195124586 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1480131160 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -836182436 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1249433185 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d9(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -779037686 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1764808365 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -232934172 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 2116377836 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1834482941 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1363420571 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1279943733 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -941232733 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -41089286 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -724879728 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1733553572 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredObjectFieldError(r5, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 65535;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -165119785 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1749161762 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -957169247 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1962218059 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1722056278 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -56041286 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -685957369 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1195124586 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1480131160 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -836182436 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1249433185 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d9(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -779037686 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1764808365 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -232934172 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 2116377836 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -350359215 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         _retweeted_status = d12(in, _retweeted_status);
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1834482941 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1363420571 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1279943733 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -941232733 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -41089286 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -724879728 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1733553572 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e8(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "expanded_url");
[info]             out.writeVal(x.expanded_url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "display_url");
[info]             out.writeVal(x.display_url)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.hashtags;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "hashtags");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.symbols;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "symbols");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.user_mentions;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "user_mentions");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e9(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e12(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e11(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "url");
[info]             e12(x.url, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "description");
[info]             e12(x.description, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e10(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "location");
[info]             out.writeVal(x.location)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "description");
[info]             out.writeVal(x.description)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "entities");
[info]             e11(x.entities, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "protected");
[info]             out.writeVal(x.`protected`)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "followers_count");
[info]             out.writeVal(x.followers_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "friends_count");
[info]             out.writeVal(x.friends_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "listed_count");
[info]             out.writeVal(x.listed_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favourites_count");
[info]             out.writeVal(x.favourites_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "utc_offset");
[info]             out.writeVal(x.utc_offset)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "time_zone");
[info]             out.writeVal(x.time_zone)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "geo_enabled");
[info]             out.writeVal(x.geo_enabled)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "verified");
[info]             out.writeVal(x.verified)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "statuses_count");
[info]             out.writeVal(x.statuses_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "contributors_enabled");
[info]             out.writeVal(x.contributors_enabled)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "is_translator");
[info]             out.writeVal(x.is_translator)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "is_translation_enabled");
[info]             out.writeVal(x.is_translation_enabled)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_background_color");
[info]             out.writeVal(x.profile_background_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_background_image_url");
[info]             out.writeVal(x.profile_background_image_url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_background_image_url_https");
[info]             out.writeVal(x.profile_background_image_url_https)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_background_tile");
[info]             out.writeVal(x.profile_background_tile)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_image_url");
[info]             out.writeVal(x.profile_image_url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_image_url_https");
[info]             out.writeVal(x.profile_image_url_https)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_banner_url");
[info]             out.writeVal(x.profile_banner_url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_link_color");
[info]             out.writeVal(x.profile_link_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_sidebar_border_color");
[info]             out.writeVal(x.profile_sidebar_border_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_sidebar_fill_color");
[info]             out.writeVal(x.profile_sidebar_fill_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_text_color");
[info]             out.writeVal(x.profile_text_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_use_background_image");
[info]             out.writeVal(x.profile_use_background_image)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "has_extended_profile");
[info]             out.writeVal(x.has_extended_profile)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "default_profile");
[info]             out.writeVal(x.default_profile)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "default_profile_image");
[info]             out.writeVal(x.default_profile_image)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "following");
[info]             out.writeVal(x.following)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "follow_request_sent");
[info]             out.writeVal(x.follow_request_sent)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "notifications");
[info]             out.writeVal(x.notifications)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "translator_type");
[info]             out.writeVal(x.translator_type)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e13(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweeted_status");
[info]             e13(x.retweeted_status, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val codec: JsonCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                      ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/TwitterAPI.scala:134:18: local val v1 in value format is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/TwitterAPI.scala:135:18: local val v2 in value format is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/TwitterAPI.scala:137:18: local val v4 in value format is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:83:51: unreachable code
[warn]   val adtCodec: JsonCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[warn]                                                   ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CustomPlayJsonFormats.scala:65:45: Reference to uninitialized value v14
[warn]   implicit val v13: OFormat[C] = Json.format[C]
[warn]                                             ^
[warn] 8 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 290 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 107 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecMakerBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce
[info] # Run progress: 0.00% complete, ETA 00:17:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 872646.230 ops/s
[info] # Warmup Iteration   2: 1350301.876 ops/s
[info] # Warmup Iteration   3: 1412640.160 ops/s
[info] # Warmup Iteration   4: 1530969.003 ops/s
[info] # Warmup Iteration   5: 1535668.067 ops/s
[info] Iteration   1: 1525712.225 ops/s
[info]                  ·gc.alloc.rate:                   2466.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2709.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2793.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 1486941.493 ops/s
[info]                  ·gc.alloc.rate:                   2404.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2376.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2515.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1507769.887 ops/s
[info]                  ·gc.alloc.rate:                   2437.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2378.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2482.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 1540647.761 ops/s
[info]                  ·gc.alloc.rate:                   2490.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2383.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2434.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1515665.839 ops/s
[info]                  ·gc.alloc.rate:                   2450.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2383.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2474.323 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce":
[info]   1515347.441 ±(99.9%) 77300.024 ops/s [Average]
[info]   (min, avg, max) = (1486941.493, 1515347.441, 1540647.761), stdev = 20074.571
[info]   CI (99.9%): [1438047.417, 1592647.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate":
[info]   2450.043 ±(99.9%) 124.661 MB/sec [Average]
[info]   (min, avg, max) = (2404.175, 2450.043, 2490.751), stdev = 32.374
[info]   CI (99.9%): [2325.382, 2574.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm":
[info]   2544.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2544.000, 2544.000, 2544.000), stdev = 0.001
[info]   CI (99.9%): [2544.000, 2544.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space":
[info]   2446.276 ±(99.9%) 566.408 MB/sec [Average]
[info]   (min, avg, max) = (2376.768, 2446.276, 2709.360), stdev = 147.094
[info]   CI (99.9%): [1879.868, 3012.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2539.942 ±(99.9%) 558.010 B/op [Average]
[info]   (min, avg, max) = (2434.045, 2539.942, 2793.991), stdev = 144.913
[info]   CI (99.9%): [1981.932, 3097.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.083, 0.104), stdev = 0.015
[info]   CI (99.9%): [0.027, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.087 ±(99.9%) 0.061 B/op [Average]
[info]   (min, avg, max) = (0.064, 0.087, 0.109), stdev = 0.016
[info]   CI (99.9%): [0.025, 0.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.600, 15.000), stdev = 2.302
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson
[info] # Run progress: 0.97% complete, ETA 00:27:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80546.353 ops/s
[info] # Warmup Iteration   2: 200055.015 ops/s
[info] # Warmup Iteration   3: 200626.433 ops/s
[info] # Warmup Iteration   4: 199401.269 ops/s
[info] # Warmup Iteration   5: 199784.079 ops/s
[info] Iteration   1: 200608.493 ops/s
[info]                  ·gc.alloc.rate:               478.371 MB/sec
[info]                  ·gc.alloc.rate.norm:          3752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5111.385 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 197389.734 ops/s
[info]                  ·gc.alloc.rate:               470.730 MB/sec
[info]                  ·gc.alloc.rate.norm:          3752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2610.644 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 192728.911 ops/s
[info]                  ·gc.alloc.rate:               459.562 MB/sec
[info]                  ·gc.alloc.rate.norm:          3752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2673.690 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 195128.678 ops/s
[info]                  ·gc.alloc.rate:                   465.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              3752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5303.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.168 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 197331.398 ops/s
[info]                  ·gc.alloc.rate:               470.574 MB/sec
[info]                  ·gc.alloc.rate.norm:          3752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2632.597 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson":
[info]   196637.443 ±(99.9%) 11287.339 ops/s [Average]
[info]   (min, avg, max) = (192728.911, 196637.443, 200608.493), stdev = 2931.286
[info]   CI (99.9%): [185350.104, 207924.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate":
[info]   468.916 ±(99.9%) 26.933 MB/sec [Average]
[info]   (min, avg, max) = (459.562, 468.916, 478.371), stdev = 6.995
[info]   CI (99.9%): [441.983, 495.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm":
[info]   3752.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3752.002, 3752.002, 3752.002), stdev = 0.001
[info]   CI (99.9%): [3752.002, 3752.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space":
[info]   458.921 ±(99.9%) 688.267 MB/sec [Average]
[info]   (min, avg, max) = (327.486, 458.921, 657.720), stdev = 178.741
[info]   CI (99.9%): [≈ 0, 1147.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3666.285 ±(99.9%) 5423.685 B/op [Average]
[info]   (min, avg, max) = (2610.644, 3666.285, 5303.111), stdev = 1408.514
[info]   CI (99.9%): [≈ 0, 9089.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.289 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.034, 0.168), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 4.000), stdev = 1.304
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter
[info] # Run progress: 1.94% complete, ETA 00:27:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 425539.867 ops/s
[info] # Warmup Iteration   2: 444247.604 ops/s
[info] # Warmup Iteration   3: 444350.217 ops/s
[info] # Warmup Iteration   4: 446450.057 ops/s
[info] # Warmup Iteration   5: 448884.997 ops/s
[info] Iteration   1: 454978.268 ops/s
[info]                  ·gc.alloc.rate:               423.351 MB/sec
[info]                  ·gc.alloc.rate.norm:          1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1122.246 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 447685.547 ops/s
[info]                  ·gc.alloc.rate:               416.571 MB/sec
[info]                  ·gc.alloc.rate.norm:          1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1140.495 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 431517.536 ops/s
[info]                  ·gc.alloc.rate:               401.515 MB/sec
[info]                  ·gc.alloc.rate.norm:          1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1184.457 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 401211.588 ops/s
[info]                  ·gc.alloc.rate:               373.316 MB/sec
[info]                  ·gc.alloc.rate.norm:          1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1273.942 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 399030.826 ops/s
[info]                  ·gc.alloc.rate:               371.270 MB/sec
[info]                  ·gc.alloc.rate.norm:          1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2567.025 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter":
[info]   426884.753 ±(99.9%) 99640.461 ops/s [Average]
[info]   (min, avg, max) = (399030.826, 426884.753, 454978.268), stdev = 25876.311
[info]   CI (99.9%): [327244.292, 526525.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate":
[info]   397.205 ±(99.9%) 92.748 MB/sec [Average]
[info]   (min, avg, max) = (371.270, 397.205, 423.351), stdev = 24.086
[info]   CI (99.9%): [304.457, 489.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm":
[info]   1464.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1464.001, 1464.001, 1464.001), stdev = 0.001
[info]   CI (99.9%): [1464.001, 1464.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space":
[info]   389.948 ±(99.9%) 561.925 MB/sec [Average]
[info]   (min, avg, max) = (324.520, 389.948, 650.996), stdev = 145.930
[info]   CI (99.9%): [≈ 0, 951.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1457.633 ±(99.9%) 2398.692 B/op [Average]
[info]   (min, avg, max) = (1122.246, 1457.633, 2567.025), stdev = 622.933
[info]   CI (99.9%): [≈ 0, 3856.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 8.000), stdev = 2.915
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless
[info] # Run progress: 2.91% complete, ETA 00:27:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1612902.700 ops/s
[info] # Warmup Iteration   2: 1744836.085 ops/s
[info] # Warmup Iteration   3: 1746762.622 ops/s
[info] # Warmup Iteration   4: 1734993.071 ops/s
[info] # Warmup Iteration   5: 1750325.077 ops/s
[info] Iteration   1: 1719217.774 ops/s
[info]                  ·gc.alloc.rate:                   1066.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1205.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 1735593.003 ops/s
[info]                  ·gc.alloc.rate:                   1077.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     899.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 1735669.765 ops/s
[info]                  ·gc.alloc.rate:                   1076.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1127.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1021.926 B/op
[info]                  ·gc.churn.PS_Old_Gen:             0.244 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:        0.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 1757830.984 ops/s
[info]                  ·gc.alloc.rate:                   1090.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     899.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1747151.818 ops/s
[info]                  ·gc.alloc.rate:               1083.751 MB/sec
[info]                  ·gc.alloc.rate.norm:          976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 907.609 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless":
[info]   1739092.669 ±(99.9%) 55636.466 ops/s [Average]
[info]   (min, avg, max) = (1719217.774, 1739092.669, 1757830.984), stdev = 14448.613
[info]   CI (99.9%): [1683456.203, 1794729.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate":
[info]   1078.872 ±(99.9%) 34.378 MB/sec [Average]
[info]   (min, avg, max) = (1066.445, 1078.872, 1090.389), stdev = 8.928
[info]   CI (99.9%): [1044.493, 1113.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.000), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   1090.165 ±(99.9%) 532.991 MB/sec [Average]
[info]   (min, avg, max) = (992.830, 1090.165, 1317.681), stdev = 138.416
[info]   CI (99.9%): [557.174, 1623.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   986.963 ±(99.9%) 511.945 B/op [Average]
[info]   (min, avg, max) = (899.671, 986.963, 1205.929), stdev = 132.951
[info]   CI (99.9%): [475.018, 1498.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Old_Gen":
[info]   0.049 ±(99.9%) 0.421 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.049, 0.244), stdev = 0.109
[info]   CI (99.9%): [≈ 0, 0.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Old_Gen.norm":
[info]   0.044 ±(99.9%) 0.381 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.044, 0.222), stdev = 0.099
[info]   CI (99.9%): [≈ 0, 0.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.045 ±(99.9%) 0.111 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.045, 0.076), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 13.600, 19.000), stdev = 6.309
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump
[info] # Run progress: 3.88% complete, ETA 00:26:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3460788.322 ops/s
[info] # Warmup Iteration   2: 3644355.205 ops/s
[info] # Warmup Iteration   3: 3616671.838 ops/s
[info] # Warmup Iteration   4: 3482940.867 ops/s
[info] # Warmup Iteration   5: 3609324.288 ops/s
[info] Iteration   1: 3618102.904 ops/s
[info]                  ·gc.alloc.rate:               515.103 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 141.266 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 3669840.622 ops/s
[info]                  ·gc.alloc.rate:                   522.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     278.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3661437.382 ops/s
[info]                  ·gc.alloc.rate:               521.241 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139.882 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 3632644.883 ops/s
[info]                  ·gc.alloc.rate:                   517.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     283.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3676207.479 ops/s
[info]                  ·gc.alloc.rate:                   523.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     280.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump":
[info]   3651646.654 ±(99.9%) 96580.633 ops/s [Average]
[info]   (min, avg, max) = (3618102.904, 3651646.654, 3676207.479), stdev = 25081.684
[info]   CI (99.9%): [3555066.021, 3748227.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   519.849 ±(99.9%) 13.728 MB/sec [Average]
[info]   (min, avg, max) = (515.103, 519.849, 523.312), stdev = 3.565
[info]   CI (99.9%): [506.121, 533.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   224.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (224.000, 224.000, 224.000), stdev = 0.001
[info]   CI (99.9%): [224.000, 224.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   522.128 ±(99.9%) 692.360 MB/sec [Average]
[info]   (min, avg, max) = (324.851, 522.128, 656.294), stdev = 179.804
[info]   CI (99.9%): [≈ 0, 1214.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   224.807 ±(99.9%) 296.154 B/op [Average]
[info]   (min, avg, max) = (139.882, 224.807, 283.137), stdev = 76.910
[info]   CI (99.9%): [≈ 0, 520.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.034 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.018), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 9.000), stdev = 3.362
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay
[info] # Run progress: 4.85% complete, ETA 00:26:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45412.525 ops/s
[info] # Warmup Iteration   2: 125494.201 ops/s
[info] # Warmup Iteration   3: 125187.116 ops/s
[info] # Warmup Iteration   4: 130004.194 ops/s
[info] # Warmup Iteration   5: 127940.037 ops/s
[info] Iteration   1: 128297.129 ops/s
[info]                  ·gc.alloc.rate:                   1070.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12229.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.532 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 128187.349 ops/s
[info]                  ·gc.alloc.rate:                   1069.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12288.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 127452.385 ops/s
[info]                  ·gc.alloc.rate:                   1063.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12408.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.514 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 123376.301 ops/s
[info]                  ·gc.alloc.rate:                   1029.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17157.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.531 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 124749.239 ops/s
[info]                  ·gc.alloc.rate:                   1040.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12761.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay":
[info]   126412.480 ±(99.9%) 8560.264 ops/s [Average]
[info]   (min, avg, max) = (123376.301, 126412.480, 128297.129), stdev = 2223.073
[info]   CI (99.9%): [117852.217, 134972.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate":
[info]   1054.736 ±(99.9%) 71.416 MB/sec [Average]
[info]   (min, avg, max) = (1029.398, 1054.736, 1070.392), stdev = 18.547
[info]   CI (99.9%): [983.319, 1126.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm":
[info]   13128.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13128.003, 13128.003, 13128.004), stdev = 0.001
[info]   CI (99.9%): [13128.003, 13128.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space":
[info]   1072.142 ±(99.9%) 588.533 MB/sec [Average]
[info]   (min, avg, max) = (997.111, 1072.142, 1345.378), stdev = 152.840
[info]   CI (99.9%): [483.609, 1660.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm":
[info]   13369.276 ±(99.9%) 8193.639 B/op [Average]
[info]   (min, avg, max) = (12229.233, 13369.276, 17157.728), stdev = 2127.862
[info]   CI (99.9%): [5175.636, 21562.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.125), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.619 ±(99.9%) 2.030 B/op [Average]
[info]   (min, avg, max) = (0.256, 0.619, 1.532), stdev = 0.527
[info]   CI (99.9%): [≈ 0, 2.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 16.000), stdev = 4.764
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce
[info] # Run progress: 5.83% complete, ETA 00:26:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 367842.511 ops/s
[info] # Warmup Iteration   2: 547184.524 ops/s
[info] # Warmup Iteration   3: 562575.652 ops/s
[info] # Warmup Iteration   4: 558700.638 ops/s
[info] # Warmup Iteration   5: 560860.209 ops/s
[info] Iteration   1: 561819.043 ops/s
[info]                  ·gc.alloc.rate:                   1382.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              3872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3744.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 563144.250 ops/s
[info]                  ·gc.alloc.rate:                   1385.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              3872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3753.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 558895.753 ops/s
[info]                  ·gc.alloc.rate:                   1375.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              3872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4745.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 564948.562 ops/s
[info]                  ·gc.alloc.rate:                   1390.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              3872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3767.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 567316.887 ops/s
[info]                  ·gc.alloc.rate:                   1396.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              3872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3760.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce":
[info]   563224.899 ±(99.9%) 12243.567 ops/s [Average]
[info]   (min, avg, max) = (558895.753, 563224.899, 567316.887), stdev = 3179.616
[info]   CI (99.9%): [550981.332, 575468.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate":
[info]   1386.085 ±(99.9%) 30.145 MB/sec [Average]
[info]   (min, avg, max) = (1375.401, 1386.085, 1396.128), stdev = 7.829
[info]   CI (99.9%): [1355.940, 1416.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm":
[info]   3872.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3872.001, 3872.001, 3872.001), stdev = 0.001
[info]   CI (99.9%): [3872.001, 3872.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space":
[info]   1415.002 ±(99.9%) 583.748 MB/sec [Average]
[info]   (min, avg, max) = (1337.048, 1415.002, 1685.856), stdev = 151.598
[info]   CI (99.9%): [831.254, 1998.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3954.286 ±(99.9%) 1704.511 B/op [Average]
[info]   (min, avg, max) = (3744.334, 3954.286, 4745.986), stdev = 442.656
[info]   CI (99.9%): [2249.775, 5658.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.105 ±(99.9%) 0.186 B/op [Average]
[info]   (min, avg, max) = (0.058, 0.105, 0.173), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 11.000), stdev = 2.000
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson
[info] # Run progress: 6.80% complete, ETA 00:26:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 749196.464 ops/s
[info] # Warmup Iteration   2: 1221255.573 ops/s
[info] # Warmup Iteration   3: 1229822.397 ops/s
[info] # Warmup Iteration   4: 1238026.173 ops/s
[info] # Warmup Iteration   5: 1246648.657 ops/s
[info] Iteration   1: 1234723.925 ops/s
[info]                  ·gc.alloc.rate:                   991.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1268.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1250166.735 ops/s
[info]                  ·gc.alloc.rate:                   1004.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1257.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1229596.319 ops/s
[info]                  ·gc.alloc.rate:                   987.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1284.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1231845.121 ops/s
[info]                  ·gc.alloc.rate:                   989.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1286.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1233775.133 ops/s
[info]                  ·gc.alloc.rate:                   991.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1288.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson":
[info]   1236021.447 ±(99.9%) 31374.043 ops/s [Average]
[info]   (min, avg, max) = (1229596.319, 1236021.447, 1250166.735), stdev = 8147.739
[info]   CI (99.9%): [1204647.404, 1267395.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate":
[info]   992.974 ±(99.9%) 25.322 MB/sec [Average]
[info]   (min, avg, max) = (987.782, 992.974, 1004.388), stdev = 6.576
[info]   CI (99.9%): [967.652, 1018.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm":
[info]   1264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1264.000, 1264.000, 1264.000), stdev = 0.001
[info]   CI (99.9%): [1264.000, 1264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space":
[info]   1003.257 ±(99.9%) 22.364 MB/sec [Average]
[info]   (min, avg, max) = (995.524, 1003.257, 1010.175), stdev = 5.808
[info]   CI (99.9%): [980.893, 1025.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1277.150 ±(99.9%) 51.144 B/op [Average]
[info]   (min, avg, max) = (1257.943, 1277.150, 1288.247), stdev = 13.282
[info]   CI (99.9%): [1226.006, 1328.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.298 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.208), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.090 ±(99.9%) 0.380 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.090, 0.265), stdev = 0.099
[info]   CI (99.9%): [≈ 0, 0.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 9.000), stdev = 1.789
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter
[info] # Run progress: 7.77% complete, ETA 00:25:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1927422.556 ops/s
[info] # Warmup Iteration   2: 2788814.351 ops/s
[info] # Warmup Iteration   3: 2802088.356 ops/s
[info] # Warmup Iteration   4: 2743982.872 ops/s
[info] # Warmup Iteration   5: 2825449.717 ops/s
[info] Iteration   1: 2810422.725 ops/s
[info]                  ·gc.alloc.rate:               185.760 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 143.252 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 2838571.873 ops/s
[info]                  ·gc.alloc.rate:      187.637 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2801365.615 ops/s
[info]                  ·gc.alloc.rate:               185.160 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 143.704 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 2814666.611 ops/s
[info]                  ·gc.alloc.rate:                   186.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 2827792.527 ops/s
[info]                  ·gc.alloc.rate:      186.925 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter":
[info]   2818563.870 ±(99.9%) 56551.236 ops/s [Average]
[info]   (min, avg, max) = (2801365.615, 2818563.870, 2838571.873), stdev = 14686.176
[info]   CI (99.9%): [2762012.634, 2875115.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate":
[info]   186.305 ±(99.9%) 3.771 MB/sec [Average]
[info]   (min, avg, max) = (185.160, 186.305, 187.637), stdev = 0.979
[info]   CI (99.9%): [182.534, 190.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm":
[info]   104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (104.000, 104.000, 104.000), stdev = 0.001
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   166.780 ±(99.9%) 595.452 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 166.780, 322.181), stdev = 154.637
[info]   CI (99.9%): [≈ 0, 762.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   93.412 ±(99.9%) 333.365 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 93.412, 180.102), stdev = 86.574
[info]   CI (99.9%): [≈ 0, 426.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.020 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.012), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 4.000), stdev = 1.789
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay
[info] # Run progress: 8.74% complete, ETA 00:25:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71396.062 ops/s
[info] # Warmup Iteration   2: 125119.979 ops/s
[info] # Warmup Iteration   3: 129574.391 ops/s
[info] # Warmup Iteration   4: 128780.175 ops/s
[info] # Warmup Iteration   5: 127544.062 ops/s
[info] Iteration   1: 127497.051 ops/s
[info]                  ·gc.alloc.rate:                   1060.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12314.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.771 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 130295.659 ops/s
[info]                  ·gc.alloc.rate:                   1083.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12114.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.503 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 129093.161 ops/s
[info]                  ·gc.alloc.rate:                   1073.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12259.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.508 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 128665.692 ops/s
[info]                  ·gc.alloc.rate:                   1070.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12341.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.509 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 128813.878 ops/s
[info]                  ·gc.alloc.rate:                   1071.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16485.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.763 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay":
[info]   128873.088 ±(99.9%) 3856.482 ops/s [Average]
[info]   (min, avg, max) = (127497.051, 128873.088, 130295.659), stdev = 1001.516
[info]   CI (99.9%): [125016.606, 132729.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate":
[info]   1072.010 ±(99.9%) 32.142 MB/sec [Average]
[info]   (min, avg, max) = (1060.583, 1072.010, 1083.914), stdev = 8.347
[info]   CI (99.9%): [1039.868, 1104.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm":
[info]   13088.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13088.003, 13088.003, 13088.004), stdev = 0.001
[info]   CI (99.9%): [13088.003, 13088.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space":
[info]   1073.163 ±(99.9%) 595.317 MB/sec [Average]
[info]   (min, avg, max) = (997.869, 1073.163, 1349.625), stdev = 154.602
[info]   CI (99.9%): [477.846, 1668.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   13102.958 ±(99.9%) 7288.671 B/op [Average]
[info]   (min, avg, max) = (12114.335, 13102.958, 16485.355), stdev = 1892.845
[info]   CI (99.9%): [5814.287, 20391.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.611 ±(99.9%) 0.549 B/op [Average]
[info]   (min, avg, max) = (0.503, 0.611, 0.771), stdev = 0.143
[info]   CI (99.9%): [0.061, 1.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.400, 13.000), stdev = 3.507
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce
[info] # Run progress: 9.71% complete, ETA 00:25:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 774259.961 ops/s
[info] # Warmup Iteration   2: 1127707.618 ops/s
[info] # Warmup Iteration   3: 1142483.012 ops/s
[info] # Warmup Iteration   4: 1156540.546 ops/s
[info] # Warmup Iteration   5: 1147562.156 ops/s
[info] Iteration   1: 1141568.374 ops/s
[info]                  ·gc.alloc.rate:                   1840.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              2536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2322.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1141732.220 ops/s
[info]                  ·gc.alloc.rate:                   1840.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              2536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2797.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 1154064.558 ops/s
[info]                  ·gc.alloc.rate:                   1860.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              2536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2311.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1171764.053 ops/s
[info]                  ·gc.alloc.rate:                   1888.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              2536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2737.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1154161.194 ops/s
[info]                  ·gc.alloc.rate:                   1860.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              2536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2316.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce":
[info]   1152658.080 ±(99.9%) 47615.502 ops/s [Average]
[info]   (min, avg, max) = (1141568.374, 1152658.080, 1171764.053), stdev = 12365.595
[info]   CI (99.9%): [1105042.578, 1200273.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1857.970 ±(99.9%) 76.925 MB/sec [Average]
[info]   (min, avg, max) = (1840.045, 1857.970, 1888.876), stdev = 19.977
[info]   CI (99.9%): [1781.045, 1934.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2536.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2536.000, 2536.000, 2536.000), stdev = 0.001
[info]   CI (99.9%): [2536.000, 2536.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1829.819 ±(99.9%) 719.276 MB/sec [Average]
[info]   (min, avg, max) = (1685.234, 1829.819, 2038.594), stdev = 186.794
[info]   CI (99.9%): [1110.543, 2549.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2497.101 ±(99.9%) 953.107 B/op [Average]
[info]   (min, avg, max) = (2311.620, 2497.101, 2797.389), stdev = 247.519
[info]   CI (99.9%): [1543.994, 3450.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.062 B/op [Average]
[info]   (min, avg, max) = (0.056, 0.068, 0.086), stdev = 0.016
[info]   CI (99.9%): [0.006, 0.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.600, 20.000), stdev = 5.727
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson
[info] # Run progress: 10.68% complete, ETA 00:24:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1169274.880 ops/s
[info] # Warmup Iteration   2: 1702634.980 ops/s
[info] # Warmup Iteration   3: 1741876.626 ops/s
[info] # Warmup Iteration   4: 1736950.069 ops/s
[info] # Warmup Iteration   5: 1761256.953 ops/s
[info] Iteration   1: 1777507.477 ops/s
[info]                  ·gc.alloc.rate:                   1247.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1181.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1767623.157 ops/s
[info]                  ·gc.alloc.rate:                   1240.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1193.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1775935.187 ops/s
[info]                  ·gc.alloc.rate:               1246.119 MB/sec
[info]                  ·gc.alloc.rate.norm:          1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 893.810 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1746485.783 ops/s
[info]                  ·gc.alloc.rate:                   1225.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1216.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 1753424.934 ops/s
[info]                  ·gc.alloc.rate:                   1230.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1214.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson":
[info]   1764195.308 ±(99.9%) 52952.200 ops/s [Average]
[info]   (min, avg, max) = (1746485.783, 1764195.308, 1777507.477), stdev = 13751.518
[info]   CI (99.9%): [1711243.108, 1817147.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1237.884 ±(99.9%) 37.326 MB/sec [Average]
[info]   (min, avg, max) = (1225.403, 1237.884, 1247.306), stdev = 9.693
[info]   CI (99.9%): [1200.558, 1275.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1277.461 ±(99.9%) 578.870 MB/sec [Average]
[info]   (min, avg, max) = (1008.871, 1277.461, 1353.279), stdev = 150.331
[info]   CI (99.9%): [698.591, 1856.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1139.785 ±(99.9%) 532.489 B/op [Average]
[info]   (min, avg, max) = (893.810, 1139.785, 1216.225), stdev = 138.286
[info]   CI (99.9%): [607.297, 1672.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.082 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.056), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 14.000), stdev = 3.975
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter
[info] # Run progress: 11.65% complete, ETA 00:24:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6532876.195 ops/s
[info] # Warmup Iteration   2: 6849361.350 ops/s
[info] # Warmup Iteration   3: 6826772.779 ops/s
[info] # Warmup Iteration   4: 6949350.713 ops/s
[info] # Warmup Iteration   5: 7031065.768 ops/s
[info] Iteration   1: 6978306.409 ops/s
[info]                  ·gc.alloc.rate:                   887.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6997180.878 ops/s
[info]                  ·gc.alloc.rate:                   889.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.115 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 6776860.713 ops/s
[info]                  ·gc.alloc.rate:                   861.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          761.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     176.874 B/op
[info]                  ·gc.churn.PS_Old_Gen:             0.233 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:        0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         44.000 ms
[info] Iteration   4: 7017861.735 ops/s
[info]                  ·gc.alloc.rate:                   892.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     223.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 6959130.895 ops/s
[info]                  ·gc.alloc.rate:               884.556 MB/sec
[info]                  ·gc.alloc.rate.norm:          200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 150.958 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter":
[info]   6945868.126 ±(99.9%) 373372.141 ops/s [Average]
[info]   (min, avg, max) = (6776860.713, 6945868.126, 7017861.735), stdev = 96963.559
[info]   CI (99.9%): [6572495.985, 7319240.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   882.909 ±(99.9%) 47.392 MB/sec [Average]
[info]   (min, avg, max) = (861.461, 882.909, 892.054), stdev = 12.308
[info]   CI (99.9%): [835.517, 930.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   879.140 ±(99.9%) 592.286 MB/sec [Average]
[info]   (min, avg, max) = (667.652, 879.140, 997.177), stdev = 153.815
[info]   CI (99.9%): [286.854, 1471.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   198.951 ±(99.9%) 128.145 B/op [Average]
[info]   (min, avg, max) = (150.958, 198.951, 223.569), stdev = 33.279
[info]   CI (99.9%): [70.806, 327.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Old_Gen":
[info]   0.047 ±(99.9%) 0.401 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.047, 0.233), stdev = 0.104
[info]   CI (99.9%): [≈ 0, 0.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Old_Gen.norm":
[info]   0.011 ±(99.9%) 0.093 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.054), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.040 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.024), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 11.600, 44.000), stdev = 18.147
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay
[info] # Run progress: 12.62% complete, ETA 00:24:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 248855.844 ops/s
[info] # Warmup Iteration   2: 425388.895 ops/s
[info] # Warmup Iteration   3: 429476.658 ops/s
[info] # Warmup Iteration   4: 427195.783 ops/s
[info] # Warmup Iteration   5: 422491.832 ops/s
[info] Iteration   1: 426586.628 ops/s
[info]                  ·gc.alloc.rate:               1127.897 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      999.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3687.894 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 432069.617 ops/s
[info]                  ·gc.alloc.rate:                   1142.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3655.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.303 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 426470.511 ops/s
[info]                  ·gc.alloc.rate:                   1127.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4956.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.307 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 425271.683 ops/s
[info]                  ·gc.alloc.rate:                   1124.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3741.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 422163.907 ops/s
[info]                  ·gc.alloc.rate:                   1116.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1013.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3776.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay":
[info]   426512.469 ±(99.9%) 13795.129 ops/s [Average]
[info]   (min, avg, max) = (422163.907, 426512.469, 432069.617), stdev = 3582.551
[info]   CI (99.9%): [412717.341, 440307.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1127.659 ±(99.9%) 36.484 MB/sec [Average]
[info]   (min, avg, max) = (1116.088, 1127.659, 1142.301), stdev = 9.475
[info]   CI (99.9%): [1091.175, 1164.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1074.277 ±(99.9%) 579.702 MB/sec [Average]
[info]   (min, avg, max) = (999.895, 1074.277, 1343.413), stdev = 150.547
[info]   CI (99.9%): [494.576, 1653.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   3963.375 ±(99.9%) 2144.318 B/op [Average]
[info]   (min, avg, max) = (3655.659, 3963.375, 4956.051), stdev = 556.873
[info]   CI (99.9%): [1819.057, 6107.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.168 ±(99.9%) 0.525 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.168, 0.307), stdev = 0.136
[info]   CI (99.9%): [≈ 0, 0.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 14.000), stdev = 4.087
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce
[info] # Run progress: 13.59% complete, ETA 00:24:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 375465.246 ops/s
[info] # Warmup Iteration   2: 602317.513 ops/s
[info] # Warmup Iteration   3: 608848.803 ops/s
[info] # Warmup Iteration   4: 621946.804 ops/s
[info] # Warmup Iteration   5: 611530.578 ops/s
[info] Iteration   1: 617799.794 ops/s
[info]                  ·gc.alloc.rate:                   2015.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5148.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 617705.512 ops/s
[info]                  ·gc.alloc.rate:                   2013.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4314.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 619392.589 ops/s
[info]                  ·gc.alloc.rate:                   2018.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5172.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 618800.568 ops/s
[info]                  ·gc.alloc.rate:                   2016.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5184.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 602111.137 ops/s
[info]                  ·gc.alloc.rate:                   1962.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2040.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5333.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce":
[info]   615161.920 ±(99.9%) 28223.506 ops/s [Average]
[info]   (min, avg, max) = (602111.137, 615161.920, 619392.589), stdev = 7329.555
[info]   CI (99.9%): [586938.414, 643385.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2005.309 ±(99.9%) 92.668 MB/sec [Average]
[info]   (min, avg, max) = (1962.407, 2005.309, 2018.725), stdev = 24.066
[info]   CI (99.9%): [1912.641, 2097.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5128.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5128.001, 5128.001, 5128.001), stdev = 0.001
[info]   CI (99.9%): [5128.001, 5128.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1966.722 ±(99.9%) 587.847 MB/sec [Average]
[info]   (min, avg, max) = (1693.914, 1966.722, 2040.989), stdev = 152.662
[info]   CI (99.9%): [1378.875, 2554.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5030.712 ±(99.9%) 1567.024 B/op [Average]
[info]   (min, avg, max) = (4314.380, 5030.712, 5333.345), stdev = 406.951
[info]   CI (99.9%): [3463.688, 6597.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.160 ±(99.9%) 0.250 B/op [Average]
[info]   (min, avg, max) = (0.106, 0.160, 0.265), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.600, 13.000), stdev = 1.140
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson
[info] # Run progress: 14.56% complete, ETA 00:23:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 825850.098 ops/s
[info] # Warmup Iteration   2: 1228988.540 ops/s
[info] # Warmup Iteration   3: 1238430.755 ops/s
[info] # Warmup Iteration   4: 1251265.994 ops/s
[info] # Warmup Iteration   5: 1239863.595 ops/s
[info] Iteration   1: 1222711.859 ops/s
[info]                  ·gc.alloc.rate:                   1150.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1714.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1241052.778 ops/s
[info]                  ·gc.alloc.rate:                   1167.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1273.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1245279.316 ops/s
[info]                  ·gc.alloc.rate:                   1171.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1697.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1238837.486 ops/s
[info]                  ·gc.alloc.rate:                   1165.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1283.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1237475.172 ops/s
[info]                  ·gc.alloc.rate:                   1164.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1719.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson":
[info]   1237071.322 ±(99.9%) 32939.314 ops/s [Average]
[info]   (min, avg, max) = (1222711.859, 1237071.322, 1245279.316), stdev = 8554.235
[info]   CI (99.9%): [1204132.008, 1270010.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1163.631 ±(99.9%) 30.902 MB/sec [Average]
[info]   (min, avg, max) = (1150.152, 1163.631, 1171.343), stdev = 8.025
[info]   CI (99.9%): [1132.729, 1194.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1208.595 ±(99.9%) 707.562 MB/sec [Average]
[info]   (min, avg, max) = (1004.131, 1208.595, 1352.055), stdev = 183.752
[info]   CI (99.9%): [501.033, 1916.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1537.615 ±(99.9%) 911.673 B/op [Average]
[info]   (min, avg, max) = (1273.117, 1537.615, 1719.019), stdev = 236.759
[info]   CI (99.9%): [625.942, 2449.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.058 ±(99.9%) 0.086 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.058, 0.080), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 8.000), stdev = 1.140
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter
[info] # Run progress: 15.53% complete, ETA 00:23:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2320130.892 ops/s
[info] # Warmup Iteration   2: 2424907.930 ops/s
[info] # Warmup Iteration   3: 2516469.966 ops/s
[info] # Warmup Iteration   4: 2509211.906 ops/s
[info] # Warmup Iteration   5: 2499285.334 ops/s
[info] Iteration   1: 2477077.767 ops/s
[info]                  ·gc.alloc.rate:                   1032.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     629.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2469617.386 ops/s
[info]                  ·gc.alloc.rate:                   1029.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     634.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2442192.395 ops/s
[info]                  ·gc.alloc.rate:               1018.225 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 645.012 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 2476076.321 ops/s
[info]                  ·gc.alloc.rate:                   1032.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     638.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2474450.756 ops/s
[info]                  ·gc.alloc.rate:                   1031.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     641.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter":
[info]   2467882.925 ±(99.9%) 56390.079 ops/s [Average]
[info]   (min, avg, max) = (2442192.395, 2467882.925, 2477077.767), stdev = 14644.325
[info]   CI (99.9%): [2411492.845, 2524273.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1028.950 ±(99.9%) 23.528 MB/sec [Average]
[info]   (min, avg, max) = (1018.225, 1028.950, 1032.726), stdev = 6.110
[info]   CI (99.9%): [1005.422, 1052.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1000.063 ±(99.9%) 26.543 MB/sec [Average]
[info]   (min, avg, max) = (991.149, 1000.063, 1008.183), stdev = 6.893
[info]   CI (99.9%): [973.520, 1026.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   637.603 ±(99.9%) 23.113 B/op [Average]
[info]   (min, avg, max) = (629.590, 637.603, 645.012), stdev = 6.002
[info]   CI (99.9%): [614.490, 660.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.040), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay
[info] # Run progress: 16.50% complete, ETA 00:23:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106402.248 ops/s
[info] # Warmup Iteration   2: 213990.696 ops/s
[info] # Warmup Iteration   3: 215803.788 ops/s
[info] # Warmup Iteration   4: 214243.975 ops/s
[info] # Warmup Iteration   5: 215031.511 ops/s
[info] Iteration   1: 214202.546 ops/s
[info]                  ·gc.alloc.rate:                   1305.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              9592.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9827.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.459 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 215455.054 ops/s
[info]                  ·gc.alloc.rate:                   1313.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              9592.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7355.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.456 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 211812.921 ops/s
[info]                  ·gc.alloc.rate:                   1291.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              9592.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10008.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.309 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 212258.094 ops/s
[info]                  ·gc.alloc.rate:                   1294.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              9592.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10019.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.772 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 214934.137 ops/s
[info]                  ·gc.alloc.rate:                   1310.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              9592.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9916.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.457 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay":
[info]   213732.550 ±(99.9%) 6236.000 ops/s [Average]
[info]   (min, avg, max) = (211812.921, 213732.550, 215455.054), stdev = 1619.470
[info]   CI (99.9%): [207496.550, 219968.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1303.064 ±(99.9%) 38.001 MB/sec [Average]
[info]   (min, avg, max) = (1291.332, 1303.064, 1313.549), stdev = 9.869
[info]   CI (99.9%): [1265.063, 1341.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9592.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9592.002, 9592.002, 9592.002), stdev = 0.001
[info]   CI (99.9%): [9592.002, 9592.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1279.835 ±(99.9%) 587.346 MB/sec [Average]
[info]   (min, avg, max) = (1007.210, 1279.835, 1354.696), stdev = 152.532
[info]   CI (99.9%): [692.489, 1867.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9425.485 ±(99.9%) 4466.878 B/op [Average]
[info]   (min, avg, max) = (7355.005, 9425.485, 10019.532), stdev = 1160.034
[info]   CI (99.9%): [4958.607, 13892.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.491 ±(99.9%) 0.654 B/op [Average]
[info]   (min, avg, max) = (0.309, 0.491, 0.772), stdev = 0.170
[info]   CI (99.9%): [≈ 0, 1.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.414
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson
[info] # Run progress: 17.48% complete, ETA 00:22:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1041539.091 ops/s
[info] # Warmup Iteration   2: 1524642.545 ops/s
[info] # Warmup Iteration   3: 1552011.434 ops/s
[info] # Warmup Iteration   4: 1526691.287 ops/s
[info] # Warmup Iteration   5: 1550363.459 ops/s
[info] Iteration   1: 1543583.423 ops/s
[info]                  ·gc.alloc.rate:                   981.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1014.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.318 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1564789.295 ops/s
[info]                  ·gc.alloc.rate:                   994.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1005.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1568080.920 ops/s
[info]                  ·gc.alloc.rate:                   996.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1006.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1566739.333 ops/s
[info]                  ·gc.alloc.rate:                   995.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1010.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1545844.749 ops/s
[info]                  ·gc.alloc.rate:                   982.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1027.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson":
[info]   1557807.544 ±(99.9%) 46347.825 ops/s [Average]
[info]   (min, avg, max) = (1543583.423, 1557807.544, 1568080.920), stdev = 12036.383
[info]   CI (99.9%): [1511459.719, 1604155.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   990.126 ±(99.9%) 29.594 MB/sec [Average]
[info]   (min, avg, max) = (981.036, 990.126, 996.690), stdev = 7.685
[info]   CI (99.9%): [960.532, 1019.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1000.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1000.000, 1000.000, 1000.000), stdev = 0.001
[info]   CI (99.9%): [1000.000, 1000.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1002.703 ±(99.9%) 20.626 MB/sec [Average]
[info]   (min, avg, max) = (995.501, 1002.703, 1009.224), stdev = 5.356
[info]   CI (99.9%): [982.077, 1023.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1012.747 ±(99.9%) 34.274 B/op [Average]
[info]   (min, avg, max) = (1005.042, 1012.747, 1027.203), stdev = 8.901
[info]   CI (99.9%): [978.473, 1047.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.092 ±(99.9%) 0.480 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.092, 0.312), stdev = 0.125
[info]   CI (99.9%): [≈ 0, 0.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.093 ±(99.9%) 0.490 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.093, 0.318), stdev = 0.127
[info]   CI (99.9%): [≈ 0, 0.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 9.000), stdev = 2.191
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter
[info] # Run progress: 18.45% complete, ETA 00:22:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3356757.987 ops/s
[info] # Warmup Iteration   2: 3840588.376 ops/s
[info] # Warmup Iteration   3: 3847787.545 ops/s
[info] # Warmup Iteration   4: 3856850.701 ops/s
[info] # Warmup Iteration   5: 3842495.467 ops/s
[info] Iteration   1: 3849659.799 ops/s
[info]                  ·gc.alloc.rate:               508.947 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 132.765 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 3808993.041 ops/s
[info]                  ·gc.alloc.rate:                   503.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     269.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 3829447.497 ops/s
[info]                  ·gc.alloc.rate:               506.274 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 134.838 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 3821424.578 ops/s
[info]                  ·gc.alloc.rate:               505.172 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 270.771 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 3850533.743 ops/s
[info]                  ·gc.alloc.rate:               509.039 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 134.645 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter":
[info]   3832011.732 ±(99.9%) 69499.655 ops/s [Average]
[info]   (min, avg, max) = (3808993.041, 3832011.732, 3850533.743), stdev = 18048.840
[info]   CI (99.9%): [3762512.076, 3901511.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   506.605 ±(99.9%) 9.161 MB/sec [Average]
[info]   (min, avg, max) = (503.594, 506.605, 509.039), stdev = 2.379
[info]   CI (99.9%): [497.444, 515.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   458.659 ±(99.9%) 691.497 MB/sec [Average]
[info]   (min, avg, max) = (324.857, 458.659, 657.623), stdev = 179.580
[info]   CI (99.9%): [≈ 0, 1150.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   188.554 ±(99.9%) 287.232 B/op [Average]
[info]   (min, avg, max) = (132.765, 188.554, 270.771), stdev = 74.593
[info]   CI (99.9%): [≈ 0, 475.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.030 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.017), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.200, 12.000), stdev = 4.550
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay
[info] # Run progress: 19.42% complete, ETA 00:22:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127493.426 ops/s
[info] # Warmup Iteration   2: 260293.474 ops/s
[info] # Warmup Iteration   3: 268188.779 ops/s
[info] # Warmup Iteration   4: 273023.124 ops/s
[info] # Warmup Iteration   5: 272253.385 ops/s
[info] Iteration   1: 273810.578 ops/s
[info]                  ·gc.alloc.rate:                   1285.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7677.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 269580.316 ops/s
[info]                  ·gc.alloc.rate:                   1265.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7834.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.365 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 270213.962 ops/s
[info]                  ·gc.alloc.rate:                   1268.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5882.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.242 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 266169.153 ops/s
[info]                  ·gc.alloc.rate:                   1249.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7984.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.369 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 269767.188 ops/s
[info]                  ·gc.alloc.rate:                   1266.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7897.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay":
[info]   269908.239 ±(99.9%) 10444.745 ops/s [Average]
[info]   (min, avg, max) = (266169.153, 269908.239, 273810.578), stdev = 2712.467
[info]   CI (99.9%): [259463.495, 280352.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1266.705 ±(99.9%) 48.944 MB/sec [Average]
[info]   (min, avg, max) = (1249.191, 1266.705, 1285.007), stdev = 12.711
[info]   CI (99.9%): [1217.761, 1315.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7384.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7384.002, 7384.002, 7384.002), stdev = 0.001
[info]   CI (99.9%): [7384.001, 7384.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1278.673 ±(99.9%) 578.707 MB/sec [Average]
[info]   (min, avg, max) = (1010.128, 1278.673, 1354.066), stdev = 150.288
[info]   CI (99.9%): [699.966, 1857.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7455.060 ±(99.9%) 3413.564 B/op [Average]
[info]   (min, avg, max) = (5882.027, 7455.060, 7984.461), stdev = 886.492
[info]   CI (99.9%): [4041.496, 10868.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.243 ±(99.9%) 0.474 B/op [Average]
[info]   (min, avg, max) = (0.120, 0.243, 0.369), stdev = 0.123
[info]   CI (99.9%): [≈ 0, 0.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 11.000), stdev = 2.168
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce
[info] # Run progress: 20.39% complete, ETA 00:22:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 401272.418 ops/s
[info] # Warmup Iteration   2: 549600.739 ops/s
[info] # Warmup Iteration   3: 542959.923 ops/s
[info] # Warmup Iteration   4: 548814.090 ops/s
[info] # Warmup Iteration   5: 544952.690 ops/s
[info] Iteration   1: 548489.682 ops/s
[info]                  ·gc.alloc.rate:                   1821.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4835.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.239 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 546340.450 ops/s
[info]                  ·gc.alloc.rate:                   1813.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5845.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 544926.060 ops/s
[info]                  ·gc.alloc.rate:                   1809.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4895.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 554384.050 ops/s
[info]                  ·gc.alloc.rate:                   1840.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4820.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 548055.590 ops/s
[info]                  ·gc.alloc.rate:                   1819.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5853.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce":
[info]   548439.167 ±(99.9%) 13915.411 ops/s [Average]
[info]   (min, avg, max) = (544926.060, 548439.167, 554384.050), stdev = 3613.788
[info]   CI (99.9%): [534523.756, 562354.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1820.866 ±(99.9%) 46.443 MB/sec [Average]
[info]   (min, avg, max) = (1809.143, 1820.866, 1840.732), stdev = 12.061
[info]   CI (99.9%): [1774.423, 1867.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1829.682 ±(99.9%) 719.688 MB/sec [Average]
[info]   (min, avg, max) = (1685.752, 1829.682, 2038.776), stdev = 186.901
[info]   CI (99.9%): [1109.994, 2549.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5250.328 ±(99.9%) 2109.827 B/op [Average]
[info]   (min, avg, max) = (4820.670, 5250.328, 5853.638), stdev = 547.915
[info]   CI (99.9%): [3140.501, 7360.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.167 ±(99.9%) 0.191 B/op [Average]
[info]   (min, avg, max) = (0.120, 0.167, 0.239), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 11.200, 13.000), stdev = 1.924
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson
[info] # Run progress: 21.36% complete, ETA 00:21:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 400141.504 ops/s
[info] # Warmup Iteration   2: 658529.042 ops/s
[info] # Warmup Iteration   3: 674502.858 ops/s
[info] # Warmup Iteration   4: 676138.689 ops/s
[info] # Warmup Iteration   5: 675711.833 ops/s
[info] Iteration   1: 673321.664 ops/s
[info]                  ·gc.alloc.rate:                   835.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2311.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 668619.208 ops/s
[info]                  ·gc.alloc.rate:                   829.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1560.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.343 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 662978.407 ops/s
[info]                  ·gc.alloc.rate:                   822.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2371.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 670146.933 ops/s
[info]                  ·gc.alloc.rate:               831.455 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1568.411 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 664940.289 ops/s
[info]                  ·gc.alloc.rate:                   824.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2379.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson":
[info]   668001.300 ±(99.9%) 15863.891 ops/s [Average]
[info]   (min, avg, max) = (662978.407, 668001.300, 673321.664), stdev = 4119.802
[info]   CI (99.9%): [652137.409, 683865.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   828.779 ±(99.9%) 19.592 MB/sec [Average]
[info]   (min, avg, max) = (822.558, 828.779, 835.318), stdev = 5.088
[info]   CI (99.9%): [809.187, 848.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   865.035 ±(99.9%) 701.548 MB/sec [Average]
[info]   (min, avg, max) = (663.073, 865.035, 1005.600), stdev = 182.190
[info]   CI (99.9%): [163.487, 1566.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2038.169 ±(99.9%) 1668.721 B/op [Average]
[info]   (min, avg, max) = (1560.236, 2038.169, 2379.322), stdev = 433.362
[info]   CI (99.9%): [369.448, 3706.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.204 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.146), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.147 ±(99.9%) 0.481 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.147, 0.343), stdev = 0.125
[info]   CI (99.9%): [≈ 0, 0.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 6.000), stdev = 1.673
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 22.33% complete, ETA 00:21:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4330552.611 ops/s
[info] # Warmup Iteration   2: 4561013.029 ops/s
[info] # Warmup Iteration   3: 4674907.672 ops/s
[info] # Warmup Iteration   4: 4569470.896 ops/s
[info] # Warmup Iteration   5: 4624828.841 ops/s
[info] Iteration   1: 4645193.809 ops/s
[info]                  ·gc.alloc.rate:                   212.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4643597.364 ops/s
[info]                  ·gc.alloc.rate:               212.490 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 86.696 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 4647539.505 ops/s
[info]                  ·gc.alloc.rate:      212.678 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 4627747.313 ops/s
[info]                  ·gc.alloc.rate:                   211.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 4642175.286 ops/s
[info]                  ·gc.alloc.rate:                   212.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter":
[info]   4641250.655 ±(99.9%) 30062.183 ops/s [Average]
[info]   (min, avg, max) = (4627747.313, 4641250.655, 4647539.505), stdev = 7807.054
[info]   CI (99.9%): [4611188.472, 4671312.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   212.386 ±(99.9%) 1.372 MB/sec [Average]
[info]   (min, avg, max) = (211.770, 212.386, 212.678), stdev = 0.356
[info]   CI (99.9%): [211.014, 213.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   231.221 ±(99.9%) 513.841 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 231.221, 322.191), stdev = 133.443
[info]   CI (99.9%): [≈ 0, 745.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   78.422 ±(99.9%) 174.369 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 78.422, 109.541), stdev = 45.283
[info]   CI (99.9%): [≈ 0, 252.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.800, 6.000), stdev = 2.280
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay
[info] # Run progress: 23.30% complete, ETA 00:21:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 88206.451 ops/s
[info] # Warmup Iteration   2: 209374.283 ops/s
[info] # Warmup Iteration   3: 213025.022 ops/s
[info] # Warmup Iteration   4: 209016.095 ops/s
[info] # Warmup Iteration   5: 215290.259 ops/s
[info] Iteration   1: 211404.808 ops/s
[info]                  ·gc.alloc.rate:               1173.933 MB/sec
[info]                  ·gc.alloc.rate.norm:          8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1000.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7446.540 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 213986.630 ops/s
[info]                  ·gc.alloc.rate:                   1188.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9850.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.459 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 215498.422 ops/s
[info]                  ·gc.alloc.rate:                   1196.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7365.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 210717.280 ops/s
[info]                  ·gc.alloc.rate:                   1170.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10070.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.311 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   5: 213298.853 ops/s
[info]                  ·gc.alloc.rate:                   1184.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7481.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.307 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay":
[info]   212981.199 ±(99.9%) 7471.277 ops/s [Average]
[info]   (min, avg, max) = (210717.280, 212981.199, 215498.422), stdev = 1940.267
[info]   CI (99.9%): [205509.922, 220452.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1182.629 ±(99.9%) 41.290 MB/sec [Average]
[info]   (min, avg, max) = (1170.162, 1182.629, 1196.611), stdev = 10.723
[info]   CI (99.9%): [1141.339, 1223.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8736.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8736.002, 8736.002, 8736.002), stdev = 0.001
[info]   CI (99.9%): [8736.002, 8736.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1142.485 ±(99.9%) 709.883 MB/sec [Average]
[info]   (min, avg, max) = (1000.656, 1142.485, 1348.914), stdev = 184.354
[info]   CI (99.9%): [432.602, 1852.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8442.923 ±(99.9%) 5345.466 B/op [Average]
[info]   (min, avg, max) = (7365.803, 8442.923, 10070.501), stdev = 1388.201
[info]   CI (99.9%): [3097.457, 13788.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.246 ±(99.9%) 0.675 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.246, 0.459), stdev = 0.175
[info]   CI (99.9%): [≈ 0, 0.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.400, 18.000), stdev = 5.367
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce
[info] # Run progress: 24.27% complete, ETA 00:21:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2982.161 ops/s
[info] # Warmup Iteration   2: 4752.888 ops/s
[info] # Warmup Iteration   3: 4948.904 ops/s
[info] # Warmup Iteration   4: 5088.611 ops/s
[info] # Warmup Iteration   5: 4990.901 ops/s
[info] Iteration   1: 4968.097 ops/s
[info]                  ·gc.alloc.rate:                   1240.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     422047.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.510 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 5024.321 ops/s
[info]                  ·gc.alloc.rate:                   1254.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     419451.263 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.071 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.208 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 5137.277 ops/s
[info]                  ·gc.alloc.rate:                   1283.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     308980.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.542 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 5041.827 ops/s
[info]                  ·gc.alloc.rate:                   1259.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     420844.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.092 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.631 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 5094.953 ops/s
[info]                  ·gc.alloc.rate:                   1272.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     417701.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce":
[info]   5053.295 ±(99.9%) 251.164 ops/s [Average]
[info]   (min, avg, max) = (4968.097, 5053.295, 5137.277), stdev = 65.227
[info]   CI (99.9%): [4802.131, 5304.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1262.158 ±(99.9%) 62.610 MB/sec [Average]
[info]   (min, avg, max) = (1240.900, 1262.158, 1283.075), stdev = 16.260
[info]   CI (99.9%): [1199.548, 1324.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   392960.088 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (392960.084, 392960.088, 392960.093), stdev = 0.004
[info]   CI (99.9%): [392960.073, 392960.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   1276.505 ±(99.9%) 576.879 MB/sec [Average]
[info]   (min, avg, max) = (1008.870, 1276.505, 1352.691), stdev = 149.814
[info]   CI (99.9%): [699.625, 1853.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   397805.115 ±(99.9%) 191302.347 B/op [Average]
[info]   (min, avg, max) = (308980.939, 397805.115, 422047.092), stdev = 49680.612
[info]   CI (99.9%): [206502.768, 589107.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.033, 0.079, 0.146), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   24.580 ±(99.9%) 51.013 B/op [Average]
[info]   (min, avg, max) = (10.510, 24.580, 45.011), stdev = 13.248
[info]   CI (99.9%): [≈ 0, 75.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 2.608
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson
[info] # Run progress: 25.24% complete, ETA 00:20:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5755.119 ops/s
[info] # Warmup Iteration   2: 9540.572 ops/s
[info] # Warmup Iteration   3: 9548.773 ops/s
[info] # Warmup Iteration   4: 9547.969 ops/s
[info] # Warmup Iteration   5: 9571.344 ops/s
[info] Iteration   1: 9583.139 ops/s
[info]                  ·gc.alloc.rate:               258.394 MB/sec
[info]                  ·gc.alloc.rate.norm:          42424.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 42008.679 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 9614.209 ops/s
[info]                  ·gc.alloc.rate:               259.250 MB/sec
[info]                  ·gc.alloc.rate.norm:          42424.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52886.789 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 9582.861 ops/s
[info]                  ·gc.alloc.rate:                   258.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              42424.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53057.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.419 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 8800.619 ops/s
[info]                  ·gc.alloc.rate:                   237.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              42424.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58194.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.723 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 9601.937 ops/s
[info]                  ·gc.alloc.rate:      258.919 MB/sec
[info]                  ·gc.alloc.rate.norm: 42424.045 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson":
[info]   9436.553 ±(99.9%) 1369.849 ops/s [Average]
[info]   (min, avg, max) = (8800.619, 9436.553, 9614.209), stdev = 355.746
[info]   CI (99.9%): [8066.704, 10806.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   254.450 ±(99.9%) 36.934 MB/sec [Average]
[info]   (min, avg, max) = (237.304, 254.450, 259.250), stdev = 9.592
[info]   CI (99.9%): [217.516, 291.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   42424.047 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (42424.045, 42424.047, 42424.053), stdev = 0.003
[info]   CI (99.9%): [42424.034, 42424.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   245.543 ±(99.9%) 540.617 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 245.543, 325.519), stdev = 140.397
[info]   CI (99.9%): [≈ 0, 786.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   41229.592 ±(99.9%) 91611.692 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 41229.592, 58194.658), stdev = 23791.266
[info]   CI (99.9%): [≈ 0, 132841.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.428 ±(99.9%) 7.542 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.428, 3.723), stdev = 1.959
[info]   CI (99.9%): [≈ 0, 8.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 4.000), stdev = 1.483
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter
[info] # Run progress: 26.21% complete, ETA 00:20:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13939.458 ops/s
[info] # Warmup Iteration   2: 18218.417 ops/s
[info] # Warmup Iteration   3: 18284.569 ops/s
[info] # Warmup Iteration   4: 18297.411 ops/s
[info] # Warmup Iteration   5: 18202.948 ops/s
[info] Iteration   1: 18354.232 ops/s
[info]                  ·gc.alloc.rate:                   343.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27645.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.785 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 18286.509 ops/s
[info]                  ·gc.alloc.rate:                   342.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27919.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.583 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 18247.672 ops/s
[info]                  ·gc.alloc.rate:               341.532 MB/sec
[info]                  ·gc.alloc.rate.norm:          29448.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27981.179 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 18305.563 ops/s
[info]                  ·gc.alloc.rate:                   342.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28035.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.790 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 18335.821 ops/s
[info]                  ·gc.alloc.rate:               343.176 MB/sec
[info]                  ·gc.alloc.rate.norm:          29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27988.328 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter":
[info]   18305.959 ±(99.9%) 161.059 ops/s [Average]
[info]   (min, avg, max) = (18247.672, 18305.959, 18354.232), stdev = 41.827
[info]   CI (99.9%): [18144.900, 18467.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   342.629 ±(99.9%) 3.020 MB/sec [Average]
[info]   (min, avg, max) = (341.532, 342.629, 343.545), stdev = 0.784
[info]   CI (99.9%): [339.609, 345.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   29448.026 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (29448.024, 29448.026, 29448.032), stdev = 0.004
[info]   CI (99.9%): [29448.011, 29448.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   324.780 ±(99.9%) 5.823 MB/sec [Average]
[info]   (min, avg, max) = (322.513, 324.780, 326.178), stdev = 1.512
[info]   CI (99.9%): [318.956, 330.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   27914.084 ±(99.9%) 600.060 B/op [Average]
[info]   (min, avg, max) = (27645.211, 27914.084, 28035.719), stdev = 155.834
[info]   CI (99.9%): [27314.024, 28514.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   1.432 ±(99.9%) 5.770 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.432, 3.583), stdev = 1.498
[info]   CI (99.9%): [≈ 0, 7.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay
[info] # Run progress: 27.18% complete, ETA 00:20:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 985.360 ops/s
[info] # Warmup Iteration   2: 1928.236 ops/s
[info] # Warmup Iteration   3: 1930.057 ops/s
[info] # Warmup Iteration   4: 1938.964 ops/s
[info] # Warmup Iteration   5: 1938.683 ops/s
[info] Iteration   1: 1951.842 ops/s
[info]                  ·gc.alloc.rate:                   1183.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1073810.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.557 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1967.002 ops/s
[info]                  ·gc.alloc.rate:                   1194.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     802949.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66.602 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1934.788 ops/s
[info]                  ·gc.alloc.rate:                   1174.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1091905.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.926 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1972.295 ops/s
[info]                  ·gc.alloc.rate:                   1197.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     806228.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.216 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1972.010 ops/s
[info]                  ·gc.alloc.rate:                   1197.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1077806.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.608 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay":
[info]   1959.587 ±(99.9%) 62.262 ops/s [Average]
[info]   (min, avg, max) = (1934.788, 1959.587, 1972.295), stdev = 16.169
[info]   CI (99.9%): [1897.326, 2021.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1189.555 ±(99.9%) 38.480 MB/sec [Average]
[info]   (min, avg, max) = (1174.837, 1189.555, 1197.562), stdev = 9.993
[info]   CI (99.9%): [1151.075, 1228.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   955216.227 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (955216.219, 955216.227, 955216.238), stdev = 0.009
[info]   CI (99.9%): [955216.192, 955216.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1207.871 ±(99.9%) 705.481 MB/sec [Average]
[info]   (min, avg, max) = (1003.923, 1207.871, 1351.073), stdev = 183.211
[info]   CI (99.9%): [502.390, 1913.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   970540.155 ±(99.9%) 583932.369 B/op [Average]
[info]   (min, avg, max) = (802949.203, 970540.155, 1091905.587), stdev = 151645.382
[info]   CI (99.9%): [386607.787, 1554472.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   33.382 ±(99.9%) 78.344 B/op [Average]
[info]   (min, avg, max) = (16.608, 33.382, 66.602), stdev = 20.346
[info]   CI (99.9%): [≈ 0, 111.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 8.000), stdev = 1.789
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 28.16% complete, ETA 00:20:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3328674.734 ops/s
[info] # Warmup Iteration   2: 3667503.829 ops/s
[info] # Warmup Iteration   3: 3718227.702 ops/s
[info] # Warmup Iteration   4: 3575832.181 ops/s
[info] # Warmup Iteration   5: 3664369.959 ops/s
[info] Iteration   1: 3761041.271 ops/s
[info]                  ·gc.alloc.rate:                   1128.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     552.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3755736.406 ops/s
[info]                  ·gc.alloc.rate:                   1126.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     417.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3758671.875 ops/s
[info]                  ·gc.alloc.rate:               1127.589 MB/sec
[info]                  ·gc.alloc.rate.norm:          472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1000.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 418.819 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 3738116.829 ops/s
[info]                  ·gc.alloc.rate:                   1121.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     564.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 3766311.820 ops/s
[info]                  ·gc.alloc.rate:                   1129.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     421.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter":
[info]   3755975.640 ±(99.9%) 41237.919 ops/s [Average]
[info]   (min, avg, max) = (3738116.829, 3755975.640, 3766311.820), stdev = 10709.357
[info]   CI (99.9%): [3714737.721, 3797213.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1126.715 ±(99.9%) 12.552 MB/sec [Average]
[info]   (min, avg, max) = (1121.278, 1126.715, 1129.848), stdev = 3.260
[info]   CI (99.9%): [1114.164, 1139.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   472.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (472.000, 472.000, 472.000), stdev = 0.001
[info]   CI (99.9%): [472.000, 472.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1133.187 ±(99.9%) 693.488 MB/sec [Average]
[info]   (min, avg, max) = (995.731, 1133.187, 1340.550), stdev = 180.097
[info]   CI (99.9%): [439.699, 1826.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   474.814 ±(99.9%) 293.804 B/op [Average]
[info]   (min, avg, max) = (417.166, 474.814, 564.302), stdev = 76.300
[info]   CI (99.9%): [181.009, 768.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.073 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.044), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 15.000), stdev = 4.472
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 29.13% complete, ETA 00:19:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 139620.371 ops/s
[info] # Warmup Iteration   2: 235245.199 ops/s
[info] # Warmup Iteration   3: 241026.900 ops/s
[info] # Warmup Iteration   4: 240199.993 ops/s
[info] # Warmup Iteration   5: 243337.827 ops/s
[info] Iteration   1: 241486.081 ops/s
[info]                  ·gc.alloc.rate:                   1297.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8717.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.407 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 241933.860 ops/s
[info]                  ·gc.alloc.rate:                   1300.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6556.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.271 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 242194.145 ops/s
[info]                  ·gc.alloc.rate:                   1301.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8759.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 241342.001 ops/s
[info]                  ·gc.alloc.rate:                   1297.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8812.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 242153.497 ops/s
[info]                  ·gc.alloc.rate:               1301.489 MB/sec
[info]                  ·gc.alloc.rate.norm:          8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1354.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8802.067 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay":
[info]   241821.917 ±(99.9%) 1496.479 ops/s [Average]
[info]   (min, avg, max) = (241342.001, 241821.917, 242194.145), stdev = 388.631
[info]   CI (99.9%): [240325.438, 243318.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1299.659 ±(99.9%) 8.187 MB/sec [Average]
[info]   (min, avg, max) = (1297.047, 1299.659, 1301.659), stdev = 2.126
[info]   CI (99.9%): [1291.472, 1307.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8456.002, 8456.002, 8456.002), stdev = 0.001
[info]   CI (99.9%): [8456.002, 8456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1280.205 ±(99.9%) 585.935 MB/sec [Average]
[info]   (min, avg, max) = (1008.238, 1280.205, 1354.753), stdev = 152.166
[info]   CI (99.9%): [694.270, 1866.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8329.645 ±(99.9%) 3819.260 B/op [Average]
[info]   (min, avg, max) = (6556.633, 8329.645, 8812.129), stdev = 991.850
[info]   CI (99.9%): [4510.385, 12148.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.190 ±(99.9%) 0.596 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.190, 0.407), stdev = 0.155
[info]   CI (99.9%): [≈ 0, 0.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 10.000), stdev = 2.408
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce
[info] # Run progress: 30.10% complete, ETA 00:19:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 309132.842 ops/s
[info] # Warmup Iteration   2: 479098.180 ops/s
[info] # Warmup Iteration   3: 492120.394 ops/s
[info] # Warmup Iteration   4: 489121.047 ops/s
[info] # Warmup Iteration   5: 480728.913 ops/s
[info] Iteration   1: 492851.123 ops/s
[info]                  ·gc.alloc.rate:                   1796.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5374.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 486604.552 ops/s
[info]                  ·gc.alloc.rate:                   1774.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5466.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 479852.254 ops/s
[info]                  ·gc.alloc.rate:                   1749.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5556.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.205 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 486957.211 ops/s
[info]                  ·gc.alloc.rate:                   1775.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6581.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 482273.623 ops/s
[info]                  ·gc.alloc.rate:                   1758.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5543.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce":
[info]   485707.753 ±(99.9%) 19202.445 ops/s [Average]
[info]   (min, avg, max) = (479852.254, 485707.753, 492851.123), stdev = 4986.814
[info]   CI (99.9%): [466505.308, 504910.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1770.754 ±(99.9%) 69.910 MB/sec [Average]
[info]   (min, avg, max) = (1749.380, 1770.754, 1796.771), stdev = 18.156
[info]   CI (99.9%): [1700.844, 1840.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5736.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5736.001, 5736.001, 5736.001), stdev = 0.001
[info]   CI (99.9%): [5736.001, 5736.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1760.988 ±(99.9%) 594.605 MB/sec [Average]
[info]   (min, avg, max) = (1683.544, 1760.988, 2037.026), stdev = 154.417
[info]   CI (99.9%): [1166.383, 2355.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5704.397 ±(99.9%) 1909.457 B/op [Average]
[info]   (min, avg, max) = (5374.536, 5704.397, 6581.926), stdev = 495.880
[info]   CI (99.9%): [3794.940, 7613.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.189 ±(99.9%) 0.286 B/op [Average]
[info]   (min, avg, max) = (0.066, 0.189, 0.269), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.600, 14.000), stdev = 2.966
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson
[info] # Run progress: 31.07% complete, ETA 00:19:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 300879.929 ops/s
[info] # Warmup Iteration   2: 535928.389 ops/s
[info] # Warmup Iteration   3: 543051.020 ops/s
[info] # Warmup Iteration   4: 541961.464 ops/s
[info] # Warmup Iteration   5: 539565.475 ops/s
[info] Iteration   1: 550483.533 ops/s
[info]                  ·gc.alloc.rate:                   640.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1872.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 549306.004 ops/s
[info]                  ·gc.alloc.rate:               639.589 MB/sec
[info]                  ·gc.alloc.rate.norm:          1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 939.960 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 544628.945 ops/s
[info]                  ·gc.alloc.rate:                   634.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1903.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 548506.368 ops/s
[info]                  ·gc.alloc.rate:                   638.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1898.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.434 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 544097.750 ops/s
[info]                  ·gc.alloc.rate:               633.505 MB/sec
[info]                  ·gc.alloc.rate.norm:          1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.654 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1919.188 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson":
[info]   547404.520 ±(99.9%) 11051.512 ops/s [Average]
[info]   (min, avg, max) = (544097.750, 547404.520, 550483.533), stdev = 2870.043
[info]   CI (99.9%): [536353.008, 558456.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   637.380 ±(99.9%) 12.879 MB/sec [Average]
[info]   (min, avg, max) = (633.505, 637.380, 640.968), stdev = 3.345
[info]   CI (99.9%): [624.501, 650.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1832.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1832.001, 1832.001, 1832.001), stdev = 0.001
[info]   CI (99.9%): [1832.001, 1832.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   593.514 ±(99.9%) 571.331 MB/sec [Average]
[info]   (min, avg, max) = (328.159, 593.514, 663.654), stdev = 148.373
[info]   CI (99.9%): [22.183, 1164.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1706.644 ±(99.9%) 1651.634 B/op [Average]
[info]   (min, avg, max) = (939.960, 1706.644, 1919.188), stdev = 428.924
[info]   CI (99.9%): [55.010, 3358.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.108 ±(99.9%) 0.844 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.108, 0.500), stdev = 0.219
[info]   CI (99.9%): [≈ 0, 0.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.311 ±(99.9%) 2.420 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.311, 1.434), stdev = 0.628
[info]   CI (99.9%): [≈ 0, 2.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 5.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter
[info] # Run progress: 32.04% complete, ETA 00:18:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2578838.275 ops/s
[info] # Warmup Iteration   2: 2935602.216 ops/s
[info] # Warmup Iteration   3: 2965897.383 ops/s
[info] # Warmup Iteration   4: 2841414.665 ops/s
[info] # Warmup Iteration   5: 2898423.692 ops/s
[info] Iteration   1: 2948772.962 ops/s
[info]                  ·gc.alloc.rate:                   1169.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     704.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2875655.140 ops/s
[info]                  ·gc.alloc.rate:                   1140.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     545.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 2921790.436 ops/s
[info]                  ·gc.alloc.rate:                   1158.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     719.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 2896416.911 ops/s
[info]                  ·gc.alloc.rate:                   1148.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     546.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 2886795.608 ops/s
[info]                  ·gc.alloc.rate:                   1144.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     733.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter":
[info]   2905886.211 ±(99.9%) 113254.995 ops/s [Average]
[info]   (min, avg, max) = (2875655.140, 2905886.211, 2948772.962), stdev = 29411.963
[info]   CI (99.9%): [2792631.216, 3019141.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   1152.436 ±(99.9%) 44.981 MB/sec [Average]
[info]   (min, avg, max) = (1140.395, 1152.436, 1169.476), stdev = 11.681
[info]   CI (99.9%): [1107.455, 1197.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   624.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (624.000, 624.000, 624.000), stdev = 0.001
[info]   CI (99.9%): [624.000, 624.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   1200.862 ±(99.9%) 703.099 MB/sec [Average]
[info]   (min, avg, max) = (996.444, 1200.862, 1346.027), stdev = 182.593
[info]   CI (99.9%): [497.763, 1903.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   649.807 ±(99.9%) 367.702 B/op [Average]
[info]   (min, avg, max) = (545.233, 649.807, 733.621), stdev = 95.491
[info]   CI (99.9%): [282.105, 1017.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.020, 0.034), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.400, 15.000), stdev = 4.037
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay
[info] # Run progress: 33.01% complete, ETA 00:18:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67007.036 ops/s
[info] # Warmup Iteration   2: 148624.777 ops/s
[info] # Warmup Iteration   3: 151097.363 ops/s
[info] # Warmup Iteration   4: 150814.013 ops/s
[info] # Warmup Iteration   5: 150001.077 ops/s
[info] Iteration   1: 151058.311 ops/s
[info]                  ·gc.alloc.rate:                   1051.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              10952.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10389.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.868 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 149515.396 ops/s
[info]                  ·gc.alloc.rate:                   1040.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              10952.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10538.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.657 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 150932.302 ops/s
[info]                  ·gc.alloc.rate:                   1050.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              10952.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10478.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.217 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 151345.075 ops/s
[info]                  ·gc.alloc.rate:                   1053.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              10952.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10484.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.433 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 149314.563 ops/s
[info]                  ·gc.alloc.rate:                   1039.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              10952.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14211.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.439 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay":
[info]   150433.129 ±(99.9%) 3635.289 ops/s [Average]
[info]   (min, avg, max) = (149314.563, 150433.129, 151345.075), stdev = 944.073
[info]   CI (99.9%): [146797.841, 154068.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1047.122 ±(99.9%) 25.173 MB/sec [Average]
[info]   (min, avg, max) = (1039.464, 1047.122, 1053.512), stdev = 6.537
[info]   CI (99.9%): [1021.949, 1072.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10952.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10952.003, 10952.003, 10952.003), stdev = 0.001
[info]   CI (99.9%): [10952.003, 10952.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1072.268 ±(99.9%) 595.487 MB/sec [Average]
[info]   (min, avg, max) = (997.439, 1072.268, 1348.808), stdev = 154.646
[info]   CI (99.9%): [476.781, 1667.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11220.609 ±(99.9%) 6441.004 B/op [Average]
[info]   (min, avg, max) = (10389.912, 11220.609, 14211.315), stdev = 1672.708
[info]   CI (99.9%): [4779.606, 17661.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.523 ±(99.9%) 0.954 B/op [Average]
[info]   (min, avg, max) = (0.217, 0.523, 0.868), stdev = 0.248
[info]   CI (99.9%): [≈ 0, 1.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 11.000), stdev = 1.581
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce
[info] # Run progress: 33.98% complete, ETA 00:18:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 243920.147 ops/s
[info] # Warmup Iteration   2: 412472.734 ops/s
[info] # Warmup Iteration   3: 444002.857 ops/s
[info] # Warmup Iteration   4: 441490.250 ops/s
[info] # Warmup Iteration   5: 436848.740 ops/s
[info] Iteration   1: 443088.934 ops/s
[info]                  ·gc.alloc.rate:                   1579.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1677.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5955.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.370 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 433806.200 ops/s
[info]                  ·gc.alloc.rate:                   1546.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4888.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 433828.850 ops/s
[info]                  ·gc.alloc.rate:                   1546.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6131.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.302 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 443460.373 ops/s
[info]                  ·gc.alloc.rate:                   1580.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6012.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.222 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 440375.363 ops/s
[info]                  ·gc.alloc.rate:                   1569.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1357.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4851.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce":
[info]   438911.944 ±(99.9%) 18485.450 ops/s [Average]
[info]   (min, avg, max) = (433806.200, 438911.944, 443460.373), stdev = 4800.613
[info]   CI (99.9%): [420426.494, 457397.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1564.408 ±(99.9%) 66.077 MB/sec [Average]
[info]   (min, avg, max) = (1546.202, 1564.408, 1580.722), stdev = 17.160
[info]   CI (99.9%): [1498.331, 1630.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5608.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5608.001, 5608.001, 5608.001), stdev = 0.001
[info]   CI (99.9%): [5608.001, 5608.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1553.641 ±(99.9%) 706.064 MB/sec [Average]
[info]   (min, avg, max) = (1347.926, 1553.641, 1694.632), stdev = 183.363
[info]   CI (99.9%): [847.577, 2259.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5567.943 ±(99.9%) 2464.622 B/op [Average]
[info]   (min, avg, max) = (4851.972, 5567.943, 6131.147), stdev = 640.055
[info]   CI (99.9%): [3103.320, 8032.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.209 ±(99.9%) 0.512 B/op [Average]
[info]   (min, avg, max) = (0.074, 0.209, 0.370), stdev = 0.133
[info]   CI (99.9%): [≈ 0, 0.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.600, 12.000), stdev = 2.302
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson
[info] # Run progress: 34.95% complete, ETA 00:18:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 447903.222 ops/s
[info] # Warmup Iteration   2: 873317.807 ops/s
[info] # Warmup Iteration   3: 857701.386 ops/s
[info] # Warmup Iteration   4: 859151.270 ops/s
[info] # Warmup Iteration   5: 857929.132 ops/s
[info] Iteration   1: 855243.410 ops/s
[info]                  ·gc.alloc.rate:                   1008.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1830.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.919 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 860986.645 ops/s
[info]                  ·gc.alloc.rate:                   1015.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1823.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 865159.508 ops/s
[info]                  ·gc.alloc.rate:                   1020.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1822.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 864088.773 ops/s
[info]                  ·gc.alloc.rate:                   1019.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1829.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 864426.093 ops/s
[info]                  ·gc.alloc.rate:                   1019.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1835.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson":
[info]   861980.886 ±(99.9%) 15748.612 ops/s [Average]
[info]   (min, avg, max) = (855243.410, 861980.886, 865159.508), stdev = 4089.864
[info]   CI (99.9%): [846232.274, 877729.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1016.833 ±(99.9%) 18.605 MB/sec [Average]
[info]   (min, avg, max) = (1008.871, 1016.833, 1020.647), stdev = 4.832
[info]   CI (99.9%): [998.228, 1035.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.001, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1001.686 ±(99.9%) 20.114 MB/sec [Average]
[info]   (min, avg, max) = (995.189, 1001.686, 1008.164), stdev = 5.224
[info]   CI (99.9%): [981.572, 1021.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1828.355 ±(99.9%) 20.166 B/op [Average]
[info]   (min, avg, max) = (1822.620, 1828.355, 1835.083), stdev = 5.237
[info]   CI (99.9%): [1808.189, 1848.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.125 ±(99.9%) 0.808 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.125, 0.500), stdev = 0.210
[info]   CI (99.9%): [≈ 0, 0.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.229 ±(99.9%) 1.487 B/op [Average]
[info]   (min, avg, max) = (0.038, 0.229, 0.919), stdev = 0.386
[info]   CI (99.9%): [≈ 0, 1.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.304
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter
[info] # Run progress: 35.92% complete, ETA 00:17:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3094686.070 ops/s
[info] # Warmup Iteration   2: 3443202.340 ops/s
[info] # Warmup Iteration   3: 3497749.552 ops/s
[info] # Warmup Iteration   4: 3354134.813 ops/s
[info] # Warmup Iteration   5: 3510539.956 ops/s
[info] Iteration   1: 3507630.508 ops/s
[info]                  ·gc.alloc.rate:                   873.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     293.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 3465203.865 ops/s
[info]                  ·gc.alloc.rate:                   863.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     448.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 3458708.448 ops/s
[info]                  ·gc.alloc.rate:                   861.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     451.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 3506873.892 ops/s
[info]                  ·gc.alloc.rate:                   873.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     298.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3498320.686 ops/s
[info]                  ·gc.alloc.rate:               871.571 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1000.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 450.000 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter":
[info]   3487347.480 ±(99.9%) 90789.233 ops/s [Average]
[info]   (min, avg, max) = (3458708.448, 3487347.480, 3507630.508), stdev = 23577.675
[info]   CI (99.9%): [3396558.247, 3578136.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   868.846 ±(99.9%) 22.693 MB/sec [Average]
[info]   (min, avg, max) = (861.736, 868.846, 873.918), stdev = 5.893
[info]   CI (99.9%): [846.153, 891.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   860.184 ±(99.9%) 704.472 MB/sec [Average]
[info]   (min, avg, max) = (655.045, 860.184, 1000.527), stdev = 182.949
[info]   CI (99.9%): [155.712, 1564.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   388.446 ±(99.9%) 324.987 B/op [Average]
[info]   (min, avg, max) = (293.824, 388.446, 451.952), stdev = 84.398
[info]   CI (99.9%): [63.459, 713.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.047 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.028), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 12.000), stdev = 3.564
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay
[info] # Run progress: 36.89% complete, ETA 00:17:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 144433.950 ops/s
[info] # Warmup Iteration   2: 250650.129 ops/s
[info] # Warmup Iteration   3: 252445.895 ops/s
[info] # Warmup Iteration   4: 252514.149 ops/s
[info] # Warmup Iteration   5: 253409.079 ops/s
[info] Iteration   1: 250420.191 ops/s
[info]                  ·gc.alloc.rate:               1307.756 MB/sec
[info]                  ·gc.alloc.rate.norm:          8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8406.627 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 249512.881 ops/s
[info]                  ·gc.alloc.rate:                   1302.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8479.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 252593.905 ops/s
[info]                  ·gc.alloc.rate:                   1318.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8405.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.389 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 254521.014 ops/s
[info]                  ·gc.alloc.rate:                   1329.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8362.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.386 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 255418.891 ops/s
[info]                  ·gc.alloc.rate:                   1333.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8349.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay":
[info]   252493.376 ±(99.9%) 9791.072 ops/s [Average]
[info]   (min, avg, max) = (249512.881, 252493.376, 255418.891), stdev = 2542.710
[info]   CI (99.9%): [242702.304, 262284.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1318.468 ±(99.9%) 51.091 MB/sec [Average]
[info]   (min, avg, max) = (1302.871, 1318.468, 1333.771), stdev = 13.268
[info]   CI (99.9%): [1267.378, 1369.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8216.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8216.002, 8216.002, 8216.002), stdev = 0.001
[info]   CI (99.9%): [8216.001, 8216.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1348.004 ±(99.9%) 26.331 MB/sec [Average]
[info]   (min, avg, max) = (1338.098, 1348.004, 1355.363), stdev = 6.838
[info]   CI (99.9%): [1321.673, 1374.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8400.432 ±(99.9%) 196.317 B/op [Average]
[info]   (min, avg, max) = (8349.006, 8400.432, 8479.266), stdev = 50.983
[info]   CI (99.9%): [8204.115, 8596.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.207 ±(99.9%) 0.667 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.207, 0.389), stdev = 0.173
[info]   CI (99.9%): [≈ 0, 0.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 11.000), stdev = 2.608
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce
[info] # Run progress: 37.86% complete, ETA 00:17:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 303244.635 ops/s
[info] # Warmup Iteration   2: 515401.466 ops/s
[info] # Warmup Iteration   3: 512059.263 ops/s
[info] # Warmup Iteration   4: 503823.045 ops/s
[info] # Warmup Iteration   5: 520632.442 ops/s
[info] Iteration   1: 522182.406 ops/s
[info]                  ·gc.alloc.rate:                   2012.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6100.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 514529.774 ops/s
[info]                  ·gc.alloc.rate:                   1983.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6213.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 510481.336 ops/s
[info]                  ·gc.alloc.rate:                   1967.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6276.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 522173.396 ops/s
[info]                  ·gc.alloc.rate:                   2012.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6143.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.251 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 517580.651 ops/s
[info]                  ·gc.alloc.rate:                   1994.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2041.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6204.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce":
[info]   517389.513 ±(99.9%) 19425.240 ops/s [Average]
[info]   (min, avg, max) = (510481.336, 517389.513, 522182.406), stdev = 5044.673
[info]   CI (99.9%): [497964.272, 536814.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate":
[info]   1994.147 ±(99.9%) 75.041 MB/sec [Average]
[info]   (min, avg, max) = (1967.457, 1994.147, 2012.652), stdev = 19.488
[info]   CI (99.9%): [1919.106, 2069.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   6064.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6064.001, 6064.001, 6064.001), stdev = 0.001
[info]   CI (99.9%): [6064.001, 6064.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   2034.702 ±(99.9%) 25.029 MB/sec [Average]
[info]   (min, avg, max) = (2024.787, 2034.702, 2041.171), stdev = 6.500
[info]   CI (99.9%): [2009.673, 2059.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   6187.831 ±(99.9%) 260.971 B/op [Average]
[info]   (min, avg, max) = (6100.563, 6187.831, 6276.475), stdev = 67.773
[info]   CI (99.9%): [5926.860, 6448.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.203 ±(99.9%) 0.207 B/op [Average]
[info]   (min, avg, max) = (0.125, 0.203, 0.257), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.400, 13.000), stdev = 2.408
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter
[info] # Run progress: 38.83% complete, ETA 00:17:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2242181.204 ops/s
[info] # Warmup Iteration   2: 2490596.402 ops/s
[info] # Warmup Iteration   3: 2631436.015 ops/s
[info] # Warmup Iteration   4: 2650815.113 ops/s
[info] # Warmup Iteration   5: 2659881.741 ops/s
[info] Iteration   1: 2621982.955 ops/s
[info]                  ·gc.alloc.rate:                   1693.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1004.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2624378.966 ops/s
[info]                  ·gc.alloc.rate:                   1694.754 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1009.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2648159.372 ops/s
[info]                  ·gc.alloc.rate:                   1710.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1004.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2636119.358 ops/s
[info]                  ·gc.alloc.rate:                   1702.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1011.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 2627128.208 ops/s
[info]                  ·gc.alloc.rate:                   1696.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1016.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter":
[info]   2631553.772 ±(99.9%) 41260.082 ops/s [Average]
[info]   (min, avg, max) = (2621982.955, 2631553.772, 2648159.372), stdev = 10715.112
[info]   CI (99.9%): [2590293.689, 2672813.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate":
[info]   1699.330 ±(99.9%) 26.641 MB/sec [Average]
[info]   (min, avg, max) = (1693.125, 1699.330, 1710.051), stdev = 6.918
[info]   CI (99.9%): [1672.690, 1725.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   1688.182 ±(99.9%) 35.762 MB/sec [Average]
[info]   (min, avg, max) = (1674.564, 1688.182, 1697.883), stdev = 9.287
[info]   CI (99.9%): [1652.420, 1723.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1009.340 ±(99.9%) 19.898 B/op [Average]
[info]   (min, avg, max) = (1004.245, 1009.340, 1016.865), stdev = 5.167
[info]   CI (99.9%): [989.442, 1029.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.032, 0.050), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 10.000), stdev = 1.949
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay
[info] # Run progress: 39.81% complete, ETA 00:16:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64849.018 ops/s
[info] # Warmup Iteration   2: 157965.460 ops/s
[info] # Warmup Iteration   3: 160993.185 ops/s
[info] # Warmup Iteration   4: 159661.200 ops/s
[info] # Warmup Iteration   5: 162034.764 ops/s
[info] Iteration   1: 163921.821 ops/s
[info]                  ·gc.alloc.rate:                   1172.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12791.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.600 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 161763.344 ops/s
[info]                  ·gc.alloc.rate:                   1157.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9763.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.203 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 161683.718 ops/s
[info]                  ·gc.alloc.rate:                   1156.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13085.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.203 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 162869.578 ops/s
[info]                  ·gc.alloc.rate:                   1165.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9768.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 162535.165 ops/s
[info]                  ·gc.alloc.rate:                   1162.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1013.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9808.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay":
[info]   162554.725 ±(99.9%) 3525.707 ops/s [Average]
[info]   (min, avg, max) = (161683.718, 162554.725, 163921.821), stdev = 915.615
[info]   CI (99.9%): [159029.019, 166080.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate":
[info]   1162.920 ±(99.9%) 25.243 MB/sec [Average]
[info]   (min, avg, max) = (1156.654, 1162.920, 1172.653), stdev = 6.556
[info]   CI (99.9%): [1137.677, 1188.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   11256.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11256.003, 11256.003, 11256.003), stdev = 0.001
[info]   CI (99.9%): [11256.002, 11256.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1141.111 ±(99.9%) 694.672 MB/sec [Average]
[info]   (min, avg, max) = (1003.809, 1141.111, 1344.616), stdev = 180.404
[info]   CI (99.9%): [446.439, 1835.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11043.421 ±(99.9%) 6673.945 B/op [Average]
[info]   (min, avg, max) = (9763.646, 11043.421, 13085.154), stdev = 1733.202
[info]   CI (99.9%): [4369.476, 17717.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.282 ±(99.9%) 0.685 B/op [Average]
[info]   (min, avg, max) = (0.201, 0.282, 0.600), stdev = 0.178
[info]   CI (99.9%): [≈ 0, 0.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 13.000), stdev = 2.864
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson
[info] # Run progress: 40.78% complete, ETA 00:16:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79305.088 ops/s
[info] # Warmup Iteration   2: 630684.383 ops/s
[info] # Warmup Iteration   3: 624151.277 ops/s
[info] # Warmup Iteration   4: 626951.220 ops/s
[info] # Warmup Iteration   5: 587309.257 ops/s
[info] Iteration   1: 635116.698 ops/s
[info]                  ·gc.alloc.rate:               823.529 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1629.328 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 634087.506 ops/s
[info]                  ·gc.alloc.rate:                   822.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2460.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.395 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 631962.168 ops/s
[info]                  ·gc.alloc.rate:               819.413 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1651.456 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 633915.637 ops/s
[info]                  ·gc.alloc.rate:                   821.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2476.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 632842.520 ops/s
[info]                  ·gc.alloc.rate:                   820.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1658.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson":
[info]   633584.906 ±(99.9%) 4673.734 ops/s [Average]
[info]   (min, avg, max) = (631962.168, 633584.906, 635116.698), stdev = 1213.754
[info]   CI (99.9%): [628911.172, 638258.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   821.512 ±(99.9%) 6.118 MB/sec [Average]
[info]   (min, avg, max) = (819.413, 821.512, 823.529), stdev = 1.589
[info]   CI (99.9%): [815.394, 827.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   795.505 ±(99.9%) 700.404 MB/sec [Average]
[info]   (min, avg, max) = (657.744, 795.505, 997.818), stdev = 181.893
[info]   CI (99.9%): [95.101, 1495.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1975.218 ±(99.9%) 1734.472 B/op [Average]
[info]   (min, avg, max) = (1629.328, 1975.218, 2476.555), stdev = 450.437
[info]   CI (99.9%): [240.746, 3709.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.125 ±(99.9%) 0.944 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.125, 0.562), stdev = 0.245
[info]   CI (99.9%): [≈ 0, 1.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.310 ±(99.9%) 2.342 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.310, 1.395), stdev = 0.608
[info]   CI (99.9%): [≈ 0, 2.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 8.000), stdev = 1.483
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter
[info] # Run progress: 41.75% complete, ETA 00:16:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1957072.796 ops/s
[info] # Warmup Iteration   2: 2242065.688 ops/s
[info] # Warmup Iteration   3: 2234850.228 ops/s
[info] # Warmup Iteration   4: 2319957.804 ops/s
[info] # Warmup Iteration   5: 2323790.820 ops/s
[info] Iteration   1: 2301665.229 ops/s
[info]                  ·gc.alloc.rate:                   1088.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     676.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2305918.245 ops/s
[info]                  ·gc.alloc.rate:                   1090.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     905.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2332063.382 ops/s
[info]                  ·gc.alloc.rate:               1102.760 MB/sec
[info]                  ·gc.alloc.rate.norm:          744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1000.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 675.040 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 2329471.896 ops/s
[info]                  ·gc.alloc.rate:                   1101.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     678.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2316252.083 ops/s
[info]                  ·gc.alloc.rate:                   1095.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     913.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter":
[info]   2317074.167 ±(99.9%) 52407.887 ops/s [Average]
[info]   (min, avg, max) = (2301665.229, 2317074.167, 2332063.382), stdev = 13610.162
[info]   CI (99.9%): [2264666.281, 2369482.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1095.678 ±(99.9%) 24.892 MB/sec [Average]
[info]   (min, avg, max) = (1088.382, 1095.678, 1102.760), stdev = 6.464
[info]   CI (99.9%): [1070.786, 1120.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1133.388 ±(99.9%) 711.684 MB/sec [Average]
[info]   (min, avg, max) = (989.856, 1133.388, 1344.716), stdev = 184.822
[info]   CI (99.9%): [421.704, 1845.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   769.845 ±(99.9%) 490.362 B/op [Average]
[info]   (min, avg, max) = (675.040, 769.845, 913.418), stdev = 127.346
[info]   CI (99.9%): [279.483, 1260.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.046 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.028), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay
[info] # Run progress: 42.72% complete, ETA 00:15:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 128996.077 ops/s
[info] # Warmup Iteration   2: 217489.776 ops/s
[info] # Warmup Iteration   3: 221870.076 ops/s
[info] # Warmup Iteration   4: 223185.908 ops/s
[info] # Warmup Iteration   5: 220767.339 ops/s
[info] Iteration   1: 221321.338 ops/s
[info]                  ·gc.alloc.rate:                   1183.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9483.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.296 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 223169.066 ops/s
[info]                  ·gc.alloc.rate:                   1193.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7086.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.294 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 221560.225 ops/s
[info]                  ·gc.alloc.rate:               1185.088 MB/sec
[info]                  ·gc.alloc.rate.norm:          8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9553.070 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   4: 224917.074 ops/s
[info]                  ·gc.alloc.rate:                   1203.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7078.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 219940.675 ops/s
[info]                  ·gc.alloc.rate:                   1176.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9676.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.298 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay":
[info]   222181.676 ±(99.9%) 7358.108 ops/s [Average]
[info]   (min, avg, max) = (219940.675, 222181.676, 224917.074), stdev = 1910.877
[info]   CI (99.9%): [214823.568, 229539.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1188.439 ±(99.9%) 39.381 MB/sec [Average]
[info]   (min, avg, max) = (1176.429, 1188.439, 1203.042), stdev = 10.227
[info]   CI (99.9%): [1149.058, 1227.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8416.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8416.002, 8416.002, 8416.002), stdev = 0.001
[info]   CI (99.9%): [8416.002, 8416.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1209.818 ±(99.9%) 707.976 MB/sec [Average]
[info]   (min, avg, max) = (1005.264, 1209.818, 1352.697), stdev = 183.859
[info]   CI (99.9%): [501.843, 1917.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8575.899 ±(99.9%) 5255.466 B/op [Average]
[info]   (min, avg, max) = (7078.516, 8575.899, 9676.992), stdev = 1364.828
[info]   CI (99.9%): [3320.432, 13831.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.207 ±(99.9%) 0.511 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.207, 0.298), stdev = 0.133
[info]   CI (99.9%): [≈ 0, 0.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 13.000), stdev = 2.950
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce
[info] # Run progress: 43.69% complete, ETA 00:15:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108060.641 ops/s
[info] # Warmup Iteration   2: 446737.904 ops/s
[info] # Warmup Iteration   3: 474503.322 ops/s
[info] # Warmup Iteration   4: 457948.363 ops/s
[info] # Warmup Iteration   5: 469753.623 ops/s
[info] Iteration   1: 469648.510 ops/s
[info]                  ·gc.alloc.rate:                   1389.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1668.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5589.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.209 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 472614.006 ops/s
[info]                  ·gc.alloc.rate:                   1398.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4469.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 472036.881 ops/s
[info]                  ·gc.alloc.rate:                   1396.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4490.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 470345.658 ops/s
[info]                  ·gc.alloc.rate:                   1391.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4522.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 467562.259 ops/s
[info]                  ·gc.alloc.rate:                   1383.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4558.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce":
[info]   470441.463 ±(99.9%) 7747.613 ops/s [Average]
[info]   (min, avg, max) = (467562.259, 470441.463, 472614.006), stdev = 2012.031
[info]   CI (99.9%): [462693.850, 478189.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1392.123 ±(99.9%) 22.881 MB/sec [Average]
[info]   (min, avg, max) = (1383.603, 1392.123, 1398.592), stdev = 5.942
[info]   CI (99.9%): [1369.242, 1415.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1413.035 ±(99.9%) 550.275 MB/sec [Average]
[info]   (min, avg, max) = (1342.698, 1413.035, 1668.539), stdev = 142.905
[info]   CI (99.9%): [862.760, 1963.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4726.411 ±(99.9%) 1862.955 B/op [Average]
[info]   (min, avg, max) = (4469.927, 4726.411, 5589.786), stdev = 483.804
[info]   CI (99.9%): [2863.456, 6589.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.181 ±(99.9%) 0.306 B/op [Average]
[info]   (min, avg, max) = (0.069, 0.181, 0.279), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.800, 15.000), stdev = 1.483
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson
[info] # Run progress: 44.66% complete, ETA 00:15:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 641575.573 ops/s
[info] # Warmup Iteration   2: 970974.862 ops/s
[info] # Warmup Iteration   3: 960548.404 ops/s
[info] # Warmup Iteration   4: 980567.791 ops/s
[info] # Warmup Iteration   5: 977280.784 ops/s
[info] Iteration   1: 893136.115 ops/s
[info]                  ·gc.alloc.rate:                   676.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1158.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 972553.829 ops/s
[info]                  ·gc.alloc.rate:                   736.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1604.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 967421.579 ops/s
[info]                  ·gc.alloc.rate:                   732.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1080.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 977228.764 ops/s
[info]                  ·gc.alloc.rate:                   740.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1072.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 971768.086 ops/s
[info]                  ·gc.alloc.rate:               736.150 MB/sec
[info]                  ·gc.alloc.rate.norm:          1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1081.585 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson":
[info]   956421.675 ±(99.9%) 136884.213 ops/s [Average]
[info]   (min, avg, max) = (893136.115, 956421.675, 977228.764), stdev = 35548.395
[info]   CI (99.9%): [819537.461, 1093305.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   724.584 ±(99.9%) 103.625 MB/sec [Average]
[info]   (min, avg, max) = (676.677, 724.584, 740.352), stdev = 26.911
[info]   CI (99.9%): [620.960, 828.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1192.000, 1192.000, 1192.000), stdev = 0.001
[info]   CI (99.9%): [1192.000, 1192.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   729.648 ±(99.9%) 564.682 MB/sec [Average]
[info]   (min, avg, max) = (657.727, 729.648, 991.884), stdev = 146.646
[info]   CI (99.9%): [164.966, 1294.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1199.622 ±(99.9%) 882.107 B/op [Average]
[info]   (min, avg, max) = (1072.865, 1199.622, 1604.618), stdev = 229.080
[info]   CI (99.9%): [317.515, 2081.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.191 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.075 ±(99.9%) 0.309 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.202), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 7.000), stdev = 1.789
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter
[info] # Run progress: 45.63% complete, ETA 00:15:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3238507.104 ops/s
[info] # Warmup Iteration   2: 3469467.793 ops/s
[info] # Warmup Iteration   3: 3545818.193 ops/s
[info] # Warmup Iteration   4: 3613184.955 ops/s
[info] # Warmup Iteration   5: 3514543.725 ops/s
[info] Iteration   1: 3603651.617 ops/s
[info]                  ·gc.alloc.rate:      109.937 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3604951.240 ops/s
[info]                  ·gc.alloc.rate:               109.972 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 111.684 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3591043.144 ops/s
[info]                  ·gc.alloc.rate:      109.553 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3605235.739 ops/s
[info]                  ·gc.alloc.rate:               109.989 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 111.673 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 3612935.999 ops/s
[info]                  ·gc.alloc.rate:      110.229 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter":
[info]   3603563.548 ±(99.9%) 30401.378 ops/s [Average]
[info]   (min, avg, max) = (3591043.144, 3603563.548, 3612935.999), stdev = 7895.141
[info]   CI (99.9%): [3573162.170, 3633964.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   109.936 ±(99.9%) 0.937 MB/sec [Average]
[info]   (min, avg, max) = (109.553, 109.936, 110.229), stdev = 0.243
[info]   CI (99.9%): [108.999, 110.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   102.353 ±(99.9%) 539.680 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.353, 255.890), stdev = 140.153
[info]   CI (99.9%): [≈ 0, 642.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   44.671 ±(99.9%) 235.539 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 44.671, 111.684), stdev = 61.169
[info]   CI (99.9%): [≈ 0, 280.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   2.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay
[info] # Run progress: 46.60% complete, ETA 00:14:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 78178.881 ops/s
[info] # Warmup Iteration   2: 161548.290 ops/s
[info] # Warmup Iteration   3: 161775.367 ops/s
[info] # Warmup Iteration   4: 164306.643 ops/s
[info] # Warmup Iteration   5: 164485.154 ops/s
[info] Iteration   1: 165916.897 ops/s
[info]                  ·gc.alloc.rate:                   1100.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9468.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.395 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 166250.597 ops/s
[info]                  ·gc.alloc.rate:                   1102.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9493.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 166022.558 ops/s
[info]                  ·gc.alloc.rate:                   1100.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9538.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.592 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 161916.116 ops/s
[info]                  ·gc.alloc.rate:                   1073.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13093.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 163733.213 ops/s
[info]                  ·gc.alloc.rate:                   1085.635 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9732.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.400 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay":
[info]   164767.876 ±(99.9%) 7279.652 ops/s [Average]
[info]   (min, avg, max) = (161916.116, 164767.876, 166250.597), stdev = 1890.503
[info]   CI (99.9%): [157488.224, 172047.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1092.484 ±(99.9%) 48.033 MB/sec [Average]
[info]   (min, avg, max) = (1073.681, 1092.484, 1102.291), stdev = 12.474
[info]   CI (99.9%): [1044.450, 1140.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10432.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10432.003, 10432.003, 10432.003), stdev = 0.001
[info]   CI (99.9%): [10432.002, 10432.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1073.705 ±(99.9%) 589.835 MB/sec [Average]
[info]   (min, avg, max) = (998.496, 1073.705, 1347.559), stdev = 153.178
[info]   CI (99.9%): [483.870, 1663.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10265.341 ±(99.9%) 6099.880 B/op [Average]
[info]   (min, avg, max) = (9468.975, 10265.341, 13093.035), stdev = 1584.120
[info]   CI (99.9%): [4165.461, 16365.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.397 ±(99.9%) 0.531 B/op [Average]
[info]   (min, avg, max) = (0.202, 0.397, 0.592), stdev = 0.138
[info]   CI (99.9%): [≈ 0, 0.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.095
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce
[info] # Run progress: 47.57% complete, ETA 00:14:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3230.913 ops/s
[info] # Warmup Iteration   2: 5778.395 ops/s
[info] # Warmup Iteration   3: 7201.189 ops/s
[info] # Warmup Iteration   4: 7869.740 ops/s
[info] # Warmup Iteration   5: 7780.780 ops/s
[info] Iteration   1: 7820.502 ops/s
[info]                  ·gc.alloc.rate:                   1108.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              223056.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     199875.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.330 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66.442 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 7863.902 ops/s
[info]                  ·gc.alloc.rate:                   1114.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              223056.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     199557.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.166 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 7843.546 ops/s
[info]                  ·gc.alloc.rate:                   1111.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              223056.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     268091.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.706 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 7830.591 ops/s
[info]                  ·gc.alloc.rate:               1110.178 MB/sec
[info]                  ·gc.alloc.rate.norm:          223065.277 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 202364.993 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 7885.885 ops/s
[info]                  ·gc.alloc.rate:                   1118.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              223096.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     201485.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.043 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.599 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce":
[info]   7848.885 ±(99.9%) 101.208 ops/s [Average]
[info]   (min, avg, max) = (7820.502, 7848.885, 7885.885), stdev = 26.283
[info]   CI (99.9%): [7747.678, 7950.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate":
[info]   1112.798 ±(99.9%) 14.541 MB/sec [Average]
[info]   (min, avg, max) = (1108.765, 1112.798, 1118.154), stdev = 3.776
[info]   CI (99.9%): [1098.257, 1127.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm":
[info]   223065.900 ±(99.9%) 66.706 B/op [Average]
[info]   (min, avg, max) = (223056.055, 223065.900, 223096.055), stdev = 17.323
[info]   CI (99.9%): [222999.194, 223132.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   1068.896 ±(99.9%) 576.559 MB/sec [Average]
[info]   (min, avg, max) = (993.540, 1068.896, 1336.473), stdev = 149.731
[info]   CI (99.9%): [492.337, 1645.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   214274.947 ±(99.9%) 115928.540 B/op [Average]
[info]   (min, avg, max) = (199557.370, 214274.947, 268091.187), stdev = 30106.274
[info]   CI (99.9%): [98346.407, 330203.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.095 ±(99.9%) 0.519 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.095, 0.330), stdev = 0.135
[info]   CI (99.9%): [≈ 0, 0.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   19.183 ±(99.9%) 104.485 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 19.183, 66.442), stdev = 27.134
[info]   CI (99.9%): [≈ 0, 123.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 2.966
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson
[info] # Run progress: 48.54% complete, ETA 00:14:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4252.605 ops/s
[info] # Warmup Iteration   2: 11405.260 ops/s
[info] # Warmup Iteration   3: 11917.368 ops/s
[info] # Warmup Iteration   4: 11881.210 ops/s
[info] # Warmup Iteration   5: 11876.231 ops/s
[info] Iteration   1: 11869.803 ops/s
[info]                  ·gc.alloc.rate:               194.647 MB/sec
[info]                  ·gc.alloc.rate.norm:          25798.586 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33916.205 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 11966.234 ops/s
[info]                  ·gc.alloc.rate:      189.234 MB/sec
[info]                  ·gc.alloc.rate.norm: 24880.040 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 10013.261 ops/s
[info]                  ·gc.alloc.rate:               158.364 MB/sec
[info]                  ·gc.alloc.rate.norm:          24880.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 40200.997 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 11949.027 ops/s
[info]                  ·gc.alloc.rate:      188.972 MB/sec
[info]                  ·gc.alloc.rate.norm: 24880.039 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 11938.706 ops/s
[info]                  ·gc.alloc.rate:                   188.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              24880.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42545.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.744 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson":
[info]   11547.406 ±(99.9%) 3305.376 ops/s [Average]
[info]   (min, avg, max) = (10013.261, 11547.406, 11966.234), stdev = 858.396
[info]   CI (99.9%): [8242.030, 14852.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate":
[info]   184.002 ±(99.9%) 55.989 MB/sec [Average]
[info]   (min, avg, max) = (158.364, 184.002, 194.647), stdev = 14.540
[info]   CI (99.9%): [128.013, 239.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   25063.752 ±(99.9%) 1581.785 B/op [Average]
[info]   (min, avg, max) = (24880.039, 25063.752, 25798.586), stdev = 410.784
[info]   CI (99.9%): [23481.967, 26645.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   166.923 ±(99.9%) 596.121 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 166.923, 322.838), stdev = 154.811
[info]   CI (99.9%): [≈ 0, 763.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   23332.528 ±(99.9%) 82912.087 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 23332.528, 42545.438), stdev = 21532.006
[info]   CI (99.9%): [≈ 0, 106244.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.549 ±(99.9%) 4.726 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.549, 2.744), stdev = 1.227
[info]   CI (99.9%): [≈ 0, 5.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter
[info] # Run progress: 49.51% complete, ETA 00:14:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7842.836 ops/s
[info] # Warmup Iteration   2: 20564.856 ops/s
[info] # Warmup Iteration   3: 22924.837 ops/s
[info] # Warmup Iteration   4: 22901.093 ops/s
[info] # Warmup Iteration   5: 22762.817 ops/s
[info] Iteration   1: 22921.677 ops/s
[info]                  ·gc.alloc.rate:               245.001 MB/sec
[info]                  ·gc.alloc.rate.norm:          16816.515 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17563.168 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 23206.277 ops/s
[info]                  ·gc.alloc.rate:      248.039 MB/sec
[info]                  ·gc.alloc.rate.norm: 16816.019 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 23041.737 ops/s
[info]                  ·gc.alloc.rate:               246.269 MB/sec
[info]                  ·gc.alloc.rate.norm:          16816.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22112.641 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 23066.209 ops/s
[info]                  ·gc.alloc.rate:               246.519 MB/sec
[info]                  ·gc.alloc.rate.norm:          16816.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22088.680 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 23135.875 ops/s
[info]                  ·gc.alloc.rate:               247.256 MB/sec
[info]                  ·gc.alloc.rate.norm:          16816.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22158.758 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter":
[info]   23074.355 ±(99.9%) 411.267 ops/s [Average]
[info]   (min, avg, max) = (22921.677, 23074.355, 23206.277), stdev = 106.805
[info]   CI (99.9%): [22663.088, 23485.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate":
[info]   246.617 ±(99.9%) 4.379 MB/sec [Average]
[info]   (min, avg, max) = (245.001, 246.617, 248.039), stdev = 1.137
[info]   CI (99.9%): [242.238, 250.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   16816.118 ±(99.9%) 0.854 B/op [Average]
[info]   (min, avg, max) = (16816.019, 16816.118, 16816.515), stdev = 0.222
[info]   CI (99.9%): [16815.265, 16816.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   245.869 ±(99.9%) 541.483 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 245.869, 325.813), stdev = 140.621
[info]   CI (99.9%): [≈ 0, 787.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   16784.649 ±(99.9%) 36920.619 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16784.649, 22158.758), stdev = 9588.168
[info]   CI (99.9%): [≈ 0, 53705.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay
[info] # Run progress: 50.49% complete, ETA 00:13:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1245.141 ops/s
[info] # Warmup Iteration   2: 3506.675 ops/s
[info] # Warmup Iteration   3: 3671.725 ops/s
[info] # Warmup Iteration   4: 3732.701 ops/s
[info] # Warmup Iteration   5: 3714.857 ops/s
[info] Iteration   1: 3773.773 ops/s
[info]                  ·gc.alloc.rate:                   1106.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              461416.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     414986.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 104.163 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 3752.065 ops/s
[info]                  ·gc.alloc.rate:                   1100.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              461416.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.676 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     559212.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.193 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3740.929 ops/s
[info]                  ·gc.alloc.rate:                   1097.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              461416.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     422428.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.757 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3723.463 ops/s
[info]                  ·gc.alloc.rate:                   1092.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              461416.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     426019.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.799 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3695.050 ops/s
[info]                  ·gc.alloc.rate:                   1083.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              461416.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     430381.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.866 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay":
[info]   3737.056 ±(99.9%) 114.514 ops/s [Average]
[info]   (min, avg, max) = (3695.050, 3737.056, 3773.773), stdev = 29.739
[info]   CI (99.9%): [3622.542, 3851.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate":
[info]   1096.064 ±(99.9%) 33.721 MB/sec [Average]
[info]   (min, avg, max) = (1083.678, 1096.064, 1106.884), stdev = 8.757
[info]   CI (99.9%): [1062.343, 1129.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   461416.117 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (461416.114, 461416.117, 461416.124), stdev = 0.004
[info]   CI (99.9%): [461416.102, 461416.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1070.560 ±(99.9%) 566.818 MB/sec [Average]
[info]   (min, avg, max) = (995.504, 1070.560, 1333.676), stdev = 147.201
[info]   CI (99.9%): [503.741, 1637.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   450605.613 ±(99.9%) 234791.978 B/op [Average]
[info]   (min, avg, max) = (414986.104, 450605.613, 559212.594), stdev = 60974.731
[info]   CI (99.9%): [215813.635, 685397.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.383 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.075, 0.250), stdev = 0.099
[info]   CI (99.9%): [≈ 0, 0.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   31.356 ±(99.9%) 159.382 B/op [Average]
[info]   (min, avg, max) = (8.757, 31.356, 104.163), stdev = 41.391
[info]   CI (99.9%): [≈ 0, 190.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 7.000), stdev = 1.304
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce
[info] # Run progress: 51.46% complete, ETA 00:13:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 253603.821 ops/s
[info] # Warmup Iteration   2: 408736.330 ops/s
[info] # Warmup Iteration   3: 418105.359 ops/s
[info] # Warmup Iteration   4: 414054.377 ops/s
[info] # Warmup Iteration   5: 423283.368 ops/s
[info] Iteration   1: 421513.795 ops/s
[info]                  ·gc.alloc.rate:                   1491.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1675.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6253.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 415802.521 ops/s
[info]                  ·gc.alloc.rate:                   1471.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5094.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 414403.376 ops/s
[info]                  ·gc.alloc.rate:                   1466.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6413.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 418977.884 ops/s
[info]                  ·gc.alloc.rate:                   1482.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5087.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 416788.209 ops/s
[info]                  ·gc.alloc.rate:                   1474.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.709 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5121.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce":
[info]   417497.157 ±(99.9%) 10766.633 ops/s [Average]
[info]   (min, avg, max) = (414403.376, 417497.157, 421513.795), stdev = 2796.060
[info]   CI (99.9%): [406730.524, 428263.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate":
[info]   1477.562 ±(99.9%) 38.201 MB/sec [Average]
[info]   (min, avg, max) = (1466.623, 1477.562, 1491.818), stdev = 9.921
[info]   CI (99.9%): [1439.361, 1515.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm":
[info]   5568.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5568.001, 5568.001, 5568.001), stdev = 0.001
[info]   CI (99.9%): [5568.001, 5568.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space":
[info]   1484.554 ±(99.9%) 695.909 MB/sec [Average]
[info]   (min, avg, max) = (1346.416, 1484.554, 1689.305), stdev = 180.725
[info]   CI (99.9%): [788.645, 2180.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5594.081 ±(99.9%) 2608.786 B/op [Average]
[info]   (min, avg, max) = (5087.296, 5594.081, 6413.409), stdev = 677.493
[info]   CI (99.9%): [2985.295, 8202.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.188 ±(99.9%) 0.164 B/op [Average]
[info]   (min, avg, max) = (0.156, 0.188, 0.236), stdev = 0.042
[info]   CI (99.9%): [0.025, 0.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.000, 14.000), stdev = 3.000
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson
[info] # Run progress: 52.43% complete, ETA 00:13:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1077268.344 ops/s
[info] # Warmup Iteration   2: 1612540.847 ops/s
[info] # Warmup Iteration   3: 1610727.074 ops/s
[info] # Warmup Iteration   4: 1632427.129 ops/s
[info] # Warmup Iteration   5: 1625248.110 ops/s
[info] Iteration   1: 1634149.301 ops/s
[info]                  ·gc.alloc.rate:                   681.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.366 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     631.951 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1620123.230 ops/s
[info]                  ·gc.alloc.rate:                   675.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     960.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1613889.190 ops/s
[info]                  ·gc.alloc.rate:                   672.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     646.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1641194.820 ops/s
[info]                  ·gc.alloc.rate:                   684.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     638.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1644365.477 ops/s
[info]                  ·gc.alloc.rate:                   685.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     638.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson":
[info]   1630744.404 ±(99.9%) 51057.191 ops/s [Average]
[info]   (min, avg, max) = (1613889.190, 1630744.404, 1644365.477), stdev = 13259.390
[info]   CI (99.9%): [1579687.213, 1681801.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate":
[info]   679.917 ±(99.9%) 21.287 MB/sec [Average]
[info]   (min, avg, max) = (672.895, 679.917, 685.608), stdev = 5.528
[info]   CI (99.9%): [658.629, 701.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space":
[info]   728.231 ±(99.9%) 561.812 MB/sec [Average]
[info]   (min, avg, max) = (656.366, 728.231, 989.123), stdev = 145.901
[info]   CI (99.9%): [166.419, 1290.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   703.055 ±(99.9%) 554.732 B/op [Average]
[info]   (min, avg, max) = (631.951, 703.055, 960.598), stdev = 144.062
[info]   CI (99.9%): [148.324, 1257.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.237 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.167), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.057 ±(99.9%) 0.231 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.057, 0.162), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 7.000), stdev = 1.924
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter
[info] # Run progress: 53.40% complete, ETA 00:12:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7160058.904 ops/s
[info] # Warmup Iteration   2: 8688099.397 ops/s
[info] # Warmup Iteration   3: 8920250.862 ops/s
[info] # Warmup Iteration   4: 8874444.283 ops/s
[info] # Warmup Iteration   5: 8665857.669 ops/s
[info] Iteration   1: 8941812.005 ops/s
[info]                  ·gc.alloc.rate:               454.614 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 57.101 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 8887547.070 ops/s
[info]                  ·gc.alloc.rate:                   451.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 9023707.090 ops/s
[info]                  ·gc.alloc.rate:               459.012 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56.577 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 9026525.337 ops/s
[info]                  ·gc.alloc.rate:               458.974 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56.798 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 8891211.279 ops/s
[info]                  ·gc.alloc.rate:                   452.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter":
[info]   8954160.556 ±(99.9%) 262761.214 ops/s [Average]
[info]   (min, avg, max) = (8887547.070, 8954160.556, 9026525.337), stdev = 68238.253
[info]   CI (99.9%): [8691399.342, 9216921.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate":
[info]   455.319 ±(99.9%) 13.557 MB/sec [Average]
[info]   (min, avg, max) = (451.904, 455.319, 459.012), stdev = 3.521
[info]   CI (99.9%): [441.761, 468.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   455.404 ±(99.9%) 687.670 MB/sec [Average]
[info]   (min, avg, max) = (324.486, 455.404, 652.705), stdev = 178.586
[info]   CI (99.9%): [≈ 0, 1143.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   80.186 ±(99.9%) 123.179 B/op [Average]
[info]   (min, avg, max) = (56.577, 80.186, 115.500), stdev = 31.989
[info]   CI (99.9%): [≈ 0, 203.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.007), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 8.000), stdev = 2.793
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay
[info] # Run progress: 54.37% complete, ETA 00:12:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 153542.437 ops/s
[info] # Warmup Iteration   2: 228902.467 ops/s
[info] # Warmup Iteration   3: 228490.690 ops/s
[info] # Warmup Iteration   4: 230925.149 ops/s
[info] # Warmup Iteration   5: 232644.568 ops/s
[info] Iteration   1: 231078.853 ops/s
[info]                  ·gc.alloc.rate:                   733.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              4992.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4487.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.425 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 229571.811 ops/s
[info]                  ·gc.alloc.rate:                   728.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              4992.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6811.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.428 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 231661.003 ops/s
[info]                  ·gc.alloc.rate:                   734.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              4992.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4518.846 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.566 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 229515.663 ops/s
[info]                  ·gc.alloc.rate:                   728.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              4992.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4574.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 231460.440 ops/s
[info]                  ·gc.alloc.rate:               734.340 MB/sec
[info]                  ·gc.alloc.rate.norm:          4992.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4547.682 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay":
[info]   230657.554 ±(99.9%) 3997.899 ops/s [Average]
[info]   (min, avg, max) = (229515.663, 230657.554, 231661.003), stdev = 1038.242
[info]   CI (99.9%): [226659.655, 234655.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate":
[info]   731.834 ±(99.9%) 12.594 MB/sec [Average]
[info]   (min, avg, max) = (728.249, 731.834, 734.998), stdev = 3.271
[info]   CI (99.9%): [719.239, 744.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm":
[info]   4992.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4992.002, 4992.002, 4992.002), stdev = 0.001
[info]   CI (99.9%): [4992.002, 4992.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space":
[info]   730.923 ±(99.9%) 566.197 MB/sec [Average]
[info]   (min, avg, max) = (659.047, 730.923, 993.869), stdev = 147.040
[info]   CI (99.9%): [164.726, 1297.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4987.992 ±(99.9%) 3927.025 B/op [Average]
[info]   (min, avg, max) = (4487.221, 4987.992, 6811.396), stdev = 1019.836
[info]   CI (99.9%): [1060.968, 8915.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.312 ±(99.9%) 0.896 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.312, 0.566), stdev = 0.233
[info]   CI (99.9%): [≈ 0, 1.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.400, 10.000), stdev = 3.507
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce
[info] # Run progress: 55.34% complete, ETA 00:12:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 925745.463 ops/s
[info] # Warmup Iteration   2: 1312762.888 ops/s
[info] # Warmup Iteration   3: 1287927.888 ops/s
[info] # Warmup Iteration   4: 1304646.249 ops/s
[info] # Warmup Iteration   5: 1311590.666 ops/s
[info] Iteration   1: 1320361.157 ops/s
[info]                  ·gc.alloc.rate:                   1477.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1599.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1313759.774 ops/s
[info]                  ·gc.alloc.rate:                   1469.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1613.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1291089.540 ops/s
[info]                  ·gc.alloc.rate:                   1444.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2059.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1324315.138 ops/s
[info]                  ·gc.alloc.rate:                   1481.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1610.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1305430.199 ops/s
[info]                  ·gc.alloc.rate:                   1460.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1635.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce":
[info]   1310991.162 ±(99.9%) 50938.840 ops/s [Average]
[info]   (min, avg, max) = (1291089.540, 1310991.162, 1324315.138), stdev = 13228.655
[info]   CI (99.9%): [1260052.321, 1361930.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1466.507 ±(99.9%) 57.074 MB/sec [Average]
[info]   (min, avg, max) = (1444.240, 1466.507, 1481.454), stdev = 14.822
[info]   CI (99.9%): [1409.433, 1523.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1760.000, 1760.000, 1760.000), stdev = 0.001
[info]   CI (99.9%): [1760.000, 1760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1418.336 ±(99.9%) 585.687 MB/sec [Average]
[info]   (min, avg, max) = (1342.104, 1418.336, 1690.213), stdev = 152.101
[info]   CI (99.9%): [832.650, 2004.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1703.590 ±(99.9%) 768.306 B/op [Average]
[info]   (min, avg, max) = (1599.225, 1703.590, 2059.752), stdev = 199.527
[info]   CI (99.9%): [935.284, 2471.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.060 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (0.050, 0.060, 0.076), stdev = 0.014
[info]   CI (99.9%): [0.007, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 12.000), stdev = 2.280
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson
[info] # Run progress: 56.31% complete, ETA 00:12:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2629048.957 ops/s
[info] # Warmup Iteration   2: 4297851.832 ops/s
[info] # Warmup Iteration   3: 4373007.528 ops/s
[info] # Warmup Iteration   4: 4346471.256 ops/s
[info] # Warmup Iteration   5: 4353499.178 ops/s
[info] Iteration   1: 4394821.839 ops/s
[info]                  ·gc.alloc.rate:                   1206.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     357.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 4395542.310 ops/s
[info]                  ·gc.alloc.rate:                   1206.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     478.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 4353562.104 ops/s
[info]                  ·gc.alloc.rate:                   1195.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     364.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 4325623.899 ops/s
[info]                  ·gc.alloc.rate:                   1187.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     490.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 4312803.675 ops/s
[info]                  ·gc.alloc.rate:                   1184.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1013.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     369.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson":
[info]   4356470.765 ±(99.9%) 147437.364 ops/s [Average]
[info]   (min, avg, max) = (4312803.675, 4356470.765, 4395542.310), stdev = 38289.015
[info]   CI (99.9%): [4209033.401, 4503908.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1196.149 ±(99.9%) 40.477 MB/sec [Average]
[info]   (min, avg, max) = (1184.178, 1196.149, 1206.858), stdev = 10.512
[info]   CI (99.9%): [1155.672, 1236.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1141.260 ±(99.9%) 710.247 MB/sec [Average]
[info]   (min, avg, max) = (998.571, 1141.260, 1348.330), stdev = 184.449
[info]   CI (99.9%): [431.013, 1851.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   412.173 ±(99.9%) 255.973 B/op [Average]
[info]   (min, avg, max) = (357.492, 412.173, 490.447), stdev = 66.475
[info]   CI (99.9%): [156.200, 668.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.016 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.012, 0.015), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 11.000), stdev = 2.408
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 57.28% complete, ETA 00:11:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13525857.016 ops/s
[info] # Warmup Iteration   2: 15591818.418 ops/s
[info] # Warmup Iteration   3: 15962947.180 ops/s
[info] # Warmup Iteration   4: 15015268.054 ops/s
[info] # Warmup Iteration   5: 15538965.292 ops/s
[info] Iteration   1: 16161457.493 ops/s
[info]                  ·gc.alloc.rate:               493.019 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31.590 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   2: 15903881.909 ops/s
[info]                  ·gc.alloc.rate:               485.193 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 64.271 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 15498387.073 ops/s
[info]                  ·gc.alloc.rate:               472.804 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.077 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 16118394.288 ops/s
[info]                  ·gc.alloc.rate:                   491.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 16109889.904 ops/s
[info]                  ·gc.alloc.rate:                   491.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter":
[info]   15958402.133 ±(99.9%) 1062184.309 ops/s [Average]
[info]   (min, avg, max) = (15498387.073, 15958402.133, 16161457.493), stdev = 275845.892
[info]   CI (99.9%): [14896217.825, 17020586.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   486.836 ±(99.9%) 32.382 MB/sec [Average]
[info]   (min, avg, max) = (472.804, 486.836, 493.019), stdev = 8.409
[info]   CI (99.9%): [454.454, 519.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   455.889 ±(99.9%) 686.427 MB/sec [Average]
[info]   (min, avg, max) = (324.471, 455.889, 652.663), stdev = 178.263
[info]   CI (99.9%): [≈ 0, 1142.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   44.915 ±(99.9%) 67.096 B/op [Average]
[info]   (min, avg, max) = (31.590, 44.915, 64.271), stdev = 17.425
[info]   CI (99.9%): [≈ 0, 112.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.004 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.800, 5.000), stdev = 2.168
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc
[info] # Run progress: 58.25% complete, ETA 00:11:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18890865.538 ops/s
[info] # Warmup Iteration   2: 19958804.192 ops/s
[info] # Warmup Iteration   3: 20142038.362 ops/s
[info] # Warmup Iteration   4: 20236420.155 ops/s
[info] # Warmup Iteration   5: 20313113.608 ops/s
[info] Iteration   1: 20324738.931 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 20317738.286 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 20169980.624 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 20162326.390 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 20240763.440 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc":
[info]   20243109.534 ±(99.9%) 298965.165 ops/s [Average]
[info]   (min, avg, max) = (20162326.390, 20243109.534, 20324738.931), stdev = 77640.304
[info]   CI (99.9%): [19944144.369, 20542074.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay
[info] # Run progress: 59.22% complete, ETA 00:11:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 611272.983 ops/s
[info] # Warmup Iteration   2: 914627.944 ops/s
[info] # Warmup Iteration   3: 916576.567 ops/s
[info] # Warmup Iteration   4: 917142.064 ops/s
[info] # Warmup Iteration   5: 922773.261 ops/s
[info] Iteration   1: 909925.861 ops/s
[info]                  ·gc.alloc.rate:                   1364.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2297.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 921817.338 ops/s
[info]                  ·gc.alloc.rate:                   1382.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2281.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 916906.438 ops/s
[info]                  ·gc.alloc.rate:                   1375.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2305.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 913064.018 ops/s
[info]                  ·gc.alloc.rate:                   1369.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2323.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 923100.968 ops/s
[info]                  ·gc.alloc.rate:                   1384.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2305.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay":
[info]   916962.925 ±(99.9%) 21608.756 ops/s [Average]
[info]   (min, avg, max) = (909925.861, 916962.925, 923100.968), stdev = 5611.725
[info]   CI (99.9%): [895354.169, 938571.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1375.420 ±(99.9%) 32.495 MB/sec [Average]
[info]   (min, avg, max) = (1364.777, 1375.420, 1384.637), stdev = 8.439
[info]   CI (99.9%): [1342.925, 1407.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2360.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2360.000, 2360.000, 2360.001), stdev = 0.001
[info]   CI (99.9%): [2360.000, 2360.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1342.009 ±(99.9%) 36.985 MB/sec [Average]
[info]   (min, avg, max) = (1328.626, 1342.009, 1352.714), stdev = 9.605
[info]   CI (99.9%): [1305.024, 1378.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2302.701 ±(99.9%) 59.231 B/op [Average]
[info]   (min, avg, max) = (2281.419, 2302.701, 2323.974), stdev = 15.382
[info]   CI (99.9%): [2243.471, 2361.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.057 ±(99.9%) 0.123 B/op [Average]
[info]   (min, avg, max) = (0.035, 0.057, 0.107), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 10.000), stdev = 2.074
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce
[info] # Run progress: 60.19% complete, ETA 00:11:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 489385.027 ops/s
[info] # Warmup Iteration   2: 768737.486 ops/s
[info] # Warmup Iteration   3: 772651.920 ops/s
[info] # Warmup Iteration   4: 778733.155 ops/s
[info] # Warmup Iteration   5: 766682.951 ops/s
[info] Iteration   1: 778266.107 ops/s
[info]                  ·gc.alloc.rate:                   1871.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3408.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 764386.785 ops/s
[info]                  ·gc.alloc.rate:                   1838.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4179.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.171 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 777463.754 ops/s
[info]                  ·gc.alloc.rate:                   1869.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3432.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 759384.491 ops/s
[info]                  ·gc.alloc.rate:                   1826.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4224.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 782474.743 ops/s
[info]                  ·gc.alloc.rate:                   1881.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3416.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce":
[info]   772395.176 ±(99.9%) 38273.164 ops/s [Average]
[info]   (min, avg, max) = (759384.491, 772395.176, 782474.743), stdev = 9939.419
[info]   CI (99.9%): [734122.012, 810668.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1857.590 ±(99.9%) 91.956 MB/sec [Average]
[info]   (min, avg, max) = (1826.279, 1857.590, 1881.856), stdev = 23.881
[info]   CI (99.9%): [1765.633, 1949.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3784.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3784.001, 3784.001, 3784.001), stdev = 0.001
[info]   CI (99.9%): [3784.000, 3784.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1830.043 ±(99.9%) 719.804 MB/sec [Average]
[info]   (min, avg, max) = (1685.800, 1830.043, 2038.995), stdev = 186.931
[info]   CI (99.9%): [1110.238, 2549.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3732.175 ±(99.9%) 1652.878 B/op [Average]
[info]   (min, avg, max) = (3408.163, 3732.175, 4224.744), stdev = 429.247
[info]   CI (99.9%): [2079.297, 5385.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.111 ±(99.9%) 0.190 B/op [Average]
[info]   (min, avg, max) = (0.042, 0.111, 0.171), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 13.600, 17.000), stdev = 2.881
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson
[info] # Run progress: 61.17% complete, ETA 00:10:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1504090.479 ops/s
[info] # Warmup Iteration   2: 2635386.226 ops/s
[info] # Warmup Iteration   3: 2609110.256 ops/s
[info] # Warmup Iteration   4: 2630104.962 ops/s
[info] # Warmup Iteration   5: 2594251.940 ops/s
[info] Iteration   1: 2640312.027 ops/s
[info]                  ·gc.alloc.rate:               1530.393 MB/sec
[info]                  ·gc.alloc.rate.norm:          912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 798.934 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   2: 2627316.419 ops/s
[info]                  ·gc.alloc.rate:                   1522.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1007.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2645560.764 ops/s
[info]                  ·gc.alloc.rate:               1533.556 MB/sec
[info]                  ·gc.alloc.rate.norm:          912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1351.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 803.680 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   4: 2653638.681 ops/s
[info]                  ·gc.alloc.rate:                   1538.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1003.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 2659474.687 ops/s
[info]                  ·gc.alloc.rate:                   1541.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1003.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson":
[info]   2645260.516 ±(99.9%) 47893.894 ops/s [Average]
[info]   (min, avg, max) = (2627316.419, 2645260.516, 2659474.687), stdev = 12437.892
[info]   CI (99.9%): [2597366.622, 2693154.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1533.291 ±(99.9%) 27.671 MB/sec [Average]
[info]   (min, avg, max) = (1522.907, 1533.291, 1541.464), stdev = 7.186
[info]   CI (99.9%): [1505.621, 1560.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1552.975 ±(99.9%) 727.812 MB/sec [Average]
[info]   (min, avg, max) = (1340.660, 1552.975, 1696.482), stdev = 189.010
[info]   CI (99.9%): [825.164, 2280.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   923.643 ±(99.9%) 430.128 B/op [Average]
[info]   (min, avg, max) = (798.934, 923.643, 1007.965), stdev = 111.703
[info]   CI (99.9%): [493.516, 1353.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.098 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.050), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.000, 13.000), stdev = 1.581
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter
[info] # Run progress: 62.14% complete, ETA 00:10:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4253304.894 ops/s
[info] # Warmup Iteration   2: 4657849.704 ops/s
[info] # Warmup Iteration   3: 4652268.989 ops/s
[info] # Warmup Iteration   4: 4719878.984 ops/s
[info] # Warmup Iteration   5: 4666910.044 ops/s
[info] Iteration   1: 4616850.362 ops/s
[info]                  ·gc.alloc.rate:                   1267.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     451.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 4724259.781 ops/s
[info]                  ·gc.alloc.rate:                   1297.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     444.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 4681236.170 ops/s
[info]                  ·gc.alloc.rate:                   1285.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     451.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 4714734.288 ops/s
[info]                  ·gc.alloc.rate:                   1294.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.379 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     449.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 4685003.108 ops/s
[info]                  ·gc.alloc.rate:                   1286.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     454.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter":
[info]   4684416.742 ±(99.9%) 162028.134 ops/s [Average]
[info]   (min, avg, max) = (4616850.362, 4684416.742, 4724259.781), stdev = 42078.192
[info]   CI (99.9%): [4522388.607, 4846444.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1286.216 ±(99.9%) 44.543 MB/sec [Average]
[info]   (min, avg, max) = (1267.680, 1286.216, 1297.253), stdev = 11.568
[info]   CI (99.9%): [1241.673, 1330.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1340.582 ±(99.9%) 39.229 MB/sec [Average]
[info]   (min, avg, max) = (1326.022, 1340.582, 1351.922), stdev = 10.188
[info]   CI (99.9%): [1301.353, 1379.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   450.275 ±(99.9%) 13.424 B/op [Average]
[info]   (min, avg, max) = (444.730, 450.275, 454.048), stdev = 3.486
[info]   CI (99.9%): [436.851, 463.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.146), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.024, 0.049), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 12.000), stdev = 3.194
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay
[info] # Run progress: 63.11% complete, ETA 00:10:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 175757.514 ops/s
[info] # Warmup Iteration   2: 342260.763 ops/s
[info] # Warmup Iteration   3: 343719.370 ops/s
[info] # Warmup Iteration   4: 339834.771 ops/s
[info] # Warmup Iteration   5: 343498.759 ops/s
[info] Iteration   1: 343410.462 ops/s
[info]                  ·gc.alloc.rate:               1225.870 MB/sec
[info]                  ·gc.alloc.rate.norm:          5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4588.506 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 343005.386 ops/s
[info]                  ·gc.alloc.rate:                   1224.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6152.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 345180.029 ops/s
[info]                  ·gc.alloc.rate:                   1232.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6141.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.285 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 339441.436 ops/s
[info]                  ·gc.alloc.rate:               1211.579 MB/sec
[info]                  ·gc.alloc.rate.norm:          5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1012.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4694.738 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Iteration   5: 343271.074 ops/s
[info]                  ·gc.alloc.rate:                   1225.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6203.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay":
[info]   342861.678 ±(99.9%) 8068.507 ops/s [Average]
[info]   (min, avg, max) = (339441.436, 342861.678, 345180.029), stdev = 2095.366
[info]   CI (99.9%): [334793.171, 350930.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1223.826 ±(99.9%) 28.909 MB/sec [Average]
[info]   (min, avg, max) = (1211.579, 1223.826, 1232.132), stdev = 7.508
[info]   CI (99.9%): [1194.917, 1252.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1211.307 ±(99.9%) 717.790 MB/sec [Average]
[info]   (min, avg, max) = (1001.586, 1211.307, 1353.369), stdev = 186.408
[info]   CI (99.9%): [493.517, 1929.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5556.160 ±(99.9%) 3219.220 B/op [Average]
[info]   (min, avg, max) = (4588.506, 5556.160, 6203.146), stdev = 836.021
[info]   CI (99.9%): [2336.940, 8775.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.152 ±(99.9%) 0.667 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.152, 0.382), stdev = 0.173
[info]   CI (99.9%): [≈ 0, 0.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 14.000), stdev = 4.219
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson
[info] # Run progress: 64.08% complete, ETA 00:09:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1362025.561 ops/s
[info] # Warmup Iteration   2: 1986622.669 ops/s
[info] # Warmup Iteration   3: 1972065.769 ops/s
[info] # Warmup Iteration   4: 1970412.020 ops/s
[info] # Warmup Iteration   5: 1969746.076 ops/s
[info] Iteration   1: 1959240.067 ops/s
[info]                  ·gc.alloc.rate:                   1036.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     800.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1966354.101 ops/s
[info]                  ·gc.alloc.rate:                   1039.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     801.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1990797.388 ops/s
[info]                  ·gc.alloc.rate:                   1052.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     793.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1907766.620 ops/s
[info]                  ·gc.alloc.rate:               1008.866 MB/sec
[info]                  ·gc.alloc.rate.norm:          832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 830.648 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 2012671.820 ops/s
[info]                  ·gc.alloc.rate:                   1064.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     789.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson":
[info]   1967365.999 ±(99.9%) 151853.941 ops/s [Average]
[info]   (min, avg, max) = (1907766.620, 1967365.999, 2012671.820), stdev = 39435.986
[info]   CI (99.9%): [1815512.058, 2119219.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1040.326 ±(99.9%) 80.136 MB/sec [Average]
[info]   (min, avg, max) = (1008.866, 1040.326, 1064.248), stdev = 20.811
[info]   CI (99.9%): [960.190, 1120.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   832.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (832.000, 832.000, 832.000), stdev = 0.001
[info]   CI (99.9%): [832.000, 832.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1003.705 ±(99.9%) 19.897 MB/sec [Average]
[info]   (min, avg, max) = (996.597, 1003.705, 1009.808), stdev = 5.167
[info]   CI (99.9%): [983.808, 1023.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   802.963 ±(99.9%) 62.458 B/op [Average]
[info]   (min, avg, max) = (789.441, 802.963, 830.648), stdev = 16.220
[info]   CI (99.9%): [740.505, 865.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.036 ±(99.9%) 0.124 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.036, 0.084), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 9.000), stdev = 1.871
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter
[info] # Run progress: 65.05% complete, ETA 00:09:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3897540.359 ops/s
[info] # Warmup Iteration   2: 4156426.020 ops/s
[info] # Warmup Iteration   3: 4264551.745 ops/s
[info] # Warmup Iteration   4: 4232176.257 ops/s
[info] # Warmup Iteration   5: 4233329.224 ops/s
[info] Iteration   1: 4262918.582 ops/s
[info]                  ·gc.alloc.rate:               780.366 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 241.254 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 4240609.272 ops/s
[info]                  ·gc.alloc.rate:                   776.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.336 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     243.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4263960.818 ops/s
[info]                  ·gc.alloc.rate:                   780.452 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     365.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4234656.259 ops/s
[info]                  ·gc.alloc.rate:               775.098 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 246.102 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   5: 4257857.363 ops/s
[info]                  ·gc.alloc.rate:                   780.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     367.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter":
[info]   4252000.459 ±(99.9%) 51917.311 ops/s [Average]
[info]   (min, avg, max) = (4234656.259, 4252000.459, 4263960.818), stdev = 13482.761
[info]   CI (99.9%): [4200083.147, 4303917.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   778.440 ±(99.9%) 9.943 MB/sec [Average]
[info]   (min, avg, max) = (775.098, 778.440, 780.452), stdev = 2.582
[info]   CI (99.9%): [768.498, 788.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   791.448 ±(99.9%) 706.624 MB/sec [Average]
[info]   (min, avg, max) = (653.704, 791.448, 995.084), stdev = 183.508
[info]   CI (99.9%): [84.825, 1498.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   292.701 ±(99.9%) 258.847 B/op [Average]
[info]   (min, avg, max) = (241.254, 292.701, 367.374), stdev = 67.222
[info]   CI (99.9%): [33.854, 551.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.030 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.015), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 11.000), stdev = 3.647
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay
[info] # Run progress: 66.02% complete, ETA 00:09:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 289904.376 ops/s
[info] # Warmup Iteration   2: 493007.856 ops/s
[info] # Warmup Iteration   3: 503990.099 ops/s
[info] # Warmup Iteration   4: 504395.551 ops/s
[info] # Warmup Iteration   5: 506066.834 ops/s
[info] Iteration   1: 501478.458 ops/s
[info]                  ·gc.alloc.rate:                   1489.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              4672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1677.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5264.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 490313.878 ops/s
[info]                  ·gc.alloc.rate:                   1455.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              4672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4326.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 501050.983 ops/s
[info]                  ·gc.alloc.rate:                   1487.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              4672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5307.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 496634.522 ops/s
[info]                  ·gc.alloc.rate:                   1474.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              4672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4293.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 495637.287 ops/s
[info]                  ·gc.alloc.rate:               1471.635 MB/sec
[info]                  ·gc.alloc.rate.norm:          4672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1357.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4308.721 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay":
[info]   497023.025 ±(99.9%) 17557.331 ops/s [Average]
[info]   (min, avg, max) = (490313.878, 497023.025, 501478.458), stdev = 4559.583
[info]   CI (99.9%): [479465.695, 514580.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1475.815 ±(99.9%) 52.309 MB/sec [Average]
[info]   (min, avg, max) = (1455.857, 1475.815, 1489.081), stdev = 13.585
[info]   CI (99.9%): [1423.505, 1528.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4672.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4672.001, 4672.001, 4672.001), stdev = 0.001
[info]   CI (99.9%): [4672.001, 4672.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1485.760 ±(99.9%) 697.345 MB/sec [Average]
[info]   (min, avg, max) = (1348.206, 1485.760, 1690.188), stdev = 181.098
[info]   CI (99.9%): [788.415, 2183.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4700.184 ±(99.9%) 2060.205 B/op [Average]
[info]   (min, avg, max) = (4293.852, 4700.184, 5307.336), stdev = 535.029
[info]   CI (99.9%): [2639.980, 6760.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.118 ±(99.9%) 0.276 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.118, 0.196), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.800, 11.000), stdev = 1.304
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce
[info] # Run progress: 66.99% complete, ETA 00:09:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3747.973 ops/s
[info] # Warmup Iteration   2: 5214.855 ops/s
[info] # Warmup Iteration   3: 5342.887 ops/s
[info] # Warmup Iteration   4: 5366.330 ops/s
[info] # Warmup Iteration   5: 5419.177 ops/s
[info] Iteration   1: 5401.254 ops/s
[info]                  ·gc.alloc.rate:                   1497.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     390838.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.066 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 5371.739 ops/s
[info]                  ·gc.alloc.rate:                   1489.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     493062.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.963 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 5424.872 ops/s
[info]                  ·gc.alloc.rate:                   1504.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     392104.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.039 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5404.526 ops/s
[info]                  ·gc.alloc.rate:                   1498.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     493059.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.123 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 5431.298 ops/s
[info]                  ·gc.alloc.rate:                   1505.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     393047.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.094 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce":
[info]   5406.738 ±(99.9%) 90.140 ops/s [Average]
[info]   (min, avg, max) = (5371.739, 5406.738, 5431.298), stdev = 23.409
[info]   CI (99.9%): [5316.598, 5496.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1499.093 ±(99.9%) 24.959 MB/sec [Average]
[info]   (min, avg, max) = (1489.368, 1499.093, 1505.910), stdev = 6.482
[info]   CI (99.9%): [1474.134, 1524.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   436224.082 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (436224.080, 436224.082, 436224.086), stdev = 0.003
[info]   CI (99.9%): [436224.069, 436224.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   1485.559 ±(99.9%) 714.256 MB/sec [Average]
[info]   (min, avg, max) = (1341.766, 1485.559, 1693.822), stdev = 185.490
[info]   CI (99.9%): [771.303, 2199.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   432422.531 ±(99.9%) 213175.103 B/op [Average]
[info]   (min, avg, max) = (390838.167, 432422.531, 493062.956), stdev = 55360.897
[info]   CI (99.9%): [219247.428, 645597.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.038 ±(99.9%) 0.068 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.038, 0.062), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   11.057 ±(99.9%) 19.670 B/op [Average]
[info]   (min, avg, max) = (6.039, 11.057, 18.094), stdev = 5.108
[info]   CI (99.9%): [≈ 0, 30.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.800, 15.000), stdev = 4.550
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson
[info] # Run progress: 67.96% complete, ETA 00:08:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19328.531 ops/s
[info] # Warmup Iteration   2: 29789.579 ops/s
[info] # Warmup Iteration   3: 29376.538 ops/s
[info] # Warmup Iteration   4: 29249.642 ops/s
[info] # Warmup Iteration   5: 29898.316 ops/s
[info] Iteration   1: 29831.132 ops/s
[info]                  ·gc.alloc.rate:               432.442 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.772 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17168.741 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 29672.336 ops/s
[info]                  ·gc.alloc.rate:               430.157 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34627.459 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   3: 29659.184 ops/s
[info]                  ·gc.alloc.rate:               429.957 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.956 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17373.756 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 29922.599 ops/s
[info]                  ·gc.alloc.rate:               433.780 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.854 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17290.573 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 29861.599 ops/s
[info]                  ·gc.alloc.rate:               432.863 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.789 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17325.887 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson":
[info]   29789.370 ±(99.9%) 452.989 ops/s [Average]
[info]   (min, avg, max) = (29659.184, 29789.370, 29922.599), stdev = 117.640
[info]   CI (99.9%): [29336.381, 30242.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   431.840 ±(99.9%) 6.544 MB/sec [Average]
[info]   (min, avg, max) = (429.957, 431.840, 433.780), stdev = 1.700
[info]   CI (99.9%): [425.296, 438.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   22807.845 ±(99.9%) 0.279 B/op [Average]
[info]   (min, avg, max) = (22807.772, 22807.845, 22807.956), stdev = 0.072
[info]   CI (99.9%): [22807.566, 22808.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   392.757 ±(99.9%) 560.378 MB/sec [Average]
[info]   (min, avg, max) = (325.524, 392.757, 653.075), stdev = 145.528
[info]   CI (99.9%): [≈ 0, 953.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   20757.283 ±(99.9%) 29858.028 B/op [Average]
[info]   (min, avg, max) = (17168.741, 20757.283, 34627.459), stdev = 7754.035
[info]   CI (99.9%): [≈ 0, 50615.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 11.000), stdev = 3.715
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter
[info] # Run progress: 68.93% complete, ETA 00:08:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30240.394 ops/s
[info] # Warmup Iteration   2: 36458.260 ops/s
[info] # Warmup Iteration   3: 35454.098 ops/s
[info] # Warmup Iteration   4: 35136.524 ops/s
[info] # Warmup Iteration   5: 35615.421 ops/s
[info] Iteration   1: 35650.543 ops/s
[info]                  ·gc.alloc.rate:               273.364 MB/sec
[info]                  ·gc.alloc.rate.norm:          12064.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14174.715 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 35451.919 ops/s
[info]                  ·gc.alloc.rate:               271.843 MB/sec
[info]                  ·gc.alloc.rate.norm:          12064.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14254.671 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 35340.000 ops/s
[info]                  ·gc.alloc.rate:      270.991 MB/sec
[info]                  ·gc.alloc.rate.norm: 12064.012 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 35336.347 ops/s
[info]                  ·gc.alloc.rate:                   270.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              12064.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14405.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.709 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 34966.403 ops/s
[info]                  ·gc.alloc.rate:               268.090 MB/sec
[info]                  ·gc.alloc.rate.norm:          12064.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14556.060 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter":
[info]   35349.042 ±(99.9%) 959.078 ops/s [Average]
[info]   (min, avg, max) = (34966.403, 35349.042, 35650.543), stdev = 249.069
[info]   CI (99.9%): [34389.965, 36308.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   271.044 ±(99.9%) 7.396 MB/sec [Average]
[info]   (min, avg, max) = (268.090, 271.044, 273.364), stdev = 1.921
[info]   CI (99.9%): [263.648, 278.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   12064.012 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (12064.012, 12064.012, 12064.013), stdev = 0.001
[info]   CI (99.9%): [12064.011, 12064.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   257.876 ±(99.9%) 555.115 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 257.876, 323.514), stdev = 144.162
[info]   CI (99.9%): [≈ 0, 812.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   11478.151 ±(99.9%) 24713.985 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11478.151, 14556.060), stdev = 6418.143
[info]   CI (99.9%): [≈ 0, 36192.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.742 ±(99.9%) 6.387 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.742, 3.709), stdev = 1.659
[info]   CI (99.9%): [≈ 0, 7.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 6.000), stdev = 2.345
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc
[info] # Run progress: 69.90% complete, ETA 00:08:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44577.641 ops/s
[info] # Warmup Iteration   2: 49600.345 ops/s
[info] # Warmup Iteration   3: 48748.036 ops/s
[info] # Warmup Iteration   4: 48836.805 ops/s
[info] # Warmup Iteration   5: 48856.541 ops/s
[info] Iteration   1: 48914.676 ops/s
[info]                  ·gc.alloc.rate:      14.675 MB/sec
[info]                  ·gc.alloc.rate.norm: 472.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 48730.226 ops/s
[info]                  ·gc.alloc.rate:      14.619 MB/sec
[info]                  ·gc.alloc.rate.norm: 472.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 48849.481 ops/s
[info]                  ·gc.alloc.rate:      14.655 MB/sec
[info]                  ·gc.alloc.rate.norm: 472.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 48690.015 ops/s
[info]                  ·gc.alloc.rate:      14.607 MB/sec
[info]                  ·gc.alloc.rate.norm: 472.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 48552.624 ops/s
[info]                  ·gc.alloc.rate:      14.566 MB/sec
[info]                  ·gc.alloc.rate.norm: 472.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc":
[info]   48747.404 ±(99.9%) 544.316 ops/s [Average]
[info]   (min, avg, max) = (48552.624, 48747.404, 48914.676), stdev = 141.357
[info]   CI (99.9%): [48203.088, 49291.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   14.624 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (14.566, 14.624, 14.675), stdev = 0.043
[info]   CI (99.9%): [14.460, 14.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   472.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (472.009, 472.009, 472.009), stdev = 0.001
[info]   CI (99.9%): [472.009, 472.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay
[info] # Run progress: 70.87% complete, ETA 00:08:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2609.392 ops/s
[info] # Warmup Iteration   2: 4327.957 ops/s
[info] # Warmup Iteration   3: 4417.357 ops/s
[info] # Warmup Iteration   4: 4396.849 ops/s
[info] # Warmup Iteration   5: 4364.369 ops/s
[info] Iteration   1: 4378.161 ops/s
[info]                  ·gc.alloc.rate:                   1299.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              467103.719 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.364 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     480587.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.449 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 4403.067 ops/s
[info]                  ·gc.alloc.rate:                   1307.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              467104.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     480002.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.881 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 4305.387 ops/s
[info]                  ·gc.alloc.rate:                   1278.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              467104.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     491717.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.191 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 4363.936 ops/s
[info]                  ·gc.alloc.rate:                   1295.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              467103.340 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1013.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     365500.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.521 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 4426.891 ops/s
[info]                  ·gc.alloc.rate:                   1314.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              467104.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     481189.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.400 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay":
[info]   4375.488 ±(99.9%) 177.063 ops/s [Average]
[info]   (min, avg, max) = (4305.387, 4375.488, 4426.891), stdev = 45.983
[info]   CI (99.9%): [4198.425, 4552.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1299.210 ±(99.9%) 51.558 MB/sec [Average]
[info]   (min, avg, max) = (1278.974, 1299.210, 1314.382), stdev = 13.389
[info]   CI (99.9%): [1247.652, 1350.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   467104.050 ±(99.9%) 2.252 B/op [Average]
[info]   (min, avg, max) = (467103.340, 467104.050, 467104.883), stdev = 0.585
[info]   CI (99.9%): [467101.798, 467106.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1278.974 ±(99.9%) 571.259 MB/sec [Average]
[info]   (min, avg, max) = (1013.807, 1278.974, 1354.014), stdev = 148.354
[info]   CI (99.9%): [707.715, 1850.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   459799.298 ±(99.9%) 203838.055 B/op [Average]
[info]   (min, avg, max) = (365500.203, 459799.298, 491717.489), stdev = 52936.096
[info]   CI (99.9%): [255961.243, 663637.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   16.489 ±(99.9%) 24.261 B/op [Average]
[info]   (min, avg, max) = (7.400, 16.489, 22.521), stdev = 6.300
[info]   CI (99.9%): [≈ 0, 40.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 11.000), stdev = 1.949
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 71.84% complete, ETA 00:07:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 183356.792 ops/s
[info] # Warmup Iteration   2: 677571.455 ops/s
[info] # Warmup Iteration   3: 689850.643 ops/s
[info] # Warmup Iteration   4: 673108.887 ops/s
[info] # Warmup Iteration   5: 687191.148 ops/s
[info] Iteration   1: 675734.663 ops/s
[info]                  ·gc.alloc.rate:                   1480.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1667.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3883.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.194 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 684662.645 ops/s
[info]                  ·gc.alloc.rate:                   1500.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3080.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 669614.057 ops/s
[info]                  ·gc.alloc.rate:                   1470.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1675.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3928.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   4: 697754.642 ops/s
[info]                  ·gc.alloc.rate:                   1529.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3046.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 690437.901 ops/s
[info]                  ·gc.alloc.rate:                   1513.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3855.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson":
[info]   683640.782 ±(99.9%) 43296.283 ops/s [Average]
[info]   (min, avg, max) = (669614.057, 683640.782, 697754.642), stdev = 11243.907
[info]   CI (99.9%): [640344.498, 726937.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1498.880 ±(99.9%) 91.142 MB/sec [Average]
[info]   (min, avg, max) = (1470.780, 1498.880, 1529.147), stdev = 23.669
[info]   CI (99.9%): [1407.738, 1590.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   3448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3448.001, 3448.001, 3448.001), stdev = 0.001
[info]   CI (99.9%): [3448.001, 3448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1545.414 ±(99.9%) 702.559 MB/sec [Average]
[info]   (min, avg, max) = (1340.540, 1545.414, 1691.973), stdev = 182.452
[info]   CI (99.9%): [842.855, 2247.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3558.805 ±(99.9%) 1744.101 B/op [Average]
[info]   (min, avg, max) = (3046.517, 3558.805, 3928.218), stdev = 452.938
[info]   CI (99.9%): [1814.704, 5302.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.071, 0.083), stdev = 0.011
[info]   CI (99.9%): [0.027, 0.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.163 ±(99.9%) 0.105 B/op [Average]
[info]   (min, avg, max) = (0.141, 0.163, 0.194), stdev = 0.027
[info]   CI (99.9%): [0.058, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 13.200, 21.000), stdev = 6.870
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 72.82% complete, ETA 00:07:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2137905.447 ops/s
[info] # Warmup Iteration   2: 2381881.749 ops/s
[info] # Warmup Iteration   3: 2366421.778 ops/s
[info] # Warmup Iteration   4: 2385156.419 ops/s
[info] # Warmup Iteration   5: 2386340.739 ops/s
[info] Iteration   1: 2392774.661 ops/s
[info]                  ·gc.alloc.rate:                   462.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.724 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     427.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2379178.319 ops/s
[info]                  ·gc.alloc.rate:               459.693 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 215.926 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 2398611.351 ops/s
[info]                  ·gc.alloc.rate:                   463.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2342650.957 ops/s
[info]                  ·gc.alloc.rate:                   452.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     440.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 2339534.760 ops/s
[info]                  ·gc.alloc.rate:                   452.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          329.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter":
[info]   2370550.010 ±(99.9%) 107130.363 ops/s [Average]
[info]   (min, avg, max) = (2339534.760, 2370550.010, 2398611.351), stdev = 27821.415
[info]   CI (99.9%): [2263419.646, 2477680.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   458.044 ±(99.9%) 20.620 MB/sec [Average]
[info]   (min, avg, max) = (452.097, 458.044, 463.444), stdev = 5.355
[info]   CI (99.9%): [437.424, 478.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.739 ±(99.9%) 686.634 MB/sec [Average]
[info]   (min, avg, max) = (326.509, 457.739, 656.384), stdev = 178.317
[info]   CI (99.9%): [≈ 0, 1144.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   303.951 ±(99.9%) 457.712 B/op [Average]
[info]   (min, avg, max) = (214.177, 303.951, 440.826), stdev = 118.866
[info]   CI (99.9%): [≈ 0, 761.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.045 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.028), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.800, 16.000), stdev = 5.891
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 73.79% complete, ETA 00:07:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 104885.796 ops/s
[info] # Warmup Iteration   2: 242077.651 ops/s
[info] # Warmup Iteration   3: 247241.468 ops/s
[info] # Warmup Iteration   4: 247092.975 ops/s
[info] # Warmup Iteration   5: 247899.885 ops/s
[info] Iteration   1: 249234.667 ops/s
[info]                  ·gc.alloc.rate:                   964.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6282.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 249771.447 ops/s
[info]                  ·gc.alloc.rate:               966.468 MB/sec
[info]                  ·gc.alloc.rate.norm:          6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.687 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4193.313 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 248842.086 ops/s
[info]                  ·gc.alloc.rate:               962.829 MB/sec
[info]                  ·gc.alloc.rate.norm:          6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6342.941 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 246430.593 ops/s
[info]                  ·gc.alloc.rate:                   953.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6426.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 247814.371 ops/s
[info]                  ·gc.alloc.rate:               958.778 MB/sec
[info]                  ·gc.alloc.rate.norm:          6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1010.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6413.723 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay":
[info]   248418.633 ±(99.9%) 5091.290 ops/s [Average]
[info]   (min, avg, max) = (246430.593, 248418.633, 249771.447), stdev = 1322.192
[info]   CI (99.9%): [243327.342, 253509.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   961.204 ±(99.9%) 19.780 MB/sec [Average]
[info]   (min, avg, max) = (953.526, 961.204, 966.468), stdev = 5.137
[info]   CI (99.9%): [941.425, 980.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6088.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6088.002, 6088.002, 6088.002), stdev = 0.001
[info]   CI (99.9%): [6088.002, 6088.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   936.127 ±(99.9%) 582.526 MB/sec [Average]
[info]   (min, avg, max) = (665.687, 936.127, 1010.075), stdev = 151.280
[info]   CI (99.9%): [353.600, 1518.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5931.730 ±(99.9%) 3748.725 B/op [Average]
[info]   (min, avg, max) = (4193.313, 5931.730, 6426.313), stdev = 973.532
[info]   CI (99.9%): [2183.005, 9680.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.105 ±(99.9%) 0.660 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.105, 0.394), stdev = 0.171
[info]   CI (99.9%): [≈ 0, 0.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 13.000), stdev = 3.782
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce
[info] # Run progress: 74.76% complete, ETA 00:07:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 388023.645 ops/s
[info] # Warmup Iteration   2: 584804.968 ops/s
[info] # Warmup Iteration   3: 608048.745 ops/s
[info] # Warmup Iteration   4: 616264.356 ops/s
[info] # Warmup Iteration   5: 603981.521 ops/s
[info] Iteration   1: 622087.378 ops/s
[info]                  ·gc.alloc.rate:                   1632.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              4128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4249.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 617964.981 ops/s
[info]                  ·gc.alloc.rate:                   1621.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              4128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.405 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4296.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 625446.899 ops/s
[info]                  ·gc.alloc.rate:                   1640.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              4128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4257.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 618692.165 ops/s
[info]                  ·gc.alloc.rate:                   1623.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              4128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3450.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 603227.160 ops/s
[info]                  ·gc.alloc.rate:                   1582.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              4128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4430.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce":
[info]   617483.717 ±(99.9%) 32761.454 ops/s [Average]
[info]   (min, avg, max) = (603227.160, 617483.717, 625446.899), stdev = 8508.046
[info]   CI (99.9%): [584722.263, 650245.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1620.048 ±(99.9%) 85.854 MB/sec [Average]
[info]   (min, avg, max) = (1582.671, 1620.048, 1640.812), stdev = 22.296
[info]   CI (99.9%): [1534.194, 1705.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4128.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4128.001, 4128.001, 4128.001), stdev = 0.001
[info]   CI (99.9%): [4128.001, 4128.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1623.039 ±(99.9%) 573.855 MB/sec [Average]
[info]   (min, avg, max) = (1356.719, 1623.039, 1698.537), stdev = 149.028
[info]   CI (99.9%): [1049.184, 2196.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4136.749 ±(99.9%) 1504.202 B/op [Average]
[info]   (min, avg, max) = (3450.110, 4136.749, 4430.209), stdev = 390.636
[info]   CI (99.9%): [2632.547, 5640.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.046, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.010, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.117 ±(99.9%) 0.091 B/op [Average]
[info]   (min, avg, max) = (0.105, 0.117, 0.159), stdev = 0.024
[info]   CI (99.9%): [0.025, 0.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.800, 15.000), stdev = 3.493
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson
[info] # Run progress: 75.73% complete, ETA 00:06:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 721138.405 ops/s
[info] # Warmup Iteration   2: 1235634.124 ops/s
[info] # Warmup Iteration   3: 1226233.956 ops/s
[info] # Warmup Iteration   4: 1228187.186 ops/s
[info] # Warmup Iteration   5: 1233773.370 ops/s
[info] Iteration   1: 1215975.282 ops/s
[info]                  ·gc.alloc.rate:                   797.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              1032.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1278.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1234310.010 ops/s
[info]                  ·gc.alloc.rate:                   809.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              1032.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     844.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.637 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1240127.500 ops/s
[info]                  ·gc.alloc.rate:               813.438 MB/sec
[info]                  ·gc.alloc.rate.norm:          1032.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 842.878 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1223747.483 ops/s
[info]                  ·gc.alloc.rate:                   802.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              1032.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1284.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1239006.013 ops/s
[info]                  ·gc.alloc.rate:                   812.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              1032.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     848.280 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson":
[info]   1230633.258 ±(99.9%) 40203.392 ops/s [Average]
[info]   (min, avg, max) = (1215975.282, 1230633.258, 1240127.500), stdev = 10440.693
[info]   CI (99.9%): [1190429.865, 1270836.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   807.255 ±(99.9%) 25.920 MB/sec [Average]
[info]   (min, avg, max) = (797.922, 807.255, 813.438), stdev = 6.731
[info]   CI (99.9%): [781.335, 833.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   1032.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1032.000, 1032.000, 1032.000), stdev = 0.001
[info]   CI (99.9%): [1032.000, 1032.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   796.463 ±(99.9%) 693.935 MB/sec [Average]
[info]   (min, avg, max) = (662.301, 796.463, 999.150), stdev = 180.213
[info]   CI (99.9%): [102.527, 1490.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1019.705 ±(99.9%) 920.500 B/op [Average]
[info]   (min, avg, max) = (842.878, 1019.705, 1284.630), stdev = 239.051
[info]   CI (99.9%): [99.204, 1940.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.125 ±(99.9%) 0.810 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.125, 0.500), stdev = 0.210
[info]   CI (99.9%): [≈ 0, 0.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.159 ±(99.9%) 1.032 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.159, 0.637), stdev = 0.268
[info]   CI (99.9%): [≈ 0, 1.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 9.000), stdev = 3.209
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter
[info] # Run progress: 76.70% complete, ETA 00:06:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3376647.801 ops/s
[info] # Warmup Iteration   2: 3908051.675 ops/s
[info] # Warmup Iteration   3: 3902578.255 ops/s
[info] # Warmup Iteration   4: 3963756.172 ops/s
[info] # Warmup Iteration   5: 3995432.692 ops/s
[info] Iteration   1: 4023234.019 ops/s
[info]                  ·gc.alloc.rate:               715.993 MB/sec
[info]                  ·gc.alloc.rate.norm:          280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 254.602 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 4032902.117 ops/s
[info]                  ·gc.alloc.rate:                   717.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4010692.987 ops/s
[info]                  ·gc.alloc.rate:                   713.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     386.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 4036073.699 ops/s
[info]                  ·gc.alloc.rate:                   718.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     257.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3212703.744 ops/s
[info]                  ·gc.alloc.rate:                   571.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     324.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter":
[info]   3863121.313 ±(99.9%) 1400590.070 ops/s [Average]
[info]   (min, avg, max) = (3212703.744, 3863121.313, 4036073.699), stdev = 363728.793
[info]   CI (99.9%): [2462531.244, 5263711.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   687.499 ±(99.9%) 249.245 MB/sec [Average]
[info]   (min, avg, max) = (571.752, 687.499, 718.267), stdev = 64.728
[info]   CI (99.9%): [438.254, 936.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   280.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (280.000, 280.000, 280.000), stdev = 0.001
[info]   CI (99.9%): [280.000, 280.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   722.693 ±(99.9%) 566.910 MB/sec [Average]
[info]   (min, avg, max) = (651.047, 722.693, 985.925), stdev = 147.225
[info]   CI (99.9%): [155.783, 1289.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   295.645 ±(99.9%) 227.178 B/op [Average]
[info]   (min, avg, max) = (254.602, 295.645, 386.765), stdev = 58.997
[info]   CI (99.9%): [68.467, 522.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.010), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 9.000), stdev = 2.793
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay
[info] # Run progress: 77.67% complete, ETA 00:06:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 201041.666 ops/s
[info] # Warmup Iteration   2: 358083.647 ops/s
[info] # Warmup Iteration   3: 368912.721 ops/s
[info] # Warmup Iteration   4: 372851.352 ops/s
[info] # Warmup Iteration   5: 368428.535 ops/s
[info] Iteration   1: 366356.701 ops/s
[info]                  ·gc.alloc.rate:                   1268.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5739.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 367840.930 ops/s
[info]                  ·gc.alloc.rate:                   1273.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5744.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.178 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 368763.553 ops/s
[info]                  ·gc.alloc.rate:                   1276.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5752.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.355 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 364550.773 ops/s
[info]                  ·gc.alloc.rate:                   1262.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1013.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4372.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 369961.924 ops/s
[info]                  ·gc.alloc.rate:                   1280.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5758.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay":
[info]   367494.776 ±(99.9%) 8118.105 ops/s [Average]
[info]   (min, avg, max) = (364550.773, 367494.776, 369961.924), stdev = 2108.246
[info]   CI (99.9%): [359376.672, 375612.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1272.523 ±(99.9%) 28.108 MB/sec [Average]
[info]   (min, avg, max) = (1262.260, 1272.523, 1280.985), stdev = 7.300
[info]   CI (99.9%): [1244.415, 1300.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5448.001, 5448.001, 5448.001), stdev = 0.001
[info]   CI (99.9%): [5448.001, 5448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1279.021 ±(99.9%) 572.786 MB/sec [Average]
[info]   (min, avg, max) = (1013.179, 1279.021, 1353.933), stdev = 148.751
[info]   CI (99.9%): [706.236, 1851.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5473.582 ±(99.9%) 2369.364 B/op [Average]
[info]   (min, avg, max) = (4372.949, 5473.582, 5758.246), stdev = 615.316
[info]   CI (99.9%): [3104.218, 7842.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.178 ±(99.9%) 0.418 B/op [Average]
[info]   (min, avg, max) = (0.089, 0.178, 0.355), stdev = 0.109
[info]   CI (99.9%): [≈ 0, 0.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 12.000), stdev = 3.209
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce
[info] # Run progress: 78.64% complete, ETA 00:05:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 158987.546 ops/s
[info] # Warmup Iteration   2: 347954.430 ops/s
[info] # Warmup Iteration   3: 372527.883 ops/s
[info] # Warmup Iteration   4: 374142.952 ops/s
[info] # Warmup Iteration   5: 378542.800 ops/s
[info] Iteration   1: 377847.383 ops/s
[info]                  ·gc.alloc.rate:                   1114.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5532.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.434 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 375496.883 ops/s
[info]                  ·gc.alloc.rate:                   1107.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4196.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 370608.638 ops/s
[info]                  ·gc.alloc.rate:               1092.952 MB/sec
[info]                  ·gc.alloc.rate.norm:          4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4268.829 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 374929.007 ops/s
[info]                  ·gc.alloc.rate:                   1105.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5648.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 379877.373 ops/s
[info]                  ·gc.alloc.rate:                   1120.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4192.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce":
[info]   375751.857 ±(99.9%) 13422.947 ops/s [Average]
[info]   (min, avg, max) = (370608.638, 375751.857, 379877.373), stdev = 3485.897
[info]   CI (99.9%): [362328.910, 389174.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1108.131 ±(99.9%) 39.598 MB/sec [Average]
[info]   (min, avg, max) = (1092.952, 1108.131, 1120.266), stdev = 10.283
[info]   CI (99.9%): [1068.533, 1147.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4640.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4640.001, 4640.001, 4640.001), stdev = 0.001
[info]   CI (99.9%): [4640.001, 4640.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1138.786 ±(99.9%) 698.588 MB/sec [Average]
[info]   (min, avg, max) = (1001.502, 1138.786, 1345.965), stdev = 181.421
[info]   CI (99.9%): [440.197, 1837.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4767.706 ±(99.9%) 2899.111 B/op [Average]
[info]   (min, avg, max) = (4192.284, 4767.706, 5648.360), stdev = 752.890
[info]   CI (99.9%): [1868.595, 7666.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.174 ±(99.9%) 0.668 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.174, 0.434), stdev = 0.174
[info]   CI (99.9%): [≈ 0, 0.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 7.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson
[info] # Run progress: 79.61% complete, ETA 00:05:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 117174.970 ops/s
[info] # Warmup Iteration   2: 767973.328 ops/s
[info] # Warmup Iteration   3: 771203.019 ops/s
[info] # Warmup Iteration   4: 768738.601 ops/s
[info] # Warmup Iteration   5: 756428.293 ops/s
[info] Iteration   1: 756290.703 ops/s
[info]                  ·gc.alloc.rate:                   1188.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2764.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 761170.451 ops/s
[info]                  ·gc.alloc.rate:                   1195.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2068.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 773246.027 ops/s
[info]                  ·gc.alloc.rate:                   1215.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2725.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 763066.914 ops/s
[info]                  ·gc.alloc.rate:                   1198.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2080.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 774097.261 ops/s
[info]                  ·gc.alloc.rate:               1216.137 MB/sec
[info]                  ·gc.alloc.rate.norm:          2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2741.294 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson":
[info]   765574.271 ±(99.9%) 30035.165 ops/s [Average]
[info]   (min, avg, max) = (756290.703, 765574.271, 774097.261), stdev = 7800.037
[info]   CI (99.9%): [735539.106, 795609.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1202.824 ±(99.9%) 47.405 MB/sec [Average]
[info]   (min, avg, max) = (1188.202, 1202.824, 1216.137), stdev = 12.311
[info]   CI (99.9%): [1155.420, 1250.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   2472.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2472.001, 2472.001, 2472.001), stdev = 0.001
[info]   CI (99.9%): [2472.001, 2472.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1205.232 ±(99.9%) 705.736 MB/sec [Average]
[info]   (min, avg, max) = (1000.440, 1205.232, 1348.619), stdev = 183.277
[info]   CI (99.9%): [499.496, 1910.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2475.817 ±(99.9%) 1413.046 B/op [Average]
[info]   (min, avg, max) = (2068.101, 2475.817, 2764.073), stdev = 366.964
[info]   CI (99.9%): [1062.770, 3888.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.094 ±(99.9%) 0.371 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.094, 0.254), stdev = 0.096
[info]   CI (99.9%): [≈ 0, 0.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 15.000), stdev = 4.528
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter
[info] # Run progress: 80.58% complete, ETA 00:05:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2246882.123 ops/s
[info] # Warmup Iteration   2: 2478403.939 ops/s
[info] # Warmup Iteration   3: 2452053.589 ops/s
[info] # Warmup Iteration   4: 2482590.004 ops/s
[info] # Warmup Iteration   5: 2504130.056 ops/s
[info] Iteration   1: 2529317.257 ops/s
[info]                  ·gc.alloc.rate:                   527.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     202.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2503550.518 ops/s
[info]                  ·gc.alloc.rate:               521.939 MB/sec
[info]                  ·gc.alloc.rate.norm:          328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 409.145 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 2529921.650 ops/s
[info]                  ·gc.alloc.rate:               527.401 MB/sec
[info]                  ·gc.alloc.rate.norm:          328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 202.855 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2505066.332 ops/s
[info]                  ·gc.alloc.rate:                   522.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     411.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2477328.639 ops/s
[info]                  ·gc.alloc.rate:                   516.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     417.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter":
[info]   2509036.879 ±(99.9%) 83895.124 ops/s [Average]
[info]   (min, avg, max) = (2477328.639, 2509036.879, 2529921.650), stdev = 21787.297
[info]   CI (99.9%): [2425141.755, 2592932.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   523.060 ±(99.9%) 17.478 MB/sec [Average]
[info]   (min, avg, max) = (516.444, 523.060, 527.401), stdev = 4.539
[info]   CI (99.9%): [505.582, 540.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (328.000, 328.000, 328.000), stdev = 0.001
[info]   CI (99.9%): [328.000, 328.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.959 ±(99.9%) 694.111 MB/sec [Average]
[info]   (min, avg, max) = (324.849, 522.959, 657.673), stdev = 180.259
[info]   CI (99.9%): [≈ 0, 1217.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   328.636 ±(99.9%) 443.675 B/op [Average]
[info]   (min, avg, max) = (202.074, 328.636, 417.696), stdev = 115.221
[info]   CI (99.9%): [≈ 0, 772.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.050 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.026), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 5.000), stdev = 2.049
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay
[info] # Run progress: 81.55% complete, ETA 00:05:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 109121.068 ops/s
[info] # Warmup Iteration   2: 248076.084 ops/s
[info] # Warmup Iteration   3: 252508.449 ops/s
[info] # Warmup Iteration   4: 254410.856 ops/s
[info] # Warmup Iteration   5: 252588.031 ops/s
[info] Iteration   1: 249972.697 ops/s
[info]                  ·gc.alloc.rate:                   921.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6255.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 250838.205 ops/s
[info]                  ·gc.alloc.rate:                   924.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6263.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 249283.953 ops/s
[info]                  ·gc.alloc.rate:                   918.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6331.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 254471.941 ops/s
[info]                  ·gc.alloc.rate:                   938.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4146.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 251939.027 ops/s
[info]                  ·gc.alloc.rate:                   928.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6300.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay":
[info]   251301.165 ±(99.9%) 7822.825 ops/s [Average]
[info]   (min, avg, max) = (249283.953, 251301.165, 254471.941), stdev = 2031.563
[info]   CI (99.9%): [243478.340, 259123.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   926.379 ±(99.9%) 28.811 MB/sec [Average]
[info]   (min, avg, max) = (918.937, 926.379, 938.091), stdev = 7.482
[info]   CI (99.9%): [897.568, 955.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.002, 5800.002, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.001, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   935.023 ±(99.9%) 569.342 MB/sec [Average]
[info]   (min, avg, max) = (670.712, 935.023, 1008.757), stdev = 147.856
[info]   CI (99.9%): [365.681, 1504.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5859.556 ±(99.9%) 3688.585 B/op [Average]
[info]   (min, avg, max) = (4146.857, 5859.556, 6331.696), stdev = 957.914
[info]   CI (99.9%): [2170.971, 9548.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.182 ±(99.9%) 0.271 B/op [Average]
[info]   (min, avg, max) = (0.130, 0.182, 0.261), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 7.000), stdev = 1.817
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce
[info] # Run progress: 82.52% complete, ETA 00:04:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 380226.350 ops/s
[info] # Warmup Iteration   2: 569667.347 ops/s
[info] # Warmup Iteration   3: 570218.642 ops/s
[info] # Warmup Iteration   4: 562968.382 ops/s
[info] # Warmup Iteration   5: 566826.229 ops/s
[info] Iteration   1: 563274.768 ops/s
[info]                  ·gc.alloc.rate:                   1429.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              3992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3744.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 567748.514 ops/s
[info]                  ·gc.alloc.rate:                   1440.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              3992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4664.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.231 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 574248.617 ops/s
[info]                  ·gc.alloc.rate:                   1456.943 MB/sec
[info]                  ·gc.alloc.rate.norm:              3992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3701.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 573597.176 ops/s
[info]                  ·gc.alloc.rate:                   1455.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              3992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3714.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 567031.909 ops/s
[info]                  ·gc.alloc.rate:               1438.639 MB/sec
[info]                  ·gc.alloc.rate.norm:          3992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1695.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4704.634 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce":
[info]   569180.197 ±(99.9%) 17931.098 ops/s [Average]
[info]   (min, avg, max) = (563274.768, 569180.197, 574248.617), stdev = 4656.649
[info]   CI (99.9%): [551249.099, 587111.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate":
[info]   1444.096 ±(99.9%) 45.435 MB/sec [Average]
[info]   (min, avg, max) = (1429.125, 1444.096, 1456.943), stdev = 11.799
[info]   CI (99.9%): [1398.661, 1489.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   3992.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3992.001, 3992.001, 3992.001), stdev = 0.001
[info]   CI (99.9%): [3992.001, 3992.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1484.865 ±(99.9%) 719.231 MB/sec [Average]
[info]   (min, avg, max) = (1340.664, 1484.865, 1695.458), stdev = 186.782
[info]   CI (99.9%): [765.634, 2204.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4106.010 ±(99.9%) 2035.695 B/op [Average]
[info]   (min, avg, max) = (3701.729, 4106.010, 4704.634), stdev = 528.663
[info]   CI (99.9%): [2070.316, 6141.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.116 ±(99.9%) 0.418 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.116, 0.233), stdev = 0.109
[info]   CI (99.9%): [≈ 0, 0.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 12.000), stdev = 2.168
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson
[info] # Run progress: 83.50% complete, ETA 00:04:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 672022.979 ops/s
[info] # Warmup Iteration   2: 1130155.153 ops/s
[info] # Warmup Iteration   3: 1126244.554 ops/s
[info] # Warmup Iteration   4: 1136776.877 ops/s
[info] # Warmup Iteration   5: 1130923.748 ops/s
[info] Iteration   1: 1119006.970 ops/s
[info]                  ·gc.alloc.rate:               642.942 MB/sec
[info]                  ·gc.alloc.rate.norm:          904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 922.864 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 1119340.527 ops/s
[info]                  ·gc.alloc.rate:               643.125 MB/sec
[info]                  ·gc.alloc.rate.norm:          904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.037 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 926.368 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 1118849.940 ops/s
[info]                  ·gc.alloc.rate:                   642.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     930.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.791 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1137434.766 ops/s
[info]                  ·gc.alloc.rate:                   653.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     917.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1121298.364 ops/s
[info]                  ·gc.alloc.rate:                   644.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     933.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson":
[info]   1123186.113 ±(99.9%) 30903.899 ops/s [Average]
[info]   (min, avg, max) = (1118849.940, 1123186.113, 1137434.766), stdev = 8025.644
[info]   CI (99.9%): [1092282.215, 1154090.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate":
[info]   645.309 ±(99.9%) 17.643 MB/sec [Average]
[info]   (min, avg, max) = (642.849, 645.309, 653.450), stdev = 4.582
[info]   CI (99.9%): [627.665, 662.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm":
[info]   904.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (904.000, 904.000, 904.000), stdev = 0.001
[info]   CI (99.9%): [904.000, 904.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   660.986 ±(99.9%) 13.073 MB/sec [Average]
[info]   (min, avg, max) = (656.358, 660.986, 664.934), stdev = 3.395
[info]   CI (99.9%): [647.914, 674.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   925.988 ±(99.9%) 23.409 B/op [Average]
[info]   (min, avg, max) = (917.574, 925.988, 933.127), stdev = 6.079
[info]   CI (99.9%): [902.579, 949.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.129 ±(99.9%) 0.937 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.129, 0.562), stdev = 0.243
[info]   CI (99.9%): [≈ 0, 1.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.181 ±(99.9%) 1.319 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.181, 0.791), stdev = 0.342
[info]   CI (99.9%): [≈ 0, 1.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.140
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter
[info] # Run progress: 84.47% complete, ETA 00:04:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3075443.828 ops/s
[info] # Warmup Iteration   2: 3293335.498 ops/s
[info] # Warmup Iteration   3: 3324564.681 ops/s
[info] # Warmup Iteration   4: 3270941.682 ops/s
[info] # Warmup Iteration   5: 3311459.522 ops/s
[info] Iteration   1: 3307912.002 ops/s
[info]                  ·gc.alloc.rate:               454.133 MB/sec
[info]                  ·gc.alloc.rate.norm:          216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 308.711 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 3350164.029 ops/s
[info]                  ·gc.alloc.rate:               459.916 MB/sec
[info]                  ·gc.alloc.rate.norm:          216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 152.559 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 3281166.843 ops/s
[info]                  ·gc.alloc.rate:                   450.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     311.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 3331537.734 ops/s
[info]                  ·gc.alloc.rate:               457.329 MB/sec
[info]                  ·gc.alloc.rate.norm:          216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 153.731 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 3347140.721 ops/s
[info]                  ·gc.alloc.rate:               459.503 MB/sec
[info]                  ·gc.alloc.rate.norm:          216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 153.624 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter":
[info]   3323584.266 ±(99.9%) 111760.018 ops/s [Average]
[info]   (min, avg, max) = (3281166.843, 3323584.266, 3350164.029), stdev = 29023.722
[info]   CI (99.9%): [3211824.248, 3435344.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate":
[info]   456.263 ±(99.9%) 15.339 MB/sec [Average]
[info]   (min, avg, max) = (450.435, 456.263, 459.916), stdev = 3.984
[info]   CI (99.9%): [440.924, 471.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   216.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (216.000, 216.000, 216.000), stdev = 0.001
[info]   CI (99.9%): [216.000, 216.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   455.306 ±(99.9%) 683.329 MB/sec [Average]
[info]   (min, avg, max) = (324.835, 455.306, 650.343), stdev = 177.458
[info]   CI (99.9%): [≈ 0, 1138.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   216.098 ±(99.9%) 331.123 B/op [Average]
[info]   (min, avg, max) = (152.559, 216.098, 311.863), stdev = 85.991
[info]   CI (99.9%): [≈ 0, 547.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.010), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.200, 9.000), stdev = 3.271
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay
[info] # Run progress: 85.44% complete, ETA 00:04:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 189793.297 ops/s
[info] # Warmup Iteration   2: 340068.454 ops/s
[info] # Warmup Iteration   3: 351451.894 ops/s
[info] # Warmup Iteration   4: 344578.116 ops/s
[info] # Warmup Iteration   5: 350676.574 ops/s
[info] Iteration   1: 348524.888 ops/s
[info]                  ·gc.alloc.rate:                   1192.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6025.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.282 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 353237.438 ops/s
[info]                  ·gc.alloc.rate:                   1208.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4481.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.278 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 349840.637 ops/s
[info]                  ·gc.alloc.rate:                   1197.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6053.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 352903.189 ops/s
[info]                  ·gc.alloc.rate:                   1208.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6013.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 351028.408 ops/s
[info]                  ·gc.alloc.rate:                   1201.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4548.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay":
[info]   351106.912 ±(99.9%) 7711.441 ops/s [Average]
[info]   (min, avg, max) = (348524.888, 351106.912, 353237.438), stdev = 2002.637
[info]   CI (99.9%): [343395.472, 358818.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate":
[info]   1201.547 ±(99.9%) 26.878 MB/sec [Average]
[info]   (min, avg, max) = (1192.536, 1201.547, 1208.773), stdev = 6.980
[info]   CI (99.9%): [1174.669, 1228.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   5384.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5384.001, 5384.001, 5384.001), stdev = 0.001
[info]   CI (99.9%): [5384.001, 5384.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1210.188 ±(99.9%) 702.212 MB/sec [Average]
[info]   (min, avg, max) = (1006.196, 1210.188, 1349.189), stdev = 182.362
[info]   CI (99.9%): [507.975, 1912.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5424.533 ±(99.9%) 3198.092 B/op [Average]
[info]   (min, avg, max) = (4481.703, 5424.533, 6053.649), stdev = 830.534
[info]   CI (99.9%): [2226.441, 8622.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.224 ±(99.9%) 0.198 B/op [Average]
[info]   (min, avg, max) = (0.185, 0.224, 0.282), stdev = 0.051
[info]   CI (99.9%): [0.026, 0.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 16.000), stdev = 5.683
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce
[info] # Run progress: 86.41% complete, ETA 00:03:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 150443.024 ops/s
[info] # Warmup Iteration   2: 342274.631 ops/s
[info] # Warmup Iteration   3: 351191.858 ops/s
[info] # Warmup Iteration   4: 350333.665 ops/s
[info] # Warmup Iteration   5: 352651.439 ops/s
[info] Iteration   1: 353456.739 ops/s
[info]                  ·gc.alloc.rate:                   1033.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              4600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4432.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.278 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 338723.569 ops/s
[info]                  ·gc.alloc.rate:               990.335 MB/sec
[info]                  ·gc.alloc.rate.norm:          4600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      999.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4644.373 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   3: 350240.075 ops/s
[info]                  ·gc.alloc.rate:                   1024.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              4600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4515.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 352925.938 ops/s
[info]                  ·gc.alloc.rate:                   1031.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              4600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4493.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 355279.458 ops/s
[info]                  ·gc.alloc.rate:                   1038.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              4600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4476.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce":
[info]   350125.156 ±(99.9%) 25507.431 ops/s [Average]
[info]   (min, avg, max) = (338723.569, 350125.156, 355279.458), stdev = 6624.199
[info]   CI (99.9%): [324617.725, 375632.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   1023.647 ±(99.9%) 74.483 MB/sec [Average]
[info]   (min, avg, max) = (990.335, 1023.647, 1038.632), stdev = 19.343
[info]   CI (99.9%): [949.164, 1098.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4600.001, 4600.001, 4600.001), stdev = 0.001
[info]   CI (99.9%): [4600.001, 4600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1003.930 ±(99.9%) 23.241 MB/sec [Average]
[info]   (min, avg, max) = (995.858, 1003.930, 1010.774), stdev = 6.036
[info]   CI (99.9%): [980.689, 1027.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4512.543 ±(99.9%) 306.814 B/op [Average]
[info]   (min, avg, max) = (4432.913, 4512.543, 4644.373), stdev = 79.679
[info]   CI (99.9%): [4205.729, 4819.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.148 ±(99.9%) 0.406 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.148, 0.278), stdev = 0.106
[info]   CI (99.9%): [≈ 0, 0.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 12.000), stdev = 4.278
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson
[info] # Run progress: 87.38% complete, ETA 00:03:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 102205.994 ops/s
[info] # Warmup Iteration   2: 627640.396 ops/s
[info] # Warmup Iteration   3: 676212.709 ops/s
[info] # Warmup Iteration   4: 673205.140 ops/s
[info] # Warmup Iteration   5: 681320.091 ops/s
[info] Iteration   1: 668726.548 ops/s
[info]                  ·gc.alloc.rate:                   996.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2333.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.078 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 674212.010 ops/s
[info]                  ·gc.alloc.rate:                   1004.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2324.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 675509.206 ops/s
[info]                  ·gc.alloc.rate:                   1006.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2328.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 679164.785 ops/s
[info]                  ·gc.alloc.rate:                   1011.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2323.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 681940.390 ops/s
[info]                  ·gc.alloc.rate:                   1015.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2321.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson":
[info]   675910.588 ±(99.9%) 19407.112 ops/s [Average]
[info]   (min, avg, max) = (668726.548, 675910.588, 681940.390), stdev = 5039.965
[info]   CI (99.9%): [656503.475, 695317.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1006.980 ±(99.9%) 29.021 MB/sec [Average]
[info]   (min, avg, max) = (996.241, 1006.980, 1015.967), stdev = 7.537
[info]   CI (99.9%): [977.959, 1036.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2344.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2344.001, 2344.001, 2344.001), stdev = 0.001
[info]   CI (99.9%): [2344.001, 2344.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   999.287 ±(99.9%) 21.890 MB/sec [Average]
[info]   (min, avg, max) = (991.832, 999.287, 1006.232), stdev = 5.685
[info]   CI (99.9%): [977.397, 1021.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2326.120 ±(99.9%) 18.614 B/op [Average]
[info]   (min, avg, max) = (2321.542, 2326.120, 2333.625), stdev = 4.834
[info]   CI (99.9%): [2307.506, 2344.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.125 ±(99.9%) 0.722 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.125, 0.458), stdev = 0.187
[info]   CI (99.9%): [≈ 0, 0.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.293 ±(99.9%) 1.700 B/op [Average]
[info]   (min, avg, max) = (0.048, 0.293, 1.078), stdev = 0.441
[info]   CI (99.9%): [≈ 0, 1.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 9.000), stdev = 1.817
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 88.35% complete, ETA 00:03:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1820777.418 ops/s
[info] # Warmup Iteration   2: 2051354.176 ops/s
[info] # Warmup Iteration   3: 2067830.990 ops/s
[info] # Warmup Iteration   4: 2075403.883 ops/s
[info] # Warmup Iteration   5: 2102967.645 ops/s
[info] Iteration   1: 2094259.764 ops/s
[info]                  ·gc.alloc.rate:               511.117 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 489.363 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 2076923.636 ops/s
[info]                  ·gc.alloc.rate:               507.942 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 492.933 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 2090757.143 ops/s
[info]                  ·gc.alloc.rate:               510.238 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 246.969 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2074908.650 ops/s
[info]                  ·gc.alloc.rate:               506.384 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 499.740 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   5: 2070586.463 ops/s
[info]                  ·gc.alloc.rate:                   505.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     251.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter":
[info]   2081487.131 ±(99.9%) 40017.054 ops/s [Average]
[info]   (min, avg, max) = (2070586.463, 2081487.131, 2094259.764), stdev = 10392.302
[info]   CI (99.9%): [2041470.077, 2121504.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   508.206 ±(99.9%) 9.461 MB/sec [Average]
[info]   (min, avg, max) = (505.350, 508.206, 511.117), stdev = 2.457
[info]   CI (99.9%): [498.745, 517.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   384.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (384.000, 384.000, 384.000), stdev = 0.001
[info]   CI (99.9%): [384.000, 384.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   524.282 ±(99.9%) 684.787 MB/sec [Average]
[info]   (min, avg, max) = (328.159, 524.282, 659.012), stdev = 177.837
[info]   CI (99.9%): [≈ 0, 1209.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   396.081 ±(99.9%) 516.598 B/op [Average]
[info]   (min, avg, max) = (246.969, 396.081, 499.740), stdev = 134.159
[info]   CI (99.9%): [≈ 0, 912.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.027 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.016), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.800, 11.000), stdev = 4.147
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay
[info] # Run progress: 89.32% complete, ETA 00:02:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 112805.626 ops/s
[info] # Warmup Iteration   2: 256228.750 ops/s
[info] # Warmup Iteration   3: 260204.660 ops/s
[info] # Warmup Iteration   4: 258491.155 ops/s
[info] # Warmup Iteration   5: 256426.733 ops/s
[info] Iteration   1: 257472.464 ops/s
[info]                  ·gc.alloc.rate:                   977.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6081.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.509 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 262046.848 ops/s
[info]                  ·gc.alloc.rate:                   995.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6003.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.375 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 260787.821 ops/s
[info]                  ·gc.alloc.rate:                   990.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6056.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.251 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 259928.698 ops/s
[info]                  ·gc.alloc.rate:                   987.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6098.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 262112.538 ops/s
[info]                  ·gc.alloc.rate:               995.535 MB/sec
[info]                  ·gc.alloc.rate.norm:          5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1010.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6063.838 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay":
[info]   260469.674 ±(99.9%) 7347.473 ops/s [Average]
[info]   (min, avg, max) = (257472.464, 260469.674, 262112.538), stdev = 1908.116
[info]   CI (99.9%): [253122.200, 267817.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   989.277 ±(99.9%) 27.859 MB/sec [Average]
[info]   (min, avg, max) = (977.932, 989.277, 995.535), stdev = 7.235
[info]   CI (99.9%): [961.418, 1017.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   5976.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5976.002, 5976.002, 5976.002), stdev = 0.001
[info]   CI (99.9%): [5976.001, 5976.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1003.284 ±(99.9%) 23.036 MB/sec [Average]
[info]   (min, avg, max) = (995.169, 1003.284, 1010.168), stdev = 5.982
[info]   CI (99.9%): [980.248, 1026.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6060.749 ±(99.9%) 138.784 B/op [Average]
[info]   (min, avg, max) = (6003.328, 6060.749, 6098.788), stdev = 36.042
[info]   CI (99.9%): [5921.964, 6199.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.252 ±(99.9%) 0.771 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.252, 0.509), stdev = 0.200
[info]   CI (99.9%): [≈ 0, 1.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 12.000), stdev = 2.966
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce
[info] # Run progress: 90.29% complete, ETA 00:02:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 408653.412 ops/s
[info] # Warmup Iteration   2: 604672.581 ops/s
[info] # Warmup Iteration   3: 618114.791 ops/s
[info] # Warmup Iteration   4: 621292.692 ops/s
[info] # Warmup Iteration   5: 634762.960 ops/s
[info] Iteration   1: 634005.214 ops/s
[info]                  ·gc.alloc.rate:                   1241.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3313.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 631540.681 ops/s
[info]                  ·gc.alloc.rate:                   1236.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2505.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 633280.089 ops/s
[info]                  ·gc.alloc.rate:                   1239.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3344.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 632340.237 ops/s
[info]                  ·gc.alloc.rate:                   1237.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3360.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 621953.850 ops/s
[info]                  ·gc.alloc.rate:                   1217.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1015.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2568.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce":
[info]   630624.014 ±(99.9%) 19005.639 ops/s [Average]
[info]   (min, avg, max) = (621953.850, 630624.014, 634005.214), stdev = 4935.704
[info]   CI (99.9%): [611618.376, 649629.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1234.408 ±(99.9%) 37.094 MB/sec [Average]
[info]   (min, avg, max) = (1217.489, 1234.408, 1241.046), stdev = 9.633
[info]   CI (99.9%): [1197.314, 1271.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3080.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3080.001, 3080.001, 3080.001), stdev = 0.001
[info]   CI (99.9%): [3080.001, 3080.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1210.573 ±(99.9%) 703.375 MB/sec [Average]
[info]   (min, avg, max) = (1005.734, 1210.573, 1350.522), stdev = 182.664
[info]   CI (99.9%): [507.198, 1913.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3018.672 ±(99.9%) 1695.342 B/op [Average]
[info]   (min, avg, max) = (2505.763, 3018.672, 3360.682), stdev = 440.275
[info]   CI (99.9%): [1323.330, 4714.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.145 ±(99.9%) 0.296 B/op [Average]
[info]   (min, avg, max) = (0.052, 0.145, 0.259), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 10.000), stdev = 2.449
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson
[info] # Run progress: 91.26% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1145882.033 ops/s
[info] # Warmup Iteration   2: 1630513.292 ops/s
[info] # Warmup Iteration   3: 1636554.443 ops/s
[info] # Warmup Iteration   4: 1650978.136 ops/s
[info] # Warmup Iteration   5: 1643256.233 ops/s
[info] Iteration   1: 1653414.451 ops/s
[info]                  ·gc.alloc.rate:                   731.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     625.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1525620.678 ops/s
[info]                  ·gc.alloc.rate:               674.888 MB/sec
[info]                  ·gc.alloc.rate.norm:          696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.366 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 681.024 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1650619.865 ops/s
[info]                  ·gc.alloc.rate:                   730.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     949.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1657805.348 ops/s
[info]                  ·gc.alloc.rate:                   733.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     632.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1636284.349 ops/s
[info]                  ·gc.alloc.rate:                   723.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     642.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson":
[info]   1624748.938 ±(99.9%) 215629.359 ops/s [Average]
[info]   (min, avg, max) = (1525620.678, 1624748.938, 1657805.348), stdev = 55998.260
[info]   CI (99.9%): [1409119.579, 1840378.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   718.720 ±(99.9%) 95.355 MB/sec [Average]
[info]   (min, avg, max) = (674.888, 718.720, 733.326), stdev = 24.763
[info]   CI (99.9%): [623.364, 814.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   696.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (696.000, 696.000, 696.000), stdev = 0.001
[info]   CI (99.9%): [696.000, 696.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   729.652 ±(99.9%) 573.307 MB/sec [Average]
[info]   (min, avg, max) = (657.695, 729.652, 995.880), stdev = 148.886
[info]   CI (99.9%): [156.344, 1302.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   706.177 ±(99.9%) 529.661 B/op [Average]
[info]   (min, avg, max) = (625.851, 706.177, 949.245), stdev = 137.551
[info]   CI (99.9%): [176.516, 1235.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.227 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.146), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.216 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.139), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 11.000), stdev = 3.114
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter
[info] # Run progress: 92.23% complete, ETA 00:02:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3869292.390 ops/s
[info] # Warmup Iteration   2: 4404827.763 ops/s
[info] # Warmup Iteration   3: 4431061.968 ops/s
[info] # Warmup Iteration   4: 4389968.703 ops/s
[info] # Warmup Iteration   5: 4447006.280 ops/s
[info] Iteration   1: 4435509.939 ops/s
[info]                  ·gc.alloc.rate:               360.857 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 114.403 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 4447847.290 ops/s
[info]                  ·gc.alloc.rate:               361.849 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 114.912 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 4452359.489 ops/s
[info]                  ·gc.alloc.rate:                   362.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4442545.443 ops/s
[info]                  ·gc.alloc.rate:               361.385 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 115.758 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 4434852.621 ops/s
[info]                  ·gc.alloc.rate:               360.791 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 115.959 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter":
[info]   4442622.956 ±(99.9%) 29393.360 ops/s [Average]
[info]   (min, avg, max) = (4434852.621, 4442622.956, 4452359.489), stdev = 7633.362
[info]   CI (99.9%): [4413229.597, 4472016.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   361.415 ±(99.9%) 2.355 MB/sec [Average]
[info]   (min, avg, max) = (360.791, 361.415, 362.193), stdev = 0.611
[info]   CI (99.9%): [359.060, 363.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.177 ±(99.9%) 6.879 MB/sec [Average]
[info]   (min, avg, max) = (322.525, 325.177, 326.851), stdev = 1.786
[info]   CI (99.9%): [318.298, 332.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   115.166 ±(99.9%) 2.555 B/op [Average]
[info]   (min, avg, max) = (114.403, 115.166, 115.959), stdev = 0.664
[info]   CI (99.9%): [112.611, 117.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.007), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc
[info] # Run progress: 93.20% complete, ETA 00:01:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4081569.637 ops/s
[info] # Warmup Iteration   2: 4516808.283 ops/s
[info] # Warmup Iteration   3: 4637878.468 ops/s
[info] # Warmup Iteration   4: 4588782.804 ops/s
[info] # Warmup Iteration   5: 4488557.810 ops/s
[info] Iteration   1: 4590220.685 ops/s
[info]                  ·gc.alloc.rate:               140.030 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87.708 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 4581067.671 ops/s
[info]                  ·gc.alloc.rate:      139.758 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 4582987.014 ops/s
[info]                  ·gc.alloc.rate:               139.805 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87.848 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 4607566.719 ops/s
[info]                  ·gc.alloc.rate:      140.564 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4575643.729 ops/s
[info]                  ·gc.alloc.rate:               139.586 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87.986 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc":
[info]   4587497.163 ±(99.9%) 47644.946 ops/s [Average]
[info]   (min, avg, max) = (4575643.729, 4587497.163, 4607566.719), stdev = 12373.241
[info]   CI (99.9%): [4539852.218, 4635142.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate":
[info]   139.949 ±(99.9%) 1.458 MB/sec [Average]
[info]   (min, avg, max) = (139.586, 139.949, 140.564), stdev = 0.379
[info]   CI (99.9%): [138.490, 141.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space":
[info]   153.520 ±(99.9%) 539.645 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.520, 255.869), stdev = 140.144
[info]   CI (99.9%): [≈ 0, 693.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   52.708 ±(99.9%) 185.278 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 52.708, 87.986), stdev = 48.116
[info]   CI (99.9%): [≈ 0, 237.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay
[info] # Run progress: 94.17% complete, ETA 00:01:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 117856.229 ops/s
[info] # Warmup Iteration   2: 208615.922 ops/s
[info] # Warmup Iteration   3: 216490.877 ops/s
[info] # Warmup Iteration   4: 214037.564 ops/s
[info] # Warmup Iteration   5: 216864.380 ops/s
[info] Iteration   1: 215010.310 ops/s
[info]                  ·gc.alloc.rate:                   1102.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              8064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7306.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 215230.402 ops/s
[info]                  ·gc.alloc.rate:                   1103.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              8064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9780.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 214392.499 ops/s
[info]                  ·gc.alloc.rate:                   1098.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              8064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7398.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 213239.978 ops/s
[info]                  ·gc.alloc.rate:                   1092.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              8064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7458.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 218047.873 ops/s
[info]                  ·gc.alloc.rate:                   1117.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              8064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7308.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.301 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay":
[info]   215184.213 ±(99.9%) 6844.997 ops/s [Average]
[info]   (min, avg, max) = (213239.978, 215184.213, 218047.873), stdev = 1777.624
[info]   CI (99.9%): [208339.216, 222029.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1102.877 ±(99.9%) 35.087 MB/sec [Average]
[info]   (min, avg, max) = (1092.853, 1102.877, 1117.521), stdev = 9.112
[info]   CI (99.9%): [1067.791, 1137.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8064.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8064.002, 8064.002, 8064.002), stdev = 0.001
[info]   CI (99.9%): [8064.002, 8064.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1073.663 ±(99.9%) 569.374 MB/sec [Average]
[info]   (min, avg, max) = (998.574, 1073.663, 1337.992), stdev = 147.865
[info]   CI (99.9%): [504.289, 1643.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7850.615 ±(99.9%) 4162.150 B/op [Average]
[info]   (min, avg, max) = (7306.836, 7850.615, 9780.793), stdev = 1080.897
[info]   CI (99.9%): [3688.465, 12012.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.243 ±(99.9%) 0.318 B/op [Average]
[info]   (min, avg, max) = (0.152, 0.243, 0.306), stdev = 0.082
[info]   CI (99.9%): [≈ 0, 0.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.800, 11.000), stdev = 3.114
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce
[info] # Run progress: 95.15% complete, ETA 00:01:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3479.846 ops/s
[info] # Warmup Iteration   2: 6474.008 ops/s
[info] # Warmup Iteration   3: 7524.205 ops/s
[info] # Warmup Iteration   4: 7527.619 ops/s
[info] # Warmup Iteration   5: 7458.877 ops/s
[info] Iteration   1: 7458.669 ops/s
[info]                  ·gc.alloc.rate:                   949.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              200288.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     208801.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.462 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 7556.238 ops/s
[info]                  ·gc.alloc.rate:                   961.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              200288.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207204.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.063 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 7555.929 ops/s
[info]                  ·gc.alloc.rate:                   961.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              200288.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     208313.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.007 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 7446.474 ops/s
[info]                  ·gc.alloc.rate:                   947.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              200294.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212094.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.199 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 7550.767 ops/s
[info]                  ·gc.alloc.rate:                   961.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              200336.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     209840.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.338 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce":
[info]   7513.615 ±(99.9%) 215.381 ops/s [Average]
[info]   (min, avg, max) = (7446.474, 7513.615, 7556.238), stdev = 55.934
[info]   CI (99.9%): [7298.234, 7728.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate":
[info]   956.503 ±(99.9%) 27.534 MB/sec [Average]
[info]   (min, avg, max) = (947.986, 956.503, 961.917), stdev = 7.150
[info]   CI (99.9%): [928.969, 984.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm":
[info]   200299.010 ±(99.9%) 80.539 B/op [Average]
[info]   (min, avg, max) = (200288.057, 200299.010, 200336.057), stdev = 20.916
[info]   CI (99.9%): [200218.472, 200379.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   999.216 ±(99.9%) 26.473 MB/sec [Average]
[info]   (min, avg, max) = (989.754, 999.216, 1006.972), stdev = 6.875
[info]   CI (99.9%): [972.743, 1025.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   209250.841 ±(99.9%) 7126.954 B/op [Average]
[info]   (min, avg, max) = (207204.056, 209250.841, 212094.488), stdev = 1850.847
[info]   CI (99.9%): [202123.887, 216377.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.243 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.079, 0.187), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   16.616 ±(99.9%) 51.298 B/op [Average]
[info]   (min, avg, max) = (4.338, 16.616, 39.462), stdev = 13.322
[info]   CI (99.9%): [≈ 0, 67.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 10.000), stdev = 1.924
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson
[info] # Run progress: 96.12% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18327.834 ops/s
[info] # Warmup Iteration   2: 35496.140 ops/s
[info] # Warmup Iteration   3: 35611.489 ops/s
[info] # Warmup Iteration   4: 35608.833 ops/s
[info] # Warmup Iteration   5: 35840.535 ops/s
[info] Iteration   1: 35540.477 ops/s
[info]                  ·gc.alloc.rate:               454.058 MB/sec
[info]                  ·gc.alloc.rate.norm:          20100.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28790.339 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 27643.887 ops/s
[info]                  ·gc.alloc.rate:               353.157 MB/sec
[info]                  ·gc.alloc.rate.norm:          20099.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18601.321 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 35692.714 ops/s
[info]                  ·gc.alloc.rate:                   456.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14407.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.672 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 35761.029 ops/s
[info]                  ·gc.alloc.rate:               456.882 MB/sec
[info]                  ·gc.alloc.rate.norm:          20099.980 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14438.955 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 35009.387 ops/s
[info]                  ·gc.alloc.rate:               447.264 MB/sec
[info]                  ·gc.alloc.rate.norm:          20100.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29557.176 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson":
[info]   33929.499 ±(99.9%) 13577.786 ops/s [Average]
[info]   (min, avg, max) = (27643.887, 33929.499, 35761.029), stdev = 3526.108
[info]   CI (99.9%): [20351.713, 47507.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate":
[info]   433.476 ±(99.9%) 173.501 MB/sec [Average]
[info]   (min, avg, max) = (353.157, 433.476, 456.882), stdev = 45.058
[info]   CI (99.9%): [259.975, 606.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   20099.994 ±(99.9%) 0.429 B/op [Average]
[info]   (min, avg, max) = (20099.813, 20099.994, 20100.109), stdev = 0.112
[info]   CI (99.9%): [20099.565, 20100.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   457.996 ±(99.9%) 689.190 MB/sec [Average]
[info]   (min, avg, max) = (326.829, 457.996, 657.704), stdev = 178.980
[info]   CI (99.9%): [≈ 0, 1147.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   21159.101 ±(99.9%) 28946.964 B/op [Average]
[info]   (min, avg, max) = (14407.713, 21159.101, 29557.176), stdev = 7517.435
[info]   CI (99.9%): [≈ 0, 50106.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.734 ±(99.9%) 6.323 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.734, 3.672), stdev = 1.642
[info]   CI (99.9%): [≈ 0, 7.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 6.000), stdev = 1.643
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter
[info] # Run progress: 97.09% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26784.104 ops/s
[info] # Warmup Iteration   2: 42031.321 ops/s
[info] # Warmup Iteration   3: 42142.585 ops/s
[info] # Warmup Iteration   4: 42123.201 ops/s
[info] # Warmup Iteration   5: 42024.347 ops/s
[info] Iteration   1: 42251.541 ops/s
[info]                  ·gc.alloc.rate:               285.280 MB/sec
[info]                  ·gc.alloc.rate.norm:          10624.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12058.872 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 42575.221 ops/s
[info]                  ·gc.alloc.rate:               287.491 MB/sec
[info]                  ·gc.alloc.rate.norm:          10624.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11967.965 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 42558.967 ops/s
[info]                  ·gc.alloc.rate:      287.394 MB/sec
[info]                  ·gc.alloc.rate.norm: 10624.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 42089.216 ops/s
[info]                  ·gc.alloc.rate:                   284.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              10624.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12181.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.778 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 41993.088 ops/s
[info]                  ·gc.alloc.rate:               283.544 MB/sec
[info]                  ·gc.alloc.rate.norm:          10624.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12208.421 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter":
[info]   42293.607 ±(99.9%) 1025.276 ops/s [Average]
[info]   (min, avg, max) = (41993.088, 42293.607, 42575.221), stdev = 266.261
[info]   CI (99.9%): [41268.331, 43318.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate":
[info]   285.580 ±(99.9%) 6.970 MB/sec [Average]
[info]   (min, avg, max) = (283.544, 285.580, 287.491), stdev = 1.810
[info]   CI (99.9%): [278.611, 292.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   10624.011 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (10624.010, 10624.011, 10624.011), stdev = 0.001
[info]   CI (99.9%): [10624.009, 10624.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   259.869 ±(99.9%) 559.401 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 259.869, 325.846), stdev = 145.275
[info]   CI (99.9%): [≈ 0, 819.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   9683.283 ±(99.9%) 20847.322 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9683.283, 12208.421), stdev = 5413.983
[info]   CI (99.9%): [≈ 0, 30530.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.156 ±(99.9%) 1.341 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.156, 0.778), stdev = 0.348
[info]   CI (99.9%): [≈ 0, 1.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc
[info] # Run progress: 98.06% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28706.563 ops/s
[info] # Warmup Iteration   2: 45209.314 ops/s
[info] # Warmup Iteration   3: 45401.190 ops/s
[info] # Warmup Iteration   4: 45508.151 ops/s
[info] # Warmup Iteration   5: 45543.910 ops/s
[info] Iteration   1: 45596.819 ops/s
[info]                  ·gc.alloc.rate:      16.693 MB/sec
[info]                  ·gc.alloc.rate.norm: 576.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 45344.507 ops/s
[info]                  ·gc.alloc.rate:      16.601 MB/sec
[info]                  ·gc.alloc.rate.norm: 576.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 45607.615 ops/s
[info]                  ·gc.alloc.rate:      16.697 MB/sec
[info]                  ·gc.alloc.rate.norm: 576.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 45455.363 ops/s
[info]                  ·gc.alloc.rate:      16.642 MB/sec
[info]                  ·gc.alloc.rate.norm: 576.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 45604.725 ops/s
[info]                  ·gc.alloc.rate:      16.696 MB/sec
[info]                  ·gc.alloc.rate.norm: 576.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc":
[info]   45521.806 ±(99.9%) 454.455 ops/s [Average]
[info]   (min, avg, max) = (45344.507, 45521.806, 45607.615), stdev = 118.021
[info]   CI (99.9%): [45067.351, 45976.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   16.666 ±(99.9%) 0.165 MB/sec [Average]
[info]   (min, avg, max) = (16.601, 16.666, 16.697), stdev = 0.043
[info]   CI (99.9%): [16.501, 16.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   576.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (576.009, 576.009, 576.010), stdev = 0.001
[info]   CI (99.9%): [576.009, 576.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay
[info] # Run progress: 99.03% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2144.801 ops/s
[info] # Warmup Iteration   2: 4030.307 ops/s
[info] # Warmup Iteration   3: 4277.490 ops/s
[info] # Warmup Iteration   4: 4328.376 ops/s
[info] # Warmup Iteration   5: 4297.451 ops/s
[info] Iteration   1: 4294.966 ops/s
[info]                  ·gc.alloc.rate:                   940.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              344493.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     242373.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.393 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 4356.716 ops/s
[info]                  ·gc.alloc.rate:                   954.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              344492.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     360072.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.557 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 4283.983 ops/s
[info]                  ·gc.alloc.rate:                   938.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              344494.870 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     367796.903 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.647 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 4280.638 ops/s
[info]                  ·gc.alloc.rate:                   937.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              344493.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     369278.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.305 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 4292.536 ops/s
[info]                  ·gc.alloc.rate:                   939.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              344494.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     369467.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.631 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay":
[info]   4301.768 ±(99.9%) 120.445 ops/s [Average]
[info]   (min, avg, max) = (4280.638, 4301.768, 4356.716), stdev = 31.279
[info]   CI (99.9%): [4181.322, 4422.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate":
[info]   941.978 ±(99.9%) 26.422 MB/sec [Average]
[info]   (min, avg, max) = (937.392, 941.978, 954.035), stdev = 6.862
[info]   CI (99.9%): [915.556, 968.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   344493.791 ±(99.9%) 3.003 B/op [Average]
[info]   (min, avg, max) = (344492.949, 344493.791, 344494.870), stdev = 0.780
[info]   CI (99.9%): [344490.788, 344496.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   934.655 ±(99.9%) 587.774 MB/sec [Average]
[info]   (min, avg, max) = (661.695, 934.655, 1008.088), stdev = 152.643
[info]   CI (99.9%): [346.881, 1522.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   341797.855 ±(99.9%) 214532.832 B/op [Average]
[info]   (min, avg, max) = (242373.363, 341797.855, 369467.976), stdev = 55713.495
[info]   CI (99.9%): [127265.022, 556330.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.146), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   21.307 ±(99.9%) 73.079 B/op [Average]
[info]   (min, avg, max) = (7.631, 21.307, 53.393), stdev = 18.978
[info]   CI (99.9%): [≈ 0, 94.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.095
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:27:49
[info] Benchmark                                                                                         Mode  Cnt         Score         Error   Units
[info] JsonCodecMakerBenchmark.missingReqFieldCirce                                                     thrpt    5   1515347.441 ±   77300.024   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate                                      thrpt    5      2450.043 ±     124.661  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm                                 thrpt    5      2544.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space                             thrpt    5      2446.276 ±     566.408  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2539.942 ±     558.010    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.083 ±       0.057  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.087 ±       0.061    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count                                           thrpt    5        36.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time                                            thrpt    5        63.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldJackson                                                   thrpt    5    196637.443 ±   11287.339   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate                                    thrpt    5       468.916 ±      26.933  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm                               thrpt    5      3752.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space                           thrpt    5       458.921 ±     688.267  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      3666.285 ±    5423.685    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.004 ±       0.036  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.034 ±       0.289    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count                                         thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time                                          thrpt    5        11.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter                                                  thrpt    5    426884.753 ±   99640.461   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate                                   thrpt    5       397.205 ±      92.748  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm                              thrpt    5      1464.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       389.948 ±     561.925  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1457.633 ±    2398.692    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count                                        thrpt    5         6.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time                                         thrpt    5        15.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless                                         thrpt    5   1739092.669 ±   55636.466   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate                          thrpt    5      1078.872 ±      34.378  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm                     thrpt    5       976.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space                 thrpt    5      1090.165 ±     532.991  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm            thrpt    5       986.963 ±     511.945    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Old_Gen                    thrpt    5         0.049 ±       0.421  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Old_Gen.norm               thrpt    5         0.044 ±       0.381    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space             thrpt    5         0.050 ±       0.122  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.045 ±       0.111    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count                               thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time                                thrpt    5        68.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump                                   thrpt    5   3651646.654 ±   96580.633   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate                    thrpt    5       519.849 ±      13.728  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm               thrpt    5       224.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space           thrpt    5       522.128 ±     692.360  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm      thrpt    5       224.807 ±     296.154    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space       thrpt    5         0.021 ±       0.080  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.009 ±       0.034    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count                         thrpt    5         8.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time                          thrpt    5        17.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldPlay                                                      thrpt    5    126412.480 ±    8560.264   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate                                       thrpt    5      1054.736 ±      71.416  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm                                  thrpt    5     13128.003 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1072.142 ±     588.533  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5     13369.276 ±    8193.639    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.050 ±       0.166  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.619 ±       2.030    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count                                            thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time                                             thrpt    5        39.000                    ms
[info] JsonCodecMakerBenchmark.readAdtCirce                                                             thrpt    5    563224.899 ±   12243.567   ops/s
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate                                              thrpt    5      1386.085 ±      30.145  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm                                         thrpt    5      3872.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space                                     thrpt    5      1415.002 ±     583.748  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm                                thrpt    5      3954.286 ±    1704.511    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.037 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.105 ±       0.186    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.count                                                   thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.time                                                    thrpt    5        40.000                    ms
[info] JsonCodecMakerBenchmark.readAdtJackson                                                           thrpt    5   1236021.447 ±   31374.043   ops/s
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate                                            thrpt    5       992.974 ±      25.322  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm                                       thrpt    5      1264.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space                                   thrpt    5      1003.257 ±      22.364  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm                              thrpt    5      1277.150 ±      51.144    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space                               thrpt    5         0.071 ±       0.298  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.090 ±       0.380    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.count                                                 thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.time                                                  thrpt    5        34.000                    ms
[info] JsonCodecMakerBenchmark.readAdtJsoniter                                                          thrpt    5   2818563.870 ±   56551.236   ops/s
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate                                           thrpt    5       186.305 ±       3.771  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm                                      thrpt    5       104.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space                                  thrpt    5       166.780 ±     595.452  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm                             thrpt    5        93.412 ±     333.365    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space                              thrpt    5         0.004 ±       0.036  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.002 ±       0.020    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count                                                thrpt    5         3.000                counts
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time                                                 thrpt    5         6.000                    ms
[info] JsonCodecMakerBenchmark.readAdtPlay                                                              thrpt    5    128873.088 ±    3856.482   ops/s
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate                                               thrpt    5      1072.010 ±      32.142  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm                                          thrpt    5     13088.003 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space                                      thrpt    5      1073.163 ±     595.317  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm                                 thrpt    5     13102.958 ±    7288.671    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space                                  thrpt    5         0.050 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm                             thrpt    5         0.611 ±       0.549    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.count                                                    thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.time                                                     thrpt    5        47.000                    ms
[info] JsonCodecMakerBenchmark.readAnyRefsCirce                                                         thrpt    5   1152658.080 ±   47615.502   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate                                          thrpt    5      1857.970 ±      76.925  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                                     thrpt    5      2536.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1829.819 ±     719.276  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2497.101 ±     953.107    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.050 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.068 ±       0.062    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count                                               thrpt    5        27.000                counts
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time                                                thrpt    5        53.000                    ms
[info] JsonCodecMakerBenchmark.readAnyRefsJackson                                                       thrpt    5   1764195.308 ±   52952.200   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate                                        thrpt    5      1237.884 ±      37.326  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                                   thrpt    5      1104.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1277.461 ±     578.870  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1139.785 ±     532.489    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.029 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.026 ±       0.082    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count                                             thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time                                              thrpt    5        37.000                    ms
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter                                                      thrpt    5   6945868.126 ±  373372.141   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                                       thrpt    5       882.909 ±      47.392  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       200.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       879.140 ±     592.286  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       198.951 ±     128.145    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Old_Gen                                 thrpt    5         0.047 ±       0.401  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Old_Gen.norm                            thrpt    5         0.011 ±       0.093    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±       0.174  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.010 ±       0.040    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count                                            thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time                                             thrpt    5        58.000                    ms
[info] JsonCodecMakerBenchmark.readAnyRefsPlay                                                          thrpt    5    426512.469 ±   13795.129   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate                                           thrpt    5      1127.659 ±      36.484  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                                      thrpt    5      4160.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1074.277 ±     579.702  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      3963.375 ±    2144.318    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.046 ±       0.143  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.168 ±       0.525    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count                                                thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time                                                 thrpt    5        41.000                    ms
[info] JsonCodecMakerBenchmark.readArraysCirce                                                          thrpt    5    615161.920 ±   28223.506   ops/s
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate                                           thrpt    5      2005.309 ±      92.668  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm                                      thrpt    5      5128.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                                  thrpt    5      1966.722 ±     587.847  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5030.712 ±    1567.024    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                              thrpt    5         0.062 ±       0.098  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.160 ±       0.250    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.count                                                thrpt    5        29.000                counts
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.time                                                 thrpt    5        58.000                    ms
[info] JsonCodecMakerBenchmark.readArraysJackson                                                        thrpt    5   1237071.322 ±   32939.314   ops/s
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate                                         thrpt    5      1163.631 ±      30.902  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm                                    thrpt    5      1480.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                                thrpt    5      1208.595 ±     707.562  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1537.615 ±     911.673    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                            thrpt    5         0.046 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.058 ±       0.086    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.count                                              thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.time                                               thrpt    5        32.000                    ms
[info] JsonCodecMakerBenchmark.readArraysJsoniter                                                       thrpt    5   2467882.925 ±   56390.079   ops/s
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate                                        thrpt    5      1028.950 ±      23.528  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                                   thrpt    5       656.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5      1000.063 ±      26.543  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5       637.603 ±      23.113    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5         0.037 ±       0.105  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.024 ±       0.067    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count                                             thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time                                              thrpt    5        26.000                    ms
[info] JsonCodecMakerBenchmark.readArraysPlay                                                           thrpt    5    213732.550 ±    6236.000   ops/s
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate                                            thrpt    5      1303.064 ±      38.001  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm                                       thrpt    5      9592.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                                   thrpt    5      1279.835 ±     587.346  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5      9425.485 ±    4466.878    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                               thrpt    5         0.067 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.491 ±       0.654    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.count                                                 thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.time                                                  thrpt    5        25.000                    ms
[info] JsonCodecMakerBenchmark.readBitSetsJackson                                                       thrpt    5   1557807.544 ±   46347.825   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate                                        thrpt    5       990.126 ±      29.594  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                                   thrpt    5      1000.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1002.703 ±      20.626  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1012.747 ±      34.274    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.092 ±       0.480  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.093 ±       0.490    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count                                             thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time                                              thrpt    5        33.000                    ms
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter                                                      thrpt    5   3832011.732 ±   69499.655   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate                                       thrpt    5       506.605 ±       9.161  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       208.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       458.659 ±     691.497  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       188.554 ±     287.232    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.008 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.003 ±       0.030    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count                                            thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time                                             thrpt    5        21.000                    ms
[info] JsonCodecMakerBenchmark.readBitSetsPlay                                                          thrpt    5    269908.239 ±   10444.745   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate                                           thrpt    5      1266.705 ±      48.944  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                                      thrpt    5      7384.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1278.673 ±     578.707  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      7455.060 ±    3413.564    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.042 ±       0.080  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.243 ±       0.474    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count                                                thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time                                                 thrpt    5        39.000                    ms
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce                                                   thrpt    5    548439.167 ±   13915.411   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate                                    thrpt    5      1820.866 ±      46.443  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                               thrpt    5      5224.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                           thrpt    5      1829.682 ±     719.688  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5      5250.328 ±    2109.827    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.058 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.167 ±       0.191    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count                                         thrpt    5        27.000                counts
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time                                          thrpt    5        56.000                    ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson                                                 thrpt    5    668001.300 ±   15863.891   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate                                  thrpt    5       828.779 ±      19.592  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                             thrpt    5      1952.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space                         thrpt    5       865.035 ±     701.548  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5      2038.169 ±    1668.721    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.062 ±       0.204  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.147 ±       0.481    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count                                       thrpt    5        13.000                counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time                                        thrpt    5        23.000                    ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter                                                thrpt    5   4641250.655 ±   30062.183   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                                 thrpt    5       212.386 ±       1.372  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                            thrpt    5        72.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       231.221 ±     513.841  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5        78.422 ±     174.369    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.017 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.006 ±       0.023    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count                                      thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time                                       thrpt    5        14.000                    ms
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay                                                    thrpt    5    212981.199 ±    7471.277   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate                                     thrpt    5      1182.629 ±      41.290  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                                thrpt    5      8736.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1142.485 ±     709.883  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5      8442.923 ±    5345.466    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.033 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.246 ±       0.675    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count                                          thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time                                           thrpt    5        47.000                    ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce                                                   thrpt    5      5053.295 ±     251.164   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate                                    thrpt    5      1262.158 ±      62.610  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm                               thrpt    5    392960.088 ±       0.015    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                           thrpt    5      1276.505 ±     576.879  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5    397805.115 ±  191302.347    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.079 ±       0.166  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        24.580 ±      51.013    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count                                         thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time                                          thrpt    5        37.000                    ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson                                                 thrpt    5      9436.553 ±    1369.849   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate                                  thrpt    5       254.450 ±      36.934  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm                             thrpt    5     42424.047 ±       0.013    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                         thrpt    5       245.543 ±     540.617  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5     41229.592 ±   91611.692    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.008 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         1.428 ±       7.542    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count                                       thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time                                        thrpt    5         9.000                    ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter                                                thrpt    5     18305.959 ±     161.059   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate                                 thrpt    5       342.629 ±       3.020  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                            thrpt    5     29448.026 ±       0.014    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       324.780 ±       5.823  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5     27914.084 ±     600.060    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.017 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5         1.432 ±       5.770    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count                                      thrpt    5         5.000                counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time                                       thrpt    5        12.000                    ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay                                                    thrpt    5      1959.587 ±      62.262   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate                                     thrpt    5      1189.555 ±      38.480  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm                                thrpt    5    955216.227 ±       0.035    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1207.871 ±     705.481  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5    970540.155 ±  583932.369    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.042 ±       0.098  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5        33.382 ±      78.344    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count                                          thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time                                           thrpt    5        29.000                    ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter                                               thrpt    5   3755975.640 ±   41237.919   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                                thrpt    5      1126.715 ±      12.552  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                           thrpt    5       472.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5      1133.187 ±     693.488  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5       474.814 ±     293.804    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±       0.174  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.019 ±       0.073    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count                                     thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time                                      thrpt    5        35.000                    ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay                                                   thrpt    5    241821.917 ±    1496.479   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                                    thrpt    5      1299.659 ±       8.187  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                               thrpt    5      8456.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1280.205 ±     585.935  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5      8329.645 ±    3819.260    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.029 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.190 ±       0.596    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count                                         thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time                                          thrpt    5        33.000                    ms
[info] JsonCodecMakerBenchmark.readIterablesCirce                                                       thrpt    5    485707.753 ±   19202.445   ops/s
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate                                        thrpt    5      1770.754 ±      69.910  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm                                   thrpt    5      5736.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                               thrpt    5      1760.988 ±     594.605  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5704.397 ±    1909.457    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                           thrpt    5         0.058 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.189 ±       0.286    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.count                                             thrpt    5        26.000                counts
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.time                                              thrpt    5        48.000                    ms
[info] JsonCodecMakerBenchmark.readIterablesJackson                                                     thrpt    5    547404.520 ±   11051.512   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate                                      thrpt    5       637.380 ±      12.879  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm                                 thrpt    5      1832.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                             thrpt    5       593.514 ±     571.331  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5      1706.644 ±    1651.634    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space                         thrpt    5         0.108 ±       0.844  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.311 ±       2.420    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.count                                           thrpt    5         9.000                counts
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.time                                            thrpt    5        20.000                    ms
[info] JsonCodecMakerBenchmark.readIterablesJsoniter                                                    thrpt    5   2905886.211 ±  113254.995   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate                                     thrpt    5      1152.436 ±      44.981  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                                thrpt    5       624.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5      1200.862 ±     703.099  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5       649.807 ±     367.702    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5         0.037 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.020 ±       0.037    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count                                          thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time                                           thrpt    5        47.000                    ms
[info] JsonCodecMakerBenchmark.readIterablesPlay                                                        thrpt    5    150433.129 ±    3635.289   ops/s
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate                                         thrpt    5      1047.122 ±      25.173  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm                                    thrpt    5     10952.003 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                                thrpt    5      1072.268 ±     595.487  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5     11220.609 ±    6441.004    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                            thrpt    5         0.050 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.523 ±       0.954    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.count                                              thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.time                                               thrpt    5        45.000                    ms
[info] JsonCodecMakerBenchmark.readMapsCirce                                                            thrpt    5    438911.944 ±   18485.450   ops/s
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate                                             thrpt    5      1564.408 ±      66.077  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm                                        thrpt    5      5608.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1553.641 ±     706.064  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5567.943 ±    2464.622    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.058 ±       0.143  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.209 ±       0.512    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.count                                                  thrpt    5        23.000                counts
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.time                                                   thrpt    5        48.000                    ms
[info] JsonCodecMakerBenchmark.readMapsJackson                                                          thrpt    5    861980.886 ±   15748.612   ops/s
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate                                           thrpt    5      1016.833 ±      18.605  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm                                      thrpt    5      1856.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                                  thrpt    5      1001.686 ±      20.114  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5      1828.355 ±      20.166    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.125 ±       0.808  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.229 ±       1.487    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.count                                                thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.time                                                 thrpt    5        26.000                    ms
[info] JsonCodecMakerBenchmark.readMapsJsoniter                                                         thrpt    5   3487347.480 ±   90789.233   ops/s
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate                                          thrpt    5       868.846 ±      22.693  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                                     thrpt    5       392.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       860.184 ±     704.472  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5       388.446 ±     324.987    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.037 ±       0.105  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.017 ±       0.047    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count                                               thrpt    5        13.000                counts
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time                                                thrpt    5        34.000                    ms
[info] JsonCodecMakerBenchmark.readMapsPlay                                                             thrpt    5    252493.376 ±    9791.072   ops/s
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate                                              thrpt    5      1318.468 ±      51.091  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm                                         thrpt    5      8216.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                                     thrpt    5      1348.004 ±      26.331  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      8400.432 ±     196.317    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.033 ±       0.108  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.207 ±       0.667    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.count                                                   thrpt    5        20.000                counts
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.time                                                    thrpt    5        38.000                    ms
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce                                                thrpt    5    517389.513 ±   19425.240   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate                                 thrpt    5      1994.147 ±      75.041  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm                            thrpt    5      6064.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space                        thrpt    5      2034.702 ±      25.029  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5      6187.831 ±     260.971    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space                    thrpt    5         0.067 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.203 ±       0.207    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count                                      thrpt    5        30.000                counts
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time                                       thrpt    5        52.000                    ms
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter                                             thrpt    5   2631553.772 ±   41260.082   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate                              thrpt    5      1699.330 ±      26.641  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm                         thrpt    5      1016.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5      1688.182 ±      35.762  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5      1009.340 ±      19.898    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.054 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.032 ±       0.055    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count                                   thrpt    5        25.000                counts
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time                                    thrpt    5        37.000                    ms
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay                                                 thrpt    5    162554.725 ±    3525.707   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate                                  thrpt    5      1162.920 ±      25.243  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm                             thrpt    5     11256.003 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space                         thrpt    5      1141.111 ±     694.672  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5     11043.421 ±    6673.945    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.029 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.282 ±       0.685    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count                                       thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time                                        thrpt    5        44.000                    ms
[info] JsonCodecMakerBenchmark.readMutableMapsJackson                                                   thrpt    5    633584.906 ±    4673.734   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate                                    thrpt    5       821.512 ±       6.118  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                               thrpt    5      2040.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                           thrpt    5       795.505 ±     700.404  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      1975.218 ±    1734.472    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.125 ±       0.944  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.310 ±       2.342    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count                                         thrpt    5        12.000                counts
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time                                          thrpt    5        31.000                    ms
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter                                                  thrpt    5   2317074.167 ±   52407.887   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                                   thrpt    5      1095.678 ±      24.892  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                              thrpt    5       744.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5      1133.388 ±     711.684  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       769.845 ±     490.362    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.025 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.017 ±       0.046    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count                                        thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time                                         thrpt    5        25.000                    ms
[info] JsonCodecMakerBenchmark.readMutableMapsPlay                                                      thrpt    5    222181.676 ±    7358.108   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate                                       thrpt    5      1188.439 ±      39.381  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                                  thrpt    5      8416.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1209.818 ±     707.976  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8575.899 ±    5255.466    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.029 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.207 ±       0.511    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count                                            thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time                                             thrpt    5        41.000                    ms
[info] JsonCodecMakerBenchmark.readPrimitivesCirce                                                      thrpt    5    470441.463 ±    7747.613   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate                                       thrpt    5      1392.123 ±      22.881  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                                  thrpt    5      4656.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1413.035 ±     550.275  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      4726.411 ±    1862.955    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.054 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.181 ±       0.306    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count                                            thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time                                             thrpt    5        64.000                    ms
[info] JsonCodecMakerBenchmark.readPrimitivesJackson                                                    thrpt    5    956421.675 ±  136884.213   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate                                     thrpt    5       724.584 ±     103.625  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                                thrpt    5      1192.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       729.648 ±     564.682  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1199.622 ±     882.107    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.046 ±       0.191  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.075 ±       0.309    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count                                          thrpt    5        11.000                counts
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time                                           thrpt    5        21.000                    ms
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter                                                   thrpt    5   3603563.548 ±   30401.378   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                                    thrpt    5       109.936 ±       0.937  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                               thrpt    5        48.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       102.353 ±     539.680  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5        44.671 ±     235.539    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count                                         thrpt    5         2.000                counts
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time                                          thrpt    5         2.000                    ms
[info] JsonCodecMakerBenchmark.readPrimitivesPlay                                                       thrpt    5    164767.876 ±    7279.652   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate                                        thrpt    5      1092.484 ±      48.033  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                                   thrpt    5     10432.003 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1073.705 ±     589.835  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5     10265.341 ±    6099.880    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.042 ±       0.057  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.397 ±       0.531    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count                                             thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time                                              thrpt    5        26.000                    ms
[info] JsonCodecMakerBenchmark.readTwitterAPICirce                                                      thrpt    5      7848.885 ±     101.208   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate                                       thrpt    5      1112.798 ±      14.541  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm                                  thrpt    5    223065.900 ±      66.706    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space                              thrpt    5      1068.896 ±     576.559  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5    214274.947 ±  115928.540    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.095 ±       0.519  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5        19.183 ±     104.485    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count                                            thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time                                             thrpt    5        38.000                    ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson                                                    thrpt    5     11547.406 ±    3305.376   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate                                     thrpt    5       184.002 ±      55.989  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm                                thrpt    5     25063.752 ±    1581.785    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space                            thrpt    5       166.923 ±     596.121  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5     23332.528 ±   82912.087    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.004 ±       0.036  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.549 ±       4.726    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count                                          thrpt    5         3.000                counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time                                           thrpt    5         8.000                    ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter                                                   thrpt    5     23074.355 ±     411.267   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate                                    thrpt    5       246.617 ±       4.379  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm                               thrpt    5     16816.118 ±       0.854    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       245.869 ±     541.483  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5     16784.649 ±   36920.619    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count                                         thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time                                          thrpt    5         6.000                    ms
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay                                                       thrpt    5      3737.056 ±     114.514   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate                                        thrpt    5      1096.064 ±      33.721  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm                                   thrpt    5    461416.117 ±       0.015    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1070.560 ±     566.818  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5    450605.613 ±  234791.978    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.075 ±       0.383  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5        31.356 ±     159.382    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count                                             thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time                                              thrpt    5        29.000                    ms
[info] JsonCodecMakerBenchmark.writeAdtCirce                                                            thrpt    5    417497.157 ±   10766.633   ops/s
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate                                             thrpt    5      1477.562 ±      38.201  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm                                        thrpt    5      5568.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1484.554 ±     695.909  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5594.081 ±    2608.786    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.050 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.188 ±       0.164    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.count                                                  thrpt    5        22.000                counts
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.time                                                   thrpt    5        50.000                    ms
[info] JsonCodecMakerBenchmark.writeAdtJackson                                                          thrpt    5   1630744.404 ±   51057.191   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate                                           thrpt    5       679.917 ±      21.287  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm                                      thrpt    5       656.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space                                  thrpt    5       728.231 ±     561.812  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5       703.055 ±     554.732    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.058 ±       0.237  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.057 ±       0.231    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.count                                                thrpt    5        11.000                counts
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.time                                                 thrpt    5        19.000                    ms
[info] JsonCodecMakerBenchmark.writeAdtJsoniter                                                         thrpt    5   8954160.556 ±  262761.214   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate                                          thrpt    5       455.319 ±      13.557  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm                                     thrpt    5        80.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       455.404 ±     687.670  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5        80.186 ±     123.179    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.012 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.002 ±       0.013    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count                                               thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time                                                thrpt    5        17.000                    ms
[info] JsonCodecMakerBenchmark.writeAdtPlay                                                             thrpt    5    230657.554 ±    3997.899   ops/s
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate                                              thrpt    5       731.834 ±      12.594  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm                                         thrpt    5      4992.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space                                     thrpt    5       730.923 ±     566.197  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      4987.992 ±    3927.025    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.046 ±       0.132  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.312 ±       0.896    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.count                                                   thrpt    5        11.000                counts
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.time                                                    thrpt    5        32.000                    ms
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce                                                        thrpt    5   1310991.162 ±   50938.840   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate                                         thrpt    5      1466.507 ±      57.074  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                                    thrpt    5      1760.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                                thrpt    5      1418.336 ±     585.687  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1703.590 ±     768.306    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                            thrpt    5         0.050 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.060 ±       0.053    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count                                              thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time                                               thrpt    5        46.000                    ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson                                                      thrpt    5   4356470.765 ±  147437.364   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate                                       thrpt    5      1196.149 ±      40.477  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1141.260 ±     710.247  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       412.173 ±     255.973    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.033 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.012 ±       0.016    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count                                            thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time                                             thrpt    5        38.000                    ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter                                                     thrpt    5  15958402.133 ± 1062184.309   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                                      thrpt    5       486.836 ±      32.382  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                                 thrpt    5        48.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       455.889 ±     686.427  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5        44.915 ±      67.096    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.008 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.001 ±       0.004    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count                                           thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time                                            thrpt    5        14.000                    ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc                                             thrpt    5  20243109.534 ±  298965.165   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate                              thrpt    5        ≈ 10⁻⁴                MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm                         thrpt    5        ≈ 10⁻⁵                  B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count                                   thrpt    5           ≈ 0                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay                                                         thrpt    5    916962.925 ±   21608.756   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate                                          thrpt    5      1375.420 ±      32.495  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                                     thrpt    5      2360.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1342.009 ±      36.985  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2302.701 ±      59.231    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.033 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.057 ±       0.123    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count                                               thrpt    5        20.000                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time                                                thrpt    5        38.000                    ms
[info] JsonCodecMakerBenchmark.writeArraysCirce                                                         thrpt    5    772395.176 ±   38273.164   ops/s
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate                                          thrpt    5      1857.590 ±      91.956  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm                                     thrpt    5      3784.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1830.043 ±     719.804  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      3732.175 ±    1652.878    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.054 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.111 ±       0.190    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.count                                               thrpt    5        27.000                counts
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.time                                                thrpt    5        68.000                    ms
[info] JsonCodecMakerBenchmark.writeArraysJackson                                                       thrpt    5   2645260.516 ±   47893.894   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate                                        thrpt    5      1533.291 ±      27.671  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm                                   thrpt    5       912.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1552.975 ±     727.812  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5       923.643 ±     430.128    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.037 ±       0.164  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.022 ±       0.098    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.count                                             thrpt    5        23.000                counts
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.time                                              thrpt    5        55.000                    ms
[info] JsonCodecMakerBenchmark.writeArraysJsoniter                                                      thrpt    5   4684416.742 ±  162028.134   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate                                       thrpt    5      1286.216 ±      44.543  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5      1340.582 ±      39.229  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       450.275 ±      13.424    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.071 ±       0.176  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.024 ±       0.058    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count                                            thrpt    5        20.000                counts
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time                                             thrpt    5        41.000                    ms
[info] JsonCodecMakerBenchmark.writeArraysPlay                                                          thrpt    5    342861.678 ±    8068.507   ops/s
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate                                           thrpt    5      1223.826 ±      28.909  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm                                      thrpt    5      5616.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1211.307 ±     717.790  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5556.160 ±    3219.220    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.033 ±       0.146  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.152 ±       0.667    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.count                                                thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.time                                                 thrpt    5        38.000                    ms
[info] JsonCodecMakerBenchmark.writeBitSetsJackson                                                      thrpt    5   1967365.999 ±  151853.941   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate                                       thrpt    5      1040.326 ±      80.136  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                                  thrpt    5       832.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1003.705 ±      19.897  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       802.963 ±      62.458    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±       0.154  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.036 ±       0.124    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count                                            thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time                                             thrpt    5        30.000                    ms
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter                                                     thrpt    5   4252000.459 ±   51917.311   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                                      thrpt    5       778.440 ±       9.943  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                                 thrpt    5       288.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       791.448 ±     706.624  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5       292.701 ±     258.847    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.021 ±       0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.008 ±       0.030    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count                                           thrpt    5        12.000                counts
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time                                            thrpt    5        27.000                    ms
[info] JsonCodecMakerBenchmark.writeBitSetsPlay                                                         thrpt    5    497023.025 ±   17557.331   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate                                          thrpt    5      1475.815 ±      52.309  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                                     thrpt    5      4672.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1485.760 ±     697.345  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      4700.184 ±    2060.205    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.037 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.118 ±       0.276    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count                                               thrpt    5        22.000                counts
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time                                                thrpt    5        49.000                    ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce                                                  thrpt    5      5406.738 ±      90.140   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate                                   thrpt    5      1499.093 ±      24.959  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm                              thrpt    5    436224.082 ±       0.013    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                          thrpt    5      1485.559 ±     714.256  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5    432422.531 ±  213175.103    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                      thrpt    5         0.038 ±       0.068  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5        11.057 ±      19.670    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count                                        thrpt    5        22.000                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time                                         thrpt    5        49.000                    ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson                                                thrpt    5     29789.370 ±     452.989   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate                                 thrpt    5       431.840 ±       6.544  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm                            thrpt    5     22807.845 ±       0.279    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                        thrpt    5       392.757 ±     560.378  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5     20757.283 ±   29858.028    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count                                      thrpt    5         6.000                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time                                       thrpt    5        23.000                    ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter                                               thrpt    5     35349.042 ±     959.078   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate                                thrpt    5       271.044 ±       7.396  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                           thrpt    5     12064.012 ±       0.002    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       257.876 ±     555.115  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5     11478.151 ±   24713.985    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.017 ±       0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.742 ±       6.387    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count                                     thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time                                      thrpt    5        10.000                    ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc                                       thrpt    5     48747.404 ±     544.316   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate                        thrpt    5        14.624 ±       0.164  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm                   thrpt    5       472.009 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count                             thrpt    5           ≈ 0                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay                                                   thrpt    5      4375.488 ±     177.063   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate                                    thrpt    5      1299.210 ±      51.558  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm                               thrpt    5    467104.050 ±       2.252    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1278.974 ±     571.259  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5    459799.298 ±  203838.055    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.046 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        16.489 ±      24.261    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count                                         thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time                                          thrpt    5        43.000                    ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson                                               thrpt    5    683640.782 ±   43296.283   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                                thrpt    5      1498.880 ±      91.142  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                           thrpt    5      3448.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1545.414 ±     702.559  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      3558.805 ±    1744.101    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.071 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.163 ±       0.105    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count                                     thrpt    5        23.000                counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time                                      thrpt    5        66.000                    ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter                                              thrpt    5   2370550.010 ±  107130.363   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                               thrpt    5       458.044 ±      20.620  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       304.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       457.739 ±     686.634  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       303.951 ±     457.712    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.025 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.017 ±       0.045    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count                                    thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time                                     thrpt    5        29.000                    ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay                                                  thrpt    5    248418.633 ±    5091.290   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                                   thrpt    5       961.204 ±      19.780  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                              thrpt    5      6088.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5       936.127 ±     582.526  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      5931.730 ±    3748.725    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.017 ±       0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.105 ±       0.660    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count                                        thrpt    5        14.000                counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time                                         thrpt    5        33.000                    ms
[info] JsonCodecMakerBenchmark.writeIterablesCirce                                                      thrpt    5    617483.717 ±   32761.454   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate                                       thrpt    5      1620.048 ±      85.854  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                                  thrpt    5      4128.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1623.039 ±     573.855  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      4136.749 ±    1504.202    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±       0.036  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.117 ±       0.091    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count                                            thrpt    5        24.000                counts
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time                                             thrpt    5        54.000                    ms
[info] JsonCodecMakerBenchmark.writeIterablesJackson                                                    thrpt    5   1230633.258 ±   40203.392   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate                                     thrpt    5       807.255 ±      25.920  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                                thrpt    5      1032.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       796.463 ±     693.935  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1019.705 ±     920.500    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.125 ±       0.810  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.159 ±       1.032    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count                                          thrpt    5        12.000                counts
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time                                           thrpt    5        23.000                    ms
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter                                                   thrpt    5   3863121.313 ± 1400590.070   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate                                    thrpt    5       687.499 ±     249.245  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                               thrpt    5       280.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       722.693 ±     566.910  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5       295.645 ±     227.178    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.017 ±       0.036  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.007 ±       0.015    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count                                         thrpt    5        11.000                counts
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time                                          thrpt    5        22.000                    ms
[info] JsonCodecMakerBenchmark.writeIterablesPlay                                                       thrpt    5    367494.776 ±    8118.105   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate                                        thrpt    5      1272.523 ±      28.108  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                                   thrpt    5      5448.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1279.021 ±     572.786  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5473.582 ±    2369.364    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.042 ±       0.098  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.178 ±       0.418    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count                                             thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time                                              thrpt    5        32.000                    ms
[info] JsonCodecMakerBenchmark.writeMapsCirce                                                           thrpt    5    375751.857 ±   13422.947   ops/s
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate                                            thrpt    5      1108.131 ±      39.598  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm                                       thrpt    5      4640.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                                   thrpt    5      1138.786 ±     698.588  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                              thrpt    5      4767.706 ±    2899.111    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                               thrpt    5         0.042 ±       0.160  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.174 ±       0.668    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.count                                                 thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.time                                                  thrpt    5        25.000                    ms
[info] JsonCodecMakerBenchmark.writeMapsJackson                                                         thrpt    5    765574.271 ±   30035.165   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate                                          thrpt    5      1202.824 ±      47.405  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm                                     thrpt    5      2472.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                                 thrpt    5      1205.232 ±     705.736  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2475.817 ±    1413.046    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                             thrpt    5         0.046 ±       0.183  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.094 ±       0.371    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.count                                               thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.time                                                thrpt    5        35.000                    ms
[info] JsonCodecMakerBenchmark.writeMapsJsoniter                                                        thrpt    5   2509036.879 ±   83895.124   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate                                         thrpt    5       523.060 ±      17.478  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                                    thrpt    5       328.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                                thrpt    5       522.959 ±     694.111  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                           thrpt    5       328.636 ±     443.675    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                            thrpt    5         0.021 ±       0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.013 ±       0.050    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count                                              thrpt    5         8.000                counts
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time                                               thrpt    5        14.000                    ms
[info] JsonCodecMakerBenchmark.writeMapsPlay                                                            thrpt    5    251301.165 ±    7822.825   ops/s
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate                                             thrpt    5       926.379 ±      28.811  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm                                        thrpt    5      5800.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                                    thrpt    5       935.023 ±     569.342  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5859.556 ±    3688.585    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                                thrpt    5         0.029 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.182 ±       0.271    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.count                                                  thrpt    5        14.000                counts
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.time                                                   thrpt    5        22.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce                                               thrpt    5    569180.197 ±   17931.098   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate                                thrpt    5      1444.096 ±      45.435  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm                           thrpt    5      3992.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space                       thrpt    5      1484.865 ±     719.231  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5      4106.010 ±    2035.695    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space                   thrpt    5         0.042 ±       0.150  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.116 ±       0.418    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count                                     thrpt    5        22.000                counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time                                      thrpt    5        46.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson                                             thrpt    5   1123186.113 ±   30903.899   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate                              thrpt    5       645.309 ±      17.643  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm                         thrpt    5       904.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space                     thrpt    5       660.986 ±      13.073  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5       925.988 ±      23.409    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space                 thrpt    5         0.129 ±       0.937  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.181 ±       1.319    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count                                   thrpt    5        10.000                counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time                                    thrpt    5        22.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter                                            thrpt    5   3323584.266 ±  111760.018   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate                             thrpt    5       456.263 ±      15.339  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm                        thrpt    5       216.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5       455.306 ±     683.329  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5       216.098 ±     331.123    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5         0.004 ±       0.036  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.002 ±       0.017    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count                                  thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time                                   thrpt    5        21.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay                                                thrpt    5    351106.912 ±    7711.441   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate                                 thrpt    5      1201.547 ±      26.878  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm                            thrpt    5      5384.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space                        thrpt    5      1210.188 ±     702.212  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5      5424.533 ±    3198.092    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space                    thrpt    5         0.050 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.224 ±       0.198    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count                                      thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time                                       thrpt    5        38.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce                                                    thrpt    5    350125.156 ±   25507.431   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate                                     thrpt    5      1023.647 ±      74.483  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                                thrpt    5      4600.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                            thrpt    5      1003.930 ±      23.241  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5      4512.543 ±     306.814    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space                        thrpt    5         0.033 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.148 ±       0.406    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count                                          thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time                                           thrpt    5        38.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson                                                  thrpt    5    675910.588 ±   19407.112   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate                                   thrpt    5      1006.980 ±      29.021  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                              thrpt    5      2344.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space                          thrpt    5       999.287 ±      21.890  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5      2326.120 ±      18.614    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space                      thrpt    5         0.125 ±       0.722  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.293 ±       1.700    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count                                        thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time                                         thrpt    5        33.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter                                                 thrpt    5   2081487.131 ±   40017.054   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                                  thrpt    5       508.206 ±       9.461  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                             thrpt    5       384.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5       524.282 ±     684.787  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5       396.081 ±     516.598    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5         0.004 ±       0.036  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.003 ±       0.027    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count                                       thrpt    5         8.000                counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time                                        thrpt    5        24.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay                                                     thrpt    5    260469.674 ±    7347.473   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate                                      thrpt    5       989.277 ±      27.859  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                                 thrpt    5      5976.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                             thrpt    5      1003.284 ±      23.036  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5      6060.749 ±     138.784    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space                         thrpt    5         0.042 ±       0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.252 ±       0.771    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count                                           thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time                                            thrpt    5        37.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesCirce                                                     thrpt    5    630624.014 ±   19005.639   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate                                      thrpt    5      1234.408 ±      37.094  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                                 thrpt    5      3080.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                             thrpt    5      1210.573 ±     703.375  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      3018.672 ±    1695.342    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.058 ±       0.119  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.145 ±       0.296    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count                                           thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time                                            thrpt    5        35.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesJackson                                                   thrpt    5   1624748.938 ±  215629.359   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate                                    thrpt    5       718.720 ±      95.355  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                               thrpt    5       696.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                           thrpt    5       729.652 ±     573.307  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5       706.177 ±     529.661    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.042 ±       0.227  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.040 ±       0.216    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count                                         thrpt    5        11.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time                                          thrpt    5        31.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter                                                  thrpt    5   4442622.956 ±   29393.360   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                                   thrpt    5       361.415 ±       2.355  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                              thrpt    5       128.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       325.177 ±       6.879  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       115.166 ±       2.555    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.004 ±       0.036  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.001 ±       0.013    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count                                        thrpt    5         5.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time                                         thrpt    5        12.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc                                          thrpt    5   4587497.163 ±   47644.946   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate                           thrpt    5       139.949 ±       1.458  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5        48.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space                  thrpt    5       153.520 ±     539.645  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm             thrpt    5        52.708 ±     185.278    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count                                thrpt    5         3.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time                                 thrpt    5         5.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesPlay                                                      thrpt    5    215184.213 ±    6844.997   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate                                       thrpt    5      1102.877 ±      35.087  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                                  thrpt    5      8064.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1073.663 ±     569.374  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      7850.615 ±    4162.150    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.033 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.243 ±       0.318    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count                                            thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time                                             thrpt    5        39.000                    ms
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce                                                     thrpt    5      7513.615 ±     215.381   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate                                      thrpt    5       956.503 ±      27.534  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm                                 thrpt    5    200299.010 ±      80.539    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space                             thrpt    5       999.216 ±      26.473  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5    209250.841 ±    7126.954    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.079 ±       0.243  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5        16.616 ±      51.298    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count                                           thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time                                            thrpt    5        34.000                    ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson                                                   thrpt    5     33929.499 ±   13577.786   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate                                    thrpt    5       433.476 ±     173.501  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm                               thrpt    5     20099.994 ±       0.429    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space                           thrpt    5       457.996 ±     689.190  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5     21159.101 ±   28946.964    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.017 ±       0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.734 ±       6.323    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count                                         thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time                                          thrpt    5        19.000                    ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter                                                  thrpt    5     42293.607 ±    1025.276   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate                                   thrpt    5       285.580 ±       6.970  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm                              thrpt    5     10624.011 ±       0.002    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       259.869 ±     559.401  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      9683.283 ±   20847.322    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.004 ±       0.036  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.156 ±       1.341    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count                                        thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time                                         thrpt    5         7.000                    ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc                                          thrpt    5     45521.806 ±     454.455   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate                           thrpt    5        16.666 ±       0.165  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5       576.009 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count                                thrpt    5           ≈ 0                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay                                                      thrpt    5      4301.768 ±     120.445   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate                                       thrpt    5       941.978 ±      26.422  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm                                  thrpt    5    344493.791 ±       3.003    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space                              thrpt    5       934.655 ±     587.774  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5    341797.855 ±  214532.832    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.058 ±       0.200  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5        21.307 ±      73.079    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count                                            thrpt    5        14.000                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time                                             thrpt    5        31.000                    ms
[success] Total time: 1725 s, completed Nov 30, 2017 9:11:07 AM
