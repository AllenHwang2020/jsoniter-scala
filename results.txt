[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Oct 26, 2017 9:33:01 AM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 4 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:49:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 8782703599529504340L => {
[info]                     req0.&=(-2L);
[info]                     _s = readString(in, _s)
[info]                   }
[info]                   case -3621593128239734518L => {
[info]                     req0.&=(-3L);
[info]                     _bd = d0(in, _bd)
[info]                   }
[info]                   case 3145557872620432656L => _os = Option(readString(in, null))
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bd");
[info]             e0(out, x.bd)
[info]           };
[info]           if (x.os.ne(null).&&(x.os.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("os");
[info]               out.writeVal(x.os.get)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.math.BigDecimal): scala.math.BigDecimal = {
[info]         val x = in.readBigDecimal();
[info]         if (x.ne(null))
[info]           BigDecimal(x)
[info]         else
[info]           default
[info]       };
[info]       private def e0(out: JsonStream, x: scala.math.BigDecimal): Unit = if (x.ne(null))
[info]         out.writeRaw(x.toString)
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: Codec[AnyRefs] = materialize[AnyRefs]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:51:47: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       private val reqFields: Array[String] = Array("aa", "a");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _aa: Array[Array[Int]] = new Array[Array[Int]](0);
[info]           var _a: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 5298137317268724415L => {
[info]                     req0.&=(-2L);
[info]                     _aa = d1(in, _aa)
[info]                   }
[info]                   case 4695216661739385763L => {
[info]                     req0.&=(-3L);
[info]                     _a = d3(in, _a)
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Arrays];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("aa");
[info]             e1(out, x.aa)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("a");
[info]             e3(out, x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: Array[Int]): Array[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               buf.+=(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: Array[Array[Int]]): Array[Array[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               buf.+=(d0(in, new Array[Int](0)))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.math.BigInt): scala.math.BigInt = {
[info]         val x = in.readBigInteger();
[info]         if (x.ne(null))
[info]           BigInt(x)
[info]         else
[info]           default
[info]       };
[info]       private def d3(in: JsonIterator, default: Array[BigInt]): Array[BigInt] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               buf.+=(d2(in, null))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: Array[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: Array[Array[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             e0(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.math.BigInt): Unit = if (x.ne(null))
[info]         out.writeRaw(x.toString)
[info]       else
[info]         out.writeNull();
[info]       private def e3(out: JsonStream, x: Array[BigInt]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             e2(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: Codec[Arrays] = materialize[Arrays]
[info]                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:53:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -2880316277851419472L => _bs = d0(in, _bs)
[info]                   case 6036675737602992569L => _mbs = d1(in, _mbs)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.BitSets];
[info]           var first = true;
[info]           if (x.bs.ne(null).&&(x.bs.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("bs");
[info]               e0(out, x.bs)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mbs.ne(null).&&(x.mbs.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mbs");
[info]               e1(out, x.mbs)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.newBuilder;
[info]             do 
[info]               buf.+=(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.empty;
[info]             do 
[info]               buf.add(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: Codec[BitSets] = materialize[BitSets]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:55:53: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 7173115670136726671L => _l = d0(in, _l)
[info]                   case 8782703599529504340L => _s = d1(in, _s)
[info]                   case -8160163252060190562L => _ls = d2(in, _ls)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Iterables];
[info]           var first = true;
[info]           if (x.l.ne(null).&&(x.l.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("l");
[info]               e0(out, x.l)
[info]             }
[info]           else
[info]             ();
[info]           if (x.s.ne(null).&&(x.s.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("s");
[info]               e1(out, x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.ls.ne(null).&&(x.ls.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("ls");
[info]               e2(out, x.ls)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: List[String]): List[String] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[String];
[info]             do 
[info]               buf.+=(readString(in, null))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Set.newBuilder[Int];
[info]             do 
[info]               buf.+=(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: List[Set[Int]]): List[Set[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               buf.+=(d1(in, Set.empty[Int]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: Codec[Iterables] = materialize[Iterables]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:57:43: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in, _m)
[info]                   case -1832287182589162500L => _mm = d2(in, _mm)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Maps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf = buf.updated(this.readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[Long, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), d1(in, HashMap.empty[Long, Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: Codec[Maps] = materialize[Maps]
[info]                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:59:57: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in, _m)
[info]                   case -1832287182589162500L => _mm = d2(in, _mm)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf.update(this.readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsInt(in), d1(in, OpenHashMap.empty[Long, Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: Codec[MutableMaps] = materialize[MutableMaps]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:61:63: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in, _m)
[info]                   case -1832287182589162500L => _mm = d2(in, _mm)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = IntMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = LongMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), d1(in, LongMap.empty[Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: Codec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:63:55: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 255L;
[info]           var _b: Byte = 0;
[info]           var _s: Short = 0;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0;
[info]           var _dbl: Double = 0;
[info]           var _f: Float = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 3085628732346524253L => {
[info]                     req0.&=(-2L);
[info]                     _b = toByte(in, readInt(in))
[info]                   }
[info]                   case 8782703599529504340L => {
[info]                     req0.&=(-3L);
[info]                     _s = toShort(in, readInt(in))
[info]                   }
[info]                   case -874823976827361790L => {
[info]                     req0.&=(-5L);
[info]                     _i = readInt(in)
[info]                   }
[info]                   case 7173115670136726671L => {
[info]                     req0.&=(-9L);
[info]                     _l = readLong(in)
[info]                   }
[info]                   case 1948447510327205053L => {
[info]                     req0.&=(-17L);
[info]                     _bl = in.readBoolean()
[info]                   }
[info]                   case -2547476555686174996L => {
[info]                     req0.&=(-33L);
[info]                     _ch = toChar(in, readInt(in))
[info]                   }
[info]                   case 4052889318286228612L => {
[info]                     req0.&=(-65L);
[info]                     _dbl = in.readDouble()
[info]                   }
[info]                   case -8922763623791618166L => {
[info]                     req0.&=(-129L);
[info]                     _f = in.readFloat()
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Primitives];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: Codec[Primitives] = materialize[Primitives]
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:65:61: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       private val reqFields: Array[String] = Array("s", "l");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _s: String = null;
[info]           var _l: Long = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 8782703599529504340L => {
[info]                     req0.&=(-2L);
[info]                     _s = readString(in, _s)
[info]                   }
[info]                   case 7173115670136726671L => {
[info]                     req0.&=(-3L);
[info]                     _l = readLong(in)
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.ExtractFields];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: Codec[ExtractFields] = materialize[ExtractFields]
[info]                                                             ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 82 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 65 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*CodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce
[info] # Run progress: 0.00% complete, ETA 00:10:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 355042.277 ops/s
[info] # Warmup Iteration   2: 1145959.659 ops/s
[info] # Warmup Iteration   3: 1174440.283 ops/s
[info] # Warmup Iteration   4: 1175743.663 ops/s
[info] # Warmup Iteration   5: 1157623.102 ops/s
[info] Iteration   1: 1173079.990 ops/s
[info]                  ·gc.alloc.rate:                   1837.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2258.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.112 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1156689.111 ops/s
[info]                  ·gc.alloc.rate:               1811.615 MB/sec
[info]                  ·gc.alloc.rate.norm:          2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1690.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2299.081 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 1179592.493 ops/s
[info]                  ·gc.alloc.rate:                   1847.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2712.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 1191207.893 ops/s
[info]                  ·gc.alloc.rate:                   1865.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2242.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1191457.275 ops/s
[info]                  ·gc.alloc.rate:                   1866.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2692.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce":
[info]   1178405.353 ±(99.9%) 55655.515 ops/s [Average]
[info]   (min, avg, max) = (1156689.111, 1178405.353, 1191457.275), stdev = 14453.561
[info]   CI (99.9%): [1122749.837, 1234060.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1845.603 ±(99.9%) 87.147 MB/sec [Average]
[info]   (min, avg, max) = (1811.615, 1845.603, 1866.092), stdev = 22.632
[info]   CI (99.9%): [1758.456, 1932.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2464.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2464.000, 2464.000, 2464.000), stdev = 0.001
[info]   CI (99.9%): [2464.000, 2464.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1829.029 ±(99.9%) 729.793 MB/sec [Average]
[info]   (min, avg, max) = (1683.663, 1829.029, 2039.277), stdev = 189.525
[info]   CI (99.9%): [1099.236, 2558.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2441.003 ±(99.9%) 923.578 B/op [Average]
[info]   (min, avg, max) = (2242.616, 2441.003, 2712.638), stdev = 239.850
[info]   CI (99.9%): [1517.425, 3364.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.072 ±(99.9%) 0.178 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.072, 0.112), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 10.400, 19.000), stdev = 5.413
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson
[info] # Run progress: 1.64% complete, ETA 00:16:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1202316.769 ops/s
[info] # Warmup Iteration   2: 1804271.989 ops/s
[info] # Warmup Iteration   3: 1793813.408 ops/s
[info] # Warmup Iteration   4: 1812511.848 ops/s
[info] # Warmup Iteration   5: 1806045.569 ops/s
[info] Iteration   1: 1803009.787 ops/s
[info]                  ·gc.alloc.rate:                   1283.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1167.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1762868.195 ops/s
[info]                  ·gc.alloc.rate:                   1254.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1200.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1800346.586 ops/s
[info]                  ·gc.alloc.rate:                   1281.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     884.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1776247.648 ops/s
[info]                  ·gc.alloc.rate:                   1264.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1197.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1770247.828 ops/s
[info]                  ·gc.alloc.rate:                   1260.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1204.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson":
[info]   1782544.009 ±(99.9%) 69784.826 ops/s [Average]
[info]   (min, avg, max) = (1762868.195, 1782544.009, 1803009.787), stdev = 18122.898
[info]   CI (99.9%): [1712759.182, 1852328.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1268.986 ±(99.9%) 49.810 MB/sec [Average]
[info]   (min, avg, max) = (1254.987, 1268.986, 1283.577), stdev = 12.936
[info]   CI (99.9%): [1219.176, 1318.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1280.298 ±(99.9%) 578.104 MB/sec [Average]
[info]   (min, avg, max) = (1011.980, 1280.298, 1354.729), stdev = 150.132
[info]   CI (99.9%): [702.194, 1858.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1130.696 ±(99.9%) 533.314 B/op [Average]
[info]   (min, avg, max) = (884.290, 1130.696, 1204.042), stdev = 138.500
[info]   CI (99.9%): [597.383, 1664.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.046, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.010, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.032 B/op [Average]
[info]   (min, avg, max) = (0.036, 0.040, 0.056), stdev = 0.008
[info]   CI (99.9%): [0.008, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 12.000), stdev = 3.834
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 3.28% complete, ETA 00:16:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6351536.642 ops/s
[info] # Warmup Iteration   2: 6498206.736 ops/s
[info] # Warmup Iteration   3: 6668355.833 ops/s
[info] # Warmup Iteration   4: 6616541.054 ops/s
[info] # Warmup Iteration   5: 6615732.043 ops/s
[info] Iteration   1: 6625109.350 ops/s
[info]                  ·gc.alloc.rate:                   1145.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     314.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 6602032.227 ops/s
[info]                  ·gc.alloc.rate:                   1141.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     237.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 6573322.728 ops/s
[info]                  ·gc.alloc.rate:                   1136.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     320.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 6640721.983 ops/s
[info]                  ·gc.alloc.rate:                   1148.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     238.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 6564265.713 ops/s
[info]                  ·gc.alloc.rate:                   1134.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     242.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter":
[info]   6601090.400 ±(99.9%) 125892.511 ops/s [Average]
[info]   (min, avg, max) = (6564265.713, 6601090.400, 6640721.983), stdev = 32693.885
[info]   CI (99.9%): [6475197.889, 6726982.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   1141.284 ±(99.9%) 21.744 MB/sec [Average]
[info]   (min, avg, max) = (1134.911, 1141.284, 1148.124), stdev = 5.647
[info]   CI (99.9%): [1119.539, 1163.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   272.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (272.000, 272.000, 272.000), stdev = 0.001
[info]   CI (99.9%): [272.000, 272.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1135.054 ±(99.9%) 685.857 MB/sec [Average]
[info]   (min, avg, max) = (998.010, 1135.054, 1337.198), stdev = 178.115
[info]   CI (99.9%): [449.197, 1820.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   270.533 ±(99.9%) 163.956 B/op [Average]
[info]   (min, avg, max) = (237.815, 270.533, 320.036), stdev = 42.579
[info]   CI (99.9%): [106.577, 434.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.012, 0.020), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 11.000), stdev = 2.449
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay
[info] # Run progress: 4.92% complete, ETA 00:15:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 253101.157 ops/s
[info] # Warmup Iteration   2: 398576.634 ops/s
[info] # Warmup Iteration   3: 411965.573 ops/s
[info] # Warmup Iteration   4: 405648.644 ops/s
[info] # Warmup Iteration   5: 408795.591 ops/s
[info] Iteration   1: 412464.762 ops/s
[info]                  ·gc.alloc.rate:                   1090.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5017.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.238 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 409133.499 ops/s
[info]                  ·gc.alloc.rate:                   1081.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3822.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.240 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 407494.891 ops/s
[info]                  ·gc.alloc.rate:                   1077.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3852.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.241 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 407870.542 ops/s
[info]                  ·gc.alloc.rate:                   1078.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3869.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.241 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 410505.083 ops/s
[info]                  ·gc.alloc.rate:                   1085.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5145.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.319 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay":
[info]   409493.755 ±(99.9%) 7846.657 ops/s [Average]
[info]   (min, avg, max) = (407494.891, 409493.755, 412464.762), stdev = 2037.752
[info]   CI (99.9%): [401647.098, 417340.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1082.785 ±(99.9%) 20.737 MB/sec [Average]
[info]   (min, avg, max) = (1077.493, 1082.785, 1090.632), stdev = 5.385
[info]   CI (99.9%): [1062.048, 1103.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1130.632 ±(99.9%) 698.411 MB/sec [Average]
[info]   (min, avg, max) = (993.951, 1130.632, 1342.516), stdev = 181.375
[info]   CI (99.9%): [432.221, 1829.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4341.505 ±(99.9%) 2607.565 B/op [Average]
[info]   (min, avg, max) = (3822.056, 4341.505, 5145.136), stdev = 677.176
[info]   CI (99.9%): [1733.939, 6949.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.067, 0.083), stdev = 0.009
[info]   CI (99.9%): [0.031, 0.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.256 ±(99.9%) 0.136 B/op [Average]
[info]   (min, avg, max) = (0.238, 0.256, 0.319), stdev = 0.035
[info]   CI (99.9%): [0.120, 0.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 15.000), stdev = 4.382
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce
[info] # Run progress: 6.56% complete, ETA 00:15:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 302454.382 ops/s
[info] # Warmup Iteration   2: 520817.705 ops/s
[info] # Warmup Iteration   3: 541597.981 ops/s
[info] # Warmup Iteration   4: 542591.252 ops/s
[info] # Warmup Iteration   5: 540650.257 ops/s
[info] Iteration   1: 536148.278 ops/s
[info]                  ·gc.alloc.rate:                   1752.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4940.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 543856.115 ops/s
[info]                  ·gc.alloc.rate:                   1778.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4889.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 542001.997 ops/s
[info]                  ·gc.alloc.rate:                   1772.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5903.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 539285.852 ops/s
[info]                  ·gc.alloc.rate:                   1763.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4953.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 537234.758 ops/s
[info]                  ·gc.alloc.rate:                   1756.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.379 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4976.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce":
[info]   539705.400 ±(99.9%) 12393.451 ops/s [Average]
[info]   (min, avg, max) = (536148.278, 539705.400, 543856.115), stdev = 3218.540
[info]   CI (99.9%): [527311.949, 552098.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   1764.645 ±(99.9%) 40.546 MB/sec [Average]
[info]   (min, avg, max) = (1752.990, 1764.645, 1778.210), stdev = 10.530
[info]   CI (99.9%): [1724.099, 1805.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5144.001, 5144.001, 5144.001), stdev = 0.001
[info]   CI (99.9%): [5144.001, 5144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1761.078 ±(99.9%) 587.793 MB/sec [Average]
[info]   (min, avg, max) = (1683.682, 1761.078, 2033.909), stdev = 152.648
[info]   CI (99.9%): [1173.285, 2348.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5132.894 ±(99.9%) 1663.755 B/op [Average]
[info]   (min, avg, max) = (4889.942, 5132.894, 5903.722), stdev = 432.072
[info]   CI (99.9%): [3469.139, 6796.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.097 ±(99.9%) 0.129 B/op [Average]
[info]   (min, avg, max) = (0.060, 0.097, 0.122), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.200, 14.000), stdev = 3.033
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson
[info] # Run progress: 8.20% complete, ETA 00:15:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 776346.723 ops/s
[info] # Warmup Iteration   2: 1218557.202 ops/s
[info] # Warmup Iteration   3: 1241626.206 ops/s
[info] # Warmup Iteration   4: 1232011.883 ops/s
[info] # Warmup Iteration   5: 1227805.249 ops/s
[info] Iteration   1: 1222973.584 ops/s
[info]                  ·gc.alloc.rate:                   1150.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1694.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1236479.412 ops/s
[info]                  ·gc.alloc.rate:                   1162.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1267.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1217740.535 ops/s
[info]                  ·gc.alloc.rate:                   1145.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1724.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1204994.707 ops/s
[info]                  ·gc.alloc.rate:                   1133.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1313.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1241577.830 ops/s
[info]                  ·gc.alloc.rate:                   1167.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1705.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson":
[info]   1224753.214 ±(99.9%) 56570.231 ops/s [Average]
[info]   (min, avg, max) = (1204994.707, 1224753.214, 1241577.830), stdev = 14691.109
[info]   CI (99.9%): [1168182.983, 1281323.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1151.957 ±(99.9%) 52.508 MB/sec [Average]
[info]   (min, avg, max) = (1133.567, 1151.957, 1167.987), stdev = 13.636
[info]   CI (99.9%): [1099.450, 1204.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1199.783 ±(99.9%) 701.696 MB/sec [Average]
[info]   (min, avg, max) = (995.131, 1199.783, 1346.160), stdev = 182.228
[info]   CI (99.9%): [498.087, 1901.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1540.991 ±(99.9%) 884.439 B/op [Average]
[info]   (min, avg, max) = (1267.238, 1540.991, 1724.562), stdev = 229.686
[info]   CI (99.9%): [656.552, 2425.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.042), stdev = 0.009
[info]   CI (99.9%): [0.002, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.048 ±(99.9%) 0.046 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.048, 0.054), stdev = 0.012
[info]   CI (99.9%): [0.002, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.400, 11.000), stdev = 2.074
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter
[info] # Run progress: 9.84% complete, ETA 00:14:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2010285.737 ops/s
[info] # Warmup Iteration   2: 2364395.670 ops/s
[info] # Warmup Iteration   3: 2375458.210 ops/s
[info] # Warmup Iteration   4: 2368737.624 ops/s
[info] # Warmup Iteration   5: 2382183.850 ops/s
[info] Iteration   1: 2358582.943 ops/s
[info]                  ·gc.alloc.rate:                   1187.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     662.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 2386752.765 ops/s
[info]                  ·gc.alloc.rate:                   1201.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     877.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2375305.647 ops/s
[info]                  ·gc.alloc.rate:                   1195.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     664.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2378236.667 ops/s
[info]                  ·gc.alloc.rate:                   1197.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     888.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2391021.217 ops/s
[info]                  ·gc.alloc.rate:               1203.614 MB/sec
[info]                  ·gc.alloc.rate.norm:          792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 887.519 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter":
[info]   2377979.848 ±(99.9%) 48344.317 ops/s [Average]
[info]   (min, avg, max) = (2358582.943, 2377979.848, 2391021.217), stdev = 12554.866
[info]   CI (99.9%): [2329635.531, 2426324.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1197.079 ±(99.9%) 24.310 MB/sec [Average]
[info]   (min, avg, max) = (1187.333, 1197.079, 1203.614), stdev = 6.313
[info]   CI (99.9%): [1172.769, 1221.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   792.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (792.000, 792.000, 792.000), stdev = 0.001
[info]   CI (99.9%): [792.000, 792.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1204.117 ±(99.9%) 723.530 MB/sec [Average]
[info]   (min, avg, max) = (993.282, 1204.117, 1348.775), stdev = 187.899
[info]   CI (99.9%): [480.587, 1927.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   796.247 ±(99.9%) 466.388 B/op [Average]
[info]   (min, avg, max) = (662.560, 796.247, 888.753), stdev = 121.120
[info]   CI (99.9%): [329.858, 1262.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.102 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.069), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 9.000), stdev = 2.608
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay
[info] # Run progress: 11.48% complete, ETA 00:14:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 116159.399 ops/s
[info] # Warmup Iteration   2: 215438.172 ops/s
[info] # Warmup Iteration   3: 222212.670 ops/s
[info] # Warmup Iteration   4: 221735.345 ops/s
[info] # Warmup Iteration   5: 222226.387 ops/s
[info] Iteration   1: 222206.560 ops/s
[info]                  ·gc.alloc.rate:                   1316.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9370.711 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 221647.132 ops/s
[info]                  ·gc.alloc.rate:                   1313.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9455.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.591 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 222862.402 ops/s
[info]                  ·gc.alloc.rate:                   1320.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9455.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.441 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 221477.243 ops/s
[info]                  ·gc.alloc.rate:                   1312.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9552.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.296 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 219959.134 ops/s
[info]                  ·gc.alloc.rate:                   1303.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9654.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.298 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay":
[info]   221630.494 ±(99.9%) 4159.166 ops/s [Average]
[info]   (min, avg, max) = (219959.134, 221630.494, 222862.402), stdev = 1080.122
[info]   CI (99.9%): [217471.328, 225789.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1312.984 ±(99.9%) 24.623 MB/sec [Average]
[info]   (min, avg, max) = (1303.086, 1312.984, 1320.269), stdev = 6.395
[info]   CI (99.9%): [1288.361, 1337.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9320.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9320.002, 9320.002, 9320.002), stdev = 0.001
[info]   CI (99.9%): [9320.002, 9320.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1338.005 ±(99.9%) 40.000 MB/sec [Average]
[info]   (min, avg, max) = (1323.566, 1338.005, 1349.853), stdev = 10.388
[info]   CI (99.9%): [1298.005, 1378.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9497.962 ±(99.9%) 418.509 B/op [Average]
[info]   (min, avg, max) = (9370.711, 9497.962, 9654.487), stdev = 108.685
[info]   CI (99.9%): [9079.453, 9916.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.355 ±(99.9%) 0.647 B/op [Average]
[info]   (min, avg, max) = (0.147, 0.355, 0.591), stdev = 0.168
[info]   CI (99.9%): [≈ 0, 1.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson
[info] # Run progress: 13.11% complete, ETA 00:14:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 970817.719 ops/s
[info] # Warmup Iteration   2: 1580103.221 ops/s
[info] # Warmup Iteration   3: 1570688.009 ops/s
[info] # Warmup Iteration   4: 1558429.588 ops/s
[info] # Warmup Iteration   5: 1532715.833 ops/s
[info] Iteration   1: 1540866.183 ops/s
[info]                  ·gc.alloc.rate:                   948.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1016.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1545482.470 ops/s
[info]                  ·gc.alloc.rate:                   950.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1017.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1545439.602 ops/s
[info]                  ·gc.alloc.rate:                   950.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1022.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1543563.624 ops/s
[info]                  ·gc.alloc.rate:                   949.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1026.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1546604.782 ops/s
[info]                  ·gc.alloc.rate:                   951.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     685.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson":
[info]   1544391.332 ±(99.9%) 8674.765 ops/s [Average]
[info]   (min, avg, max) = (1540866.183, 1544391.332, 1546604.782), stdev = 2252.809
[info]   CI (99.9%): [1535716.568, 1553066.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   950.253 ±(99.9%) 5.354 MB/sec [Average]
[info]   (min, avg, max) = (948.074, 950.253, 951.628), stdev = 1.391
[info]   CI (99.9%): [944.898, 955.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   968.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (968.000, 968.000, 968.000), stdev = 0.001
[info]   CI (99.9%): [968.000, 968.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   936.040 ±(99.9%) 565.587 MB/sec [Average]
[info]   (min, avg, max) = (673.420, 936.040, 1007.619), stdev = 146.881
[info]   CI (99.9%): [370.453, 1501.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   953.618 ±(99.9%) 578.430 B/op [Average]
[info]   (min, avg, max) = (685.006, 953.618, 1026.976), stdev = 150.216
[info]   CI (99.9%): [375.189, 1532.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.107 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.038, 0.085), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 8.000), stdev = 2.345
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 14.75% complete, ETA 00:14:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7830993.931 ops/s
[info] # Warmup Iteration   2: 8694565.158 ops/s
[info] # Warmup Iteration   3: 8828400.543 ops/s
[info] # Warmup Iteration   4: 8887331.985 ops/s
[info] # Warmup Iteration   5: 8795893.021 ops/s
[info] Iteration   1: 8870459.261 ops/s
[info]                  ·gc.alloc.rate:                   947.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174.748 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 8871279.387 ops/s
[info]                  ·gc.alloc.rate:                   947.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     175.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 8809096.423 ops/s
[info]                  ·gc.alloc.rate:                   940.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     177.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 8819851.083 ops/s
[info]                  ·gc.alloc.rate:                   941.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     178.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 8886959.791 ops/s
[info]                  ·gc.alloc.rate:                   948.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter":
[info]   8851529.189 ±(99.9%) 133498.382 ops/s [Average]
[info]   (min, avg, max) = (8809096.423, 8851529.189, 8886959.791), stdev = 34669.106
[info]   CI (99.9%): [8718030.807, 8985027.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   945.203 ±(99.9%) 14.308 MB/sec [Average]
[info]   (min, avg, max) = (940.665, 945.203, 948.988), stdev = 3.716
[info]   CI (99.9%): [930.895, 959.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   928.639 ±(99.9%) 558.481 MB/sec [Average]
[info]   (min, avg, max) = (669.400, 928.639, 1001.271), stdev = 145.036
[info]   CI (99.9%): [370.158, 1487.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   165.106 ±(99.9%) 100.487 B/op [Average]
[info]   (min, avg, max) = (118.504, 165.106, 178.610), stdev = 26.096
[info]   CI (99.9%): [64.619, 265.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.016 B/op [Average]
[info]   (min, avg, max) = (0.004, 0.010, 0.015), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.600, 6.000), stdev = 1.949
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay
[info] # Run progress: 16.39% complete, ETA 00:13:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 125231.872 ops/s
[info] # Warmup Iteration   2: 247858.185 ops/s
[info] # Warmup Iteration   3: 249569.400 ops/s
[info] # Warmup Iteration   4: 251210.636 ops/s
[info] # Warmup Iteration   5: 252405.511 ops/s
[info] Iteration   1: 253928.683 ops/s
[info]                  ·gc.alloc.rate:                   1153.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6117.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 250800.806 ops/s
[info]                  ·gc.alloc.rate:                   1138.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8319.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.392 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 252989.037 ops/s
[info]                  ·gc.alloc.rate:                   1148.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6218.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 254510.658 ops/s
[info]                  ·gc.alloc.rate:                   1155.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8279.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.515 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 252700.698 ops/s
[info]                  ·gc.alloc.rate:                   1147.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6275.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay":
[info]   252985.976 ±(99.9%) 5469.307 ops/s [Average]
[info]   (min, avg, max) = (250800.806, 252985.976, 254510.658), stdev = 1420.362
[info]   CI (99.9%): [247516.669, 258455.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1148.797 ±(99.9%) 24.833 MB/sec [Average]
[info]   (min, avg, max) = (1138.881, 1148.797, 1155.708), stdev = 6.449
[info]   CI (99.9%): [1123.963, 1173.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7144.002, 7144.002, 7144.002), stdev = 0.001
[info]   CI (99.9%): [7144.002, 7144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.176 ±(99.9%) 706.138 MB/sec [Average]
[info]   (min, avg, max) = (987.344, 1132.176, 1339.459), stdev = 183.382
[info]   CI (99.9%): [426.038, 1838.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7041.880 ±(99.9%) 4426.300 B/op [Average]
[info]   (min, avg, max) = (6117.017, 7041.880, 8319.079), stdev = 1149.496
[info]   CI (99.9%): [2615.580, 11468.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.337 ±(99.9%) 0.443 B/op [Average]
[info]   (min, avg, max) = (0.258, 0.337, 0.515), stdev = 0.115
[info]   CI (99.9%): [≈ 0, 0.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 10.000), stdev = 3.564
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce
[info] # Run progress: 18.03% complete, ETA 00:13:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 342762.558 ops/s
[info] # Warmup Iteration   2: 511316.730 ops/s
[info] # Warmup Iteration   3: 537108.406 ops/s
[info] # Warmup Iteration   4: 542872.969 ops/s
[info] # Warmup Iteration   5: 545884.278 ops/s
[info] Iteration   1: 539897.768 ops/s
[info]                  ·gc.alloc.rate:                   1803.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              5256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4910.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 537933.499 ops/s
[info]                  ·gc.alloc.rate:                   1797.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              5256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4946.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 541936.209 ops/s
[info]                  ·gc.alloc.rate:                   1810.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              5256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2034.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5906.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.181 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 545261.589 ops/s
[info]                  ·gc.alloc.rate:                   1821.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              5256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4901.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.240 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 542284.407 ops/s
[info]                  ·gc.alloc.rate:                   1811.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              5256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5914.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.181 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce":
[info]   541462.695 ±(99.9%) 10586.687 ops/s [Average]
[info]   (min, avg, max) = (537933.499, 541462.695, 545261.589), stdev = 2749.329
[info]   CI (99.9%): [530876.008, 552049.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1808.926 ±(99.9%) 35.373 MB/sec [Average]
[info]   (min, avg, max) = (1797.144, 1808.926, 1821.598), stdev = 9.186
[info]   CI (99.9%): [1773.553, 1844.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5256.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5256.001, 5256.001, 5256.001), stdev = 0.001
[info]   CI (99.9%): [5256.001, 5256.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1829.669 ±(99.9%) 728.017 MB/sec [Average]
[info]   (min, avg, max) = (1685.004, 1829.669, 2038.933), stdev = 189.064
[info]   CI (99.9%): [1101.652, 2557.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5315.847 ±(99.9%) 2092.016 B/op [Average]
[info]   (min, avg, max) = (4901.119, 5315.847, 5914.908), stdev = 543.290
[info]   CI (99.9%): [3223.831, 7407.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.169 ±(99.9%) 0.191 B/op [Average]
[info]   (min, avg, max) = (0.121, 0.169, 0.240), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.400, 12.000), stdev = 1.673
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson
[info] # Run progress: 19.67% complete, ETA 00:13:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 389371.601 ops/s
[info] # Warmup Iteration   2: 683742.139 ops/s
[info] # Warmup Iteration   3: 701411.256 ops/s
[info] # Warmup Iteration   4: 696071.541 ops/s
[info] # Warmup Iteration   5: 696201.534 ops/s
[info] Iteration   1: 699821.817 ops/s
[info]                  ·gc.alloc.rate:                   875.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1487.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 699567.916 ops/s
[info]                  ·gc.alloc.rate:                   875.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2243.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 698689.269 ops/s
[info]                  ·gc.alloc.rate:                   873.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2255.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 692812.171 ops/s
[info]                  ·gc.alloc.rate:                   866.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1520.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 691712.483 ops/s
[info]                  ·gc.alloc.rate:                   865.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2293.323 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson":
[info]   696520.731 ±(99.9%) 15130.353 ops/s [Average]
[info]   (min, avg, max) = (691712.483, 696520.731, 699821.817), stdev = 3929.305
[info]   CI (99.9%): [681390.379, 711651.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   871.276 ±(99.9%) 18.888 MB/sec [Average]
[info]   (min, avg, max) = (865.279, 871.276, 875.409), stdev = 4.905
[info]   CI (99.9%): [852.388, 890.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1968.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1968.001, 1968.001, 1968.001), stdev = 0.001
[info]   CI (99.9%): [1968.001, 1968.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   867.796 ±(99.9%) 710.503 MB/sec [Average]
[info]   (min, avg, max) = (661.742, 867.796, 1008.315), stdev = 184.515
[info]   CI (99.9%): [157.293, 1578.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1960.148 ±(99.9%) 1604.746 B/op [Average]
[info]   (min, avg, max) = (1487.656, 1960.148, 2293.323), stdev = 416.747
[info]   CI (99.9%): [355.402, 3564.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.056 ±(99.9%) 0.080 B/op [Average]
[info]   (min, avg, max) = (0.047, 0.056, 0.094), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.581
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 21.31% complete, ETA 00:12:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4759925.116 ops/s
[info] # Warmup Iteration   2: 5297583.159 ops/s
[info] # Warmup Iteration   3: 5282834.270 ops/s
[info] # Warmup Iteration   4: 5128587.550 ops/s
[info] # Warmup Iteration   5: 5244354.221 ops/s
[info] Iteration   1: 5320000.846 ops/s
[info]                  ·gc.alloc.rate:               243.470 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75.677 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 5304354.275 ops/s
[info]                  ·gc.alloc.rate:                   242.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 5264477.189 ops/s
[info]                  ·gc.alloc.rate:                   240.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.197 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.657 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5219532.857 ops/s
[info]                  ·gc.alloc.rate:                   238.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 5099709.566 ops/s
[info]                  ·gc.alloc.rate:      233.385 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter":
[info]   5241614.947 ±(99.9%) 340232.286 ops/s [Average]
[info]   (min, avg, max) = (5099709.566, 5241614.947, 5320000.846), stdev = 88357.244
[info]   CI (99.9%): [4901382.661, 5581847.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   239.881 ±(99.9%) 15.572 MB/sec [Average]
[info]   (min, avg, max) = (233.385, 239.881, 243.470), stdev = 4.044
[info]   CI (99.9%): [224.310, 255.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   232.446 ±(99.9%) 517.844 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 232.446, 325.216), stdev = 134.483
[info]   CI (99.9%): [≈ 0, 750.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   69.358 ±(99.9%) 155.098 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 69.358, 98.024), stdev = 40.279
[info]   CI (99.9%): [≈ 0, 224.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.448 ±(99.9%) 3.766 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.448, 2.197), stdev = 0.978
[info]   CI (99.9%): [≈ 0, 4.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.134 ±(99.9%) 1.125 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.134, 0.657), stdev = 0.292
[info]   CI (99.9%): [≈ 0, 1.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.400, 5.000), stdev = 1.949
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay
[info] # Run progress: 22.95% complete, ETA 00:12:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96807.515 ops/s
[info] # Warmup Iteration   2: 197782.054 ops/s
[info] # Warmup Iteration   3: 201328.329 ops/s
[info] # Warmup Iteration   4: 199400.247 ops/s
[info] # Warmup Iteration   5: 200607.099 ops/s
[info] Iteration   1: 200007.797 ops/s
[info]                  ·gc.alloc.rate:                   1110.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10353.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.655 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 199279.708 ops/s
[info]                  ·gc.alloc.rate:                   1106.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7846.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.493 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 200053.440 ops/s
[info]                  ·gc.alloc.rate:                   1110.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7848.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.328 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 200831.522 ops/s
[info]                  ·gc.alloc.rate:                   1115.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10482.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 200606.450 ops/s
[info]                  ·gc.alloc.rate:                   1113.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7907.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.490 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay":
[info]   200155.783 ±(99.9%) 2326.061 ops/s [Average]
[info]   (min, avg, max) = (199279.708, 200155.783, 200831.522), stdev = 604.071
[info]   CI (99.9%): [197829.723, 202481.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1111.417 ±(99.9%) 12.864 MB/sec [Average]
[info]   (min, avg, max) = (1106.575, 1111.417, 1115.171), stdev = 3.341
[info]   CI (99.9%): [1098.552, 1124.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8736.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8736.002, 8736.002, 8736.002), stdev = 0.001
[info]   CI (99.9%): [8736.002, 8736.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1130.902 ±(99.9%) 690.789 MB/sec [Average]
[info]   (min, avg, max) = (993.960, 1130.902, 1338.159), stdev = 179.396
[info]   CI (99.9%): [440.113, 1821.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8887.733 ±(99.9%) 5382.691 B/op [Average]
[info]   (min, avg, max) = (7846.945, 8887.733, 10482.836), stdev = 1397.868
[info]   CI (99.9%): [3505.042, 14270.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.426 ±(99.9%) 0.720 B/op [Average]
[info]   (min, avg, max) = (0.163, 0.426, 0.655), stdev = 0.187
[info]   CI (99.9%): [≈ 0, 1.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 9.000), stdev = 2.588
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 24.59% complete, ETA 00:12:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3427220.374 ops/s
[info] # Warmup Iteration   2: 3873695.888 ops/s
[info] # Warmup Iteration   3: 3971213.703 ops/s
[info] # Warmup Iteration   4: 3973306.116 ops/s
[info] # Warmup Iteration   5: 3963005.521 ops/s
[info] Iteration   1: 3947067.577 ops/s
[info]                  ·gc.alloc.rate:                   1866.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     669.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3976270.804 ops/s
[info]                  ·gc.alloc.rate:                   1880.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     801.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 3953787.186 ops/s
[info]                  ·gc.alloc.rate:                   1869.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     674.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3958698.742 ops/s
[info]                  ·gc.alloc.rate:                   1872.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     809.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3956865.395 ops/s
[info]                  ·gc.alloc.rate:                   1871.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     675.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter":
[info]   3958537.941 ±(99.9%) 41802.842 ops/s [Average]
[info]   (min, avg, max) = (3947067.577, 3958537.941, 3976270.804), stdev = 10856.065
[info]   CI (99.9%): [3916735.098, 4000340.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1872.014 ±(99.9%) 19.895 MB/sec [Average]
[info]   (min, avg, max) = (1866.588, 1872.014, 1880.461), stdev = 5.167
[info]   CI (99.9%): [1852.119, 1891.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1827.423 ±(99.9%) 719.398 MB/sec [Average]
[info]   (min, avg, max) = (1680.053, 1827.423, 2037.128), stdev = 186.825
[info]   CI (99.9%): [1108.025, 2546.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   726.159 ±(99.9%) 279.967 B/op [Average]
[info]   (min, avg, max) = (669.650, 726.159, 809.580), stdev = 72.706
[info]   CI (99.9%): [446.192, 1006.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.059 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.025, 0.041), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 11.000), stdev = 2.683
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 26.23% complete, ETA 00:12:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 134553.194 ops/s
[info] # Warmup Iteration   2: 236029.570 ops/s
[info] # Warmup Iteration   3: 249792.808 ops/s
[info] # Warmup Iteration   4: 248981.936 ops/s
[info] # Warmup Iteration   5: 250265.118 ops/s
[info] Iteration   1: 251890.480 ops/s
[info]                  ·gc.alloc.rate:               1339.746 MB/sec
[info]                  ·gc.alloc.rate.norm:          8368.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1323.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8266.402 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 251016.582 ops/s
[info]                  ·gc.alloc.rate:                   1335.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              8368.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8349.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.653 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 251005.878 ops/s
[info]                  ·gc.alloc.rate:                   1335.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              8368.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8397.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.392 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 251355.184 ops/s
[info]                  ·gc.alloc.rate:                   1336.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              8368.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8425.748 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.652 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 250586.902 ops/s
[info]                  ·gc.alloc.rate:                   1332.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              8368.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8476.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay":
[info]   251171.005 ±(99.9%) 1870.493 ops/s [Average]
[info]   (min, avg, max) = (250586.902, 251171.005, 251890.480), stdev = 485.761
[info]   CI (99.9%): [249300.512, 253041.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1335.961 ±(99.9%) 9.895 MB/sec [Average]
[info]   (min, avg, max) = (1332.863, 1335.961, 1339.746), stdev = 2.570
[info]   CI (99.9%): [1326.066, 1345.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8368.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8368.002, 8368.002, 8368.002), stdev = 0.001
[info]   CI (99.9%): [8368.002, 8368.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1338.375 ±(99.9%) 41.440 MB/sec [Average]
[info]   (min, avg, max) = (1323.480, 1338.375, 1350.177), stdev = 10.762
[info]   CI (99.9%): [1296.935, 1379.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8383.223 ±(99.9%) 307.702 B/op [Average]
[info]   (min, avg, max) = (8266.402, 8383.223, 8476.705), stdev = 79.909
[info]   CI (99.9%): [8075.521, 8690.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.365 ±(99.9%) 1.145 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.365, 0.653), stdev = 0.297
[info]   CI (99.9%): [≈ 0, 1.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 9.000), stdev = 2.168
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce
[info] # Run progress: 27.87% complete, ETA 00:11:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 338757.585 ops/s
[info] # Warmup Iteration   2: 544138.123 ops/s
[info] # Warmup Iteration   3: 556111.407 ops/s
[info] # Warmup Iteration   4: 560698.945 ops/s
[info] # Warmup Iteration   5: 556779.448 ops/s
[info] Iteration   1: 559271.365 ops/s
[info]                  ·gc.alloc.rate:                   1959.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5699.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 556286.836 ops/s
[info]                  ·gc.alloc.rate:                   1948.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4791.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 561299.030 ops/s
[info]                  ·gc.alloc.rate:                   1966.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5708.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 561000.757 ops/s
[info]                  ·gc.alloc.rate:                   1965.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5718.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.234 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 561816.747 ops/s
[info]                  ·gc.alloc.rate:                   1968.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2041.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5715.841 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce":
[info]   559934.947 ±(99.9%) 8671.838 ops/s [Average]
[info]   (min, avg, max) = (556286.836, 559934.947, 561816.747), stdev = 2252.049
[info]   CI (99.9%): [551263.109, 568606.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1961.770 ±(99.9%) 30.338 MB/sec [Average]
[info]   (min, avg, max) = (1948.999, 1961.770, 1968.358), stdev = 7.879
[info]   CI (99.9%): [1931.432, 1992.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5512.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5512.001, 5512.001, 5512.001), stdev = 0.001
[info]   CI (99.9%): [5512.001, 5512.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1967.432 ±(99.9%) 588.867 MB/sec [Average]
[info]   (min, avg, max) = (1694.061, 1967.432, 2041.150), stdev = 152.927
[info]   CI (99.9%): [1378.564, 2556.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5526.704 ±(99.9%) 1583.897 B/op [Average]
[info]   (min, avg, max) = (4791.005, 5526.704, 5718.578), stdev = 411.333
[info]   CI (99.9%): [3942.807, 7110.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.152 ±(99.9%) 0.256 B/op [Average]
[info]   (min, avg, max) = (0.058, 0.152, 0.234), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.000, 12.000), stdev = 2.828
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson
[info] # Run progress: 29.51% complete, ETA 00:11:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 296278.864 ops/s
[info] # Warmup Iteration   2: 510091.303 ops/s
[info] # Warmup Iteration   3: 518357.580 ops/s
[info] # Warmup Iteration   4: 504772.944 ops/s
[info] # Warmup Iteration   5: 509950.881 ops/s
[info] Iteration   1: 511608.752 ops/s
[info]                  ·gc.alloc.rate:                   520.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2009.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 507205.026 ops/s
[info]                  ·gc.alloc.rate:               515.827 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1015.992 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 505966.038 ops/s
[info]                  ·gc.alloc.rate:                   514.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2045.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 508259.982 ops/s
[info]                  ·gc.alloc.rate:               516.908 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1022.112 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 496169.972 ops/s
[info]                  ·gc.alloc.rate:                   504.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2098.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.462 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson":
[info]   505841.954 ±(99.9%) 22330.699 ops/s [Average]
[info]   (min, avg, max) = (496169.972, 505841.954, 511608.752), stdev = 5799.212
[info]   CI (99.9%): [483511.255, 528172.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   514.453 ±(99.9%) 22.718 MB/sec [Average]
[info]   (min, avg, max) = (504.613, 514.453, 520.323), stdev = 5.900
[info]   CI (99.9%): [491.735, 537.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   526.155 ±(99.9%) 693.552 MB/sec [Average]
[info]   (min, avg, max) = (327.547, 526.155, 661.768), stdev = 180.113
[info]   CI (99.9%): [≈ 0, 1219.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1638.203 ±(99.9%) 2179.826 B/op [Average]
[info]   (min, avg, max) = (1015.992, 1638.203, 2098.302), stdev = 566.094
[info]   CI (99.9%): [≈ 0, 3818.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.245 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.146), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.157 ±(99.9%) 0.774 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.157, 0.462), stdev = 0.201
[info]   CI (99.9%): [≈ 0, 0.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.000, 20.000), stdev = 7.842
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter
[info] # Run progress: 31.15% complete, ETA 00:11:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2736586.755 ops/s
[info] # Warmup Iteration   2: 3033839.002 ops/s
[info] # Warmup Iteration   3: 3081939.189 ops/s
[info] # Warmup Iteration   4: 3071709.418 ops/s
[info] # Warmup Iteration   5: 3083870.453 ops/s
[info] Iteration   1: 2804256.370 ops/s
[info]                  ·gc.alloc.rate:                   755.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     550.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3107886.517 ops/s
[info]                  ·gc.alloc.rate:                   837.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     332.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3096409.396 ops/s
[info]                  ·gc.alloc.rate:                   834.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     503.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3117258.474 ops/s
[info]                  ·gc.alloc.rate:               840.106 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.393 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 334.813 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 3111246.093 ops/s
[info]                  ·gc.alloc.rate:                   838.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     505.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter":
[info]   3047411.370 ±(99.9%) 524224.880 ops/s [Average]
[info]   (min, avg, max) = (2804256.370, 3047411.370, 3117258.474), stdev = 136139.537
[info]   CI (99.9%): [2523186.490, 3571636.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   821.291 ±(99.9%) 141.322 MB/sec [Average]
[info]   (min, avg, max) = (755.740, 821.291, 840.106), stdev = 36.701
[info]   CI (99.9%): [679.969, 962.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   424.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (424.000, 424.000, 424.000), stdev = 0.001
[info]   CI (99.9%): [424.000, 424.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   858.796 ±(99.9%) 697.215 MB/sec [Average]
[info]   (min, avg, max) = (657.759, 858.796, 999.270), stdev = 181.064
[info]   CI (99.9%): [161.582, 1556.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   445.562 ±(99.9%) 399.271 B/op [Average]
[info]   (min, avg, max) = (332.959, 445.562, 550.907), stdev = 103.689
[info]   CI (99.9%): [46.291, 844.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.080 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.053), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 5.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay
[info] # Run progress: 32.79% complete, ETA 00:11:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64486.642 ops/s
[info] # Warmup Iteration   2: 165143.108 ops/s
[info] # Warmup Iteration   3: 169884.690 ops/s
[info] # Warmup Iteration   4: 168852.139 ops/s
[info] # Warmup Iteration   5: 168438.835 ops/s
[info] Iteration   1: 169295.136 ops/s
[info]                  ·gc.alloc.rate:                   1156.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12224.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.968 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 170704.574 ops/s
[info]                  ·gc.alloc.rate:                   1166.635 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12222.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.576 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 171046.891 ops/s
[info]                  ·gc.alloc.rate:                   1169.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9197.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 170556.399 ops/s
[info]                  ·gc.alloc.rate:               1165.608 MB/sec
[info]                  ·gc.alloc.rate.norm:          10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12355.932 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   5: 170392.255 ops/s
[info]                  ·gc.alloc.rate:                   1164.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9312.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.385 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay":
[info]   170399.051 ±(99.9%) 2551.667 ops/s [Average]
[info]   (min, avg, max) = (169295.136, 170399.051, 171046.891), stdev = 662.660
[info]   CI (99.9%): [167847.384, 172950.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1164.538 ±(99.9%) 17.477 MB/sec [Average]
[info]   (min, avg, max) = (1156.992, 1164.538, 1169.001), stdev = 4.539
[info]   CI (99.9%): [1147.060, 1182.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10752.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10752.003, 10752.003, 10752.003), stdev = 0.001
[info]   CI (99.9%): [10752.002, 10752.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1197.923 ±(99.9%) 681.651 MB/sec [Average]
[info]   (min, avg, max) = (999.954, 1197.923, 1339.488), stdev = 177.023
[info]   CI (99.9%): [516.272, 1879.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11062.497 ±(99.9%) 6359.417 B/op [Average]
[info]   (min, avg, max) = (9197.175, 11062.497, 12355.932), stdev = 1651.520
[info]   CI (99.9%): [4703.080, 17421.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.424 ±(99.9%) 1.433 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.424, 0.968), stdev = 0.372
[info]   CI (99.9%): [≈ 0, 1.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 11.000), stdev = 3.421
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce
[info] # Run progress: 34.43% complete, ETA 00:10:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 238083.477 ops/s
[info] # Warmup Iteration   2: 461348.502 ops/s
[info] # Warmup Iteration   3: 475167.082 ops/s
[info] # Warmup Iteration   4: 467710.977 ops/s
[info] # Warmup Iteration   5: 475002.341 ops/s
[info] Iteration   1: 468036.109 ops/s
[info]                  ·gc.alloc.rate:                   1663.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5652.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 467609.759 ops/s
[info]                  ·gc.alloc.rate:                   1662.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4544.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 470677.959 ops/s
[info]                  ·gc.alloc.rate:                   1672.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5660.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 467511.600 ops/s
[info]                  ·gc.alloc.rate:               1661.756 MB/sec
[info]                  ·gc.alloc.rate.norm:          5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1696.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5707.314 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   5: 473750.851 ops/s
[info]                  ·gc.alloc.rate:                   1683.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5643.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce":
[info]   469517.256 ±(99.9%) 10390.597 ops/s [Average]
[info]   (min, avg, max) = (467511.600, 469517.256, 473750.851), stdev = 2698.405
[info]   CI (99.9%): [459126.658, 479907.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1668.866 ±(99.9%) 36.907 MB/sec [Average]
[info]   (min, avg, max) = (1661.756, 1668.866, 1683.928), stdev = 9.585
[info]   CI (99.9%): [1631.959, 1705.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1624.258 ±(99.9%) 589.174 MB/sec [Average]
[info]   (min, avg, max) = (1350.810, 1624.258, 1699.408), stdev = 153.007
[info]   CI (99.9%): [1035.084, 2213.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5441.688 ±(99.9%) 1933.044 B/op [Average]
[info]   (min, avg, max) = (4544.755, 5441.688, 5707.314), stdev = 502.005
[info]   CI (99.9%): [3508.644, 7374.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.112 ±(99.9%) 0.240 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.112, 0.140), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 10.400, 14.000), stdev = 3.782
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson
[info] # Run progress: 36.07% complete, ETA 00:10:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 350358.204 ops/s
[info] # Warmup Iteration   2: 863347.247 ops/s
[info] # Warmup Iteration   3: 870398.531 ops/s
[info] # Warmup Iteration   4: 878670.677 ops/s
[info] # Warmup Iteration   5: 878798.564 ops/s
[info] Iteration   1: 875414.690 ops/s
[info]                  ·gc.alloc.rate:                   1032.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1789.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.299 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 871729.171 ops/s
[info]                  ·gc.alloc.rate:                   1028.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1804.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 880489.400 ops/s
[info]                  ·gc.alloc.rate:                   1038.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1795.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 884488.042 ops/s
[info]                  ·gc.alloc.rate:                   1043.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1792.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 882212.965 ops/s
[info]                  ·gc.alloc.rate:                   1040.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1802.835 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson":
[info]   878866.854 ±(99.9%) 20035.454 ops/s [Average]
[info]   (min, avg, max) = (871729.171, 878866.854, 884488.042), stdev = 5203.144
[info]   CI (99.9%): [858831.400, 898902.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1036.821 ±(99.9%) 23.590 MB/sec [Average]
[info]   (min, avg, max) = (1028.409, 1036.821, 1043.447), stdev = 6.126
[info]   CI (99.9%): [1013.231, 1060.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.000, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1003.892 ±(99.9%) 23.147 MB/sec [Average]
[info]   (min, avg, max) = (995.978, 1003.892, 1010.945), stdev = 6.011
[info]   CI (99.9%): [980.745, 1027.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1797.063 ±(99.9%) 24.739 B/op [Average]
[info]   (min, avg, max) = (1789.873, 1797.063, 1804.696), stdev = 6.425
[info]   CI (99.9%): [1772.324, 1821.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.237 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.167), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.105 ±(99.9%) 0.426 B/op [Average]
[info]   (min, avg, max) = (0.037, 0.105, 0.299), stdev = 0.111
[info]   CI (99.9%): [≈ 0, 0.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 8.000), stdev = 1.483
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter
[info] # Run progress: 37.70% complete, ETA 00:10:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3637655.052 ops/s
[info] # Warmup Iteration   2: 3682696.732 ops/s
[info] # Warmup Iteration   3: 3761801.892 ops/s
[info] # Warmup Iteration   4: 3752892.141 ops/s
[info] # Warmup Iteration   5: 3722722.424 ops/s
[info] Iteration   1: 3741283.600 ops/s
[info]                  ·gc.alloc.rate:                   932.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     414.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 3731889.390 ops/s
[info]                  ·gc.alloc.rate:                   929.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     418.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3700778.116 ops/s
[info]                  ·gc.alloc.rate:                   922.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     423.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 3721373.890 ops/s
[info]                  ·gc.alloc.rate:                   927.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     282.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3734252.323 ops/s
[info]                  ·gc.alloc.rate:               930.415 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 422.835 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter":
[info]   3725915.464 ±(99.9%) 60697.520 ops/s [Average]
[info]   (min, avg, max) = (3700778.116, 3725915.464, 3741283.600), stdev = 15762.953
[info]   CI (99.9%): [3665217.944, 3786612.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   928.356 ±(99.9%) 15.138 MB/sec [Average]
[info]   (min, avg, max) = (922.085, 928.356, 932.201), stdev = 3.931
[info]   CI (99.9%): [913.217, 943.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   928.832 ±(99.9%) 563.995 MB/sec [Average]
[info]   (min, avg, max) = (667.083, 928.832, 1003.603), stdev = 146.468
[info]   CI (99.9%): [364.837, 1492.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   392.176 ±(99.9%) 237.540 B/op [Average]
[info]   (min, avg, max) = (282.018, 392.176, 423.391), stdev = 61.688
[info]   CI (99.9%): [154.636, 629.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.063 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.035), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 9.000), stdev = 1.949
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay
[info] # Run progress: 39.34% complete, ETA 00:09:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 150085.822 ops/s
[info] # Warmup Iteration   2: 255778.233 ops/s
[info] # Warmup Iteration   3: 263015.842 ops/s
[info] # Warmup Iteration   4: 264416.527 ops/s
[info] # Warmup Iteration   5: 264347.359 ops/s
[info] Iteration   1: 263732.325 ops/s
[info]                  ·gc.alloc.rate:                   1357.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7911.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.248 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 261204.507 ops/s
[info]                  ·gc.alloc.rate:                   1344.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8035.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.627 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 260994.938 ops/s
[info]                  ·gc.alloc.rate:                   1343.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8086.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.502 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 261601.003 ops/s
[info]                  ·gc.alloc.rate:                   1346.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8103.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.376 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 262430.760 ops/s
[info]                  ·gc.alloc.rate:                   1350.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8097.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay":
[info]   261992.707 ±(99.9%) 4300.152 ops/s [Average]
[info]   (min, avg, max) = (260994.938, 261992.707, 263732.325), stdev = 1116.736
[info]   CI (99.9%): [257692.555, 266292.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1348.212 ±(99.9%) 22.117 MB/sec [Average]
[info]   (min, avg, max) = (1343.092, 1348.212, 1357.153), stdev = 5.744
[info]   CI (99.9%): [1326.095, 1370.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8096.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8096.002, 8096.002, 8096.002), stdev = 0.001
[info]   CI (99.9%): [8096.001, 8096.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1340.010 ±(99.9%) 38.510 MB/sec [Average]
[info]   (min, avg, max) = (1326.145, 1340.010, 1350.808), stdev = 10.001
[info]   CI (99.9%): [1301.500, 1378.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8046.952 ±(99.9%) 310.153 B/op [Average]
[info]   (min, avg, max) = (7911.021, 8046.952, 8103.518), stdev = 80.546
[info]   CI (99.9%): [7736.798, 8357.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.376 ±(99.9%) 0.766 B/op [Average]
[info]   (min, avg, max) = (0.125, 0.376, 0.627), stdev = 0.199
[info]   CI (99.9%): [≈ 0, 1.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 11.000), stdev = 2.236
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson
[info] # Run progress: 40.98% complete, ETA 00:09:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 87221.934 ops/s
[info] # Warmup Iteration   2: 624579.169 ops/s
[info] # Warmup Iteration   3: 676328.291 ops/s
[info] # Warmup Iteration   4: 677386.079 ops/s
[info] # Warmup Iteration   5: 667337.058 ops/s
[info] Iteration   1: 677441.743 ops/s
[info]                  ·gc.alloc.rate:               878.421 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1530.644 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 673074.361 ops/s
[info]                  ·gc.alloc.rate:                   872.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2321.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.535 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 671596.465 ops/s
[info]                  ·gc.alloc.rate:                   871.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2333.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 679444.767 ops/s
[info]                  ·gc.alloc.rate:                   881.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1546.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 665947.929 ops/s
[info]                  ·gc.alloc.rate:                   863.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2375.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson":
[info]   673501.053 ±(99.9%) 20349.841 ops/s [Average]
[info]   (min, avg, max) = (665947.929, 673501.053, 679444.767), stdev = 5284.789
[info]   CI (99.9%): [653151.212, 693850.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   873.498 ±(99.9%) 26.167 MB/sec [Average]
[info]   (min, avg, max) = (863.494, 873.498, 881.039), stdev = 6.796
[info]   CI (99.9%): [847.331, 899.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   864.661 ±(99.9%) 707.092 MB/sec [Average]
[info]   (min, avg, max) = (659.093, 864.661, 1005.605), stdev = 183.630
[info]   CI (99.9%): [157.569, 1571.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2021.721 ±(99.9%) 1699.462 B/op [Average]
[info]   (min, avg, max) = (1530.644, 2021.721, 2375.738), stdev = 441.345
[info]   CI (99.9%): [322.259, 3721.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.356 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.229), stdev = 0.092
[info]   CI (99.9%): [≈ 0, 0.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.156 ±(99.9%) 0.832 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.156, 0.535), stdev = 0.216
[info]   CI (99.9%): [≈ 0, 0.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.600, 16.000), stdev = 4.879
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 42.62% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1462829.472 ops/s
[info] # Warmup Iteration   2: 2651352.682 ops/s
[info] # Warmup Iteration   3: 2671208.716 ops/s
[info] # Warmup Iteration   4: 2683892.586 ops/s
[info] # Warmup Iteration   5: 2688138.918 ops/s
[info] Iteration   1: 2690855.639 ops/s
[info]                  ·gc.alloc.rate:                   1833.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1175.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2675776.307 ops/s
[info]                  ·gc.alloc.rate:                   1823.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     990.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2683651.108 ops/s
[info]                  ·gc.alloc.rate:                   1828.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1190.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2671206.607 ops/s
[info]                  ·gc.alloc.rate:                   1820.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     998.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2693678.364 ops/s
[info]                  ·gc.alloc.rate:                   1835.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     992.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter":
[info]   2683033.605 ±(99.9%) 36905.097 ops/s [Average]
[info]   (min, avg, max) = (2671206.607, 2683033.605, 2693678.364), stdev = 9584.136
[info]   CI (99.9%): [2646128.508, 2719938.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1828.179 ±(99.9%) 25.053 MB/sec [Average]
[info]   (min, avg, max) = (1820.156, 1828.179, 1835.418), stdev = 6.506
[info]   CI (99.9%): [1803.126, 1853.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   1072.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1072.000, 1072.000, 1072.000), stdev = 0.001
[info]   CI (99.9%): [1072.000, 1072.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1824.229 ±(99.9%) 690.336 MB/sec [Average]
[info]   (min, avg, max) = (1685.352, 1824.229, 2030.217), stdev = 179.278
[info]   CI (99.9%): [1133.893, 2514.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1069.574 ±(99.9%) 398.940 B/op [Average]
[info]   (min, avg, max) = (990.907, 1069.574, 1190.235), stdev = 103.603
[info]   CI (99.9%): [670.634, 1468.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.125), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.042 ±(99.9%) 0.098 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.042, 0.073), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 9.000), stdev = 2.074
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay
[info] # Run progress: 44.26% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 122875.040 ops/s
[info] # Warmup Iteration   2: 213594.176 ops/s
[info] # Warmup Iteration   3: 220098.327 ops/s
[info] # Warmup Iteration   4: 220850.819 ops/s
[info] # Warmup Iteration   5: 223726.664 ops/s
[info] Iteration   1: 223007.716 ops/s
[info]                  ·gc.alloc.rate:                   1174.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9299.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.441 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 221076.359 ops/s
[info]                  ·gc.alloc.rate:                   1164.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7082.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.445 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 219877.679 ops/s
[info]                  ·gc.alloc.rate:                   1158.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9546.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.298 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 219697.880 ops/s
[info]                  ·gc.alloc.rate:               1157.424 MB/sec
[info]                  ·gc.alloc.rate.norm:          8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7198.861 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 218722.207 ops/s
[info]                  ·gc.alloc.rate:                   1152.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9678.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.300 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay":
[info]   220476.368 ±(99.9%) 6329.967 ops/s [Average]
[info]   (min, avg, max) = (218722.207, 220476.368, 223007.716), stdev = 1643.872
[info]   CI (99.9%): [214146.401, 226806.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1161.505 ±(99.9%) 33.288 MB/sec [Average]
[info]   (min, avg, max) = (1152.277, 1161.505, 1174.810), stdev = 8.645
[info]   CI (99.9%): [1128.217, 1194.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8288.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8288.002, 8288.002, 8288.002), stdev = 0.001
[info]   CI (99.9%): [8288.002, 8288.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1199.703 ±(99.9%) 702.040 MB/sec [Average]
[info]   (min, avg, max) = (995.289, 1199.703, 1345.548), stdev = 182.318
[info]   CI (99.9%): [497.663, 1901.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8561.037 ±(99.9%) 5022.473 B/op [Average]
[info]   (min, avg, max) = (7082.602, 8561.037, 9678.145), stdev = 1304.320
[info]   CI (99.9%): [3538.564, 13583.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.297 ±(99.9%) 0.696 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.297, 0.445), stdev = 0.181
[info]   CI (99.9%): [≈ 0, 0.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 12.000), stdev = 2.739
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson
[info] # Run progress: 45.90% complete, ETA 00:08:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 638692.950 ops/s
[info] # Warmup Iteration   2: 983844.168 ops/s
[info] # Warmup Iteration   3: 976857.136 ops/s
[info] # Warmup Iteration   4: 985754.763 ops/s
[info] # Warmup Iteration   5: 983252.135 ops/s
[info] Iteration   1: 990545.014 ops/s
[info]                  ·gc.alloc.rate:                   730.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1046.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 990105.217 ops/s
[info]                  ·gc.alloc.rate:                   730.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1051.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 982776.887 ops/s
[info]                  ·gc.alloc.rate:                   724.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1596.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1000426.545 ops/s
[info]                  ·gc.alloc.rate:                   737.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1049.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1001957.300 ops/s
[info]                  ·gc.alloc.rate:                   738.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1050.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson":
[info]   993162.193 ±(99.9%) 30695.093 ops/s [Average]
[info]   (min, avg, max) = (982776.887, 993162.193, 1001957.300), stdev = 7971.418
[info]   CI (99.9%): [962467.100, 1023857.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   732.282 ±(99.9%) 22.593 MB/sec [Average]
[info]   (min, avg, max) = (724.641, 732.282, 738.750), stdev = 5.867
[info]   CI (99.9%): [709.688, 754.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1160.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1160.000, 1160.000, 1160.000), stdev = 0.001
[info]   CI (99.9%): [1160.000, 1160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   730.981 ±(99.9%) 574.194 MB/sec [Average]
[info]   (min, avg, max) = (659.071, 730.981, 997.630), stdev = 149.116
[info]   CI (99.9%): [156.787, 1305.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1159.081 ±(99.9%) 942.675 B/op [Average]
[info]   (min, avg, max) = (1046.797, 1159.081, 1596.998), stdev = 244.810
[info]   CI (99.9%): [216.406, 2101.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (0.033, 0.040, 0.067), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 8.000), stdev = 2.683
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 47.54% complete, ETA 00:08:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4397948.447 ops/s
[info] # Warmup Iteration   2: 4464487.183 ops/s
[info] # Warmup Iteration   3: 4661991.538 ops/s
[info] # Warmup Iteration   4: 4649898.548 ops/s
[info] # Warmup Iteration   5: 4676769.629 ops/s
[info] Iteration   1: 4627690.859 ops/s
[info]                  ·gc.alloc.rate:               141.192 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 86.997 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 4627992.943 ops/s
[info]                  ·gc.alloc.rate:               141.198 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 86.995 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 4680259.694 ops/s
[info]                  ·gc.alloc.rate:      142.796 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 4653011.898 ops/s
[info]                  ·gc.alloc.rate:                   141.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4623823.735 ops/s
[info]                  ·gc.alloc.rate:      141.070 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter":
[info]   4642555.826 ±(99.9%) 92632.743 ops/s [Average]
[info]   (min, avg, max) = (4623823.735, 4642555.826, 4680259.694), stdev = 24056.429
[info]   CI (99.9%): [4549923.083, 4735188.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   141.644 ±(99.9%) 2.831 MB/sec [Average]
[info]   (min, avg, max) = (141.070, 141.644, 142.796), stdev = 0.735
[info]   CI (99.9%): [138.813, 144.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   153.542 ±(99.9%) 539.720 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.542, 255.907), stdev = 140.164
[info]   CI (99.9%): [≈ 0, 693.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   52.103 ±(99.9%) 183.152 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 52.103, 86.997), stdev = 47.564
[info]   CI (99.9%): [≈ 0, 235.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.011), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay
[info] # Run progress: 49.18% complete, ETA 00:08:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 97042.279 ops/s
[info] # Warmup Iteration   2: 167050.961 ops/s
[info] # Warmup Iteration   3: 175388.654 ops/s
[info] # Warmup Iteration   4: 174840.857 ops/s
[info] # Warmup Iteration   5: 173542.518 ops/s
[info] Iteration   1: 173907.414 ops/s
[info]                  ·gc.alloc.rate:                   1227.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              11104.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11949.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 172686.884 ops/s
[info]                  ·gc.alloc.rate:                   1218.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              11104.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9088.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.569 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 174012.894 ops/s
[info]                  ·gc.alloc.rate:                   1228.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              11104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12083.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.565 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 173313.036 ops/s
[info]                  ·gc.alloc.rate:                   1223.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              11104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12192.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 173158.192 ops/s
[info]                  ·gc.alloc.rate:                   1222.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              11104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9185.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay":
[info]   173415.684 ±(99.9%) 2114.741 ops/s [Average]
[info]   (min, avg, max) = (172686.884, 173415.684, 174012.894), stdev = 549.192
[info]   CI (99.9%): [171300.942, 175530.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1223.972 ±(99.9%) 14.936 MB/sec [Average]
[info]   (min, avg, max) = (1218.867, 1223.972, 1228.208), stdev = 3.879
[info]   CI (99.9%): [1209.036, 1238.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   11104.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11104.002, 11104.003, 11104.003), stdev = 0.001
[info]   CI (99.9%): [11104.002, 11104.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1201.813 ±(99.9%) 695.250 MB/sec [Average]
[info]   (min, avg, max) = (997.650, 1201.813, 1343.114), stdev = 180.554
[info]   CI (99.9%): [506.563, 1897.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10899.700 ±(99.9%) 6206.922 B/op [Average]
[info]   (min, avg, max) = (9088.699, 10899.700, 12192.744), stdev = 1611.918
[info]   CI (99.9%): [4692.778, 17106.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.416 ±(99.9%) 0.610 B/op [Average]
[info]   (min, avg, max) = (0.188, 0.416, 0.569), stdev = 0.158
[info]   CI (99.9%): [≈ 0, 1.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 11.000), stdev = 3.808
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce
[info] # Run progress: 50.82% complete, ETA 00:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 816808.476 ops/s
[info] # Warmup Iteration   2: 1237981.944 ops/s
[info] # Warmup Iteration   3: 1289005.404 ops/s
[info] # Warmup Iteration   4: 1273403.216 ops/s
[info] # Warmup Iteration   5: 1293371.179 ops/s
[info] Iteration   1: 1282909.730 ops/s
[info]                  ·gc.alloc.rate:                   1454.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              1784.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1673.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2052.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1286933.144 ops/s
[info]                  ·gc.alloc.rate:                   1459.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              1784.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1645.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1287257.145 ops/s
[info]                  ·gc.alloc.rate:                   1459.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              1784.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1651.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1274120.808 ops/s
[info]                  ·gc.alloc.rate:                   1444.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              1784.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1672.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1264535.938 ops/s
[info]                  ·gc.alloc.rate:                   1433.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              1784.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2109.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.181 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce":
[info]   1279151.353 ±(99.9%) 37496.962 ops/s [Average]
[info]   (min, avg, max) = (1264535.938, 1279151.353, 1287257.145), stdev = 9737.842
[info]   CI (99.9%): [1241654.391, 1316648.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1450.497 ±(99.9%) 42.476 MB/sec [Average]
[info]   (min, avg, max) = (1433.949, 1450.497, 1459.687), stdev = 11.031
[info]   CI (99.9%): [1408.021, 1492.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1784.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1784.000, 1784.000, 1784.000), stdev = 0.001
[info]   CI (99.9%): [1784.000, 1784.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1484.228 ±(99.9%) 705.988 MB/sec [Average]
[info]   (min, avg, max) = (1346.155, 1484.228, 1695.741), stdev = 183.343
[info]   CI (99.9%): [778.240, 2190.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1826.322 ±(99.9%) 900.418 B/op [Average]
[info]   (min, avg, max) = (1645.646, 1826.322, 2109.700), stdev = 233.836
[info]   CI (99.9%): [925.904, 2726.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.146), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.072 ±(99.9%) 0.249 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.072, 0.181), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 11.000), stdev = 3.435
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 52.46% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2551186.466 ops/s
[info] # Warmup Iteration   2: 3768113.323 ops/s
[info] # Warmup Iteration   3: 3871283.007 ops/s
[info] # Warmup Iteration   4: 3803671.502 ops/s
[info] # Warmup Iteration   5: 3806491.439 ops/s
[info] Iteration   1: 3869563.090 ops/s
[info]                  ·gc.alloc.rate:               1062.529 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 400.326 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 3861171.068 ops/s
[info]                  ·gc.alloc.rate:               1060.227 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 404.172 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 3874389.589 ops/s
[info]                  ·gc.alloc.rate:               1063.868 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1331.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 540.546 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 3788398.154 ops/s
[info]                  ·gc.alloc.rate:                   1040.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     416.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 3840955.396 ops/s
[info]                  ·gc.alloc.rate:                   1054.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     412.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson":
[info]   3846895.459 ±(99.9%) 135194.906 ops/s [Average]
[info]   (min, avg, max) = (3788398.154, 3846895.459, 3874389.589), stdev = 35109.688
[info]   CI (99.9%): [3711700.553, 3982090.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1056.313 ±(99.9%) 37.123 MB/sec [Average]
[info]   (min, avg, max) = (1040.247, 1056.313, 1063.868), stdev = 9.641
[info]   CI (99.9%): [1019.190, 1093.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1063.784 ±(99.9%) 576.663 MB/sec [Average]
[info]   (min, avg, max) = (984.624, 1063.784, 1331.178), stdev = 149.757
[info]   CI (99.9%): [487.121, 1640.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   434.906 ±(99.9%) 228.793 B/op [Average]
[info]   (min, avg, max) = (400.326, 434.906, 540.546), stdev = 59.417
[info]   CI (99.9%): [206.113, 663.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.030 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.017), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 10.000), stdev = 3.421
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 54.10% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14937237.653 ops/s
[info] # Warmup Iteration   2: 14940299.646 ops/s
[info] # Warmup Iteration   3: 15086580.584 ops/s
[info] # Warmup Iteration   4: 15083326.583 ops/s
[info] # Warmup Iteration   5: 15191512.179 ops/s
[info] Iteration   1: 15108674.291 ops/s
[info]                  ·gc.alloc.rate:                   460.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 15012642.881 ops/s
[info]                  ·gc.alloc.rate:                   458.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 15224660.141 ops/s
[info]                  ·gc.alloc.rate:               465.050 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.555 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 15090887.285 ops/s
[info]                  ·gc.alloc.rate:                   460.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 14893819.754 ops/s
[info]                  ·gc.alloc.rate:               454.405 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34.598 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter":
[info]   15066136.870 ±(99.9%) 472023.761 ops/s [Average]
[info]   (min, avg, max) = (14893819.754, 15066136.870, 15224660.141), stdev = 122583.072
[info]   CI (99.9%): [14594113.109, 15538160.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   459.774 ±(99.9%) 15.102 MB/sec [Average]
[info]   (min, avg, max) = (454.405, 459.774, 465.050), stdev = 3.922
[info]   CI (99.9%): [444.672, 474.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   456.668 ±(99.9%) 688.690 MB/sec [Average]
[info]   (min, avg, max) = (325.098, 456.668, 653.748), stdev = 178.851
[info]   CI (99.9%): [≈ 0, 1145.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   47.694 ±(99.9%) 72.129 B/op [Average]
[info]   (min, avg, max) = (33.555, 47.694, 68.267), stdev = 18.732
[info]   CI (99.9%): [≈ 0, 119.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.009), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.600, 10.000), stdev = 4.336
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 55.74% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 580981.485 ops/s
[info] # Warmup Iteration   2: 835208.838 ops/s
[info] # Warmup Iteration   3: 881922.627 ops/s
[info] # Warmup Iteration   4: 875877.384 ops/s
[info] # Warmup Iteration   5: 876192.025 ops/s
[info] Iteration   1: 890700.493 ops/s
[info]                  ·gc.alloc.rate:                   1354.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              2392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2342.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 881619.581 ops/s
[info]                  ·gc.alloc.rate:                   1340.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              2392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2382.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 884741.009 ops/s
[info]                  ·gc.alloc.rate:                   1345.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              2392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2385.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 878895.105 ops/s
[info]                  ·gc.alloc.rate:                   1336.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              2392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2412.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 887105.628 ops/s
[info]                  ·gc.alloc.rate:                   1348.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              2392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2395.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay":
[info]   884612.363 ±(99.9%) 17744.537 ops/s [Average]
[info]   (min, avg, max) = (878895.105, 884612.363, 890700.493), stdev = 4608.200
[info]   CI (99.9%): [866867.826, 902356.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1344.952 ±(99.9%) 26.963 MB/sec [Average]
[info]   (min, avg, max) = (1336.251, 1344.952, 1354.183), stdev = 7.002
[info]   CI (99.9%): [1317.989, 1371.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2392.000, 2392.000, 2392.001), stdev = 0.001
[info]   CI (99.9%): [2392.000, 2392.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1340.138 ±(99.9%) 38.232 MB/sec [Average]
[info]   (min, avg, max) = (1326.101, 1340.138, 1350.808), stdev = 9.929
[info]   CI (99.9%): [1301.905, 1378.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2383.523 ±(99.9%) 99.264 B/op [Average]
[info]   (min, avg, max) = (2342.397, 2383.523, 2412.069), stdev = 25.779
[info]   CI (99.9%): [2284.259, 2482.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.104 ±(99.9%) 0.187 B/op [Average]
[info]   (min, avg, max) = (0.074, 0.104, 0.186), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 10.000), stdev = 2.449
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce
[info] # Run progress: 57.38% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 394857.125 ops/s
[info] # Warmup Iteration   2: 697463.186 ops/s
[info] # Warmup Iteration   3: 706452.202 ops/s
[info] # Warmup Iteration   4: 716642.281 ops/s
[info] # Warmup Iteration   5: 710056.149 ops/s
[info] Iteration   1: 716562.922 ops/s
[info]                  ·gc.alloc.rate:                   1730.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3670.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 708253.666 ops/s
[info]                  ·gc.alloc.rate:                   1710.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.713 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3735.514 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 713732.364 ops/s
[info]                  ·gc.alloc.rate:                   1723.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3723.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 715464.720 ops/s
[info]                  ·gc.alloc.rate:                   1728.096 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3725.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 717660.614 ops/s
[info]                  ·gc.alloc.rate:                   1733.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3720.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce":
[info]   714334.857 ±(99.9%) 14232.466 ops/s [Average]
[info]   (min, avg, max) = (708253.666, 714334.857, 717660.614), stdev = 3696.126
[info]   CI (99.9%): [700102.391, 728567.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1725.382 ±(99.9%) 34.279 MB/sec [Average]
[info]   (min, avg, max) = (1710.745, 1725.382, 1733.389), stdev = 8.902
[info]   CI (99.9%): [1691.103, 1759.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3800.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3800.001, 3800.001, 3800.001), stdev = 0.001
[info]   CI (99.9%): [3800.001, 3800.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1686.809 ±(99.9%) 39.684 MB/sec [Average]
[info]   (min, avg, max) = (1671.656, 1686.809, 1697.351), stdev = 10.306
[info]   CI (99.9%): [1647.125, 1726.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3715.103 ±(99.9%) 98.948 B/op [Average]
[info]   (min, avg, max) = (3670.202, 3715.103, 3735.514), stdev = 25.697
[info]   CI (99.9%): [3616.155, 3814.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.073 ±(99.9%) 0.097 B/op [Average]
[info]   (min, avg, max) = (0.046, 0.073, 0.093), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.800, 14.000), stdev = 4.550
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson
[info] # Run progress: 59.02% complete, ETA 00:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1644475.680 ops/s
[info] # Warmup Iteration   2: 2528661.924 ops/s
[info] # Warmup Iteration   3: 2575582.684 ops/s
[info] # Warmup Iteration   4: 2566388.667 ops/s
[info] # Warmup Iteration   5: 2551566.749 ops/s
[info] Iteration   1: 2553833.269 ops/s
[info]                  ·gc.alloc.rate:               1480.434 MB/sec
[info]                  ·gc.alloc.rate.norm:          912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 825.188 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 2568783.338 ops/s
[info]                  ·gc.alloc.rate:                   1489.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1030.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2551219.093 ops/s
[info]                  ·gc.alloc.rate:                   1478.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     833.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2566804.128 ops/s
[info]                  ·gc.alloc.rate:                   1487.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     830.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 2557785.559 ops/s
[info]                  ·gc.alloc.rate:                   1482.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1043.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson":
[info]   2559685.077 ±(99.9%) 30011.809 ops/s [Average]
[info]   (min, avg, max) = (2551219.093, 2559685.077, 2568783.338), stdev = 7793.972
[info]   CI (99.9%): [2529673.268, 2589696.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1483.828 ±(99.9%) 17.391 MB/sec [Average]
[info]   (min, avg, max) = (1478.926, 1483.828, 1489.089), stdev = 4.516
[info]   CI (99.9%): [1466.437, 1501.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1485.026 ±(99.9%) 719.888 MB/sec [Average]
[info]   (min, avg, max) = (1339.514, 1485.026, 1696.314), stdev = 186.953
[info]   CI (99.9%): [765.138, 2204.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   912.626 ±(99.9%) 437.934 B/op [Average]
[info]   (min, avg, max) = (825.188, 912.626, 1043.378), stdev = 113.730
[info]   CI (99.9%): [474.692, 1350.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.075 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.051), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 13.000), stdev = 3.362
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter
[info] # Run progress: 60.66% complete, ETA 00:06:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5601451.080 ops/s
[info] # Warmup Iteration   2: 6006806.490 ops/s
[info] # Warmup Iteration   3: 6073381.704 ops/s
[info] # Warmup Iteration   4: 6164978.015 ops/s
[info] # Warmup Iteration   5: 6106310.470 ops/s
[info] Iteration   1: 6149470.776 ops/s
[info]                  ·gc.alloc.rate:                   1125.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     253.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 6101005.616 ops/s
[info]                  ·gc.alloc.rate:                   1116.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     342.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 6105051.361 ops/s
[info]                  ·gc.alloc.rate:                   1117.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     258.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6009214.789 ops/s
[info]                  ·gc.alloc.rate:                   1100.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     263.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 6108894.367 ops/s
[info]                  ·gc.alloc.rate:                   1118.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     346.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter":
[info]   6094727.382 ±(99.9%) 198746.455 ops/s [Average]
[info]   (min, avg, max) = (6009214.789, 6094727.382, 6149470.776), stdev = 51613.823
[info]   CI (99.9%): [5895980.926, 6293473.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1115.705 ±(99.9%) 36.370 MB/sec [Average]
[info]   (min, avg, max) = (1100.057, 1115.705, 1125.724), stdev = 9.445
[info]   CI (99.9%): [1079.336, 1152.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1135.161 ±(99.9%) 713.017 MB/sec [Average]
[info]   (min, avg, max) = (991.947, 1135.161, 1346.146), stdev = 185.168
[info]   CI (99.9%): [422.144, 1848.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   292.986 ±(99.9%) 182.524 B/op [Average]
[info]   (min, avg, max) = (253.775, 292.986, 346.678), stdev = 47.401
[info]   CI (99.9%): [110.462, 475.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.015, 0.021), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 11.000), stdev = 3.271
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay
[info] # Run progress: 62.30% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 179036.204 ops/s
[info] # Warmup Iteration   2: 348528.086 ops/s
[info] # Warmup Iteration   3: 352443.582 ops/s
[info] # Warmup Iteration   4: 350746.543 ops/s
[info] # Warmup Iteration   5: 348297.678 ops/s
[info] Iteration   1: 349229.423 ops/s
[info]                  ·gc.alloc.rate:                   1246.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5950.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 346955.436 ops/s
[info]                  ·gc.alloc.rate:                   1238.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6031.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 347731.918 ops/s
[info]                  ·gc.alloc.rate:                   1241.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6054.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 271115.397 ops/s
[info]                  ·gc.alloc.rate:                   967.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          671.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3894.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 358201.716 ops/s
[info]                  ·gc.alloc.rate:                   1278.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5918.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.366 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay":
[info]   334646.778 ±(99.9%) 137851.561 ops/s [Average]
[info]   (min, avg, max) = (271115.397, 334646.778, 358201.716), stdev = 35799.613
[info]   CI (99.9%): [196795.217, 472498.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1194.605 ±(99.9%) 492.134 MB/sec [Average]
[info]   (min, avg, max) = (967.784, 1194.605, 1278.618), stdev = 127.806
[info]   CI (99.9%): [702.471, 1686.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.002), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1201.561 ±(99.9%) 1142.570 MB/sec [Average]
[info]   (min, avg, max) = (671.060, 1201.561, 1347.433), stdev = 296.722
[info]   CI (99.9%): [58.990, 2344.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5569.660 ±(99.9%) 3613.164 B/op [Average]
[info]   (min, avg, max) = (3894.127, 5569.660, 6054.110), stdev = 938.327
[info]   CI (99.9%): [1956.496, 9182.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.229 ±(99.9%) 0.518 B/op [Average]
[info]   (min, avg, max) = (0.094, 0.229, 0.378), stdev = 0.135
[info]   CI (99.9%): [≈ 0, 0.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.200, 10.000), stdev = 3.033
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson
[info] # Run progress: 63.93% complete, ETA 00:05:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1828071.549 ops/s
[info] # Warmup Iteration   2: 2693071.881 ops/s
[info] # Warmup Iteration   3: 2682437.777 ops/s
[info] # Warmup Iteration   4: 2696519.507 ops/s
[info] # Warmup Iteration   5: 2709157.907 ops/s
[info] Iteration   1: 2726786.950 ops/s
[info]                  ·gc.alloc.rate:                   1164.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     766.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2698893.664 ops/s
[info]                  ·gc.alloc.rate:                   1152.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     584.835 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2715145.355 ops/s
[info]                  ·gc.alloc.rate:                   1159.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     777.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2713802.451 ops/s
[info]                  ·gc.alloc.rate:                   1159.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     586.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2709333.680 ops/s
[info]                  ·gc.alloc.rate:                   1157.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     784.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson":
[info]   2712792.420 ±(99.9%) 38867.746 ops/s [Average]
[info]   (min, avg, max) = (2698893.664, 2712792.420, 2726786.950), stdev = 10093.830
[info]   CI (99.9%): [2673924.674, 2751660.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1158.768 ±(99.9%) 16.618 MB/sec [Average]
[info]   (min, avg, max) = (1152.812, 1158.768, 1164.736), stdev = 4.316
[info]   CI (99.9%): [1142.150, 1175.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1207.297 ±(99.9%) 704.380 MB/sec [Average]
[info]   (min, avg, max) = (1003.280, 1207.297, 1350.882), stdev = 182.925
[info]   CI (99.9%): [502.917, 1911.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   699.972 ±(99.9%) 403.301 B/op [Average]
[info]   (min, avg, max) = (584.835, 699.972, 784.408), stdev = 104.736
[info]   CI (99.9%): [296.671, 1103.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.025 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.017, 0.024), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 9.000), stdev = 2.000
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 65.57% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4979876.908 ops/s
[info] # Warmup Iteration   2: 3883786.190 ops/s
[info] # Warmup Iteration   3: 3900731.378 ops/s
[info] # Warmup Iteration   4: 3930294.672 ops/s
[info] # Warmup Iteration   5: 3913808.277 ops/s
[info] Iteration   1: 3915442.401 ops/s
[info]                  ·gc.alloc.rate:                   716.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3921423.530 ops/s
[info]                  ·gc.alloc.rate:                   717.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     263.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3968005.695 ops/s
[info]                  ·gc.alloc.rate:                   726.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     261.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 3920359.847 ops/s
[info]                  ·gc.alloc.rate:                   717.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     265.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3948712.316 ops/s
[info]                  ·gc.alloc.rate:                   722.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     264.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter":
[info]   3934788.758 ±(99.9%) 87349.689 ops/s [Average]
[info]   (min, avg, max) = (3915442.401, 3934788.758, 3968005.695), stdev = 22684.437
[info]   CI (99.9%): [3847439.069, 4022138.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   720.301 ±(99.9%) 15.952 MB/sec [Average]
[info]   (min, avg, max) = (716.764, 720.301, 726.359), stdev = 4.143
[info]   CI (99.9%): [704.349, 736.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   658.950 ±(99.9%) 14.012 MB/sec [Average]
[info]   (min, avg, max) = (654.424, 658.950, 663.422), stdev = 3.639
[info]   CI (99.9%): [644.938, 672.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   263.474 ±(99.9%) 5.920 B/op [Average]
[info]   (min, avg, max) = (261.321, 263.474, 265.427), stdev = 1.537
[info]   CI (99.9%): [257.554, 269.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.017, 0.025), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.600, 7.000), stdev = 2.191
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay
[info] # Run progress: 67.21% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 283009.069 ops/s
[info] # Warmup Iteration   2: 474553.437 ops/s
[info] # Warmup Iteration   3: 471617.630 ops/s
[info] # Warmup Iteration   4: 469083.721 ops/s
[info] # Warmup Iteration   5: 474252.633 ops/s
[info] Iteration   1: 478073.917 ops/s
[info]                  ·gc.alloc.rate:                   1414.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4370.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 477885.954 ops/s
[info]                  ·gc.alloc.rate:                   1414.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4398.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.343 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 477750.561 ops/s
[info]                  ·gc.alloc.rate:                   1413.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4420.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.274 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 479095.252 ops/s
[info]                  ·gc.alloc.rate:                   1417.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5536.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 478440.462 ops/s
[info]                  ·gc.alloc.rate:                   1415.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4448.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay":
[info]   478249.229 ±(99.9%) 2076.938 ops/s [Average]
[info]   (min, avg, max) = (477750.561, 478249.229, 479095.252), stdev = 539.374
[info]   CI (99.9%): [476172.291, 480326.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1415.350 ±(99.9%) 6.202 MB/sec [Average]
[info]   (min, avg, max) = (1413.842, 1415.350, 1417.877), stdev = 1.611
[info]   CI (99.9%): [1409.148, 1421.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1409.117 ±(99.9%) 597.046 MB/sec [Average]
[info]   (min, avg, max) = (1328.170, 1409.117, 1686.012), stdev = 155.051
[info]   CI (99.9%): [812.071, 2006.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4635.088 ±(99.9%) 1943.467 B/op [Average]
[info]   (min, avg, max) = (4370.830, 4635.088, 5536.501), stdev = 504.712
[info]   CI (99.9%): [2691.621, 6578.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.206 ±(99.9%) 0.418 B/op [Average]
[info]   (min, avg, max) = (0.068, 0.206, 0.343), stdev = 0.108
[info]   CI (99.9%): [≈ 0, 0.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 7.000), stdev = 1.817
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 68.85% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79436.346 ops/s
[info] # Warmup Iteration   2: 976853.973 ops/s
[info] # Warmup Iteration   3: 994587.665 ops/s
[info] # Warmup Iteration   4: 983630.168 ops/s
[info] # Warmup Iteration   5: 995953.701 ops/s
[info] Iteration   1: 983271.671 ops/s
[info]                  ·gc.alloc.rate:                   1214.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2128.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 996552.861 ops/s
[info]                  ·gc.alloc.rate:                   1231.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1582.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 995644.458 ops/s
[info]                  ·gc.alloc.rate:                   1230.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2122.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 984942.332 ops/s
[info]                  ·gc.alloc.rate:                   1217.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2153.280 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 991373.256 ops/s
[info]                  ·gc.alloc.rate:                   1224.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1013.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1609.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson":
[info]   990356.916 ±(99.9%) 23335.282 ops/s [Average]
[info]   (min, avg, max) = (983271.671, 990356.916, 996552.861), stdev = 6060.099
[info]   CI (99.9%): [967021.633, 1013692.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1223.741 ±(99.9%) 28.835 MB/sec [Average]
[info]   (min, avg, max) = (1214.980, 1223.741, 1231.400), stdev = 7.488
[info]   CI (99.9%): [1194.906, 1252.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1944.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1944.000, 1944.000, 1944.000), stdev = 0.001
[info]   CI (99.9%): [1944.000, 1944.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1207.651 ±(99.9%) 701.510 MB/sec [Average]
[info]   (min, avg, max) = (1002.612, 1207.651, 1348.079), stdev = 182.180
[info]   CI (99.9%): [506.142, 1909.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1919.264 ±(99.9%) 1138.021 B/op [Average]
[info]   (min, avg, max) = (1582.814, 1919.264, 2153.280), stdev = 295.540
[info]   CI (99.9%): [781.243, 3057.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.073 ±(99.9%) 0.167 B/op [Average]
[info]   (min, avg, max) = (0.033, 0.073, 0.133), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 16.000), stdev = 5.586
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 70.49% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3313734.242 ops/s
[info] # Warmup Iteration   2: 3515755.825 ops/s
[info] # Warmup Iteration   3: 3463316.628 ops/s
[info] # Warmup Iteration   4: 3508728.886 ops/s
[info] # Warmup Iteration   5: 3538350.857 ops/s
[info] Iteration   1: 3556139.000 ops/s
[info]                  ·gc.alloc.rate:                   415.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 3522573.398 ops/s
[info]                  ·gc.alloc.rate:                   411.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     291.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 3568425.594 ops/s
[info]                  ·gc.alloc.rate:               417.365 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 143.675 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 3554151.451 ops/s
[info]                  ·gc.alloc.rate:                   415.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3588532.050 ops/s
[info]                  ·gc.alloc.rate:                   419.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     286.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   3557964.298 ±(99.9%) 92620.024 ops/s [Average]
[info]   (min, avg, max) = (3522573.398, 3557964.298, 3588532.050), stdev = 24053.126
[info]   CI (99.9%): [3465344.275, 3650584.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   416.117 ±(99.9%) 10.842 MB/sec [Average]
[info]   (min, avg, max) = (411.968, 416.117, 419.679), stdev = 2.816
[info]   CI (99.9%): [405.274, 426.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   184.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (184.000, 184.000, 184.000), stdev = 0.001
[info]   CI (99.9%): [184.000, 184.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   456.552 ±(99.9%) 689.594 MB/sec [Average]
[info]   (min, avg, max) = (325.537, 456.552, 653.736), stdev = 179.085
[info]   CI (99.9%): [≈ 0, 1146.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   201.929 ±(99.9%) 305.601 B/op [Average]
[info]   (min, avg, max) = (143.675, 201.929, 291.083), stdev = 79.364
[info]   CI (99.9%): [≈ 0, 507.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.028), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.600, 11.000), stdev = 4.980
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 72.13% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 114461.886 ops/s
[info] # Warmup Iteration   2: 244863.126 ops/s
[info] # Warmup Iteration   3: 247494.024 ops/s
[info] # Warmup Iteration   4: 250432.094 ops/s
[info] # Warmup Iteration   5: 247401.092 ops/s
[info] Iteration   1: 250315.617 ops/s
[info]                  ·gc.alloc.rate:                   981.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6180.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 249858.868 ops/s
[info]                  ·gc.alloc.rate:                   979.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6216.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.787 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 250703.896 ops/s
[info]                  ·gc.alloc.rate:                   982.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6237.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 250181.455 ops/s
[info]                  ·gc.alloc.rate:                   980.886 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6275.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 250633.563 ops/s
[info]                  ·gc.alloc.rate:                   982.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6297.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay":
[info]   250338.680 ±(99.9%) 1328.068 ops/s [Average]
[info]   (min, avg, max) = (249858.868, 250338.680, 250703.896), stdev = 344.895
[info]   CI (99.9%): [249010.612, 251666.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   981.477 ±(99.9%) 5.185 MB/sec [Average]
[info]   (min, avg, max) = (979.599, 981.477, 982.896), stdev = 1.347
[info]   CI (99.9%): [976.292, 986.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.172 ±(99.9%) 31.003 MB/sec [Average]
[info]   (min, avg, max) = (983.279, 993.172, 1003.321), stdev = 8.051
[info]   CI (99.9%): [962.169, 1024.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6241.476 ±(99.9%) 180.175 B/op [Average]
[info]   (min, avg, max) = (6180.019, 6241.476, 6297.823), stdev = 46.791
[info]   CI (99.9%): [6061.301, 6421.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.125), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.340 ±(99.9%) 0.985 B/op [Average]
[info]   (min, avg, max) = (0.131, 0.340, 0.787), stdev = 0.256
[info]   CI (99.9%): [≈ 0, 1.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 1.095
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce
[info] # Run progress: 73.77% complete, ETA 00:04:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 417241.742 ops/s
[info] # Warmup Iteration   2: 596618.979 ops/s
[info] # Warmup Iteration   3: 605768.260 ops/s
[info] # Warmup Iteration   4: 610842.772 ops/s
[info] # Warmup Iteration   5: 610790.688 ops/s
[info] Iteration   1: 607848.133 ops/s
[info]                  ·gc.alloc.rate:                   1557.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1673.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4330.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 613173.692 ops/s
[info]                  ·gc.alloc.rate:                   1571.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3450.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 608086.286 ops/s
[info]                  ·gc.alloc.rate:                   1558.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4366.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 617504.065 ops/s
[info]                  ·gc.alloc.rate:                   1582.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4314.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 612510.451 ops/s
[info]                  ·gc.alloc.rate:                   1569.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1357.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3485.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce":
[info]   611824.526 ±(99.9%) 15442.719 ops/s [Average]
[info]   (min, avg, max) = (607848.133, 611824.526, 617504.065), stdev = 4010.425
[info]   CI (99.9%): [596381.806, 627267.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1568.001 ±(99.9%) 39.587 MB/sec [Average]
[info]   (min, avg, max) = (1557.823, 1568.001, 1582.543), stdev = 10.281
[info]   CI (99.9%): [1528.413, 1607.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4032.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4032.001, 4032.001, 4032.001), stdev = 0.001
[info]   CI (99.9%): [4032.001, 4032.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1551.203 ±(99.9%) 704.544 MB/sec [Average]
[info]   (min, avg, max) = (1344.859, 1551.203, 1693.329), stdev = 182.968
[info]   CI (99.9%): [846.659, 2255.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3989.462 ±(99.9%) 1834.444 B/op [Average]
[info]   (min, avg, max) = (3450.512, 3989.462, 4366.466), stdev = 476.399
[info]   CI (99.9%): [2155.018, 5823.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.107 ±(99.9%) 0.209 B/op [Average]
[info]   (min, avg, max) = (0.053, 0.107, 0.162), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 11.000), stdev = 2.608
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson
[info] # Run progress: 75.41% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1031501.356 ops/s
[info] # Warmup Iteration   2: 1596625.997 ops/s
[info] # Warmup Iteration   3: 1604636.850 ops/s
[info] # Warmup Iteration   4: 1617721.483 ops/s
[info] # Warmup Iteration   5: 1620824.792 ops/s
[info] Iteration   1: 1607947.242 ops/s
[info]                  ·gc.alloc.rate:               866.692 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      977.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 956.845 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 1605665.070 ops/s
[info]                  ·gc.alloc.rate:               865.476 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 964.746 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   3: 1615723.619 ops/s
[info]                  ·gc.alloc.rate:               870.882 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 643.066 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1589088.772 ops/s
[info]                  ·gc.alloc.rate:                   856.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     986.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1587958.121 ops/s
[info]                  ·gc.alloc.rate:                   855.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     660.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson":
[info]   1601276.565 ±(99.9%) 47097.545 ops/s [Average]
[info]   (min, avg, max) = (1587958.121, 1601276.565, 1615723.619), stdev = 12231.083
[info]   CI (99.9%): [1554179.020, 1648374.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   863.102 ±(99.9%) 25.370 MB/sec [Average]
[info]   (min, avg, max) = (855.951, 863.102, 870.882), stdev = 6.588
[info]   CI (99.9%): [837.732, 888.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   848.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (848.000, 848.000, 848.000), stdev = 0.001
[info]   CI (99.9%): [848.000, 848.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   857.133 ±(99.9%) 680.807 MB/sec [Average]
[info]   (min, avg, max) = (660.418, 857.133, 995.907), stdev = 176.803
[info]   CI (99.9%): [176.326, 1537.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   842.251 ±(99.9%) 671.054 B/op [Average]
[info]   (min, avg, max) = (643.066, 842.251, 986.011), stdev = 174.270
[info]   CI (99.9%): [171.197, 1513.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.071 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.041), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.200, 11.000), stdev = 3.701
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 77.05% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4334076.027 ops/s
[info] # Warmup Iteration   2: 4833825.034 ops/s
[info] # Warmup Iteration   3: 4781672.225 ops/s
[info] # Warmup Iteration   4: 4710292.077 ops/s
[info] # Warmup Iteration   5: 4758200.966 ops/s
[info] Iteration   1: 4887566.716 ops/s
[info]                  ·gc.alloc.rate:                   820.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     316.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4797919.109 ops/s
[info]                  ·gc.alloc.rate:                   805.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     215.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 4830749.063 ops/s
[info]                  ·gc.alloc.rate:                   810.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     215.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 4870033.851 ops/s
[info]                  ·gc.alloc.rate:                   817.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     321.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4875735.824 ops/s
[info]                  ·gc.alloc.rate:                   818.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter":
[info]   4852400.913 ±(99.9%) 143163.475 ops/s [Average]
[info]   (min, avg, max) = (4797919.109, 4852400.913, 4887566.716), stdev = 37179.100
[info]   CI (99.9%): [4709237.438, 4995564.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   814.247 ±(99.9%) 24.051 MB/sec [Average]
[info]   (min, avg, max) = (805.102, 814.247, 820.170), stdev = 6.246
[info]   CI (99.9%): [790.196, 838.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.215 ±(99.9%) 690.673 MB/sec [Average]
[info]   (min, avg, max) = (657.730, 792.215, 994.611), stdev = 179.366
[info]   CI (99.9%): [101.542, 1482.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   256.634 ±(99.9%) 218.634 B/op [Average]
[info]   (min, avg, max) = (214.814, 256.634, 321.307), stdev = 56.779
[info]   CI (99.9%): [38.000, 475.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.019, 0.034), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 10.000), stdev = 3.782
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay
[info] # Run progress: 78.69% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 198229.964 ops/s
[info] # Warmup Iteration   2: 370147.166 ops/s
[info] # Warmup Iteration   3: 380743.994 ops/s
[info] # Warmup Iteration   4: 379022.170 ops/s
[info] # Warmup Iteration   5: 380701.636 ops/s
[info] Iteration   1: 383187.055 ops/s
[info]                  ·gc.alloc.rate:                   1319.174 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5433.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 382947.798 ops/s
[info]                  ·gc.alloc.rate:                   1318.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5475.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.428 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 383106.050 ops/s
[info]                  ·gc.alloc.rate:                   1318.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5502.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.342 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 378912.681 ops/s
[info]                  ·gc.alloc.rate:               1304.402 MB/sec
[info]                  ·gc.alloc.rate.norm:          5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5589.129 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 382478.190 ops/s
[info]                  ·gc.alloc.rate:                   1316.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5553.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay":
[info]   382126.355 ±(99.9%) 6997.994 ops/s [Average]
[info]   (min, avg, max) = (378912.681, 382126.355, 383187.055), stdev = 1817.357
[info]   CI (99.9%): [375128.361, 389124.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1315.473 ±(99.9%) 24.133 MB/sec [Average]
[info]   (min, avg, max) = (1304.402, 1315.473, 1319.174), stdev = 6.267
[info]   CI (99.9%): [1291.340, 1339.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5416.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5416.001, 5416.001, 5416.001), stdev = 0.001
[info]   CI (99.9%): [5416.001, 5416.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1338.474 ±(99.9%) 40.797 MB/sec [Average]
[info]   (min, avg, max) = (1323.554, 1338.474, 1350.069), stdev = 10.595
[info]   CI (99.9%): [1297.677, 1379.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5510.888 ±(99.9%) 237.194 B/op [Average]
[info]   (min, avg, max) = (5433.986, 5510.888, 5589.129), stdev = 61.599
[info]   CI (99.9%): [5273.694, 5748.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.222 ±(99.9%) 0.683 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.222, 0.428), stdev = 0.177
[info]   CI (99.9%): [≈ 0, 0.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 11.000), stdev = 2.646
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce
[info] # Run progress: 80.33% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 145617.797 ops/s
[info] # Warmup Iteration   2: 331191.126 ops/s
[info] # Warmup Iteration   3: 341568.544 ops/s
[info] # Warmup Iteration   4: 345618.023 ops/s
[info] # Warmup Iteration   5: 339934.569 ops/s
[info] Iteration   1: 342814.607 ops/s
[info]                  ·gc.alloc.rate:                   1009.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4567.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.478 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 342112.931 ops/s
[info]                  ·gc.alloc.rate:               1007.270 MB/sec
[info]                  ·gc.alloc.rate.norm:          4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      999.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4598.359 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 345313.595 ops/s
[info]                  ·gc.alloc.rate:                   1019.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4536.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 345072.374 ops/s
[info]                  ·gc.alloc.rate:               1015.959 MB/sec
[info]                  ·gc.alloc.rate.norm:          4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4596.899 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 345890.388 ops/s
[info]                  ·gc.alloc.rate:                   1018.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4598.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.379 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce":
[info]   344240.779 ±(99.9%) 6421.865 ops/s [Average]
[info]   (min, avg, max) = (342112.931, 344240.779, 345890.388), stdev = 1667.738
[info]   CI (99.9%): [337818.914, 350662.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1014.083 ±(99.9%) 21.124 MB/sec [Average]
[info]   (min, avg, max) = (1007.270, 1014.083, 1019.489), stdev = 5.486
[info]   CI (99.9%): [992.959, 1035.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4632.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4632.001, 4632.001, 4632.001), stdev = 0.001
[info]   CI (99.9%): [4632.001, 4632.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1002.568 ±(99.9%) 25.864 MB/sec [Average]
[info]   (min, avg, max) = (995.292, 1002.568, 1010.971), stdev = 6.717
[info]   CI (99.9%): [976.703, 1028.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4579.440 ±(99.9%) 106.209 B/op [Average]
[info]   (min, avg, max) = (4536.012, 4579.440, 4598.359), stdev = 27.582
[info]   CI (99.9%): [4473.231, 4685.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.190 ±(99.9%) 0.861 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.190, 0.478), stdev = 0.224
[info]   CI (99.9%): [≈ 0, 1.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson
[info] # Run progress: 81.97% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 76682.056 ops/s
[info] # Warmup Iteration   2: 1057437.577 ops/s
[info] # Warmup Iteration   3: 1054417.674 ops/s
[info] # Warmup Iteration   4: 1053719.560 ops/s
[info] # Warmup Iteration   5: 1042122.776 ops/s
[info] Iteration   1: 1058171.138 ops/s
[info]                  ·gc.alloc.rate:                   1097.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1972.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1059435.431 ops/s
[info]                  ·gc.alloc.rate:                   1099.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1486.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1048907.112 ops/s
[info]                  ·gc.alloc.rate:                   1088.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1507.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1054896.114 ops/s
[info]                  ·gc.alloc.rate:                   1094.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1503.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1070291.950 ops/s
[info]                  ·gc.alloc.rate:                   1110.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1982.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson":
[info]   1058340.349 ±(99.9%) 30130.970 ops/s [Average]
[info]   (min, avg, max) = (1048907.112, 1058340.349, 1070291.950), stdev = 7824.917
[info]   CI (99.9%): [1028209.379, 1088471.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1097.861 ±(99.9%) 31.257 MB/sec [Average]
[info]   (min, avg, max) = (1088.069, 1097.861, 1110.258), stdev = 8.117
[info]   CI (99.9%): [1066.604, 1129.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1138.043 ±(99.9%) 702.960 MB/sec [Average]
[info]   (min, avg, max) = (1001.290, 1138.043, 1348.821), stdev = 182.556
[info]   CI (99.9%): [435.083, 1841.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1690.677 ±(99.9%) 1009.451 B/op [Average]
[info]   (min, avg, max) = (1486.888, 1690.677, 1982.670), stdev = 262.151
[info]   CI (99.9%): [681.226, 2700.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.125), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.105 ±(99.9%) 0.217 B/op [Average]
[info]   (min, avg, max) = (0.031, 0.105, 0.186), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 11.000), stdev = 3.564
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter
[info] # Run progress: 83.61% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3579747.628 ops/s
[info] # Warmup Iteration   2: 3917406.918 ops/s
[info] # Warmup Iteration   3: 3891351.810 ops/s
[info] # Warmup Iteration   4: 4037461.166 ops/s
[info] # Warmup Iteration   5: 4044972.620 ops/s
[info] Iteration   1: 4038798.111 ops/s
[info]                  ·gc.alloc.rate:                   595.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     254.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4051671.441 ops/s
[info]                  ·gc.alloc.rate:               597.499 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 126.927 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 4060109.413 ops/s
[info]                  ·gc.alloc.rate:                   598.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     253.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4040004.008 ops/s
[info]                  ·gc.alloc.rate:               595.748 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 255.745 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 4021473.303 ops/s
[info]                  ·gc.alloc.rate:                   593.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     257.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter":
[info]   4042411.255 ±(99.9%) 56337.411 ops/s [Average]
[info]   (min, avg, max) = (4021473.303, 4042411.255, 4060109.413), stdev = 14630.647
[info]   CI (99.9%): [3986073.844, 4098748.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   596.117 ±(99.9%) 8.337 MB/sec [Average]
[info]   (min, avg, max) = (593.014, 596.117, 598.725), stdev = 2.165
[info]   CI (99.9%): [587.779, 604.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   232.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (232.000, 232.000, 232.000), stdev = 0.001
[info]   CI (99.9%): [232.000, 232.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   589.979 ±(99.9%) 566.391 MB/sec [Average]
[info]   (min, avg, max) = (326.892, 589.979, 659.060), stdev = 147.090
[info]   CI (99.9%): [23.588, 1156.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   229.675 ±(99.9%) 221.259 B/op [Average]
[info]   (min, avg, max) = (126.927, 229.675, 257.839), stdev = 57.460
[info]   CI (99.9%): [8.416, 450.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.064 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.033), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 7.000), stdev = 2.828
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay
[info] # Run progress: 85.25% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 99698.918 ops/s
[info] # Warmup Iteration   2: 250689.162 ops/s
[info] # Warmup Iteration   3: 256029.324 ops/s
[info] # Warmup Iteration   4: 258733.068 ops/s
[info] # Warmup Iteration   5: 260363.297 ops/s
[info] Iteration   1: 257221.171 ops/s
[info]                  ·gc.alloc.rate:                   948.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6014.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 256538.495 ops/s
[info]                  ·gc.alloc.rate:                   945.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6054.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.639 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 258559.955 ops/s
[info]                  ·gc.alloc.rate:                   953.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4026.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 256120.302 ops/s
[info]                  ·gc.alloc.rate:                   944.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6126.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 257041.907 ops/s
[info]                  ·gc.alloc.rate:               947.629 MB/sec
[info]                  ·gc.alloc.rate.norm:          5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6128.553 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay":
[info]   257096.366 ±(99.9%) 3562.915 ops/s [Average]
[info]   (min, avg, max) = (256120.302, 257096.366, 258559.955), stdev = 925.278
[info]   CI (99.9%): [253533.451, 260659.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   947.837 ±(99.9%) 13.179 MB/sec [Average]
[info]   (min, avg, max) = (944.232, 947.837, 953.259), stdev = 3.423
[info]   CI (99.9%): [934.658, 961.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.002, 5800.002, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.001, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.200 ±(99.9%) 569.906 MB/sec [Average]
[info]   (min, avg, max) = (661.765, 926.200, 1001.309), stdev = 148.003
[info]   CI (99.9%): [356.294, 1496.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5669.979 ±(99.9%) 3542.794 B/op [Average]
[info]   (min, avg, max) = (4026.435, 5669.979, 6128.553), stdev = 920.052
[info]   CI (99.9%): [2127.185, 9212.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.204 ±(99.9%) 0.959 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.204, 0.639), stdev = 0.249
[info]   CI (99.9%): [≈ 0, 1.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.000, 12.000), stdev = 4.123
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce
[info] # Run progress: 86.89% complete, ETA 00:02:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127370.496 ops/s
[info] # Warmup Iteration   2: 328522.766 ops/s
[info] # Warmup Iteration   3: 342022.431 ops/s
[info] # Warmup Iteration   4: 342925.042 ops/s
[info] # Warmup Iteration   5: 335963.175 ops/s
[info] Iteration   1: 338336.173 ops/s
[info]                  ·gc.alloc.rate:                   987.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4628.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.387 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 339185.415 ops/s
[info]                  ·gc.alloc.rate:               989.982 MB/sec
[info]                  ·gc.alloc.rate.norm:          4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      999.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4638.048 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 340807.291 ops/s
[info]                  ·gc.alloc.rate:                   994.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4634.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.288 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 341326.318 ops/s
[info]                  ·gc.alloc.rate:                   996.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4647.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 343630.213 ops/s
[info]                  ·gc.alloc.rate:                   1003.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4628.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce":
[info]   340657.082 ±(99.9%) 7906.107 ops/s [Average]
[info]   (min, avg, max) = (338336.173, 340657.082, 343630.213), stdev = 2053.191
[info]   CI (99.9%): [332750.975, 348563.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   994.300 ±(99.9%) 23.111 MB/sec [Average]
[info]   (min, avg, max) = (987.534, 994.300, 1003.002), stdev = 6.002
[info]   CI (99.9%): [971.189, 1017.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4592.001, 4592.001, 4592.001), stdev = 0.001
[info]   CI (99.9%): [4592.001, 4592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1003.665 ±(99.9%) 24.231 MB/sec [Average]
[info]   (min, avg, max) = (995.281, 1003.665, 1010.933), stdev = 6.293
[info]   CI (99.9%): [979.434, 1027.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4635.253 ±(99.9%) 30.848 B/op [Average]
[info]   (min, avg, max) = (4628.021, 4635.253, 4647.410), stdev = 8.011
[info]   CI (99.9%): [4604.405, 4666.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.173 ±(99.9%) 0.612 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.173, 0.387), stdev = 0.159
[info]   CI (99.9%): [≈ 0, 0.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 10.000), stdev = 2.168
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 88.52% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 92931.484 ops/s
[info] # Warmup Iteration   2: 986973.023 ops/s
[info] # Warmup Iteration   3: 1005233.337 ops/s
[info] # Warmup Iteration   4: 1008515.376 ops/s
[info] # Warmup Iteration   5: 1008794.365 ops/s
[info] Iteration   1: 1003739.763 ops/s
[info]                  ·gc.alloc.rate:                   995.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1557.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 999585.092 ops/s
[info]                  ·gc.alloc.rate:                   991.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1570.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1000926.715 ops/s
[info]                  ·gc.alloc.rate:                   992.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1576.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 992708.643 ops/s
[info]                  ·gc.alloc.rate:               984.345 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1594.205 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 994887.429 ops/s
[info]                  ·gc.alloc.rate:                   986.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1597.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson":
[info]   998369.529 ±(99.9%) 17330.770 ops/s [Average]
[info]   (min, avg, max) = (992708.643, 998369.529, 1003739.763), stdev = 4500.746
[info]   CI (99.9%): [981038.759, 1015700.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   989.975 ±(99.9%) 17.210 MB/sec [Average]
[info]   (min, avg, max) = (984.345, 989.975, 995.314), stdev = 4.469
[info]   CI (99.9%): [972.766, 1007.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1002.105 ±(99.9%) 24.988 MB/sec [Average]
[info]   (min, avg, max) = (993.667, 1002.105, 1009.957), stdev = 6.489
[info]   CI (99.9%): [977.117, 1027.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1579.172 ±(99.9%) 63.976 B/op [Average]
[info]   (min, avg, max) = (1557.418, 1579.172, 1597.048), stdev = 16.614
[info]   CI (99.9%): [1515.196, 1643.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.106 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.066), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 9.000), stdev = 2.121
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 90.16% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1922046.601 ops/s
[info] # Warmup Iteration   2: 2130532.345 ops/s
[info] # Warmup Iteration   3: 2148477.136 ops/s
[info] # Warmup Iteration   4: 2166915.861 ops/s
[info] # Warmup Iteration   5: 2148090.086 ops/s
[info] Iteration   1: 2146813.866 ops/s
[info]                  ·gc.alloc.rate:                   425.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     476.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2148047.423 ops/s
[info]                  ·gc.alloc.rate:               425.994 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 238.187 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2144065.957 ops/s
[info]                  ·gc.alloc.rate:               425.192 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 239.124 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2124265.210 ops/s
[info]                  ·gc.alloc.rate:                   421.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     483.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2150743.566 ops/s
[info]                  ·gc.alloc.rate:               426.520 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 239.107 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter":
[info]   2142787.205 ±(99.9%) 40927.793 ops/s [Average]
[info]   (min, avg, max) = (2124265.210, 2142787.205, 2150743.566), stdev = 10628.818
[info]   CI (99.9%): [2101859.412, 2183714.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   424.950 ±(99.9%) 8.119 MB/sec [Average]
[info]   (min, avg, max) = (421.275, 424.950, 426.520), stdev = 2.109
[info]   CI (99.9%): [416.830, 433.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (312.000, 312.000, 312.000), stdev = 0.001
[info]   CI (99.9%): [312.000, 312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   456.235 ±(99.9%) 686.772 MB/sec [Average]
[info]   (min, avg, max) = (325.212, 456.235, 652.748), stdev = 178.353
[info]   CI (99.9%): [≈ 0, 1143.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   335.301 ±(99.9%) 508.879 B/op [Average]
[info]   (min, avg, max) = (238.187, 335.301, 483.431), stdev = 132.154
[info]   CI (99.9%): [≈ 0, 844.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.065 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.031), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 91.80% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96959.026 ops/s
[info] # Warmup Iteration   2: 246142.270 ops/s
[info] # Warmup Iteration   3: 248452.831 ops/s
[info] # Warmup Iteration   4: 248591.511 ops/s
[info] # Warmup Iteration   5: 247985.849 ops/s
[info] Iteration   1: 248707.117 ops/s
[info]                  ·gc.alloc.rate:                   957.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6220.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 249139.664 ops/s
[info]                  ·gc.alloc.rate:                   958.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6234.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.526 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 245404.558 ops/s
[info]                  ·gc.alloc.rate:                   944.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6372.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.267 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 248368.236 ops/s
[info]                  ·gc.alloc.rate:               956.095 MB/sec
[info]                  ·gc.alloc.rate.norm:          6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4212.742 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 248277.140 ops/s
[info]                  ·gc.alloc.rate:                   955.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6344.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.396 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay":
[info]   247979.343 ±(99.9%) 5693.694 ops/s [Average]
[info]   (min, avg, max) = (245404.558, 247979.343, 249139.664), stdev = 1478.634
[info]   CI (99.9%): [242285.649, 253673.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   954.580 ±(99.9%) 21.832 MB/sec [Average]
[info]   (min, avg, max) = (944.699, 954.580, 958.999), stdev = 5.670
[info]   CI (99.9%): [932.748, 976.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6056.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6056.002, 6056.002, 6056.002), stdev = 0.001
[info]   CI (99.9%): [6056.002, 6056.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.190 ±(99.9%) 562.656 MB/sec [Average]
[info]   (min, avg, max) = (665.090, 926.190, 1001.309), stdev = 146.120
[info]   CI (99.9%): [363.533, 1488.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5876.797 ±(99.9%) 3591.139 B/op [Average]
[info]   (min, avg, max) = (4212.742, 5876.797, 6372.030), stdev = 932.607
[info]   CI (99.9%): [2285.658, 9467.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.264 ±(99.9%) 0.801 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.264, 0.526), stdev = 0.208
[info]   CI (99.9%): [≈ 0, 1.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 10.000), stdev = 3.847
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce
[info] # Run progress: 93.44% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 345447.979 ops/s
[info] # Warmup Iteration   2: 599143.752 ops/s
[info] # Warmup Iteration   3: 637226.295 ops/s
[info] # Warmup Iteration   4: 622880.578 ops/s
[info] # Warmup Iteration   5: 631151.571 ops/s
[info] Iteration   1: 632982.098 ops/s
[info]                  ·gc.alloc.rate:                   1239.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3289.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 631754.533 ops/s
[info]                  ·gc.alloc.rate:                   1236.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2488.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 634350.811 ops/s
[info]                  ·gc.alloc.rate:                   1241.886 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3320.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 634384.726 ops/s
[info]                  ·gc.alloc.rate:                   1241.970 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3338.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 625446.664 ops/s
[info]                  ·gc.alloc.rate:                   1224.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2546.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce":
[info]   631783.767 ±(99.9%) 14272.133 ops/s [Average]
[info]   (min, avg, max) = (625446.664, 631783.767, 634384.726), stdev = 3706.428
[info]   CI (99.9%): [617511.633, 646055.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1236.863 ±(99.9%) 27.977 MB/sec [Average]
[info]   (min, avg, max) = (1224.435, 1236.863, 1241.970), stdev = 7.266
[info]   CI (99.9%): [1208.886, 1264.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3080.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3080.001, 3080.001, 3080.001), stdev = 0.001
[info]   CI (99.9%): [3080.001, 3080.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1204.011 ±(99.9%) 697.728 MB/sec [Average]
[info]   (min, avg, max) = (999.314, 1204.011, 1346.163), stdev = 181.198
[info]   CI (99.9%): [506.283, 1901.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2996.633 ±(99.9%) 1687.787 B/op [Average]
[info]   (min, avg, max) = (2488.501, 2996.633, 3338.393), stdev = 438.313
[info]   CI (99.9%): [1308.845, 4684.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.062 ±(99.9%) 0.089 B/op [Average]
[info]   (min, avg, max) = (0.052, 0.062, 0.104), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 9.000), stdev = 2.049
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson
[info] # Run progress: 95.08% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1109459.994 ops/s
[info] # Warmup Iteration   2: 1582106.123 ops/s
[info] # Warmup Iteration   3: 1580026.636 ops/s
[info] # Warmup Iteration   4: 1584362.149 ops/s
[info] # Warmup Iteration   5: 1588379.060 ops/s
[info] Iteration   1: 1590626.895 ops/s
[info]                  ·gc.alloc.rate:                   663.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     647.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1588985.985 ops/s
[info]                  ·gc.alloc.rate:                   662.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     651.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1605004.605 ops/s
[info]                  ·gc.alloc.rate:                   669.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     647.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1593950.268 ops/s
[info]                  ·gc.alloc.rate:                   664.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     654.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1604530.829 ops/s
[info]                  ·gc.alloc.rate:                   669.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     652.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson":
[info]   1596619.716 ±(99.9%) 29464.711 ops/s [Average]
[info]   (min, avg, max) = (1588985.985, 1596619.716, 1605004.605), stdev = 7651.892
[info]   CI (99.9%): [1567155.006, 1626084.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   665.734 ±(99.9%) 12.262 MB/sec [Average]
[info]   (min, avg, max) = (662.573, 665.734, 669.223), stdev = 3.184
[info]   CI (99.9%): [653.472, 677.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   660.273 ±(99.9%) 16.226 MB/sec [Average]
[info]   (min, avg, max) = (654.743, 660.273, 665.401), stdev = 4.214
[info]   CI (99.9%): [644.047, 676.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   650.621 ±(99.9%) 11.913 B/op [Average]
[info]   (min, avg, max) = (647.349, 650.621, 654.471), stdev = 3.094
[info]   CI (99.9%): [638.707, 662.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.036 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.025, 0.041), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 96.72% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6050463.564 ops/s
[info] # Warmup Iteration   2: 6052842.676 ops/s
[info] # Warmup Iteration   3: 6147649.213 ops/s
[info] # Warmup Iteration   4: 6147689.892 ops/s
[info] # Warmup Iteration   5: 6103505.424 ops/s
[info] Iteration   1: 6145097.733 ops/s
[info]                  ·gc.alloc.rate:                   312.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.555 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6327168.882 ops/s
[info]                  ·gc.alloc.rate:                   321.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 6391892.125 ops/s
[info]                  ·gc.alloc.rate:               325.043 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 80.210 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 6426522.662 ops/s
[info]                  ·gc.alloc.rate:                   326.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 6246584.474 ops/s
[info]                  ·gc.alloc.rate:                   317.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter":
[info]   6307453.175 ±(99.9%) 438028.630 ops/s [Average]
[info]   (min, avg, max) = (6145097.733, 6307453.175, 6426522.662), stdev = 113754.644
[info]   CI (99.9%): [5869424.545, 6745481.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   320.738 ±(99.9%) 22.303 MB/sec [Average]
[info]   (min, avg, max) = (312.473, 320.738, 326.799), stdev = 5.792
[info]   CI (99.9%): [298.435, 343.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.815 ±(99.9%) 1.084 MB/sec [Average]
[info]   (min, avg, max) = (325.540, 325.815, 326.209), stdev = 0.282
[info]   CI (99.9%): [324.731, 326.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   81.288 ±(99.9%) 5.631 B/op [Average]
[info]   (min, avg, max) = (79.777, 81.288, 83.346), stdev = 1.462
[info]   CI (99.9%): [75.656, 86.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.454 ±(99.9%) 3.686 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.454, 2.166), stdev = 0.957
[info]   CI (99.9%): [≈ 0, 4.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.116 ±(99.9%) 0.944 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.116, 0.555), stdev = 0.245
[info]   CI (99.9%): [≈ 0, 1.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay
[info] # Run progress: 98.36% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 92823.259 ops/s
[info] # Warmup Iteration   2: 196281.999 ops/s
[info] # Warmup Iteration   3: 198869.456 ops/s
[info] # Warmup Iteration   4: 198347.630 ops/s
[info] # Warmup Iteration   5: 198801.963 ops/s
[info] Iteration   1: 200222.029 ops/s
[info]                  ·gc.alloc.rate:                   1105.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7752.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.491 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 198591.928 ops/s
[info]                  ·gc.alloc.rate:                   1096.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10484.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.330 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 200549.229 ops/s
[info]                  ·gc.alloc.rate:                   1107.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7828.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.653 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 198985.520 ops/s
[info]                  ·gc.alloc.rate:                   1098.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7932.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 198342.121 ops/s
[info]                  ·gc.alloc.rate:                   1095.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10653.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.330 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay":
[info]   199338.165 ±(99.9%) 3812.538 ops/s [Average]
[info]   (min, avg, max) = (198342.121, 199338.165, 200549.229), stdev = 990.104
[info]   CI (99.9%): [195525.627, 203150.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1100.804 ±(99.9%) 21.016 MB/sec [Average]
[info]   (min, avg, max) = (1095.324, 1100.804, 1107.467), stdev = 5.458
[info]   CI (99.9%): [1079.788, 1121.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8688.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8688.002, 8688.002, 8688.002), stdev = 0.001
[info]   CI (99.9%): [8688.002, 8688.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1130.888 ±(99.9%) 712.440 MB/sec [Average]
[info]   (min, avg, max) = (986.610, 1130.888, 1343.158), stdev = 185.019
[info]   CI (99.9%): [418.448, 1843.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8930.349 ±(99.9%) 5770.806 B/op [Average]
[info]   (min, avg, max) = (7752.316, 8930.349, 10653.800), stdev = 1498.660
[info]   CI (99.9%): [3159.543, 14701.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.394 ±(99.9%) 0.714 B/op [Average]
[info]   (min, avg, max) = (0.165, 0.394, 0.653), stdev = 0.185
[info]   CI (99.9%): [≈ 0, 1.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 8.000), stdev = 1.732
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:16:23
[info] Benchmark                                                                     Mode  Cnt         Score        Error   Units
[info] CodecBenchmark.readAnyRefsCirce                                              thrpt    5   1178405.353 ±  55655.515   ops/s
[info] CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate                               thrpt    5      1845.603 ±     87.147  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                          thrpt    5      2464.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1829.029 ±    729.793  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2441.003 ±    923.578    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.054 ±      0.134  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.072 ±      0.178    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.count                                    thrpt    5        27.000               counts
[info] CodecBenchmark.readAnyRefsCirce:·gc.time                                     thrpt    5        52.000                   ms
[info] CodecBenchmark.readAnyRefsJackson                                            thrpt    5   1782544.009 ±  69784.826   ops/s
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                             thrpt    5      1268.986 ±     49.810  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                        thrpt    5      1120.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1280.298 ±    578.104  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1130.696 ±    533.314    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.046 ±      0.036  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.040 ±      0.032    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.count                                  thrpt    5        19.000               counts
[info] CodecBenchmark.readAnyRefsJackson:·gc.time                                   thrpt    5        36.000                   ms
[info] CodecBenchmark.readAnyRefsJsoniter                                           thrpt    5   6601090.400 ± 125892.511   ops/s
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                            thrpt    5      1141.284 ±     21.744  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                       thrpt    5       272.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1135.054 ±    685.857  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       270.533 ±    163.956    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.050 ±      0.091  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.012 ±      0.022    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.count                                 thrpt    5        17.000               counts
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.time                                  thrpt    5        35.000                   ms
[info] CodecBenchmark.readAnyRefsPlay                                               thrpt    5    409493.755 ±   7846.657   ops/s
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                thrpt    5      1082.785 ±     20.737  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                           thrpt    5      4160.001 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1130.632 ±    698.411  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      4341.505 ±   2607.565    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.067 ±      0.036  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.256 ±      0.136    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.count                                     thrpt    5        17.000               counts
[info] CodecBenchmark.readAnyRefsPlay:·gc.time                                      thrpt    5        41.000                   ms
[info] CodecBenchmark.readArraysCirce                                               thrpt    5    539705.400 ±  12393.451   ops/s
[info] CodecBenchmark.readArraysCirce:·gc.alloc.rate                                thrpt    5      1764.645 ±     40.546  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.alloc.rate.norm                           thrpt    5      5144.001 ±      0.001    B/op
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                       thrpt    5      1761.078 ±    587.793  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5132.894 ±   1663.755    B/op
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                   thrpt    5         0.033 ±      0.044  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.097 ±      0.129    B/op
[info] CodecBenchmark.readArraysCirce:·gc.count                                     thrpt    5        26.000               counts
[info] CodecBenchmark.readArraysCirce:·gc.time                                      thrpt    5        56.000                   ms
[info] CodecBenchmark.readArraysJackson                                             thrpt    5   1224753.214 ±  56570.231   ops/s
[info] CodecBenchmark.readArraysJackson:·gc.alloc.rate                              thrpt    5      1151.957 ±     52.508  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.alloc.rate.norm                         thrpt    5      1480.000 ±      0.001    B/op
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                     thrpt    5      1199.783 ±    701.696  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5      1540.991 ±    884.439    B/op
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                 thrpt    5         0.037 ±      0.036  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.048 ±      0.046    B/op
[info] CodecBenchmark.readArraysJackson:·gc.count                                   thrpt    5        18.000               counts
[info] CodecBenchmark.readArraysJackson:·gc.time                                    thrpt    5        47.000                   ms
[info] CodecBenchmark.readArraysJsoniter                                            thrpt    5   2377979.848 ±  48344.317   ops/s
[info] CodecBenchmark.readArraysJsoniter:·gc.alloc.rate                             thrpt    5      1197.079 ±     24.310  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                        thrpt    5       792.000 ±      0.001    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5      1204.117 ±    723.530  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5       796.247 ±    466.388    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5         0.037 ±      0.154  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.025 ±      0.102    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.count                                  thrpt    5        18.000               counts
[info] CodecBenchmark.readArraysJsoniter:·gc.time                                   thrpt    5        32.000                   ms
[info] CodecBenchmark.readArraysPlay                                                thrpt    5    221630.494 ±   4159.166   ops/s
[info] CodecBenchmark.readArraysPlay:·gc.alloc.rate                                 thrpt    5      1312.984 ±     24.623  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.alloc.rate.norm                            thrpt    5      9320.002 ±      0.001    B/op
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                        thrpt    5      1338.005 ±     40.000  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5      9497.962 ±    418.509    B/op
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                    thrpt    5         0.050 ±      0.091  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.355 ±      0.647    B/op
[info] CodecBenchmark.readArraysPlay:·gc.count                                      thrpt    5        20.000               counts
[info] CodecBenchmark.readArraysPlay:·gc.time                                       thrpt    5        33.000                   ms
[info] CodecBenchmark.readBitSetsJackson                                            thrpt    5   1544391.332 ±   8674.765   ops/s
[info] CodecBenchmark.readBitSetsJackson:·gc.alloc.rate                             thrpt    5       950.253 ±      5.354  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                        thrpt    5       968.000 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                    thrpt    5       936.040 ±    565.587  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5       953.618 ±    578.430    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.037 ±      0.105  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.038 ±      0.107    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.count                                  thrpt    5        14.000               counts
[info] CodecBenchmark.readBitSetsJackson:·gc.time                                   thrpt    5        20.000                   ms
[info] CodecBenchmark.readBitSetsJsoniter                                           thrpt    5   8851529.189 ± 133498.382   ops/s
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                            thrpt    5       945.203 ±     14.308  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                       thrpt    5       168.000 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       928.639 ±    558.481  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       165.106 ±    100.487    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.054 ±      0.091  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.010 ±      0.016    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.count                                 thrpt    5        14.000               counts
[info] CodecBenchmark.readBitSetsJsoniter:·gc.time                                  thrpt    5        18.000                   ms
[info] CodecBenchmark.readBitSetsPlay                                               thrpt    5    252985.976 ±   5469.307   ops/s
[info] CodecBenchmark.readBitSetsPlay:·gc.alloc.rate                                thrpt    5      1148.797 ±     24.833  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                           thrpt    5      7144.002 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1132.176 ±    706.138  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      7041.880 ±   4426.300    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.054 ±      0.072  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.337 ±      0.443    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.count                                     thrpt    5        17.000               counts
[info] CodecBenchmark.readBitSetsPlay:·gc.time                                      thrpt    5        34.000                   ms
[info] CodecBenchmark.readExtractFieldsCirce                                        thrpt    5    541462.695 ±  10586.687   ops/s
[info] CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate                         thrpt    5      1808.926 ±     35.373  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                    thrpt    5      5256.001 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                thrpt    5      1829.669 ±    728.017  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm           thrpt    5      5315.847 ±   2092.016    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space            thrpt    5         0.058 ±      0.067  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.169 ±      0.191    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.count                              thrpt    5        27.000               counts
[info] CodecBenchmark.readExtractFieldsCirce:·gc.time                               thrpt    5        52.000                   ms
[info] CodecBenchmark.readExtractFieldsJackson                                      thrpt    5    696520.731 ±  15130.353   ops/s
[info] CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate                       thrpt    5       871.276 ±     18.888  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                  thrpt    5      1968.001 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space              thrpt    5       867.796 ±    710.503  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm         thrpt    5      1960.148 ±   1604.746    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space          thrpt    5         0.025 ±      0.036  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.056 ±      0.080    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.count                            thrpt    5        13.000               counts
[info] CodecBenchmark.readExtractFieldsJackson:·gc.time                             thrpt    5        25.000                   ms
[info] CodecBenchmark.readExtractFieldsJsoniter                                     thrpt    5   5241614.947 ± 340232.286   ops/s
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                      thrpt    5       239.881 ±     15.572  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                 thrpt    5        72.000 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space             thrpt    5       232.446 ±    517.844  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm        thrpt    5        69.358 ±    155.098    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space         thrpt    5         0.448 ±      3.766  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm    thrpt    5         0.134 ±      1.125    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.count                           thrpt    5         4.000               counts
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.time                            thrpt    5        12.000                   ms
[info] CodecBenchmark.readExtractFieldsPlay                                         thrpt    5    200155.783 ±   2326.061   ops/s
[info] CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate                          thrpt    5      1111.417 ±     12.864  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                     thrpt    5      8736.002 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                 thrpt    5      1130.902 ±    690.789  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm            thrpt    5      8887.733 ±   5382.691    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space             thrpt    5         0.054 ±      0.091  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.426 ±      0.720    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.count                               thrpt    5        17.000               counts
[info] CodecBenchmark.readExtractFieldsPlay:·gc.time                                thrpt    5        31.000                   ms
[info] CodecBenchmark.readIntAndLongMapsJsoniter                                    thrpt    5   3958537.941 ±  41802.842   ops/s
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                     thrpt    5      1872.014 ±     19.895  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                thrpt    5       744.000 ±      0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space            thrpt    5      1827.423 ±    719.398  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm       thrpt    5       726.159 ±    279.967    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space        thrpt    5         0.062 ±      0.150  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.025 ±      0.059    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                          thrpt    5        27.000               counts
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                           thrpt    5        36.000                   ms
[info] CodecBenchmark.readIntAndLongMapsPlay                                        thrpt    5    251171.005 ±   1870.493   ops/s
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                         thrpt    5      1335.961 ±      9.895  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                    thrpt    5      8368.002 ±      0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                thrpt    5      1338.375 ±     41.440  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm           thrpt    5      8383.223 ±    307.702    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space            thrpt    5         0.058 ±      0.183  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.365 ±      1.145    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.count                              thrpt    5        20.000               counts
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.time                               thrpt    5        31.000                   ms
[info] CodecBenchmark.readIterablesCirce                                            thrpt    5    559934.947 ±   8671.838   ops/s
[info] CodecBenchmark.readIterablesCirce:·gc.alloc.rate                             thrpt    5      1961.770 ±     30.338  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm                        thrpt    5      5512.001 ±      0.001    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                    thrpt    5      1967.432 ±    588.867  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm               thrpt    5      5526.704 ±   1583.897    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                thrpt    5         0.054 ±      0.091  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.152 ±      0.256    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.count                                  thrpt    5        29.000               counts
[info] CodecBenchmark.readIterablesCirce:·gc.time                                   thrpt    5        45.000                   ms
[info] CodecBenchmark.readIterablesJackson                                          thrpt    5    505841.954 ±  22330.699   ops/s
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate                           thrpt    5       514.453 ±     22.718  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                      thrpt    5      1600.001 ±      0.001    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                  thrpt    5       526.155 ±    693.552  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm             thrpt    5      1638.203 ±   2179.826    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space              thrpt    5         0.050 ±      0.245  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.157 ±      0.774    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.count                                thrpt    5         8.000               counts
[info] CodecBenchmark.readIterablesJackson:·gc.time                                 thrpt    5        30.000                   ms
[info] CodecBenchmark.readIterablesJsoniter                                         thrpt    5   3047411.370 ± 524224.880   ops/s
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                          thrpt    5       821.291 ±    141.322  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                     thrpt    5       424.000 ±      0.001    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                 thrpt    5       858.796 ±    697.215  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm            thrpt    5       445.562 ±    399.271    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space             thrpt    5         0.050 ±      0.156  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.026 ±      0.080    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.count                               thrpt    5        13.000               counts
[info] CodecBenchmark.readIterablesJsoniter:·gc.time                                thrpt    5        20.000                   ms
[info] CodecBenchmark.readIterablesPlay                                             thrpt    5    170399.051 ±   2551.667   ops/s
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate                              thrpt    5      1164.538 ±     17.477  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                         thrpt    5     10752.003 ±      0.001    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                     thrpt    5      1197.923 ±    681.651  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                thrpt    5     11062.497 ±   6359.417    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                 thrpt    5         0.046 ±      0.154  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.424 ±      1.433    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.count                                   thrpt    5        18.000               counts
[info] CodecBenchmark.readIterablesPlay:·gc.time                                    thrpt    5        34.000                   ms
[info] CodecBenchmark.readMapsCirce                                                 thrpt    5    469517.256 ±  10390.597   ops/s
[info] CodecBenchmark.readMapsCirce:·gc.alloc.rate                                  thrpt    5      1668.866 ±     36.907  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.alloc.rate.norm                             thrpt    5      5592.001 ±      0.001    B/op
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                         thrpt    5      1624.258 ±    589.174  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5441.688 ±   1933.044    B/op
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                     thrpt    5         0.033 ±      0.072  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.112 ±      0.240    B/op
[info] CodecBenchmark.readMapsCirce:·gc.count                                       thrpt    5        24.000               counts
[info] CodecBenchmark.readMapsCirce:·gc.time                                        thrpt    5        52.000                   ms
[info] CodecBenchmark.readMapsJackson                                               thrpt    5    878866.854 ±  20035.454   ops/s
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate                                thrpt    5      1036.821 ±     23.590  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1856.000 ±      0.001    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1003.892 ±     23.147  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1797.063 ±     24.739    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.058 ±      0.237  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.105 ±      0.426    B/op
[info] CodecBenchmark.readMapsJackson:·gc.count                                     thrpt    5        15.000               counts
[info] CodecBenchmark.readMapsJackson:·gc.time                                      thrpt    5        31.000                   ms
[info] CodecBenchmark.readMapsJsoniter                                              thrpt    5   3725915.464 ±  60697.520   ops/s
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate                               thrpt    5       928.356 ±     15.138  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       392.000 ±      0.001    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       928.832 ±    563.995  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       392.176 ±    237.540    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.042 ±      0.150  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.018 ±      0.063    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.count                                    thrpt    5        14.000               counts
[info] CodecBenchmark.readMapsJsoniter:·gc.time                                     thrpt    5        28.000                   ms
[info] CodecBenchmark.readMapsPlay                                                  thrpt    5    261992.707 ±   4300.152   ops/s
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate                                   thrpt    5      1348.212 ±     22.117  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                              thrpt    5      8096.002 ±      0.001    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1340.010 ±     38.510  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      8046.952 ±    310.153    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.062 ±      0.127  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.376 ±      0.766    B/op
[info] CodecBenchmark.readMapsPlay:·gc.count                                        thrpt    5        20.000               counts
[info] CodecBenchmark.readMapsPlay:·gc.time                                         thrpt    5        35.000                   ms
[info] CodecBenchmark.readMutableMapsJackson                                        thrpt    5    673501.053 ±  20349.841   ops/s
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                         thrpt    5       873.498 ±     26.167  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                    thrpt    5      2040.001 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                thrpt    5       864.661 ±    707.092  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5      2021.721 ±   1699.462    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.067 ±      0.356  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.156 ±      0.832    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.count                              thrpt    5        13.000               counts
[info] CodecBenchmark.readMutableMapsJackson:·gc.time                               thrpt    5        48.000                   ms
[info] CodecBenchmark.readMutableMapsJsoniter                                       thrpt    5   2683033.605 ±  36905.097   ops/s
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                        thrpt    5      1828.179 ±     25.053  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                   thrpt    5      1072.000 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space               thrpt    5      1824.229 ±    690.336  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5      1069.574 ±    398.940    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.071 ±      0.166  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.042 ±      0.098    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.count                             thrpt    5        27.000               counts
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.time                              thrpt    5        33.000                   ms
[info] CodecBenchmark.readMutableMapsPlay                                           thrpt    5    220476.368 ±   6329.967   ops/s
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                            thrpt    5      1161.505 ±     33.288  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                       thrpt    5      8288.002 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1199.703 ±    702.040  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8561.037 ±   5022.473    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.042 ±      0.098  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.297 ±      0.696    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.count                                 thrpt    5        18.000               counts
[info] CodecBenchmark.readMutableMapsPlay:·gc.time                                  thrpt    5        40.000                   ms
[info] CodecBenchmark.readPrimitivesJackson                                         thrpt    5    993162.193 ±  30695.093   ops/s
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                          thrpt    5       732.282 ±     22.593  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                     thrpt    5      1160.000 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       730.981 ±    574.194  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5      1159.081 ±    942.675    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.025 ±      0.036  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.040 ±      0.058    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.count                               thrpt    5        11.000               counts
[info] CodecBenchmark.readPrimitivesJackson:·gc.time                                thrpt    5        19.000                   ms
[info] CodecBenchmark.readPrimitivesJsoniter                                        thrpt    5   4642555.826 ±  92632.743   ops/s
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                         thrpt    5       141.644 ±      2.831  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                    thrpt    5        48.000 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       153.542 ±    539.720  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5        52.103 ±    183.152    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.006 ±      0.054  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.002 ±      0.018    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.count                              thrpt    5         3.000               counts
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.time                               thrpt    5         8.000                   ms
[info] CodecBenchmark.readPrimitivesPlay                                            thrpt    5    173415.684 ±   2114.741   ops/s
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                             thrpt    5      1223.972 ±     14.936  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                        thrpt    5     11104.003 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1201.813 ±    695.250  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5     10899.700 ±   6206.922    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.046 ±      0.067  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.416 ±      0.610    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.count                                  thrpt    5        18.000               counts
[info] CodecBenchmark.readPrimitivesPlay:·gc.time                                   thrpt    5        35.000                   ms
[info] CodecBenchmark.writeAnyRefsCirce                                             thrpt    5   1279151.353 ±  37496.962   ops/s
[info] CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate                              thrpt    5      1450.497 ±     42.476  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                         thrpt    5      1784.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                     thrpt    5      1484.228 ±    705.988  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                thrpt    5      1826.322 ±    900.418    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                 thrpt    5         0.058 ±      0.200  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.072 ±      0.249    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.count                                   thrpt    5        22.000               counts
[info] CodecBenchmark.writeAnyRefsCirce:·gc.time                                    thrpt    5        32.000                   ms
[info] CodecBenchmark.writeAnyRefsJackson                                           thrpt    5   3846895.459 ± 135194.906   ops/s
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                            thrpt    5      1056.313 ±     37.123  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                       thrpt    5       432.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1063.784 ±    576.663  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       434.906 ±    228.793    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.012 ±      0.072  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.005 ±      0.030    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.count                                 thrpt    5        16.000               counts
[info] CodecBenchmark.writeAnyRefsJackson:·gc.time                                  thrpt    5        26.000                   ms
[info] CodecBenchmark.writeAnyRefsJsoniter                                          thrpt    5  15066136.870 ± 472023.761   ops/s
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                           thrpt    5       459.774 ±     15.102  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                      thrpt    5        48.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       456.668 ±    688.690  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5        47.694 ±     72.129    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.037 ±      0.143  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.004 ±      0.015    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.count                                thrpt    5         7.000               counts
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.time                                 thrpt    5        28.000                   ms
[info] CodecBenchmark.writeAnyRefsPlay                                              thrpt    5    884612.363 ±  17744.537   ops/s
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                               thrpt    5      1344.952 ±     26.963  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                          thrpt    5      2392.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1340.138 ±     38.232  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2383.523 ±     99.264    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.058 ±      0.105  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.104 ±      0.187    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.count                                    thrpt    5        20.000               counts
[info] CodecBenchmark.writeAnyRefsPlay:·gc.time                                     thrpt    5        30.000                   ms
[info] CodecBenchmark.writeArraysCirce                                              thrpt    5    714334.857 ±  14232.466   ops/s
[info] CodecBenchmark.writeArraysCirce:·gc.alloc.rate                               thrpt    5      1725.382 ±     34.279  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm                          thrpt    5      3800.001 ±      0.001    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1686.809 ±     39.684  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      3715.103 ±     98.948    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.033 ±      0.044  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.073 ±      0.097    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.count                                    thrpt    5        25.000               counts
[info] CodecBenchmark.writeArraysCirce:·gc.time                                     thrpt    5        44.000                   ms
[info] CodecBenchmark.writeArraysJackson                                            thrpt    5   2559685.077 ±  30011.809   ops/s
[info] CodecBenchmark.writeArraysJackson:·gc.alloc.rate                             thrpt    5      1483.828 ±     17.391  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm                        thrpt    5       912.000 ±      0.001    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1485.026 ±    719.888  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5       912.626 ±    437.934    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.033 ±      0.122  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.020 ±      0.075    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.count                                  thrpt    5        22.000               counts
[info] CodecBenchmark.writeArraysJackson:·gc.time                                   thrpt    5        42.000                   ms
[info] CodecBenchmark.writeArraysJsoniter                                           thrpt    5   6094727.382 ± 198746.455   ops/s
[info] CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate                            thrpt    5      1115.705 ±     36.370  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                       thrpt    5       288.000 ±      0.001    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1135.161 ±    713.017  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       292.986 ±    182.524    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.058 ±      0.067  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.015 ±      0.017    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.count                                 thrpt    5        17.000               counts
[info] CodecBenchmark.writeArraysJsoniter:·gc.time                                  thrpt    5        34.000                   ms
[info] CodecBenchmark.writeArraysPlay                                               thrpt    5    334646.778 ± 137851.561   ops/s
[info] CodecBenchmark.writeArraysPlay:·gc.alloc.rate                                thrpt    5      1194.605 ±    492.134  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm                           thrpt    5      5616.001 ±      0.001    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1201.561 ±   1142.570  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5569.660 ±   3613.164    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.050 ±      0.122  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.229 ±      0.518    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.count                                     thrpt    5        18.000               counts
[info] CodecBenchmark.writeArraysPlay:·gc.time                                      thrpt    5        31.000                   ms
[info] CodecBenchmark.writeBitSetsJackson                                           thrpt    5   2712792.420 ±  38867.746   ops/s
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                            thrpt    5      1158.768 ±     16.618  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                       thrpt    5       672.000 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1207.297 ±    704.380  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       699.972 ±    403.301    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.029 ±      0.044  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.017 ±      0.025    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.count                                 thrpt    5        18.000               counts
[info] CodecBenchmark.writeBitSetsJackson:·gc.time                                  thrpt    5        35.000                   ms
[info] CodecBenchmark.writeBitSetsJsoniter                                          thrpt    5   3934788.758 ±  87349.689   ops/s
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                           thrpt    5       720.301 ±     15.952  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                      thrpt    5       288.000 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       658.950 ±     14.012  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5       263.474 ±      5.920    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.042 ±      0.057  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.017 ±      0.022    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.count                                thrpt    5        10.000               counts
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.time                                 thrpt    5        23.000                   ms
[info] CodecBenchmark.writeBitSetsPlay                                              thrpt    5    478249.229 ±   2076.938   ops/s
[info] CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate                               thrpt    5      1415.350 ±      6.202  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                          thrpt    5      4656.001 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1409.117 ±    597.046  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      4635.088 ±   1943.467    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.062 ±      0.127  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.206 ±      0.418    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.count                                    thrpt    5        21.000               counts
[info] CodecBenchmark.writeBitSetsPlay:·gc.time                                     thrpt    5        27.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsJackson                                    thrpt    5    990356.916 ±  23335.282   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                     thrpt    5      1223.741 ±     28.835  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                thrpt    5      1944.000 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space            thrpt    5      1207.651 ±    701.510  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm       thrpt    5      1919.264 ±   1138.021    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space        thrpt    5         0.046 ±      0.105  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.073 ±      0.167    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.count                          thrpt    5        18.000               counts
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.time                           thrpt    5        34.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsJsoniter                                   thrpt    5   3557964.298 ±  92620.024   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                    thrpt    5       416.117 ±     10.842  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm               thrpt    5       184.000 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space           thrpt    5       456.552 ±    689.594  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm      thrpt    5       201.929 ±    305.601    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space       thrpt    5         0.033 ±      0.091  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.015 ±      0.041    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                         thrpt    5         7.000               counts
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                          thrpt    5        23.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsPlay                                       thrpt    5    250338.680 ±   1328.068   ops/s
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                        thrpt    5       981.477 ±      5.185  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                   thrpt    5      6168.002 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space               thrpt    5       993.172 ±     31.003  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm          thrpt    5      6241.476 ±    180.175    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space           thrpt    5         0.054 ±      0.156  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.340 ±      0.985    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.count                             thrpt    5        15.000               counts
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.time                              thrpt    5        19.000                   ms
[info] CodecBenchmark.writeIterablesCirce                                           thrpt    5    611824.526 ±  15442.719   ops/s
[info] CodecBenchmark.writeIterablesCirce:·gc.alloc.rate                            thrpt    5      1568.001 ±     39.587  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                       thrpt    5      4032.001 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                   thrpt    5      1551.203 ±    704.544  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm              thrpt    5      3989.462 ±   1834.444    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space               thrpt    5         0.042 ±      0.080  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.107 ±      0.209    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.count                                 thrpt    5        23.000               counts
[info] CodecBenchmark.writeIterablesCirce:·gc.time                                  thrpt    5        38.000                   ms
[info] CodecBenchmark.writeIterablesJackson                                         thrpt    5   1601276.565 ±  47097.545   ops/s
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate                          thrpt    5       863.102 ±     25.370  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                     thrpt    5       848.000 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       857.133 ±    680.807  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5       842.251 ±    671.054    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.012 ±      0.072  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.012 ±      0.071    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.count                               thrpt    5        13.000               counts
[info] CodecBenchmark.writeIterablesJackson:·gc.time                                thrpt    5        31.000                   ms
[info] CodecBenchmark.writeIterablesJsoniter                                        thrpt    5   4852400.913 ± 143163.475   ops/s
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                         thrpt    5       814.247 ±     24.051  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                    thrpt    5       264.000 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       792.215 ±    690.673  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       256.634 ±    218.634    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.058 ±      0.105  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.019 ±      0.035    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.count                              thrpt    5        12.000               counts
[info] CodecBenchmark.writeIterablesJsoniter:·gc.time                               thrpt    5        27.000                   ms
[info] CodecBenchmark.writeIterablesPlay                                            thrpt    5    382126.355 ±   6997.994   ops/s
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate                             thrpt    5      1315.473 ±     24.133  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                        thrpt    5      5416.001 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1338.474 ±     40.797  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5      5510.888 ±    237.194    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.054 ±      0.166  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.222 ±      0.683    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.count                                  thrpt    5        20.000               counts
[info] CodecBenchmark.writeIterablesPlay:·gc.time                                   thrpt    5        40.000                   ms
[info] CodecBenchmark.writeMapsCirce                                                thrpt    5    344240.779 ±   6421.865   ops/s
[info] CodecBenchmark.writeMapsCirce:·gc.alloc.rate                                 thrpt    5      1014.083 ±     21.124  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm                            thrpt    5      4632.001 ±      0.001    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                        thrpt    5      1002.568 ±     25.864  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5      4579.440 ±    106.209    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                    thrpt    5         0.042 ±      0.188  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.190 ±      0.861    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.count                                      thrpt    5        15.000               counts
[info] CodecBenchmark.writeMapsCirce:·gc.time                                       thrpt    5        26.000                   ms
[info] CodecBenchmark.writeMapsJackson                                              thrpt    5   1058340.349 ±  30130.970   ops/s
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate                               thrpt    5      1097.861 ±     31.257  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                          thrpt    5      1632.000 ±      0.001    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                      thrpt    5      1138.043 ±    702.960  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                 thrpt    5      1690.677 ±   1009.451    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                  thrpt    5         0.071 ±      0.146  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.105 ±      0.217    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.count                                    thrpt    5        17.000               counts
[info] CodecBenchmark.writeMapsJackson:·gc.time                                     thrpt    5        31.000                   ms
[info] CodecBenchmark.writeMapsJsoniter                                             thrpt    5   4042411.255 ±  56337.411   ops/s
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                              thrpt    5       596.117 ±      8.337  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                         thrpt    5       232.000 ±      0.001    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5       589.979 ±    566.391  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5       229.675 ±    221.259    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.046 ±      0.164  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.018 ±      0.064    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.count                                   thrpt    5         9.000               counts
[info] CodecBenchmark.writeMapsJsoniter:·gc.time                                    thrpt    5        15.000                   ms
[info] CodecBenchmark.writeMapsPlay                                                 thrpt    5    257096.366 ±   3562.915   ops/s
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate                                  thrpt    5       947.837 ±     13.179  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                             thrpt    5      5800.002 ±      0.001    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                         thrpt    5       926.200 ±    569.906  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5669.979 ±   3542.794    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.033 ±      0.156  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.204 ±      0.959    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.count                                       thrpt    5        14.000               counts
[info] CodecBenchmark.writeMapsPlay:·gc.time                                        thrpt    5        35.000                   ms
[info] CodecBenchmark.writeMutableMapsCirce                                         thrpt    5    340657.082 ±   7906.107   ops/s
[info] CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate                          thrpt    5       994.300 ±     23.111  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                     thrpt    5      4592.001 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                 thrpt    5      1003.665 ±     24.231  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm            thrpt    5      4635.253 ±     30.848    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space             thrpt    5         0.037 ±      0.132  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.173 ±      0.612    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.count                               thrpt    5        15.000               counts
[info] CodecBenchmark.writeMutableMapsCirce:·gc.time                                thrpt    5        36.000                   ms
[info] CodecBenchmark.writeMutableMapsJackson                                       thrpt    5    998369.529 ±  17330.770   ops/s
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                        thrpt    5       989.975 ±     17.210  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                   thrpt    5      1560.000 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space               thrpt    5      1002.105 ±     24.988  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm          thrpt    5      1579.172 ±     63.976    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space           thrpt    5         0.025 ±      0.067  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.039 ±      0.106    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.count                             thrpt    5        15.000               counts
[info] CodecBenchmark.writeMutableMapsJackson:·gc.time                              thrpt    5        30.000                   ms
[info] CodecBenchmark.writeMutableMapsJsoniter                                      thrpt    5   2142787.205 ±  40927.793   ops/s
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                       thrpt    5       424.950 ±      8.119  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                  thrpt    5       312.000 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space              thrpt    5       456.235 ±    686.772  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm         thrpt    5       335.301 ±    508.879    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space          thrpt    5         0.017 ±      0.088  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.012 ±      0.065    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.count                            thrpt    5         7.000               counts
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.time                             thrpt    5         5.000                   ms
[info] CodecBenchmark.writeMutableMapsPlay                                          thrpt    5    247979.343 ±   5693.694   ops/s
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                           thrpt    5       954.580 ±     21.832  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                      thrpt    5      6056.002 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                  thrpt    5       926.190 ±    562.656  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm             thrpt    5      5876.797 ±   3591.139    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space              thrpt    5         0.042 ±      0.127  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.264 ±      0.801    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.count                                thrpt    5        14.000               counts
[info] CodecBenchmark.writeMutableMapsPlay:·gc.time                                 thrpt    5        27.000                   ms
[info] CodecBenchmark.writePrimitivesCirce                                          thrpt    5    631783.767 ±  14272.133   ops/s
[info] CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate                           thrpt    5      1236.863 ±     27.977  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                      thrpt    5      3080.001 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                  thrpt    5      1204.011 ±    697.728  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm             thrpt    5      2996.633 ±   1687.787    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space              thrpt    5         0.025 ±      0.036  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.062 ±      0.089    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.count                                thrpt    5        18.000               counts
[info] CodecBenchmark.writePrimitivesCirce:·gc.time                                 thrpt    5        34.000                   ms
[info] CodecBenchmark.writePrimitivesJackson                                        thrpt    5   1596619.716 ±  29464.711   ops/s
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                         thrpt    5       665.734 ±     12.262  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                    thrpt    5       656.000 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                thrpt    5       660.273 ±     16.226  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5       650.621 ±     11.913    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.025 ±      0.036  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.025 ±      0.036    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.count                              thrpt    5        10.000               counts
[info] CodecBenchmark.writePrimitivesJackson:·gc.time                               thrpt    5         9.000                   ms
[info] CodecBenchmark.writePrimitivesJsoniter                                       thrpt    5   6307453.175 ± 438028.630   ops/s
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                        thrpt    5       320.738 ±     22.303  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                   thrpt    5        80.000 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space               thrpt    5       325.815 ±      1.084  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5        81.288 ±      5.631    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.454 ±      3.686  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.116 ±      0.944    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.count                             thrpt    5         5.000               counts
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.time                              thrpt    5         6.000                   ms
[info] CodecBenchmark.writePrimitivesPlay                                           thrpt    5    199338.165 ±   3812.538   ops/s
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                            thrpt    5      1100.804 ±     21.016  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                       thrpt    5      8688.002 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1130.888 ±    712.440  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8930.349 ±   5770.806    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.050 ±      0.091  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.394 ±      0.714    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.count                                 thrpt    5        17.000               counts
[info] CodecBenchmark.writePrimitivesPlay:·gc.time                                  thrpt    5        25.000                   ms
[success] Total time: 1016 s, completed Oct 26, 2017 9:49:57 AM
