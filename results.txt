[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Oct 9, 2017 11:16:44 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:26:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs](classOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs]) {
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -166967934 => {
[info]                     req0.&=(-2L);
[info]                     _s = in.readString()
[info]                   }
[info]                   case 959160851 => {
[info]                     req0.&=(-3L);
[info]                     _bd = BigDecimal(in.readBigDecimal())
[info]                   }
[info]                   case 1580477207 => _os = Option(in.readString())
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = {
[info]         out.writeObjectStart();
[info]         val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs];
[info]         var first = true;
[info]         if (x.s.ne(null))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           }
[info]         else
[info]           ();
[info]         if (x.bd.ne(null))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bd");
[info]             out.writeRaw(x.bd.toString)
[info]           }
[info]         else
[info]           ();
[info]         if (x.os.ne(null).&&(x.os.isDefined))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("os");
[info]             out.writeVal(x.os.get)
[info]           }
[info]         else
[info]           ();
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: Codec[AnyRefs] = materialize[AnyRefs]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:28:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.BitSets](classOf[com.github.plokhotnyuk.jsoniter_scala.BitSets]) {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 1311490850 => _bs = d0(in)
[info]                   case -458934745 => _mbs = d1(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = {
[info]         out.writeObjectStart();
[info]         val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.BitSets];
[info]         var first = true;
[info]         if (x.bs.ne(null).&&(x.bs.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bs");
[info]             e0(out, x.bs)
[info]           }
[info]         else
[info]           ();
[info]         if (x.mbs.ne(null).&&(x.mbs.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("mbs");
[info]             e1(out, x.mbs)
[info]           }
[info]         else
[info]           ();
[info]         out.writeObjectEnd()
[info]       };
[info]       private def d0(in: JsonIterator): scala.collection.immutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           BitSet.empty
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.newBuilder;
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           BitSet.empty
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.mutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           BitSet.empty
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.empty;
[info]             do 
[info]               buf.add(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           BitSet.empty
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: Codec[BitSets] = materialize[BitSets]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:31:53: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Iterables](classOf[com.github.plokhotnyuk.jsoniter_scala.Iterables]) {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -385076981 => _l = d0(in)
[info]                   case -166967934 => _s = d1(in)
[info]                   case 1446109160 => _ls = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = {
[info]         out.writeObjectStart();
[info]         val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Iterables];
[info]         var first = true;
[info]         if (x.l.ne(null).&&(x.l.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             e0(out, x.l)
[info]           }
[info]         else
[info]           ();
[info]         if (x.s.ne(null).&&(x.s.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             e1(out, x.s)
[info]           }
[info]         else
[info]           ();
[info]         if (x.ls.ne(null).&&(x.ls.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("ls");
[info]             e2(out, x.ls)
[info]           }
[info]         else
[info]           ();
[info]         out.writeObjectEnd()
[info]       };
[info]       private def d0(in: JsonIterator): List[String] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           List.empty[String]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[String];
[info]             do 
[info]               buf.+=(in.readString())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           List.empty[String]
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.Set[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           Set.empty[Int]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Set.newBuilder[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           Set.empty[Int]
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator): List[Set[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           List.empty[scala.collection.immutable.Set[Int]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               buf.+=(d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           List.empty[scala.collection.immutable.Set[Int]]
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: Codec[Iterables] = materialize[Iterables]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:33:43: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Maps](classOf[com.github.plokhotnyuk.jsoniter_scala.Maps]) {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -401854600 => _m = d0(in)
[info]                   case 1613635087 => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = {
[info]         out.writeObjectStart();
[info]         val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Maps];
[info]         var first = true;
[info]         if (x.m.ne(null).&&(x.m.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("m");
[info]             e0(out, x.m)
[info]           }
[info]         else
[info]           ();
[info]         if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("mm");
[info]             e2(out, x.mm)
[info]           }
[info]         else
[info]           ();
[info]         out.writeObjectEnd()
[info]       };
[info]       private def d0(in: JsonIterator): scala.collection.immutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[String, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           HashMap.empty[String, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.HashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[Long, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[Long, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           HashMap.empty[Long, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: Codec[Maps] = materialize[Maps]
[info]                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:36:57: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps](classOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps]) {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -401854600 => _m = d0(in)
[info]                   case 1613635087 => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = {
[info]         out.writeObjectStart();
[info]         val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps];
[info]         var first = true;
[info]         if (x.m.ne(null).&&(x.m.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("m");
[info]             e0(out, x.m)
[info]           }
[info]         else
[info]           ();
[info]         if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("mm");
[info]             e2(out, x.mm)
[info]           }
[info]         else
[info]           ();
[info]         out.writeObjectEnd()
[info]       };
[info]       private def d0(in: JsonIterator): scala.collection.mutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[String, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           HashMap.empty[String, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.mutable.OpenHashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           OpenHashMap.empty[Long, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           OpenHashMap.empty[Long, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsInt(in), d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: Codec[MutableMaps] = materialize[MutableMaps]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:39:63: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps](classOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps]) {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -401854600 => _m = d0(in)
[info]                   case 1613635087 => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = {
[info]         out.writeObjectStart();
[info]         val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps];
[info]         var first = true;
[info]         if (x.m.ne(null).&&(x.m.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("m");
[info]             e0(out, x.m)
[info]           }
[info]         else
[info]           ();
[info]         if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("mm");
[info]             e2(out, x.mm)
[info]           }
[info]         else
[info]           ();
[info]         out.writeObjectEnd()
[info]       };
[info]       private def d0(in: JsonIterator): scala.collection.immutable.IntMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           IntMap.empty[Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = IntMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           IntMap.empty[Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.LongMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           LongMap.empty[Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = LongMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           LongMap.empty[Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           LongMap.empty[scala.collection.immutable.LongMap[Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           LongMap.empty[scala.collection.immutable.LongMap[Double]]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: Codec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:42:55: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Primitives](classOf[com.github.plokhotnyuk.jsoniter_scala.Primitives]) {
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "dbl", "f");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 127L;
[info]           var _b: Byte = 0;
[info]           var _s: Short = 0;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0;
[info]           var _bl: Boolean = false;
[info]           var _dbl: Double = 0;
[info]           var _f: Float = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -418632219 => {
[info]                     req0.&=(-2L);
[info]                     _b = in.readInt().toByte
[info]                   }
[info]                   case -166967934 => {
[info]                     req0.&=(-3L);
[info]                     _s = in.readInt().toShort
[info]                   }
[info]                   case -334744124 => {
[info]                     req0.&=(-5L);
[info]                     _i = in.readInt()
[info]                   }
[info]                   case -385076981 => {
[info]                     req0.&=(-9L);
[info]                     _l = in.readLong()
[info]                   }
[info]                   case 1093381803 => {
[info]                     req0.&=(-17L);
[info]                     _bl = in.readBoolean()
[info]                   }
[info]                   case -783497859 => {
[info]                     req0.&=(-33L);
[info]                     _dbl = in.readDouble()
[info]                   }
[info]                   case -485742695 => {
[info]                     req0.&=(-65L);
[info]                     _f = in.readFloat()
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, dbl = _dbl, f = _f)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = {
[info]         out.writeObjectStart();
[info]         val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Primitives];
[info]         var first = true;
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("bl");
[info]           out.writeVal(x.bl)
[info]         };
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("dbl");
[info]           out.writeVal(x.dbl)
[info]         };
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("f");
[info]           out.writeVal(x.f)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: Codec[Primitives] = materialize[Primitives]
[info]                                                       ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
Processing 23 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 36 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*CodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson
[info] # Run progress: 0.00% complete, ETA 00:05:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 943096.046 ops/s
[info] # Warmup Iteration   2: 1652737.846 ops/s
[info] # Warmup Iteration   3: 1753790.091 ops/s
[info] # Warmup Iteration   4: 1761788.132 ops/s
[info] # Warmup Iteration   5: 1813422.168 ops/s
[info] Iteration   1: 1802803.475 ops/s
[info]                  ·gc.alloc.rate:                   1283.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1523.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1329.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1785711.204 ops/s
[info]                  ·gc.alloc.rate:                   1271.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1383.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1218.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1807519.606 ops/s
[info]                  ·gc.alloc.rate:                   1286.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1256.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1093.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1448033.065 ops/s
[info]                  ·gc.alloc.rate:               1030.911 MB/sec
[info]                  ·gc.alloc.rate.norm:          1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1142.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1241.352 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1252777.401 ops/s
[info]                  ·gc.alloc.rate:               891.804 MB/sec
[info]                  ·gc.alloc.rate.norm:          1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1039.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1305.551 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson":
[info]   1619368.950 ±(99.9%) 982601.016 ops/s [Average]
[info]   (min, avg, max) = (1252777.401, 1619368.950, 1807519.606), stdev = 255178.364
[info]   CI (99.9%): [636767.934, 2601969.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1152.866 ±(99.9%) 699.665 MB/sec [Average]
[info]   (min, avg, max) = (891.804, 1152.866, 1286.852), stdev = 181.701
[info]   CI (99.9%): [453.201, 1852.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1269.295 ±(99.9%) 737.748 MB/sec [Average]
[info]   (min, avg, max) = (1039.549, 1269.295, 1523.834), stdev = 191.591
[info]   CI (99.9%): [531.548, 2007.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1237.903 ±(99.9%) 355.560 B/op [Average]
[info]   (min, avg, max) = (1093.965, 1237.903, 1329.758), stdev = 92.338
[info]   CI (99.9%): [882.343, 1593.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.160 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.092), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 12.000), stdev = 4.147
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 3.13% complete, ETA 00:08:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4950540.012 ops/s
[info] # Warmup Iteration   2: 5744382.954 ops/s
[info] # Warmup Iteration   3: 5968553.730 ops/s
[info] # Warmup Iteration   4: 5783432.169 ops/s
[info] # Warmup Iteration   5: 5952923.329 ops/s
[info] Iteration   1: 6055769.516 ops/s
[info]                  ·gc.alloc.rate:                   1046.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          780.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     202.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 6114389.536 ops/s
[info]                  ·gc.alloc.rate:               1057.129 MB/sec
[info]                  ·gc.alloc.rate.norm:          272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      743.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 191.273 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 6082689.617 ops/s
[info]                  ·gc.alloc.rate:                   1051.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1383.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     357.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 6070677.341 ops/s
[info]                  ·gc.alloc.rate:                   1049.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1256.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     325.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 6037966.984 ops/s
[info]                  ·gc.alloc.rate:               1043.932 MB/sec
[info]                  ·gc.alloc.rate.norm:          272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      584.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 152.372 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter":
[info]   6072298.599 ±(99.9%) 111171.616 ops/s [Average]
[info]   (min, avg, max) = (6037966.984, 6072298.599, 6114389.536), stdev = 28870.916
[info]   CI (99.9%): [5961126.983, 6183470.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   1049.847 ±(99.9%) 19.196 MB/sec [Average]
[info]   (min, avg, max) = (1043.932, 1049.847, 1057.129), stdev = 4.985
[info]   CI (99.9%): [1030.651, 1069.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   272.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (272.000, 272.000, 272.000), stdev = 0.001
[info]   CI (99.9%): [272.000, 272.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   949.756 ±(99.9%) 1343.357 MB/sec [Average]
[info]   (min, avg, max) = (584.802, 949.756, 1383.406), stdev = 348.866
[info]   CI (99.9%): [≈ 0, 2293.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   245.981 ±(99.9%) 347.043 B/op [Average]
[info]   (min, avg, max) = (152.372, 245.981, 357.815), stdev = 90.126
[info]   CI (99.9%): [≈ 0, 593.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.230 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.146), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.059 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.038), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 9.000), stdev = 3.209
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay
[info] # Run progress: 6.25% complete, ETA 00:08:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 175604.115 ops/s
[info] # Warmup Iteration   2: 348224.097 ops/s
[info] # Warmup Iteration   3: 355180.354 ops/s
[info] # Warmup Iteration   4: 351683.735 ops/s
[info] # Warmup Iteration   5: 359939.198 ops/s
[info] Iteration   1: 363534.857 ops/s
[info]                  ·gc.alloc.rate:               961.230 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      818.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3544.406 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 364196.459 ops/s
[info]                  ·gc.alloc.rate:               963.018 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      780.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3370.970 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 360234.197 ops/s
[info]                  ·gc.alloc.rate:                   952.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          743.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3246.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 360816.825 ops/s
[info]                  ·gc.alloc.rate:                   954.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1383.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6032.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.272 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 364749.390 ops/s
[info]                  ·gc.alloc.rate:               964.491 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2775.273 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay":
[info]   362706.345 ±(99.9%) 7882.709 ops/s [Average]
[info]   (min, avg, max) = (360234.197, 362706.345, 364749.390), stdev = 2047.114
[info]   CI (99.9%): [354823.637, 370589.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   959.079 ±(99.9%) 20.811 MB/sec [Average]
[info]   (min, avg, max) = (952.539, 959.079, 964.491), stdev = 5.404
[info]   CI (99.9%): [938.268, 979.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   873.942 ±(99.9%) 1125.340 MB/sec [Average]
[info]   (min, avg, max) = (643.444, 873.942, 1383.533), stdev = 292.247
[info]   CI (99.9%): [≈ 0, 1999.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   3793.901 ±(99.9%) 4941.973 B/op [Average]
[info]   (min, avg, max) = (2775.273, 3793.901, 6032.277), stdev = 1283.415
[info]   CI (99.9%): [≈ 0, 8735.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.091 ±(99.9%) 0.495 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.091, 0.272), stdev = 0.128
[info]   CI (99.9%): [≈ 0, 0.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.800, 8.000), stdev = 2.683
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 9.38% complete, ETA 00:07:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5043918.694 ops/s
[info] # Warmup Iteration   2: 5841722.711 ops/s
[info] # Warmup Iteration   3: 5918472.046 ops/s
[info] # Warmup Iteration   4: 5988916.358 ops/s
[info] # Warmup Iteration   5: 6025051.068 ops/s
[info] Iteration   1: 5984722.408 ops/s
[info]                  ·gc.alloc.rate:               639.058 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      489.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 128.588 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 5919910.621 ops/s
[info]                  ·gc.alloc.rate:                   632.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          912.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     242.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 5891165.989 ops/s
[info]                  ·gc.alloc.rate:               629.093 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      425.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 113.542 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 5983168.654 ops/s
[info]                  ·gc.alloc.rate:                   638.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          793.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     208.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 5976125.214 ops/s
[info]                  ·gc.alloc.rate:                   638.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          724.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     190.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter":
[info]   5951018.577 ±(99.9%) 165061.481 ops/s [Average]
[info]   (min, avg, max) = (5891165.989, 5951018.577, 5984722.408), stdev = 42865.942
[info]   CI (99.9%): [5785957.096, 6116080.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   635.469 ±(99.9%) 17.597 MB/sec [Average]
[info]   (min, avg, max) = (629.093, 635.469, 639.058), stdev = 4.570
[info]   CI (99.9%): [617.872, 653.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   668.808 ±(99.9%) 792.671 MB/sec [Average]
[info]   (min, avg, max) = (425.170, 668.808, 912.319), stdev = 205.854
[info]   CI (99.9%): [≈ 0, 1461.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   176.764 ±(99.9%) 209.498 B/op [Average]
[info]   (min, avg, max) = (113.542, 176.764, 242.459), stdev = 54.406
[info]   CI (99.9%): [≈ 0, 386.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.022), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 9.000), stdev = 2.881
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 12.50% complete, ETA 00:07:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2532077.437 ops/s
[info] # Warmup Iteration   2: 3041971.414 ops/s
[info] # Warmup Iteration   3: 3118952.861 ops/s
[info] # Warmup Iteration   4: 3149331.072 ops/s
[info] # Warmup Iteration   5: 3138671.515 ops/s
[info] Iteration   1: 3120988.868 ops/s
[info]                  ·gc.alloc.rate:                   1475.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1021.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 3076011.711 ops/s
[info]                  ·gc.alloc.rate:                   1454.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1198.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     612.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 3087558.623 ops/s
[info]                  ·gc.alloc.rate:                   1460.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1597.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     813.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 3094124.130 ops/s
[info]                  ·gc.alloc.rate:                   1463.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1387.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     705.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3081382.972 ops/s
[info]                  ·gc.alloc.rate:                   1457.186 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1574.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     803.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter":
[info]   3092013.261 ±(99.9%) 67604.248 ops/s [Average]
[info]   (min, avg, max) = (3076011.711, 3092013.261, 3120988.868), stdev = 17556.608
[info]   CI (99.9%): [3024409.013, 3159617.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1462.226 ±(99.9%) 31.921 MB/sec [Average]
[info]   (min, avg, max) = (1454.682, 1462.226, 1475.907), stdev = 8.290
[info]   CI (99.9%): [1430.304, 1494.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1556.904 ±(99.9%) 1187.145 MB/sec [Average]
[info]   (min, avg, max) = (1198.183, 1556.904, 2026.838), stdev = 308.298
[info]   CI (99.9%): [369.759, 2744.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   791.585 ±(99.9%) 587.119 B/op [Average]
[info]   (min, avg, max) = (612.813, 791.585, 1021.723), stdev = 152.473
[info]   CI (99.9%): [204.466, 1378.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.072 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.034, 0.063), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 6.400, 11.000), stdev = 4.159
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson
[info] # Run progress: 15.63% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 256396.667 ops/s
[info] # Warmup Iteration   2: 490635.638 ops/s
[info] # Warmup Iteration   3: 502480.728 ops/s
[info] # Warmup Iteration   4: 501342.168 ops/s
[info] # Warmup Iteration   5: 499112.288 ops/s
[info] Iteration   1: 491508.416 ops/s
[info]                  ·gc.alloc.rate:                   499.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          573.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1834.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 496732.153 ops/s
[info]                  ·gc.alloc.rate:                   505.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          635.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2013.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 496505.096 ops/s
[info]                  ·gc.alloc.rate:               504.946 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      345.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1093.844 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 492591.377 ops/s
[info]                  ·gc.alloc.rate:                   500.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          713.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2278.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 487280.728 ops/s
[info]                  ·gc.alloc.rate:               495.557 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      368.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1190.903 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson":
[info]   492923.554 ±(99.9%) 15072.616 ops/s [Average]
[info]   (min, avg, max) = (487280.728, 492923.554, 496732.153), stdev = 3914.311
[info]   CI (99.9%): [477850.938, 507996.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   501.303 ±(99.9%) 15.343 MB/sec [Average]
[info]   (min, avg, max) = (495.557, 501.303, 505.181), stdev = 3.984
[info]   CI (99.9%): [485.960, 516.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   527.267 ±(99.9%) 629.080 MB/sec [Average]
[info]   (min, avg, max) = (345.207, 527.267, 713.388), stdev = 163.370
[info]   CI (99.9%): [≈ 0, 1156.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1682.256 ±(99.9%) 1997.208 B/op [Average]
[info]   (min, avg, max) = (1093.844, 1682.256, 2278.444), stdev = 518.668
[info]   CI (99.9%): [≈ 0, 3679.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.080 ±(99.9%) 0.333 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.080, 0.200), stdev = 0.087
[info]   CI (99.9%): [≈ 0, 0.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.000, 16.000), stdev = 5.831
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter
[info] # Run progress: 18.75% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2576745.671 ops/s
[info] # Warmup Iteration   2: 3117296.896 ops/s
[info] # Warmup Iteration   3: 3057837.788 ops/s
[info] # Warmup Iteration   4: 3109478.730 ops/s
[info] # Warmup Iteration   5: 3062624.471 ops/s
[info] Iteration   1: 3149659.361 ops/s
[info]                  ·gc.alloc.rate:               784.802 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 409.110 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 3125440.668 ops/s
[info]                  ·gc.alloc.rate:               778.769 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      780.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 392.819 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3165573.186 ops/s
[info]                  ·gc.alloc.rate:                   788.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          743.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     369.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 3149013.282 ops/s
[info]                  ·gc.alloc.rate:               784.631 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      708.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 353.910 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 3098083.635 ops/s
[info]                  ·gc.alloc.rate:                   771.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     669.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter":
[info]   3137554.026 ±(99.9%) 101286.799 ops/s [Average]
[info]   (min, avg, max) = (3098083.635, 3137554.026, 3165573.186), stdev = 26303.860
[info]   CI (99.9%): [3036267.228, 3238840.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   781.774 ±(99.9%) 25.228 MB/sec [Average]
[info]   (min, avg, max) = (771.933, 781.774, 788.737), stdev = 6.552
[info]   CI (99.9%): [756.546, 807.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   873.941 ±(99.9%) 970.057 MB/sec [Average]
[info]   (min, avg, max) = (708.389, 873.941, 1318.502), stdev = 251.921
[info]   CI (99.9%): [≈ 0, 1843.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   438.969 ±(99.9%) 503.023 B/op [Average]
[info]   (min, avg, max) = (353.910, 438.969, 669.557), stdev = 130.633
[info]   CI (99.9%): [≈ 0, 941.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.036 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.000, 16.000), stdev = 6.708
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay
[info] # Run progress: 21.88% complete, ETA 00:06:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54346.767 ops/s
[info] # Warmup Iteration   2: 132170.390 ops/s
[info] # Warmup Iteration   3: 136320.956 ops/s
[info] # Warmup Iteration   4: 141982.974 ops/s
[info] # Warmup Iteration   5: 142525.065 ops/s
[info] Iteration   1: 142394.357 ops/s
[info]                  ·gc.alloc.rate:               975.295 MB/sec
[info]                  ·gc.alloc.rate.norm:          10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1276.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14103.779 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 140059.101 ops/s
[info]                  ·gc.alloc.rate:                   959.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          757.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8511.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.702 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 141374.789 ops/s
[info]                  ·gc.alloc.rate:                   967.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11298.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.463 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 139833.744 ops/s
[info]                  ·gc.alloc.rate:                   957.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          888.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9994.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.469 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 140044.169 ops/s
[info]                  ·gc.alloc.rate:                   959.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1016.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11417.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.702 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay":
[info]   140741.232 ±(99.9%) 4265.773 ops/s [Average]
[info]   (min, avg, max) = (139833.744, 140741.232, 142394.357), stdev = 1107.808
[info]   CI (99.9%): [136475.459, 145007.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   963.919 ±(99.9%) 28.954 MB/sec [Average]
[info]   (min, avg, max) = (957.794, 963.919, 975.295), stdev = 7.519
[info]   CI (99.9%): [934.965, 992.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10776.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10776.003, 10776.003, 10776.003), stdev = 0.001
[info]   CI (99.9%): [10776.003, 10776.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   990.727 ±(99.9%) 739.888 MB/sec [Average]
[info]   (min, avg, max) = (757.701, 990.727, 1276.479), stdev = 192.147
[info]   CI (99.9%): [250.839, 1730.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11064.869 ±(99.9%) 7957.023 B/op [Average]
[info]   (min, avg, max) = (8511.315, 11064.869, 14103.779), stdev = 2066.414
[info]   CI (99.9%): [3107.846, 19021.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.467 ±(99.9%) 1.103 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.467, 0.702), stdev = 0.287
[info]   CI (99.9%): [≈ 0, 1.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 12.000), stdev = 3.033
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson
[info] # Run progress: 25.00% complete, ETA 00:06:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 405174.110 ops/s
[info] # Warmup Iteration   2: 823122.861 ops/s
[info] # Warmup Iteration   3: 837616.525 ops/s
[info] # Warmup Iteration   4: 853362.560 ops/s
[info] # Warmup Iteration   5: 830563.522 ops/s
[info] Iteration   1: 834646.616 ops/s
[info]                  ·gc.alloc.rate:                   984.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1597.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3010.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 848371.460 ops/s
[info]                  ·gc.alloc.rate:               1000.841 MB/sec
[info]                  ·gc.alloc.rate.norm:          1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      874.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1622.048 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 860307.310 ops/s
[info]                  ·gc.alloc.rate:                   1014.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          876.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1603.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 857062.033 ops/s
[info]                  ·gc.alloc.rate:               1011.089 MB/sec
[info]                  ·gc.alloc.rate.norm:          1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      876.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1609.262 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 848976.478 ops/s
[info]                  ·gc.alloc.rate:                   1001.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          877.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1627.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson":
[info]   849872.779 ±(99.9%) 38287.202 ops/s [Average]
[info]   (min, avg, max) = (834646.616, 849872.779, 860307.310), stdev = 9943.065
[info]   CI (99.9%): [811585.577, 888159.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1002.599 ±(99.9%) 45.177 MB/sec [Average]
[info]   (min, avg, max) = (984.642, 1002.599, 1014.918), stdev = 11.732
[info]   CI (99.9%): [957.422, 1047.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.001, 1856.001, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1020.606 ±(99.9%) 1240.801 MB/sec [Average]
[info]   (min, avg, max) = (874.683, 1020.606, 1597.028), stdev = 322.232
[info]   CI (99.9%): [≈ 0, 2261.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1894.377 ±(99.9%) 2402.435 B/op [Average]
[info]   (min, avg, max) = (1603.173, 1894.377, 3010.320), stdev = 623.905
[info]   CI (99.9%): [≈ 0, 4296.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.180 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.114), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.800, 7.000), stdev = 2.588
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter
[info] # Run progress: 28.13% complete, ETA 00:06:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2735995.718 ops/s
[info] # Warmup Iteration   2: 3532451.954 ops/s
[info] # Warmup Iteration   3: 3490857.480 ops/s
[info] # Warmup Iteration   4: 3492507.841 ops/s
[info] # Warmup Iteration   5: 3584186.350 ops/s
[info] Iteration   1: 3587566.069 ops/s
[info]                  ·gc.alloc.rate:               893.861 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      780.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 342.211 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 3580146.726 ops/s
[info]                  ·gc.alloc.rate:               892.032 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      743.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 326.669 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3583630.374 ops/s
[info]                  ·gc.alloc.rate:               892.905 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      708.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 311.000 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 3563319.050 ops/s
[info]                  ·gc.alloc.rate:                   887.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     582.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 3551858.093 ops/s
[info]                  ·gc.alloc.rate:               885.004 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      613.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 271.717 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter":
[info]   3573304.062 ±(99.9%) 58286.389 ops/s [Average]
[info]   (min, avg, max) = (3551858.093, 3573304.062, 3587566.069), stdev = 15136.790
[info]   CI (99.9%): [3515017.673, 3631590.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   890.329 ±(99.9%) 14.479 MB/sec [Average]
[info]   (min, avg, max) = (885.004, 890.329, 893.861), stdev = 3.760
[info]   CI (99.9%): [875.850, 904.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   832.806 ±(99.9%) 1072.386 MB/sec [Average]
[info]   (min, avg, max) = (613.445, 832.806, 1318.490), stdev = 278.495
[info]   CI (99.9%): [≈ 0, 1905.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   366.747 ±(99.9%) 474.509 B/op [Average]
[info]   (min, avg, max) = (271.717, 366.747, 582.140), stdev = 123.228
[info]   CI (99.9%): [≈ 0, 841.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.063 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.037), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson
[info] # Run progress: 31.25% complete, ETA 00:05:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 129221.124 ops/s
[info] # Warmup Iteration   2: 851932.184 ops/s
[info] # Warmup Iteration   3: 850099.163 ops/s
[info] # Warmup Iteration   4: 854703.806 ops/s
[info] # Warmup Iteration   5: 850402.095 ops/s
[info] Iteration   1: 856749.910 ops/s
[info]                  ·gc.alloc.rate:                   1084.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          869.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1597.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 862235.768 ops/s
[info]                  ·gc.alloc.rate:               1091.730 MB/sec
[info]                  ·gc.alloc.rate.norm:          1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      870.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1587.445 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   3: 871147.353 ops/s
[info]                  ·gc.alloc.rate:               1103.017 MB/sec
[info]                  ·gc.alloc.rate.norm:          1992.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      876.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1582.599 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 880607.236 ops/s
[info]                  ·gc.alloc.rate:                   1114.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              1992.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1754.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3134.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 875878.417 ops/s
[info]                  ·gc.alloc.rate:               1108.976 MB/sec
[info]                  ·gc.alloc.rate.norm:          1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      877.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1577.082 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson":
[info]   869323.737 ±(99.9%) 37627.471 ops/s [Average]
[info]   (min, avg, max) = (856749.910, 869323.737, 880607.236), stdev = 9771.735
[info]   CI (99.9%): [831696.266, 906951.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   1100.703 ±(99.9%) 47.618 MB/sec [Average]
[info]   (min, avg, max) = (1084.794, 1100.703, 1114.997), stdev = 12.366
[info]   CI (99.9%): [1053.084, 1148.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1992.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1992.000, 1992.001, 1992.001), stdev = 0.001
[info]   CI (99.9%): [1992.000, 1992.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1049.724 ±(99.9%) 1516.721 MB/sec [Average]
[info]   (min, avg, max) = (869.999, 1049.724, 1754.302), stdev = 393.888
[info]   CI (99.9%): [≈ 0, 2566.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1895.770 ±(99.9%) 2665.868 B/op [Average]
[info]   (min, avg, max) = (1577.082, 1895.770, 3134.152), stdev = 692.317
[info]   CI (99.9%): [≈ 0, 4561.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.080 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.038), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 5.200, 13.000), stdev = 5.586
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 34.38% complete, ETA 00:05:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1906514.928 ops/s
[info] # Warmup Iteration   2: 2353068.355 ops/s
[info] # Warmup Iteration   3: 2339642.048 ops/s
[info] # Warmup Iteration   4: 2419122.962 ops/s
[info] # Warmup Iteration   5: 2409387.904 ops/s
[info] Iteration   1: 2402285.574 ops/s
[info]                  ·gc.alloc.rate:                   1502.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1477.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     967.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 2382141.347 ops/s
[info]                  ·gc.alloc.rate:                   1489.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1964.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1297.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2418015.149 ops/s
[info]                  ·gc.alloc.rate:                   1512.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1161.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     755.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2396710.083 ops/s
[info]                  ·gc.alloc.rate:                   1499.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1548.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1016.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 2411484.228 ops/s
[info]                  ·gc.alloc.rate:                   1508.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1754.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1144.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter":
[info]   2402127.276 ±(99.9%) 53383.365 ops/s [Average]
[info]   (min, avg, max) = (2382141.347, 2402127.276, 2418015.149), stdev = 13863.490
[info]   CI (99.9%): [2348743.911, 2455510.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1502.456 ±(99.9%) 33.394 MB/sec [Average]
[info]   (min, avg, max) = (1489.931, 1502.456, 1512.370), stdev = 8.672
[info]   CI (99.9%): [1469.062, 1535.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   984.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (984.000, 984.000, 984.000), stdev = 0.001
[info]   CI (99.9%): [984.000, 984.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1581.376 ±(99.9%) 1162.964 MB/sec [Average]
[info]   (min, avg, max) = (1161.879, 1581.376, 1964.956), stdev = 302.018
[info]   CI (99.9%): [418.413, 2744.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1036.401 ±(99.9%) 779.084 B/op [Average]
[info]   (min, avg, max) = (755.959, 1036.401, 1297.722), stdev = 202.326
[info]   CI (99.9%): [257.317, 1815.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.045 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.038, 0.055), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.000, 10.000), stdev = 3.536
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson
[info] # Run progress: 37.50% complete, ETA 00:05:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 657443.075 ops/s
[info] # Warmup Iteration   2: 1032937.260 ops/s
[info] # Warmup Iteration   3: 1041422.093 ops/s
[info] # Warmup Iteration   4: 1066752.041 ops/s
[info] # Warmup Iteration   5: 1060145.333 ops/s
[info] Iteration   1: 1067014.463 ops/s
[info]                  ·gc.alloc.rate:                   781.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              1152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          912.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1345.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1052601.364 ops/s
[info]                  ·gc.alloc.rate:                   770.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              1152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          831.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1242.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1044814.634 ops/s
[info]                  ·gc.alloc.rate:                   765.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              1152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          757.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1140.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1057581.437 ops/s
[info]                  ·gc.alloc.rate:                   774.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              1152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          692.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1029.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1057112.888 ops/s
[info]                  ·gc.alloc.rate:                   774.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              1152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          632.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     941.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson":
[info]   1055824.957 ±(99.9%) 31138.342 ops/s [Average]
[info]   (min, avg, max) = (1044814.634, 1055824.957, 1067014.463), stdev = 8086.529
[info]   CI (99.9%): [1024686.615, 1086963.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   773.118 ±(99.9%) 22.824 MB/sec [Average]
[info]   (min, avg, max) = (765.043, 773.118, 781.324), stdev = 5.927
[info]   CI (99.9%): [750.294, 795.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1152.000, 1152.000, 1152.000), stdev = 0.001
[info]   CI (99.9%): [1152.000, 1152.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   765.124 ±(99.9%) 426.292 MB/sec [Average]
[info]   (min, avg, max) = (632.421, 765.124, 912.352), stdev = 110.707
[info]   CI (99.9%): [338.832, 1191.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1139.801 ±(99.9%) 621.608 B/op [Average]
[info]   (min, avg, max) = (941.231, 1139.801, 1345.190), stdev = 161.430
[info]   CI (99.9%): [518.193, 1761.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.093 ±(99.9%) 0.148 B/op [Average]
[info]   (min, avg, max) = (0.061, 0.093, 0.156), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 12.000), stdev = 3.674
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 40.63% complete, ETA 00:05:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5122997.149 ops/s
[info] # Warmup Iteration   2: 5350710.427 ops/s
[info] # Warmup Iteration   3: 5474346.977 ops/s
[info] # Warmup Iteration   4: 5471870.149 ops/s
[info] # Warmup Iteration   5: 5408966.396 ops/s
[info] Iteration   1: 5473249.241 ops/s
[info]                  ·gc.alloc.rate:                   139.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          138.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5383112.085 ops/s
[info]                  ·gc.alloc.rate:                   136.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          130.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 5414822.766 ops/s
[info]                  ·gc.alloc.rate:                   137.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          160.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 5415126.295 ops/s
[info]                  ·gc.alloc.rate:                   137.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          149.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 5437329.193 ops/s
[info]                  ·gc.alloc.rate:                   138.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          138.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter":
[info]   5424727.916 ±(99.9%) 128222.564 ops/s [Average]
[info]   (min, avg, max) = (5383112.085, 5424727.916, 5473249.241), stdev = 33298.993
[info]   CI (99.9%): [5296505.352, 5552950.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   137.923 ±(99.9%) 3.253 MB/sec [Average]
[info]   (min, avg, max) = (136.867, 137.923, 139.154), stdev = 0.845
[info]   CI (99.9%): [134.670, 141.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   40.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (40.000, 40.000, 40.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   143.747 ±(99.9%) 44.705 MB/sec [Average]
[info]   (min, avg, max) = (130.953, 143.747, 160.936), stdev = 11.610
[info]   CI (99.9%): [99.042, 188.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   41.690 ±(99.9%) 13.028 B/op [Average]
[info]   (min, avg, max) = (38.272, 41.690, 46.761), stdev = 3.383
[info]   CI (99.9%): [28.663, 54.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.100 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 0.100, 0.125), stdev = 0.017
[info]   CI (99.9%): [0.033, 0.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (0.024, 0.029, 0.036), stdev = 0.005
[info]   CI (99.9%): [0.010, 0.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 10.000), stdev = 2.881
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay
[info] # Run progress: 43.75% complete, ETA 00:04:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 65787.962 ops/s
[info] # Warmup Iteration   2: 151485.664 ops/s
[info] # Warmup Iteration   3: 156665.687 ops/s
[info] # Warmup Iteration   4: 157653.503 ops/s
[info] # Warmup Iteration   5: 161511.413 ops/s
[info] Iteration   1: 161168.789 ops/s
[info]                  ·gc.alloc.rate:                   961.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              9384.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          875.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8544.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.610 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 162502.430 ops/s
[info]                  ·gc.alloc.rate:               969.295 MB/sec
[info]                  ·gc.alloc.rate.norm:          9384.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      833.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8071.131 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 162943.776 ops/s
[info]                  ·gc.alloc.rate:                   971.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              9384.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          794.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7666.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.603 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 160076.658 ops/s
[info]                  ·gc.alloc.rate:                   954.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              9384.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          756.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7433.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.205 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 159581.846 ops/s
[info]                  ·gc.alloc.rate:               951.821 MB/sec
[info]                  ·gc.alloc.rate.norm:          9384.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1407.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13875.806 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay":
[info]   161254.700 ±(99.9%) 5647.272 ops/s [Average]
[info]   (min, avg, max) = (159581.846, 161254.700, 162943.776), stdev = 1466.579
[info]   CI (99.9%): [155607.428, 166901.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   961.834 ±(99.9%) 33.780 MB/sec [Average]
[info]   (min, avg, max) = (951.821, 961.834, 971.929), stdev = 8.773
[info]   CI (99.9%): [928.054, 995.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   9384.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9384.003, 9384.003, 9384.003), stdev = 0.001
[info]   CI (99.9%): [9384.002, 9384.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   933.365 ±(99.9%) 1034.647 MB/sec [Average]
[info]   (min, avg, max) = (756.344, 933.365, 1407.426), stdev = 268.695
[info]   CI (99.9%): [≈ 0, 1968.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9118.295 ±(99.9%) 10369.187 B/op [Average]
[info]   (min, avg, max) = (7433.690, 9118.295, 13875.806), stdev = 2692.845
[info]   CI (99.9%): [≈ 0, 19487.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.284 ±(99.9%) 1.180 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.284, 0.610), stdev = 0.306
[info]   CI (99.9%): [≈ 0, 1.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.200, 7.000), stdev = 2.387
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 46.88% complete, ETA 00:04:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2229274.444 ops/s
[info] # Warmup Iteration   2: 3611495.947 ops/s
[info] # Warmup Iteration   3: 3633425.430 ops/s
[info] # Warmup Iteration   4: 3577582.528 ops/s
[info] # Warmup Iteration   5: 3705596.708 ops/s
[info] Iteration   1: 3690564.075 ops/s
[info]                  ·gc.alloc.rate:                   1013.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          873.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     372.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 3699126.121 ops/s
[info]                  ·gc.alloc.rate:                   1015.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1624.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     690.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3729523.746 ops/s
[info]                  ·gc.alloc.rate:               1024.072 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      755.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 318.511 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 3697046.213 ops/s
[info]                  ·gc.alloc.rate:                   1015.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          719.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     306.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 3718689.703 ops/s
[info]                  ·gc.alloc.rate:                   1021.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     566.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson":
[info]   3706989.972 ±(99.9%) 63131.284 ops/s [Average]
[info]   (min, avg, max) = (3690564.075, 3706989.972, 3729523.746), stdev = 16394.994
[info]   CI (99.9%): [3643858.688, 3770121.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1017.870 ±(99.9%) 17.395 MB/sec [Average]
[info]   (min, avg, max) = (1013.362, 1017.870, 1024.072), stdev = 4.517
[info]   CI (99.9%): [1000.474, 1035.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1062.229 ±(99.9%) 1540.364 MB/sec [Average]
[info]   (min, avg, max) = (719.316, 1062.229, 1624.004), stdev = 400.028
[info]   CI (99.9%): [≈ 0, 2602.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   450.867 ±(99.9%) 654.555 B/op [Average]
[info]   (min, avg, max) = (306.126, 450.867, 690.713), stdev = 169.986
[info]   CI (99.9%): [≈ 0, 1105.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.027), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 9.000), stdev = 1.643
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 50.00% complete, ETA 00:04:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8022026.463 ops/s
[info] # Warmup Iteration   2: 9900362.820 ops/s
[info] # Warmup Iteration   3: 9823993.885 ops/s
[info] # Warmup Iteration   4: 9691500.109 ops/s
[info] # Warmup Iteration   5: 9960342.509 ops/s
[info] Iteration   1: 9928814.410 ops/s
[info]                  ·gc.alloc.rate:               302.921 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      307.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 48.680 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 9847249.883 ops/s
[info]                  ·gc.alloc.rate:               300.432 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      293.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46.954 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 9854519.564 ops/s
[info]                  ·gc.alloc.rate:                   300.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          281.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 9822330.515 ops/s
[info]                  ·gc.alloc.rate:                   299.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          269.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 9795056.402 ops/s
[info]                  ·gc.alloc.rate:                   298.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          504.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter":
[info]   9849594.155 ±(99.9%) 192756.140 ops/s [Average]
[info]   (min, avg, max) = (9795056.402, 9849594.155, 9928814.410), stdev = 50058.158
[info]   CI (99.9%): [9656838.015, 10042350.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   300.511 ±(99.9%) 5.851 MB/sec [Average]
[info]   (min, avg, max) = (298.867, 300.511, 302.921), stdev = 1.520
[info]   CI (99.9%): [294.660, 306.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   331.283 ±(99.9%) 377.585 MB/sec [Average]
[info]   (min, avg, max) = (269.231, 331.283, 504.856), stdev = 98.058
[info]   CI (99.9%): [≈ 0, 708.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   52.948 ±(99.9%) 61.098 B/op [Average]
[info]   (min, avg, max) = (43.124, 52.948, 81.083), stdev = 15.867
[info]   CI (99.9%): [≈ 0, 114.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.011 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.007), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 8.000), stdev = 2.881
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 53.13% complete, ETA 00:04:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 605802.007 ops/s
[info] # Warmup Iteration   2: 960736.086 ops/s
[info] # Warmup Iteration   3: 950623.930 ops/s
[info] # Warmup Iteration   4: 988861.372 ops/s
[info] # Warmup Iteration   5: 974455.903 ops/s
[info] Iteration   1: 983520.414 ops/s
[info]                  ·gc.alloc.rate:                   1455.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1477.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2362.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 994605.386 ops/s
[info]                  ·gc.alloc.rate:                   1471.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2121.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 992166.655 ops/s
[info]                  ·gc.alloc.rate:                   1468.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1218.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1932.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 991642.221 ops/s
[info]                  ·gc.alloc.rate:                   1467.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2576.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 995557.228 ops/s
[info]                  ·gc.alloc.rate:               1473.123 MB/sec
[info]                  ·gc.alloc.rate.norm:          2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1409.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2227.905 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay":
[info]   991498.381 ±(99.9%) 18289.845 ops/s [Average]
[info]   (min, avg, max) = (983520.414, 991498.381, 995557.228), stdev = 4749.815
[info]   CI (99.9%): [973208.536, 1009788.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1467.131 ±(99.9%) 27.020 MB/sec [Average]
[info]   (min, avg, max) = (1455.345, 1467.131, 1473.123), stdev = 7.017
[info]   CI (99.9%): [1440.111, 1494.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2328.000, 2328.000, 2328.000), stdev = 0.001
[info]   CI (99.9%): [2328.000, 2328.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1414.053 ±(99.9%) 582.375 MB/sec [Average]
[info]   (min, avg, max) = (1218.530, 1414.053, 1623.697), stdev = 151.241
[info]   CI (99.9%): [831.677, 1996.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2244.090 ±(99.9%) 937.041 B/op [Average]
[info]   (min, avg, max) = (1932.234, 2244.090, 2576.054), stdev = 243.347
[info]   CI (99.9%): [1307.049, 3181.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.073 ±(99.9%) 0.209 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.073, 0.132), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 10.000), stdev = 2.490
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson
[info] # Run progress: 56.25% complete, ETA 00:03:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 671292.810 ops/s
[info] # Warmup Iteration   2: 950755.404 ops/s
[info] # Warmup Iteration   3: 947518.155 ops/s
[info] # Warmup Iteration   4: 971613.060 ops/s
[info] # Warmup Iteration   5: 975434.809 ops/s
[info] Iteration   1: 974956.969 ops/s
[info]                  ·gc.alloc.rate:               356.950 MB/sec
[info]                  ·gc.alloc.rate.norm:          576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      307.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 495.739 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 965021.347 ops/s
[info]                  ·gc.alloc.rate:               353.316 MB/sec
[info]                  ·gc.alloc.rate.norm:          576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      293.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 479.119 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 971522.833 ops/s
[info]                  ·gc.alloc.rate:               355.691 MB/sec
[info]                  ·gc.alloc.rate.norm:          576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      281.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 455.391 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 963077.124 ops/s
[info]                  ·gc.alloc.rate:                   352.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          527.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     861.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 960128.523 ops/s
[info]                  ·gc.alloc.rate:               351.536 MB/sec
[info]                  ·gc.alloc.rate.norm:          576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      246.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 404.585 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson":
[info]   966941.359 ±(99.9%) 23601.762 ops/s [Average]
[info]   (min, avg, max) = (960128.523, 966941.359, 974956.969), stdev = 6129.303
[info]   CI (99.9%): [943339.598, 990543.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   354.019 ±(99.9%) 8.623 MB/sec [Average]
[info]   (min, avg, max) = (351.536, 354.019, 356.950), stdev = 2.239
[info]   CI (99.9%): [345.396, 362.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   576.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (576.000, 576.000, 576.000), stdev = 0.001
[info]   CI (99.9%): [576.000, 576.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   331.271 ±(99.9%) 430.320 MB/sec [Average]
[info]   (min, avg, max) = (246.920, 331.271, 527.122), stdev = 111.753
[info]   CI (99.9%): [≈ 0, 761.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   539.185 ±(99.9%) 705.462 B/op [Average]
[info]   (min, avg, max) = (404.585, 539.185, 861.092), stdev = 183.206
[info]   CI (99.9%): [≈ 0, 1244.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.117 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.068), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 6.000), stdev = 1.924
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 59.38% complete, ETA 00:03:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2910517.378 ops/s
[info] # Warmup Iteration   2: 4141199.842 ops/s
[info] # Warmup Iteration   3: 4197366.976 ops/s
[info] # Warmup Iteration   4: 4225393.439 ops/s
[info] # Warmup Iteration   5: 4264689.522 ops/s
[info] Iteration   1: 4274356.630 ops/s
[info]                  ·gc.alloc.rate:               652.053 MB/sec
[info]                  ·gc.alloc.rate.norm:          240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      489.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 180.043 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 4244524.423 ops/s
[info]                  ·gc.alloc.rate:                   647.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          912.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     338.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 4269315.189 ops/s
[info]                  ·gc.alloc.rate:               651.268 MB/sec
[info]                  ·gc.alloc.rate.norm:          240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      425.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 156.680 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 4219556.079 ops/s
[info]                  ·gc.alloc.rate:                   643.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          793.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     295.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4205356.408 ops/s
[info]                  ·gc.alloc.rate:                   641.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          724.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     270.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter":
[info]   4242621.746 ±(99.9%) 116223.019 ops/s [Average]
[info]   (min, avg, max) = (4205356.408, 4242621.746, 4274356.630), stdev = 30182.749
[info]   CI (99.9%): [4126398.726, 4358844.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   647.211 ±(99.9%) 17.738 MB/sec [Average]
[info]   (min, avg, max) = (641.509, 647.211, 652.053), stdev = 4.607
[info]   CI (99.9%): [629.473, 664.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   668.808 ±(99.9%) 792.669 MB/sec [Average]
[info]   (min, avg, max) = (425.168, 668.808, 912.348), stdev = 205.854
[info]   CI (99.9%): [≈ 0, 1461.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   248.308 ±(99.9%) 297.596 B/op [Average]
[info]   (min, avg, max) = (156.680, 248.308, 338.152), stdev = 77.285
[info]   CI (99.9%): [≈ 0, 545.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.078 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.047), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 8.000), stdev = 2.775
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 62.50% complete, ETA 00:03:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 232982.255 ops/s
[info] # Warmup Iteration   2: 895608.027 ops/s
[info] # Warmup Iteration   3: 922579.840 ops/s
[info] # Warmup Iteration   4: 931737.967 ops/s
[info] # Warmup Iteration   5: 957883.227 ops/s
[info] Iteration   1: 956897.957 ops/s
[info]                  ·gc.alloc.rate:               1182.396 MB/sec
[info]                  ·gc.alloc.rate.norm:          1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      873.349 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1435.891 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 948834.013 ops/s
[info]                  ·gc.alloc.rate:                   1172.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1747.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2898.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 959484.729 ops/s
[info]                  ·gc.alloc.rate:               1185.585 MB/sec
[info]                  ·gc.alloc.rate.norm:          1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      875.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1435.250 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 955925.233 ops/s
[info]                  ·gc.alloc.rate:               1181.193 MB/sec
[info]                  ·gc.alloc.rate.norm:          1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      875.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1440.585 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 953376.349 ops/s
[info]                  ·gc.alloc.rate:                   1178.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1753.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2893.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson":
[info]   954903.656 ±(99.9%) 15543.957 ops/s [Average]
[info]   (min, avg, max) = (948834.013, 954903.656, 959484.729), stdev = 4036.716
[info]   CI (99.9%): [939359.699, 970447.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1179.932 ±(99.9%) 19.204 MB/sec [Average]
[info]   (min, avg, max) = (1172.424, 1179.932, 1185.585), stdev = 4.987
[info]   CI (99.9%): [1160.728, 1199.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1944.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1944.000, 1944.000, 1944.000), stdev = 0.001
[info]   CI (99.9%): [1944.000, 1944.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1225.049 ±(99.9%) 1847.523 MB/sec [Average]
[info]   (min, avg, max) = (873.349, 1225.049, 1753.296), stdev = 479.796
[info]   CI (99.9%): [≈ 0, 3072.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2020.656 ±(99.9%) 3076.195 B/op [Average]
[info]   (min, avg, max) = (1435.250, 2020.656, 2898.319), stdev = 798.878
[info]   CI (99.9%): [≈ 0, 5096.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.048 ±(99.9%) 0.259 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.048, 0.138), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.200, 10.000), stdev = 3.194
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 65.63% complete, ETA 00:02:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2256655.765 ops/s
[info] # Warmup Iteration   2: 2665060.337 ops/s
[info] # Warmup Iteration   3: 2723008.343 ops/s
[info] # Warmup Iteration   4: 2682684.617 ops/s
[info] # Warmup Iteration   5: 2745492.774 ops/s
[info] Iteration   1: 2746738.389 ops/s
[info]                  ·gc.alloc.rate:                   572.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          955.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     547.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2722931.873 ops/s
[info]                  ·gc.alloc.rate:               567.697 MB/sec
[info]                  ·gc.alloc.rate.norm:          328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      445.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 257.396 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 2742115.520 ops/s
[info]                  ·gc.alloc.rate:                   571.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          425.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     243.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2742622.315 ops/s
[info]                  ·gc.alloc.rate:                   571.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          793.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     455.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2737760.141 ops/s
[info]                  ·gc.alloc.rate:               570.771 MB/sec
[info]                  ·gc.alloc.rate.norm:          328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      370.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 212.735 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   2738433.648 ±(99.9%) 35544.410 ops/s [Average]
[info]   (min, avg, max) = (2722931.873, 2738433.648, 2746738.389), stdev = 9230.770
[info]   CI (99.9%): [2702889.238, 2773978.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   570.916 ±(99.9%) 7.388 MB/sec [Average]
[info]   (min, avg, max) = (567.697, 570.916, 572.651), stdev = 1.919
[info]   CI (99.9%): [563.528, 578.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (328.000, 328.000, 328.000), stdev = 0.001
[info]   CI (99.9%): [328.000, 328.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   598.034 ±(99.9%) 1002.876 MB/sec [Average]
[info]   (min, avg, max) = (370.191, 598.034, 955.960), stdev = 260.444
[info]   CI (99.9%): [≈ 0, 1600.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   343.345 ±(99.9%) 572.819 B/op [Average]
[info]   (min, avg, max) = (212.735, 343.345, 547.550), stdev = 148.759
[info]   CI (99.9%): [≈ 0, 916.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.076 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.048), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 6.000), stdev = 2.168
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson
[info] # Run progress: 68.75% complete, ETA 00:02:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1027835.399 ops/s
[info] # Warmup Iteration   2: 1519805.907 ops/s
[info] # Warmup Iteration   3: 1539032.213 ops/s
[info] # Warmup Iteration   4: 1548599.327 ops/s
[info] # Warmup Iteration   5: 1514772.784 ops/s
[info] Iteration   1: 1552916.796 ops/s
[info]                  ·gc.alloc.rate:               837.036 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      860.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 871.266 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1548707.205 ops/s
[info]                  ·gc.alloc.rate:               834.789 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 831.995 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1541709.923 ops/s
[info]                  ·gc.alloc.rate:               831.007 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      780.366 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 796.324 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1545319.315 ops/s
[info]                  ·gc.alloc.rate:                   832.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1451.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1478.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1545301.204 ops/s
[info]                  ·gc.alloc.rate:               832.927 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      675.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 687.279 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson":
[info]   1546790.888 ±(99.9%) 16268.676 ops/s [Average]
[info]   (min, avg, max) = (1541709.923, 1546790.888, 1552916.796), stdev = 4224.923
[info]   CI (99.9%): [1530522.212, 1563059.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   833.739 ±(99.9%) 8.768 MB/sec [Average]
[info]   (min, avg, max) = (831.007, 833.739, 837.036), stdev = 2.277
[info]   CI (99.9%): [824.970, 842.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   848.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (848.000, 848.000, 848.000), stdev = 0.001
[info]   CI (99.9%): [848.000, 848.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   917.247 ±(99.9%) 1180.637 MB/sec [Average]
[info]   (min, avg, max) = (675.062, 917.247, 1451.775), stdev = 306.608
[info]   CI (99.9%): [≈ 0, 2097.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   932.979 ±(99.9%) 1202.570 B/op [Average]
[info]   (min, avg, max) = (687.279, 932.979, 1478.033), stdev = 312.304
[info]   CI (99.9%): [≈ 0, 2135.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.251 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.146), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.256 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.148), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 71.88% complete, ETA 00:02:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3207940.212 ops/s
[info] # Warmup Iteration   2: 4043663.593 ops/s
[info] # Warmup Iteration   3: 4108282.699 ops/s
[info] # Warmup Iteration   4: 4096113.541 ops/s
[info] # Warmup Iteration   5: 4142251.513 ops/s
[info] Iteration   1: 4109218.841 ops/s
[info]                  ·gc.alloc.rate:               626.854 MB/sec
[info]                  ·gc.alloc.rate.norm:          240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      466.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 178.729 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 4122147.066 ops/s
[info]                  ·gc.alloc.rate:                   628.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          870.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     332.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 4111169.570 ops/s
[info]                  ·gc.alloc.rate:               627.161 MB/sec
[info]                  ·gc.alloc.rate.norm:          240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      405.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 155.311 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 4109903.338 ops/s
[info]                  ·gc.alloc.rate:                   626.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          757.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     290.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 4025074.619 ops/s
[info]                  ·gc.alloc.rate:                   614.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          692.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     270.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter":
[info]   4095502.687 ±(99.9%) 152951.030 ops/s [Average]
[info]   (min, avg, max) = (4025074.619, 4095502.687, 4122147.066), stdev = 39720.897
[info]   CI (99.9%): [3942551.657, 4248453.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   624.771 ±(99.9%) 23.332 MB/sec [Average]
[info]   (min, avg, max) = (614.027, 624.771, 628.832), stdev = 6.059
[info]   CI (99.9%): [601.439, 648.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   638.627 ±(99.9%) 756.970 MB/sec [Average]
[info]   (min, avg, max) = (405.854, 638.627, 870.655), stdev = 196.583
[info]   CI (99.9%): [≈ 0, 1395.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   245.378 ±(99.9%) 290.305 B/op [Average]
[info]   (min, avg, max) = (155.311, 245.378, 332.294), stdev = 75.391
[info]   CI (99.9%): [≈ 0, 535.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.032), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.800, 9.000), stdev = 3.271
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay
[info] # Run progress: 75.00% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 158272.734 ops/s
[info] # Warmup Iteration   2: 324041.970 ops/s
[info] # Warmup Iteration   3: 328509.414 ops/s
[info] # Warmup Iteration   4: 323184.648 ops/s
[info] # Warmup Iteration   5: 337656.154 ops/s
[info] Iteration   1: 339269.925 ops/s
[info]                  ·gc.alloc.rate:                   1167.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          780.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3618.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 338232.901 ops/s
[info]                  ·gc.alloc.rate:                   1164.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1451.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6752.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.387 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 336528.391 ops/s
[info]                  ·gc.alloc.rate:               1158.538 MB/sec
[info]                  ·gc.alloc.rate.norm:          5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1318.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6163.842 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 339468.747 ops/s
[info]                  ·gc.alloc.rate:                   1168.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1198.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5553.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 336832.872 ops/s
[info]                  ·gc.alloc.rate:               1159.520 MB/sec
[info]                  ·gc.alloc.rate.norm:          5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1089.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5090.794 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay":
[info]   338066.567 ±(99.9%) 5212.552 ops/s [Average]
[info]   (min, avg, max) = (336528.391, 338066.567, 339468.747), stdev = 1353.683
[info]   CI (99.9%): [332854.015, 343279.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1163.797 ±(99.9%) 17.914 MB/sec [Average]
[info]   (min, avg, max) = (1158.538, 1163.797, 1168.625), stdev = 4.652
[info]   CI (99.9%): [1145.883, 1181.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5416.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5416.001, 5416.001, 5416.001), stdev = 0.001
[info]   CI (99.9%): [5416.001, 5416.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1167.755 ±(99.9%) 982.629 MB/sec [Average]
[info]   (min, avg, max) = (780.358, 1167.755, 1451.808), stdev = 255.186
[info]   CI (99.9%): [185.126, 2150.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5435.879 ±(99.9%) 4596.305 B/op [Average]
[info]   (min, avg, max) = (3618.774, 5435.879, 6752.897), stdev = 1193.646
[info]   CI (99.9%): [839.574, 10032.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.135 ±(99.9%) 0.624 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.135, 0.387), stdev = 0.162
[info]   CI (99.9%): [≈ 0, 0.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 6.000), stdev = 2.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson
[info] # Run progress: 78.13% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 101380.873 ops/s
[info] # Warmup Iteration   2: 909066.972 ops/s
[info] # Warmup Iteration   3: 961391.397 ops/s
[info] # Warmup Iteration   4: 986664.275 ops/s
[info] # Warmup Iteration   5: 991125.040 ops/s
[info] Iteration   1: 949863.058 ops/s
[info]                  ·gc.alloc.rate:                   985.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1049.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1738.169 B/op
[info]                  ·gc.churn.PS_Old_Gen:             2.153 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:        3.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.241 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 966885.896 ops/s
[info]                  ·gc.alloc.rate:               1003.021 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      828.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1348.378 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 989076.763 ops/s
[info]                  ·gc.alloc.rate:                   1025.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          836.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1330.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 988188.128 ops/s
[info]                  ·gc.alloc.rate:                   1025.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          877.383 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1396.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 990122.773 ops/s
[info]                  ·gc.alloc.rate:               1027.209 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1755.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2789.701 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson":
[info]   976827.324 ±(99.9%) 68930.538 ops/s [Average]
[info]   (min, avg, max) = (949863.058, 976827.324, 990122.773), stdev = 17901.042
[info]   CI (99.9%): [907896.786, 1045757.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1013.339 ±(99.9%) 71.584 MB/sec [Average]
[info]   (min, avg, max) = (985.336, 1013.339, 1027.209), stdev = 18.590
[info]   CI (99.9%): [941.755, 1084.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1069.553 ±(99.9%) 1516.947 MB/sec [Average]
[info]   (min, avg, max) = (828.707, 1069.553, 1755.886), stdev = 393.946
[info]   CI (99.9%): [≈ 0, 2586.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1720.675 ±(99.9%) 2388.479 B/op [Average]
[info]   (min, avg, max) = (1330.345, 1720.675, 2789.701), stdev = 620.280
[info]   CI (99.9%): [≈ 0, 4109.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Old_Gen":
[info]   0.431 ±(99.9%) 3.708 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.431, 2.153), stdev = 0.963
[info]   CI (99.9%): [≈ 0, 4.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Old_Gen.norm":
[info]   0.713 ±(99.9%) 6.142 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.713, 3.567), stdev = 1.595
[info]   CI (99.9%): [≈ 0, 6.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.230 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.146), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.075 ±(99.9%) 0.381 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.241), stdev = 0.099
[info]   CI (99.9%): [≈ 0, 0.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 4.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 7.400, 25.000), stdev = 9.965
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter
[info] # Run progress: 81.25% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2709175.823 ops/s
[info] # Warmup Iteration   2: 3158170.432 ops/s
[info] # Warmup Iteration   3: 3056850.238 ops/s
[info] # Warmup Iteration   4: 3131240.598 ops/s
[info] # Warmup Iteration   5: 3130322.637 ops/s
[info] Iteration   1: 3223759.660 ops/s
[info]                  ·gc.alloc.rate:                   672.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          956.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     466.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 3234188.168 ops/s
[info]                  ·gc.alloc.rate:               674.302 MB/sec
[info]                  ·gc.alloc.rate.norm:          328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      445.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 216.713 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3239959.585 ops/s
[info]                  ·gc.alloc.rate:                   675.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          831.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     403.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3253095.530 ops/s
[info]                  ·gc.alloc.rate:                   678.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          757.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     366.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 3288425.855 ops/s
[info]                  ·gc.alloc.rate:               685.561 MB/sec
[info]                  ·gc.alloc.rate.norm:          328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      353.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 169.299 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter":
[info]   3247885.759 ±(99.9%) 96326.880 ops/s [Average]
[info]   (min, avg, max) = (3223759.660, 3247885.759, 3288425.855), stdev = 25015.785
[info]   CI (99.9%): [3151558.879, 3344212.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   677.142 ±(99.9%) 20.004 MB/sec [Average]
[info]   (min, avg, max) = (672.126, 677.142, 685.561), stdev = 5.195
[info]   CI (99.9%): [657.138, 697.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (328.000, 328.000, 328.000), stdev = 0.001
[info]   CI (99.9%): [328.000, 328.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   668.837 ±(99.9%) 992.569 MB/sec [Average]
[info]   (min, avg, max) = (353.856, 668.837, 956.017), stdev = 257.767
[info]   CI (99.9%): [≈ 0, 1661.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   324.508 ±(99.9%) 486.642 B/op [Average]
[info]   (min, avg, max) = (169.299, 324.508, 466.540), stdev = 126.379
[info]   CI (99.9%): [≈ 0, 811.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.257 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.146), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.125 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.071), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.600, 11.000), stdev = 4.336
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 84.38% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68402.794 ops/s
[info] # Warmup Iteration   2: 737544.020 ops/s
[info] # Warmup Iteration   3: 922534.639 ops/s
[info] # Warmup Iteration   4: 935179.896 ops/s
[info] # Warmup Iteration   5: 915691.052 ops/s
[info] Iteration   1: 952273.711 ops/s
[info]                  ·gc.alloc.rate:               944.250 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      780.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1289.254 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   2: 942435.297 ops/s
[info]                  ·gc.alloc.rate:               934.505 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      743.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1240.953 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 937721.927 ops/s
[info]                  ·gc.alloc.rate:                   929.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          708.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1188.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 945673.447 ops/s
[info]                  ·gc.alloc.rate:                   937.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2193.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 946247.821 ops/s
[info]                  ·gc.alloc.rate:               938.279 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      613.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1019.903 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson":
[info]   944870.441 ±(99.9%) 20591.189 ops/s [Average]
[info]   (min, avg, max) = (937721.927, 944870.441, 952273.711), stdev = 5347.466
[info]   CI (99.9%): [924279.252, 965461.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   936.914 ±(99.9%) 20.433 MB/sec [Average]
[info]   (min, avg, max) = (929.809, 936.914, 944.250), stdev = 5.306
[info]   CI (99.9%): [916.481, 957.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   832.816 ±(99.9%) 1072.398 MB/sec [Average]
[info]   (min, avg, max) = (613.432, 832.816, 1318.498), stdev = 278.498
[info]   CI (99.9%): [≈ 0, 1905.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1386.418 ±(99.9%) 1780.694 B/op [Average]
[info]   (min, avg, max) = (1019.903, 1386.418, 2193.456), stdev = 462.441
[info]   CI (99.9%): [≈ 0, 3167.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.174 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.400, 7.000), stdev = 2.793
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 87.50% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1419434.817 ops/s
[info] # Warmup Iteration   2: 1770929.394 ops/s
[info] # Warmup Iteration   3: 1794657.387 ops/s
[info] # Warmup Iteration   4: 1777015.813 ops/s
[info] # Warmup Iteration   5: 1806261.795 ops/s
[info] Iteration   1: 1812898.134 ops/s
[info]                  ·gc.alloc.rate:               497.793 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      489.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 424.484 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1813126.103 ops/s
[info]                  ·gc.alloc.rate:               497.868 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      466.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 405.063 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1811960.327 ops/s
[info]                  ·gc.alloc.rate:               497.542 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      445.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 386.808 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1813524.300 ops/s
[info]                  ·gc.alloc.rate:               497.977 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      425.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 368.838 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1809192.190 ops/s
[info]                  ·gc.alloc.rate:               496.785 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      405.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 352.918 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter":
[info]   1812140.211 ±(99.9%) 6720.813 ops/s [Average]
[info]   (min, avg, max) = (1809192.190, 1812140.211, 1813524.300), stdev = 1745.374
[info]   CI (99.9%): [1805419.398, 1818861.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   497.593 ±(99.9%) 1.844 MB/sec [Average]
[info]   (min, avg, max) = (496.785, 497.593, 497.977), stdev = 0.479
[info]   CI (99.9%): [495.749, 499.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   446.492 ±(99.9%) 126.831 MB/sec [Average]
[info]   (min, avg, max) = (405.844, 446.492, 489.133), stdev = 32.938
[info]   CI (99.9%): [319.661, 573.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   387.622 ±(99.9%) 109.267 B/op [Average]
[info]   (min, avg, max) = (352.918, 387.622, 424.484), stdev = 28.376
[info]   CI (99.9%): [278.356, 496.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson
[info] # Run progress: 90.63% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1095135.585 ops/s
[info] # Warmup Iteration   2: 1595163.454 ops/s
[info] # Warmup Iteration   3: 1632802.620 ops/s
[info] # Warmup Iteration   4: 1617767.461 ops/s
[info] # Warmup Iteration   5: 1627040.642 ops/s
[info] Iteration   1: 1629768.159 ops/s
[info]                  ·gc.alloc.rate:               654.697 MB/sec
[info]                  ·gc.alloc.rate.norm:          632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      859.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 830.184 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 1666783.283 ops/s
[info]                  ·gc.alloc.rate:               669.574 MB/sec
[info]                  ·gc.alloc.rate.norm:          632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 773.056 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1673063.100 ops/s
[info]                  ·gc.alloc.rate:                   672.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          780.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     733.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1667587.820 ops/s
[info]                  ·gc.alloc.rate:               669.911 MB/sec
[info]                  ·gc.alloc.rate.norm:          632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      743.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 701.338 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1656283.196 ops/s
[info]                  ·gc.alloc.rate:               665.373 MB/sec
[info]                  ·gc.alloc.rate.norm:          632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      708.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 672.898 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson":
[info]   1658697.112 ±(99.9%) 66514.893 ops/s [Average]
[info]   (min, avg, max) = (1629768.159, 1658697.112, 1673063.100), stdev = 17273.707
[info]   CI (99.9%): [1592182.218, 1725212.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   666.331 ±(99.9%) 26.741 MB/sec [Average]
[info]   (min, avg, max) = (654.697, 666.331, 672.102), stdev = 6.944
[info]   CI (99.9%): [639.591, 693.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (632.000, 632.000, 632.000), stdev = 0.001
[info]   CI (99.9%): [632.000, 632.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   782.248 ±(99.9%) 230.702 MB/sec [Average]
[info]   (min, avg, max) = (708.430, 782.248, 859.998), stdev = 59.913
[info]   CI (99.9%): [551.546, 1012.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   742.260 ±(99.9%) 237.649 B/op [Average]
[info]   (min, avg, max) = (672.898, 742.260, 830.184), stdev = 61.717
[info]   CI (99.9%): [504.611, 979.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.135 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.078), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 93.75% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4568726.460 ops/s
[info] # Warmup Iteration   2: 5518826.690 ops/s
[info] # Warmup Iteration   3: 5473947.004 ops/s
[info] # Warmup Iteration   4: 5389060.834 ops/s
[info] # Warmup Iteration   5: 5498253.770 ops/s
[info] Iteration   1: 5410091.680 ops/s
[info]                  ·gc.alloc.rate:                   247.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          321.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 5484899.792 ops/s
[info]                  ·gc.alloc.rate:               251.007 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      307.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 88.120 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 5661062.647 ops/s
[info]                  ·gc.alloc.rate:                   259.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          293.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 5670058.499 ops/s
[info]                  ·gc.alloc.rate:                   259.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          281.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5653438.116 ops/s
[info]                  ·gc.alloc.rate:               258.723 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      269.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 74.923 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter":
[info]   5575910.147 ±(99.9%) 463295.417 ops/s [Average]
[info]   (min, avg, max) = (5410091.680, 5575910.147, 5670058.499), stdev = 120316.349
[info]   CI (99.9%): [5112614.729, 6039205.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   255.177 ±(99.9%) 21.203 MB/sec [Average]
[info]   (min, avg, max) = (247.592, 255.177, 259.485), stdev = 5.506
[info]   CI (99.9%): [233.974, 276.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   294.547 ±(99.9%) 79.155 MB/sec [Average]
[info]   (min, avg, max) = (269.224, 294.547, 321.206), stdev = 20.556
[info]   CI (99.9%): [215.392, 373.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   83.231 ±(99.9%) 28.942 B/op [Average]
[info]   (min, avg, max) = (74.923, 83.231, 93.407), stdev = 7.516
[info]   CI (99.9%): [54.289, 112.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.012), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 4.600, 17.000), stdev = 7.021
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay
[info] # Run progress: 96.88% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 94000.179 ops/s
[info] # Warmup Iteration   2: 220098.240 ops/s
[info] # Warmup Iteration   3: 219602.811 ops/s
[info] # Warmup Iteration   4: 217234.551 ops/s
[info] # Warmup Iteration   5: 226395.292 ops/s
[info] Iteration   1: 225815.853 ops/s
[info]                  ·gc.alloc.rate:                   1041.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              7256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          875.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6098.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 228872.194 ops/s
[info]                  ·gc.alloc.rate:                   1055.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              7256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11188.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 228325.625 ops/s
[info]                  ·gc.alloc.rate:                   1053.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              7256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          756.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5211.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 225387.737 ops/s
[info]                  ·gc.alloc.rate:               1039.519 MB/sec
[info]                  ·gc.alloc.rate.norm:          7256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      720.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5030.698 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 227864.545 ops/s
[info]                  ·gc.alloc.rate:                   1050.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              7256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9259.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay":
[info]   227253.191 ±(99.9%) 5993.567 ops/s [Average]
[info]   (min, avg, max) = (225387.737, 227253.191, 228872.194), stdev = 1556.510
[info]   CI (99.9%): [221259.623, 233246.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1048.110 ±(99.9%) 27.624 MB/sec [Average]
[info]   (min, avg, max) = (1039.519, 1048.110, 1055.585), stdev = 7.174
[info]   CI (99.9%): [1020.486, 1075.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   7256.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7256.002, 7256.002, 7256.002), stdev = 0.001
[info]   CI (99.9%): [7256.002, 7256.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1064.245 ±(99.9%) 1543.394 MB/sec [Average]
[info]   (min, avg, max) = (720.715, 1064.245, 1627.667), stdev = 400.815
[info]   CI (99.9%): [≈ 0, 2607.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7357.840 ±(99.9%) 10527.621 B/op [Average]
[info]   (min, avg, max) = (5030.698, 7357.840, 11188.445), stdev = 2733.990
[info]   CI (99.9%): [≈ 0, 17885.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.115 ±(99.9%) 0.248 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.115, 0.145), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 7.000), stdev = 1.817
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:08:32
[info] Benchmark                                                                     Mode  Cnt        Score        Error   Units
[info] CodecBenchmark.readAnyRefsJackson                                            thrpt    5  1619368.950 ± 982601.016   ops/s
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                             thrpt    5     1152.866 ±    699.665  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                        thrpt    5     1120.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                    thrpt    5     1269.295 ±    737.748  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5     1237.903 ±    355.560    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                thrpt    5        0.046 ±      0.183  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5        0.040 ±      0.160    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.count                                  thrpt    5       10.000               counts
[info] CodecBenchmark.readAnyRefsJackson:·gc.time                                   thrpt    5       29.000                   ms
[info] CodecBenchmark.readAnyRefsJsoniter                                           thrpt    5  6072298.599 ± 111171.616   ops/s
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                            thrpt    5     1049.847 ±     19.196  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                       thrpt    5      272.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      949.756 ±   1343.357  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5      245.981 ±    347.043    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5        0.046 ±      0.230  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5        0.012 ±      0.059    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.count                                 thrpt    5        7.000               counts
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.time                                  thrpt    5       17.000                   ms
[info] CodecBenchmark.readAnyRefsPlay                                               thrpt    5   362706.345 ±   7882.709   ops/s
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                thrpt    5      959.079 ±     20.811  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                           thrpt    5     4160.001 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      873.942 ±   1125.340  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5     3793.901 ±   4941.973    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5        0.021 ±      0.113  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5        0.091 ±      0.495    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.count                                     thrpt    5        6.000               counts
[info] CodecBenchmark.readAnyRefsPlay:·gc.time                                      thrpt    5       19.000                   ms
[info] CodecBenchmark.readBitSetsJsoniter                                           thrpt    5  5951018.577 ± 165061.481   ops/s
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                            thrpt    5      635.469 ±     17.597  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                       thrpt    5      168.000 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      668.808 ±    792.671  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5      176.764 ±    209.498    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5        0.037 ±      0.164  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5        0.010 ±      0.043    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.count                                 thrpt    5        8.000               counts
[info] CodecBenchmark.readBitSetsJsoniter:·gc.time                                  thrpt    5       27.000                   ms
[info] CodecBenchmark.readIntAndLongMapsJsoniter                                    thrpt    5  3092013.261 ±  67604.248   ops/s
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                     thrpt    5     1462.226 ±     31.921  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                thrpt    5      744.000 ±      0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space            thrpt    5     1556.904 ±   1187.145  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm       thrpt    5      791.585 ±    587.119    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space        thrpt    5        0.067 ±      0.143  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm   thrpt    5        0.034 ±      0.072    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                          thrpt    5       15.000               counts
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                           thrpt    5       32.000                   ms
[info] CodecBenchmark.readIterablesJackson                                          thrpt    5   492923.554 ±  15072.616   ops/s
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate                           thrpt    5      501.303 ±     15.343  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                      thrpt    5     1600.001 ±      0.001    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                  thrpt    5      527.267 ±    629.080  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm             thrpt    5     1682.256 ±   1997.208    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space              thrpt    5        0.025 ±      0.105  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm         thrpt    5        0.080 ±      0.333    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.count                                thrpt    5        8.000               counts
[info] CodecBenchmark.readIterablesJackson:·gc.time                                 thrpt    5       30.000                   ms
[info] CodecBenchmark.readIterablesJsoniter                                         thrpt    5  3137554.026 ± 101286.799   ops/s
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                          thrpt    5      781.774 ±     25.228  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                     thrpt    5      392.000 ±      0.001    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                 thrpt    5      873.941 ±    970.057  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm            thrpt    5      438.969 ±    503.023    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space             thrpt    5        0.012 ±      0.072  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm        thrpt    5        0.006 ±      0.036    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.count                               thrpt    5        6.000               counts
[info] CodecBenchmark.readIterablesJsoniter:·gc.time                                thrpt    5       20.000                   ms
[info] CodecBenchmark.readIterablesPlay                                             thrpt    5   140741.232 ±   4265.773   ops/s
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate                              thrpt    5      963.919 ±     28.954  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                         thrpt    5    10776.003 ±      0.001    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                     thrpt    5      990.727 ±    739.888  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                thrpt    5    11064.869 ±   7957.023    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                 thrpt    5        0.042 ±      0.098  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm            thrpt    5        0.467 ±      1.103    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.count                                   thrpt    5       15.000               counts
[info] CodecBenchmark.readIterablesPlay:·gc.time                                    thrpt    5       39.000                   ms
[info] CodecBenchmark.readMapsJackson                                               thrpt    5   849872.779 ±  38287.202   ops/s
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate                                thrpt    5     1002.599 ±     45.177  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                           thrpt    5     1856.001 ±      0.001    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5     1020.606 ±   1240.801  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5     1894.377 ±   2402.435    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5        0.021 ±      0.098  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5        0.038 ±      0.180    B/op
[info] CodecBenchmark.readMapsJackson:·gc.count                                     thrpt    5        6.000               counts
[info] CodecBenchmark.readMapsJackson:·gc.time                                      thrpt    5       19.000                   ms
[info] CodecBenchmark.readMapsJsoniter                                              thrpt    5  3573304.062 ±  58286.389   ops/s
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate                               thrpt    5      890.329 ±     14.479  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5      392.000 ±      0.001    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5      832.806 ±   1072.386  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5      366.747 ±    474.509    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5        0.017 ±      0.143  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5        0.007 ±      0.063    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.count                                    thrpt    5        6.000               counts
[info] CodecBenchmark.readMapsJsoniter:·gc.time                                     thrpt    5        9.000                   ms
[info] CodecBenchmark.readMutableMapsJackson                                        thrpt    5   869323.737 ±  37627.471   ops/s
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                         thrpt    5     1100.703 ±     47.618  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                    thrpt    5     1992.001 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                thrpt    5     1049.724 ±   1516.721  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5     1895.770 ±   2665.868    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space            thrpt    5        0.008 ±      0.044  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5        0.015 ±      0.080    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.count                              thrpt    5        6.000               counts
[info] CodecBenchmark.readMutableMapsJackson:·gc.time                               thrpt    5       26.000                   ms
[info] CodecBenchmark.readMutableMapsJsoniter                                       thrpt    5  2402127.276 ±  53383.365   ops/s
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                        thrpt    5     1502.456 ±     33.394  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                   thrpt    5      984.000 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space               thrpt    5     1581.376 ±   1162.964  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5     1036.401 ±    779.084    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5        0.058 ±      0.067  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5        0.038 ±      0.045    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.count                             thrpt    5       14.000               counts
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.time                              thrpt    5       30.000                   ms
[info] CodecBenchmark.readPrimitivesJackson                                         thrpt    5  1055824.957 ±  31138.342   ops/s
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                          thrpt    5      773.118 ±     22.824  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                     thrpt    5     1152.000 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                 thrpt    5      765.124 ±    426.292  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5     1139.801 ±    621.608    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space             thrpt    5        0.062 ±      0.098  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5        0.093 ±      0.148    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.count                               thrpt    5       10.000               counts
[info] CodecBenchmark.readPrimitivesJackson:·gc.time                                thrpt    5       35.000                   ms
[info] CodecBenchmark.readPrimitivesJsoniter                                        thrpt    5  5424727.916 ± 128222.564   ops/s
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                         thrpt    5      137.923 ±      3.253  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                    thrpt    5       40.000 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5      143.747 ±     44.705  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       41.690 ±     13.028    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5        0.100 ±      0.067  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5        0.029 ±      0.019    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.count                              thrpt    5       18.000               counts
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.time                               thrpt    5       28.000                   ms
[info] CodecBenchmark.readPrimitivesPlay                                            thrpt    5   161254.700 ±   5647.272   ops/s
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                             thrpt    5      961.834 ±     33.780  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                        thrpt    5     9384.003 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      933.365 ±   1034.647  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5     9118.295 ±  10369.187    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                thrpt    5        0.029 ±      0.122  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5        0.284 ±      1.180    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.count                                  thrpt    5        6.000               counts
[info] CodecBenchmark.readPrimitivesPlay:·gc.time                                   thrpt    5       21.000                   ms
[info] CodecBenchmark.writeAnyRefsJackson                                           thrpt    5  3706989.972 ±  63131.284   ops/s
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                            thrpt    5     1017.870 ±     17.395  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                       thrpt    5      432.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                   thrpt    5     1062.229 ±   1540.364  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5      450.867 ±    654.555    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space               thrpt    5        0.037 ±      0.088  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5        0.016 ±      0.037    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.count                                 thrpt    5        7.000               counts
[info] CodecBenchmark.writeAnyRefsJackson:·gc.time                                  thrpt    5       36.000                   ms
[info] CodecBenchmark.writeAnyRefsJsoniter                                          thrpt    5  9849594.155 ± 192756.140   ops/s
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                           thrpt    5      300.511 ±      5.851  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                      thrpt    5       48.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5      331.283 ±    377.585  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5       52.948 ±     61.098    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5        0.017 ±      0.067  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5        0.003 ±      0.011    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.count                                thrpt    5        6.000               counts
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.time                                 thrpt    5       17.000                   ms
[info] CodecBenchmark.writeAnyRefsPlay                                              thrpt    5   991498.381 ±  18289.845   ops/s
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                               thrpt    5     1467.131 ±     27.020  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                          thrpt    5     2328.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                      thrpt    5     1414.053 ±    582.375  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5     2244.090 ±    937.041    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5        0.046 ±      0.132  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5        0.073 ±      0.209    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.count                                    thrpt    5       12.000               counts
[info] CodecBenchmark.writeAnyRefsPlay:·gc.time                                     thrpt    5       34.000                   ms
[info] CodecBenchmark.writeBitSetsJackson                                           thrpt    5   966941.359 ±  23601.762   ops/s
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                            thrpt    5      354.019 ±      8.623  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                       thrpt    5      576.000 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      331.271 ±    430.320  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5      539.185 ±    705.462    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space               thrpt    5        0.008 ±      0.072  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5        0.014 ±      0.117    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.count                                 thrpt    5        6.000               counts
[info] CodecBenchmark.writeBitSetsJackson:·gc.time                                  thrpt    5       14.000                   ms
[info] CodecBenchmark.writeBitSetsJsoniter                                          thrpt    5  4242621.746 ± 116223.019   ops/s
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                           thrpt    5      647.211 ±     17.738  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                      thrpt    5      240.000 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5      668.808 ±    792.669  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5      248.308 ±    297.596    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5        0.050 ±      0.209  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5        0.019 ±      0.078    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.count                                thrpt    5        8.000               counts
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.time                                 thrpt    5       16.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsJackson                                    thrpt    5   954903.656 ±  15543.957   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                     thrpt    5     1179.932 ±     19.204  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                thrpt    5     1944.000 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space            thrpt    5     1225.049 ±   1847.523  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm       thrpt    5     2020.656 ±   3076.195    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space        thrpt    5        0.029 ±      0.156  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm   thrpt    5        0.048 ±      0.259    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.count                          thrpt    5        7.000               counts
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.time                           thrpt    5       26.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsJsoniter                                   thrpt    5  2738433.648 ±  35544.410   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                    thrpt    5      570.916 ±      7.388  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm               thrpt    5      328.000 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space           thrpt    5      598.034 ±   1002.876  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm      thrpt    5      343.345 ±    572.819    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space       thrpt    5        0.025 ±      0.132  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm  thrpt    5        0.014 ±      0.076    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                         thrpt    5        7.000               counts
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                          thrpt    5       11.000                   ms
[info] CodecBenchmark.writeIterablesJackson                                         thrpt    5  1546790.888 ±  16268.676   ops/s
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate                          thrpt    5      833.739 ±      8.768  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                     thrpt    5      848.000 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                 thrpt    5      917.247 ±   1180.637  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5      932.979 ±   1202.570    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space             thrpt    5        0.029 ±      0.251  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5        0.030 ±      0.256    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.count                               thrpt    5        6.000               counts
[info] CodecBenchmark.writeIterablesJackson:·gc.time                                thrpt    5        9.000                   ms
[info] CodecBenchmark.writeIterablesJsoniter                                        thrpt    5  4095502.687 ± 152951.030   ops/s
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                         thrpt    5      624.771 ±     23.332  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                    thrpt    5      240.000 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5      638.627 ±    756.970  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5      245.378 ±    290.305    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5        0.037 ±      0.143  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5        0.014 ±      0.055    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.count                              thrpt    5        8.000               counts
[info] CodecBenchmark.writeIterablesJsoniter:·gc.time                               thrpt    5       19.000                   ms
[info] CodecBenchmark.writeIterablesPlay                                            thrpt    5   338066.567 ±   5212.552   ops/s
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate                             thrpt    5     1163.797 ±     17.914  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                        thrpt    5     5416.001 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                    thrpt    5     1167.755 ±    982.629  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5     5435.879 ±   4596.305    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                thrpt    5        0.029 ±      0.134  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5        0.135 ±      0.624    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.count                                  thrpt    5        9.000               counts
[info] CodecBenchmark.writeIterablesPlay:·gc.time                                   thrpt    5       20.000                   ms
[info] CodecBenchmark.writeMapsJackson                                              thrpt    5   976827.324 ±  68930.538   ops/s
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate                               thrpt    5     1013.339 ±     71.584  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                          thrpt    5     1632.000 ±      0.001    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                      thrpt    5     1069.553 ±   1516.947  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                 thrpt    5     1720.675 ±   2388.479    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Old_Gen                         thrpt    5        0.431 ±      3.708  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Old_Gen.norm                    thrpt    5        0.713 ±      6.142    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                  thrpt    5        0.046 ±      0.230  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm             thrpt    5        0.075 ±      0.381    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.count                                    thrpt    5        9.000               counts
[info] CodecBenchmark.writeMapsJackson:·gc.time                                     thrpt    5       37.000                   ms
[info] CodecBenchmark.writeMapsJsoniter                                             thrpt    5  3247885.759 ±  96326.880   ops/s
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                              thrpt    5      677.142 ±     20.004  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                         thrpt    5      328.000 ±      0.001    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5      668.837 ±    992.569  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5      324.508 ±    486.642    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5        0.054 ±      0.257  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5        0.026 ±      0.125    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.count                                   thrpt    5        8.000               counts
[info] CodecBenchmark.writeMapsJsoniter:·gc.time                                    thrpt    5       23.000                   ms
[info] CodecBenchmark.writeMutableMapsJackson                                       thrpt    5   944870.441 ±  20591.189   ops/s
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                        thrpt    5      936.914 ±     20.433  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                   thrpt    5     1560.000 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space               thrpt    5      832.816 ±   1072.398  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm          thrpt    5     1386.418 ±   1780.694    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space           thrpt    5        0.017 ±      0.105  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm      thrpt    5        0.028 ±      0.174    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.count                             thrpt    5        6.000               counts
[info] CodecBenchmark.writeMutableMapsJackson:·gc.time                              thrpt    5       12.000                   ms
[info] CodecBenchmark.writeMutableMapsJsoniter                                      thrpt    5  1812140.211 ±   6720.813   ops/s
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                       thrpt    5      497.593 ±      1.844  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                  thrpt    5      432.000 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space              thrpt    5      446.492 ±    126.831  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm         thrpt    5      387.622 ±    109.267    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.count                            thrpt    5        5.000               counts
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.time                             thrpt    5        8.000                   ms
[info] CodecBenchmark.writePrimitivesJackson                                        thrpt    5  1658697.112 ±  66514.893   ops/s
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                         thrpt    5      666.331 ±     26.741  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                    thrpt    5      632.000 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                thrpt    5      782.248 ±    230.702  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5      742.260 ±    237.649    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space            thrpt    5        0.017 ±      0.143  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5        0.016 ±      0.135    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.count                              thrpt    5        5.000               counts
[info] CodecBenchmark.writePrimitivesJackson:·gc.time                               thrpt    5        7.000                   ms
[info] CodecBenchmark.writePrimitivesJsoniter                                       thrpt    5  5575910.147 ± 463295.417   ops/s
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                        thrpt    5      255.177 ±     21.203  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                   thrpt    5       72.000 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space               thrpt    5      294.547 ±     79.155  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5       83.231 ±     28.942    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5        0.021 ±      0.080  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5        0.006 ±      0.022    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.count                             thrpt    5        5.000               counts
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.time                              thrpt    5       23.000                   ms
[info] CodecBenchmark.writePrimitivesPlay                                           thrpt    5   227253.191 ±   5993.567   ops/s
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                            thrpt    5     1048.110 ±     27.624  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                       thrpt    5     7256.002 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                   thrpt    5     1064.245 ±   1543.394  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5     7357.840 ±  10527.621    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space               thrpt    5        0.017 ±      0.036  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5        0.115 ±      0.248    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.count                                 thrpt    5        7.000               counts
[info] CodecBenchmark.writePrimitivesPlay:·gc.time                                  thrpt    5       23.000                   ms
[success] Total time: 535 s, completed Oct 9, 2017 11:25:39 PM
