[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Nov 13, 2017 8:50:39 AM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:192:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] one warning found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:55:88: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MissingReqFields] {
[info]       override def default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = e(x, out);
[info]       private val r: Array[String] = Array("s", "i");
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.MissingReqFields(s = _s, i = _i)
[info]           else
[info]             in.reqFieldError(r, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val missingReqFieldCodec: JsonCodec[MissingReqFields] = materialize[MissingReqFields](CodecConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:57:62: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       override def default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = e(x, out);
[info]       private val r: Array[String] = Array("s", "bd");
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1868115770 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         _bd = in.readBigDecimal(_bd);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 135249149 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.reqFieldError(r, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           {
[info]             val v = x.os;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "os");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = materialize[AnyRefs](CodecConfig())
[info]                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:59:59: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       override def default: com.github.plokhotnyuk.jsoniter_scala.Arrays = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = e(x, out);
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _aa: Array[Array[Int]] = new Array[Array[Int]](0);
[info]           var _a: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1396692260 => if (in.isCharBufEqualsTo(l, "aa"))
[info]                       _aa = d1(in, _aa)
[info]                     else
[info]                       in.skip()
[info]                     case 272946562 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       _a = d2(in, _a)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: Array[BigInt]): Array[BigInt] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               x.+=(in.readBigInt(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               x.+=(d0(in, new Array[Int](0)))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d0(in: JsonReader, default: Array[Int]): Array[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.aa;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 c = out.writeObjectField(c, "aa");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.a;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 c = out.writeObjectField(c, "a");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: Array[Array[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             e0(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = materialize[Arrays](CodecConfig())
[info]                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:61:62: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       override def default: com.github.plokhotnyuk.jsoniter_scala.BitSets = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = e(x, out);
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -311899171 => if (in.isCharBufEqualsTo(l, "bs"))
[info]                       _bs = d0(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 395882128 => if (in.isCharBufEqualsTo(l, "mbs"))
[info]                       _mbs = d1(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               BitSet.empty;
[info]             do 
[info]               x.add(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = BitSet.newBuilder;
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.bs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "bs");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mbs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mbs");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = materialize[BitSets](CodecConfig())
[info]                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:63:68: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       override def default: com.github.plokhotnyuk.jsoniter_scala.Iterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = e(x, out);
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d0(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d1(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 753022030 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d2(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: List[Set[Int]]): List[Set[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               x.+=(d1(in, Set.empty[Int]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d0(in: JsonReader, default: List[String]): List[String] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = List.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "l");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "s");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "ls");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: List[Set[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: List[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = materialize[Iterables](CodecConfig())
[info]                                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:65:53: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       override def default: com.github.plokhotnyuk.jsoniter_scala.Maps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = e(x, out);
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsInt(), d1(in, HashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = HashMap.empty[Long, Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = HashMap.empty[String, Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.HashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: scala.collection.immutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = materialize[Maps](CodecConfig())
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:67:74: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       override def default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = e(x, out);
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               x.update(in.readObjectFieldAsInt(), d1(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               OpenHashMap.empty[Long, Double];
[info]             do 
[info]               x.update(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d0(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               HashMap.empty[String, Double];
[info]             do 
[info]               x.update(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.mutable.OpenHashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: scala.collection.mutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = materialize[MutableMaps](CodecConfig())
[info]                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:69:83: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       override def default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = e(x, out);
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               x.update(in.readObjectFieldAsLong(), d1(in, LongMap.empty[Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = LongMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = IntMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsInt(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.LongMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: scala.collection.immutable.IntMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = materialize[IntAndLongMaps](CodecConfig())
[info]                                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:71:71: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       override def default: com.github.plokhotnyuk.jsoniter_scala.Primitives = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = e(x, out);
[info]       private val r: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 255;
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 479329913 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readByte();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readShort();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -986815646 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         _bl = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1128364876 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         _ch = in.readChar();
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 977778859 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         _dbl = in.readDouble();
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2108804597 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         _f = in.readFloat();
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.reqFieldError(r, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = materialize[Primitives](CodecConfig())
[info]                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:73:80: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       override def default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = e(x, out);
[info]       private val r: Array[String] = Array("s", "l");
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.reqFieldError(r, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = materialize[ExtractFields](CodecConfig())
[info]                                                                                ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 92 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 72 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce
[info] # Run progress: 0.00% complete, ETA 00:11:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 840255.444 ops/s
[info] # Warmup Iteration   2: 1455225.016 ops/s
[info] # Warmup Iteration   3: 1455451.463 ops/s
[info] # Warmup Iteration   4: 1456682.543 ops/s
[info] # Warmup Iteration   5: 1459180.340 ops/s
[info] Iteration   1: 1462639.252 ops/s
[info]                  ·gc.alloc.rate:                   2350.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2372.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2551.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1456299.130 ops/s
[info]                  ·gc.alloc.rate:                   2340.096 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2377.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2568.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 1456362.289 ops/s
[info]                  ·gc.alloc.rate:                   2340.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2381.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2572.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 1466836.342 ops/s
[info]                  ·gc.alloc.rate:                   2356.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2383.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2556.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 1458346.940 ops/s
[info]                  ·gc.alloc.rate:                   2343.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2383.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2571.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce":
[info]   1460096.791 ±(99.9%) 17573.915 ops/s [Average]
[info]   (min, avg, max) = (1456299.130, 1460096.791, 1466836.342), stdev = 4563.890
[info]   CI (99.9%): [1442522.875, 1477670.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate":
[info]   2346.167 ±(99.9%) 28.167 MB/sec [Average]
[info]   (min, avg, max) = (2340.096, 2346.167, 2356.944), stdev = 7.315
[info]   CI (99.9%): [2318.001, 2374.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm":
[info]   2528.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2528.000, 2528.000, 2528.000), stdev = 0.001
[info]   CI (99.9%): [2528.000, 2528.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space":
[info]   2379.727 ±(99.9%) 18.359 MB/sec [Average]
[info]   (min, avg, max) = (2372.428, 2379.727, 2383.725), stdev = 4.768
[info]   CI (99.9%): [2361.367, 2398.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2564.180 ±(99.9%) 35.863 B/op [Average]
[info]   (min, avg, max) = (2551.801, 2564.180, 2572.121), stdev = 9.313
[info]   CI (99.9%): [2528.317, 2600.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.072 ±(99.9%) 0.073 B/op [Average]
[info]   (min, avg, max) = (0.045, 0.072, 0.090), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.600, 16.000), stdev = 4.827
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson
[info] # Run progress: 1.47% complete, ETA 00:18:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 92266.427 ops/s
[info] # Warmup Iteration   2: 199350.536 ops/s
[info] # Warmup Iteration   3: 200137.126 ops/s
[info] # Warmup Iteration   4: 202660.740 ops/s
[info] # Warmup Iteration   5: 204572.290 ops/s
[info] Iteration   1: 203689.438 ops/s
[info]                  ·gc.alloc.rate:                   488.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          640.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4946.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 205579.180 ops/s
[info]                  ·gc.alloc.rate:                   493.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          643.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4926.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 205678.949 ops/s
[info]                  ·gc.alloc.rate:                   493.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2474.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 205219.269 ops/s
[info]                  ·gc.alloc.rate:                   492.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4975.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.479 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 204453.327 ops/s
[info]                  ·gc.alloc.rate:               490.705 MB/sec
[info]                  ·gc.alloc.rate.norm:          3776.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2505.059 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson":
[info]   204924.033 ±(99.9%) 3240.077 ops/s [Average]
[info]   (min, avg, max) = (203689.438, 204924.033, 205678.949), stdev = 841.438
[info]   CI (99.9%): [201683.956, 208164.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate":
[info]   491.850 ±(99.9%) 7.804 MB/sec [Average]
[info]   (min, avg, max) = (488.883, 491.850, 493.666), stdev = 2.027
[info]   CI (99.9%): [484.045, 499.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm":
[info]   3776.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3776.002, 3776.002, 3776.002), stdev = 0.001
[info]   CI (99.9%): [3776.002, 3776.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space":
[info]   516.472 ±(99.9%) 674.767 MB/sec [Average]
[info]   (min, avg, max) = (323.546, 516.472, 649.078), stdev = 175.235
[info]   CI (99.9%): [≈ 0, 1191.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3965.729 ±(99.9%) 5188.292 B/op [Average]
[info]   (min, avg, max) = (2474.776, 3965.729, 4975.898), stdev = 1347.383
[info]   CI (99.9%): [≈ 0, 9154.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.192 ±(99.9%) 0.673 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.192, 0.479), stdev = 0.175
[info]   CI (99.9%): [≈ 0, 0.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.800, 8.000), stdev = 3.033
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter
[info] # Run progress: 2.94% complete, ETA 00:18:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 429046.385 ops/s
[info] # Warmup Iteration   2: 444583.685 ops/s
[info] # Warmup Iteration   3: 453004.020 ops/s
[info] # Warmup Iteration   4: 456260.700 ops/s
[info] # Warmup Iteration   5: 453418.928 ops/s
[info] Iteration   1: 452565.509 ops/s
[info]                  ·gc.alloc.rate:                   421.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2264.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.290 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 443991.403 ops/s
[info]                  ·gc.alloc.rate:               413.159 MB/sec
[info]                  ·gc.alloc.rate.norm:          1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1154.713 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 452569.256 ops/s
[info]                  ·gc.alloc.rate:                   421.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1134.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 453203.656 ops/s
[info]                  ·gc.alloc.rate:                   421.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2267.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.217 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 450782.022 ops/s
[info]                  ·gc.alloc.rate:               419.471 MB/sec
[info]                  ·gc.alloc.rate.norm:          1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1140.801 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter":
[info]   450622.369 ±(99.9%) 14691.153 ops/s [Average]
[info]   (min, avg, max) = (443991.403, 450622.369, 453203.656), stdev = 3815.246
[info]   CI (99.9%): [435931.216, 465313.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate":
[info]   419.323 ±(99.9%) 13.658 MB/sec [Average]
[info]   (min, avg, max) = (413.159, 419.323, 421.729), stdev = 3.547
[info]   CI (99.9%): [405.665, 432.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm":
[info]   1464.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1464.001, 1464.001, 1464.001), stdev = 0.001
[info]   CI (99.9%): [1464.001, 1464.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space":
[info]   456.682 ±(99.9%) 687.387 MB/sec [Average]
[info]   (min, avg, max) = (325.874, 456.682, 653.070), stdev = 178.512
[info]   CI (99.9%): [≈ 0, 1144.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1592.223 ±(99.9%) 2367.873 B/op [Average]
[info]   (min, avg, max) = (1134.013, 1592.223, 2267.081), stdev = 614.929
[info]   CI (99.9%): [≈ 0, 3960.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.116 ±(99.9%) 0.506 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.116, 0.290), stdev = 0.131
[info]   CI (99.9%): [≈ 0, 0.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 5.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless
[info] # Run progress: 4.41% complete, ETA 00:17:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1563579.785 ops/s
[info] # Warmup Iteration   2: 1694880.483 ops/s
[info] # Warmup Iteration   3: 1733661.432 ops/s
[info] # Warmup Iteration   4: 1732317.125 ops/s
[info] # Warmup Iteration   5: 1721607.672 ops/s
[info] Iteration   1: 1735529.359 ops/s
[info]                  ·gc.alloc.rate:                   1076.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     896.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1719070.502 ops/s
[info]                  ·gc.alloc.rate:                   1066.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1214.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1738861.740 ops/s
[info]                  ·gc.alloc.rate:                   1078.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     905.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1722288.662 ops/s
[info]                  ·gc.alloc.rate:                   1068.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     917.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1724775.086 ops/s
[info]                  ·gc.alloc.rate:                   1069.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     919.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless":
[info]   1728105.070 ±(99.9%) 33200.994 ops/s [Average]
[info]   (min, avg, max) = (1719070.502, 1728105.070, 1738861.740), stdev = 8622.193
[info]   CI (99.9%): [1694904.076, 1761306.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate":
[info]   1072.063 ±(99.9%) 20.578 MB/sec [Average]
[info]   (min, avg, max) = (1066.444, 1072.063, 1078.736), stdev = 5.344
[info]   CI (99.9%): [1051.485, 1092.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.000), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   1066.178 ±(99.9%) 563.097 MB/sec [Average]
[info]   (min, avg, max) = (989.281, 1066.178, 1327.459), stdev = 146.235
[info]   CI (99.9%): [503.080, 1629.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   970.987 ±(99.9%) 526.209 B/op [Average]
[info]   (min, avg, max) = (896.794, 970.987, 1214.879), stdev = 136.655
[info]   CI (99.9%): [444.778, 1497.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.125), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.057 ±(99.9%) 0.127 B/op [Average]
[info]   (min, avg, max) = (0.038, 0.057, 0.114), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 8.000), stdev = 2.302
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump
[info] # Run progress: 5.88% complete, ETA 00:17:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3342650.142 ops/s
[info] # Warmup Iteration   2: 3550269.094 ops/s
[info] # Warmup Iteration   3: 3573860.994 ops/s
[info] # Warmup Iteration   4: 3607072.293 ops/s
[info] # Warmup Iteration   5: 3617714.671 ops/s
[info] Iteration   1: 3632942.707 ops/s
[info]                  ·gc.alloc.rate:               517.255 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 141.120 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 3574867.709 ops/s
[info]                  ·gc.alloc.rate:                   508.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     287.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3611923.471 ops/s
[info]                  ·gc.alloc.rate:               514.271 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 142.377 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 3580443.305 ops/s
[info]                  ·gc.alloc.rate:                   509.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     287.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 3546015.044 ops/s
[info]                  ·gc.alloc.rate:               504.883 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 291.376 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump":
[info]   3589238.447 ±(99.9%) 130252.091 ops/s [Average]
[info]   (min, avg, max) = (3546015.044, 3589238.447, 3632942.707), stdev = 33826.054
[info]   CI (99.9%): [3458986.356, 3719490.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   511.037 ±(99.9%) 18.542 MB/sec [Average]
[info]   (min, avg, max) = (504.883, 511.037, 517.255), stdev = 4.815
[info]   CI (99.9%): [492.495, 529.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   224.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (224.000, 224.000, 224.000), stdev = 0.001
[info]   CI (99.9%): [224.000, 224.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   523.328 ±(99.9%) 692.348 MB/sec [Average]
[info]   (min, avg, max) = (325.870, 523.328, 656.743), stdev = 179.801
[info]   CI (99.9%): [≈ 0, 1215.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   229.936 ±(99.9%) 310.061 B/op [Average]
[info]   (min, avg, max) = (141.120, 229.936, 291.376), stdev = 80.522
[info]   CI (99.9%): [≈ 0, 539.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.037), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.800, 10.000), stdev = 3.701
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay
[info] # Run progress: 7.35% complete, ETA 00:17:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 56488.565 ops/s
[info] # Warmup Iteration   2: 122273.004 ops/s
[info] # Warmup Iteration   3: 123285.217 ops/s
[info] # Warmup Iteration   4: 128677.424 ops/s
[info] # Warmup Iteration   5: 126488.950 ops/s
[info] Iteration   1: 125039.630 ops/s
[info]                  ·gc.alloc.rate:                   1043.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12380.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.524 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 125813.289 ops/s
[info]                  ·gc.alloc.rate:                   1049.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16516.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.302 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 126835.148 ops/s
[info]                  ·gc.alloc.rate:                   1058.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12370.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 125493.183 ops/s
[info]                  ·gc.alloc.rate:                   1047.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12552.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.522 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 122140.395 ops/s
[info]                  ·gc.alloc.rate:                   1019.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12948.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.268 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay":
[info]   125064.329 ±(99.9%) 6788.133 ops/s [Average]
[info]   (min, avg, max) = (122140.395, 125064.329, 126835.148), stdev = 1762.857
[info]   CI (99.9%): [118276.196, 131852.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate":
[info]   1043.597 ±(99.9%) 56.637 MB/sec [Average]
[info]   (min, avg, max) = (1019.204, 1043.597, 1058.372), stdev = 14.708
[info]   CI (99.9%): [986.960, 1100.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm":
[info]   13128.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13128.003, 13128.004, 13128.004), stdev = 0.001
[info]   CI (99.9%): [13128.003, 13128.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space":
[info]   1061.731 ±(99.9%) 558.687 MB/sec [Average]
[info]   (min, avg, max) = (983.937, 1061.731, 1320.878), stdev = 145.089
[info]   CI (99.9%): [503.044, 1620.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm":
[info]   13353.719 ±(99.9%) 6868.227 B/op [Average]
[info]   (min, avg, max) = (12370.469, 13353.719, 16516.814), stdev = 1783.657
[info]   CI (99.9%): [6485.492, 20221.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.730 ±(99.9%) 1.632 B/op [Average]
[info]   (min, avg, max) = (0.268, 0.730, 1.302), stdev = 0.424
[info]   CI (99.9%): [≈ 0, 2.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 12.000), stdev = 3.464
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce
[info] # Run progress: 8.82% complete, ETA 00:16:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 657866.857 ops/s
[info] # Warmup Iteration   2: 1125077.970 ops/s
[info] # Warmup Iteration   3: 1143114.268 ops/s
[info] # Warmup Iteration   4: 1142857.635 ops/s
[info] # Warmup Iteration   5: 1143848.688 ops/s
[info] Iteration   1: 1147375.167 ops/s
[info]                  ·gc.alloc.rate:                   1797.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2772.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1150852.600 ops/s
[info]                  ·gc.alloc.rate:                   1802.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2312.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1140415.319 ops/s
[info]                  ·gc.alloc.rate:                   1786.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2338.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1145331.442 ops/s
[info]                  ·gc.alloc.rate:                   1793.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2800.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1134533.470 ops/s
[info]                  ·gc.alloc.rate:                   1776.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2356.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce":
[info]   1143701.600 ±(99.9%) 24516.125 ops/s [Average]
[info]   (min, avg, max) = (1134533.470, 1143701.600, 1150852.600), stdev = 6366.760
[info]   CI (99.9%): [1119185.475, 1168217.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1791.301 ±(99.9%) 38.399 MB/sec [Average]
[info]   (min, avg, max) = (1776.969, 1791.301, 1802.518), stdev = 9.972
[info]   CI (99.9%): [1752.902, 1829.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2464.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2464.000, 2464.000, 2464.000), stdev = 0.001
[info]   CI (99.9%): [2464.000, 2464.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1829.381 ±(99.9%) 706.700 MB/sec [Average]
[info]   (min, avg, max) = (1691.453, 1829.381, 2038.603), stdev = 183.528
[info]   CI (99.9%): [1122.681, 2536.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2516.033 ±(99.9%) 952.757 B/op [Average]
[info]   (min, avg, max) = (2312.177, 2516.033, 2800.221), stdev = 247.428
[info]   CI (99.9%): [1563.276, 3468.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.069 ±(99.9%) 0.167 B/op [Average]
[info]   (min, avg, max) = (0.028, 0.069, 0.114), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 12.000), stdev = 3.317
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson
[info] # Run progress: 10.29% complete, ETA 00:16:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1198836.530 ops/s
[info] # Warmup Iteration   2: 1886376.407 ops/s
[info] # Warmup Iteration   3: 1899342.072 ops/s
[info] # Warmup Iteration   4: 1898645.910 ops/s
[info] # Warmup Iteration   5: 1893296.281 ops/s
[info] Iteration   1: 1891891.197 ops/s
[info]                  ·gc.alloc.rate:                   1327.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1102.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1892826.358 ops/s
[info]                  ·gc.alloc.rate:                   1328.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1110.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1863821.499 ops/s
[info]                  ·gc.alloc.rate:               1307.918 MB/sec
[info]                  ·gc.alloc.rate.norm:          1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1133.749 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 1894571.593 ops/s
[info]                  ·gc.alloc.rate:               1329.476 MB/sec
[info]                  ·gc.alloc.rate.norm:          1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1120.046 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 1902118.199 ops/s
[info]                  ·gc.alloc.rate:                   1334.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1118.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson":
[info]   1889045.769 ±(99.9%) 56464.026 ops/s [Average]
[info]   (min, avg, max) = (1863821.499, 1889045.769, 1902118.199), stdev = 14663.528
[info]   CI (99.9%): [1832581.743, 1945509.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1325.603 ±(99.9%) 39.633 MB/sec [Average]
[info]   (min, avg, max) = (1307.918, 1325.603, 1334.842), stdev = 10.293
[info]   CI (99.9%): [1285.970, 1365.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1341.418 ±(99.9%) 40.948 MB/sec [Average]
[info]   (min, avg, max) = (1326.098, 1341.418, 1352.911), stdev = 10.634
[info]   CI (99.9%): [1300.470, 1382.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1117.219 ±(99.9%) 44.620 B/op [Average]
[info]   (min, avg, max) = (1102.764, 1117.219, 1133.749), stdev = 11.588
[info]   CI (99.9%): [1072.599, 1161.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.087 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 12.000), stdev = 2.702
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 11.76% complete, ETA 00:16:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5963639.821 ops/s
[info] # Warmup Iteration   2: 6439099.175 ops/s
[info] # Warmup Iteration   3: 6602191.459 ops/s
[info] # Warmup Iteration   4: 6632804.239 ops/s
[info] # Warmup Iteration   5: 6683906.435 ops/s
[info] Iteration   1: 6631046.024 ops/s
[info]                  ·gc.alloc.rate:                   842.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 6518792.946 ops/s
[info]                  ·gc.alloc.rate:                   828.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     238.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 6485557.907 ops/s
[info]                  ·gc.alloc.rate:                   824.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     160.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 6501588.562 ops/s
[info]                  ·gc.alloc.rate:                   826.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     241.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 6608814.987 ops/s
[info]                  ·gc.alloc.rate:                   840.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     158.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter":
[info]   6549160.085 ±(99.9%) 254655.869 ops/s [Average]
[info]   (min, avg, max) = (6485557.907, 6549160.085, 6631046.024), stdev = 66133.320
[info]   CI (99.9%): [6294504.217, 6803815.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   832.553 ±(99.9%) 32.353 MB/sec [Average]
[info]   (min, avg, max) = (824.466, 832.553, 842.972), stdev = 8.402
[info]   CI (99.9%): [800.200, 864.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   793.698 ±(99.9%) 697.178 MB/sec [Average]
[info]   (min, avg, max) = (655.765, 793.698, 995.955), stdev = 181.055
[info]   CI (99.9%): [96.521, 1490.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   190.871 ±(99.9%) 171.882 B/op [Average]
[info]   (min, avg, max) = (155.584, 190.871, 241.000), stdev = 44.637
[info]   CI (99.9%): [18.988, 362.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.032 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.013, 0.025), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.200, 10.000), stdev = 3.564
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay
[info] # Run progress: 13.24% complete, ETA 00:15:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 268863.220 ops/s
[info] # Warmup Iteration   2: 419326.110 ops/s
[info] # Warmup Iteration   3: 438404.112 ops/s
[info] # Warmup Iteration   4: 439017.839 ops/s
[info] # Warmup Iteration   5: 438568.030 ops/s
[info] Iteration   1: 430766.112 ops/s
[info]                  ·gc.alloc.rate:                   1139.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4816.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.456 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 435518.017 ops/s
[info]                  ·gc.alloc.rate:                   1151.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3595.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.226 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 428760.783 ops/s
[info]                  ·gc.alloc.rate:                   1133.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4897.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 425019.885 ops/s
[info]                  ·gc.alloc.rate:                   1123.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3722.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 430307.509 ops/s
[info]                  ·gc.alloc.rate:               1137.757 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3688.823 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay":
[info]   430074.461 ±(99.9%) 14591.791 ops/s [Average]
[info]   (min, avg, max) = (425019.885, 430074.461, 435518.017), stdev = 3789.442
[info]   CI (99.9%): [415482.670, 444666.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1137.184 ±(99.9%) 38.596 MB/sec [Average]
[info]   (min, avg, max) = (1123.817, 1137.184, 1151.588), stdev = 10.023
[info]   CI (99.9%): [1098.588, 1175.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.676 ±(99.9%) 683.067 MB/sec [Average]
[info]   (min, avg, max) = (995.272, 1132.676, 1334.801), stdev = 177.390
[info]   CI (99.9%): [449.609, 1815.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4144.194 ±(99.9%) 2515.337 B/op [Average]
[info]   (min, avg, max) = (3595.325, 4144.194, 4897.820), stdev = 653.225
[info]   CI (99.9%): [1628.857, 6659.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.179 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.125), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.228 ±(99.9%) 0.655 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.228, 0.456), stdev = 0.170
[info]   CI (99.9%): [≈ 0, 0.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 7.000), stdev = 0.894
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce
[info] # Run progress: 14.71% complete, ETA 00:15:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 365898.202 ops/s
[info] # Warmup Iteration   2: 587721.097 ops/s
[info] # Warmup Iteration   3: 598784.169 ops/s
[info] # Warmup Iteration   4: 601806.789 ops/s
[info] # Warmup Iteration   5: 601500.013 ops/s
[info] Iteration   1: 599140.242 ops/s
[info]                  ·gc.alloc.rate:                   1952.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5320.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.219 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 595806.354 ops/s
[info]                  ·gc.alloc.rate:                   1942.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4473.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.220 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 598416.239 ops/s
[info]                  ·gc.alloc.rate:                   1950.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5354.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 603114.035 ops/s
[info]                  ·gc.alloc.rate:                   1965.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5319.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.217 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 599760.034 ops/s
[info]                  ·gc.alloc.rate:                   1954.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2041.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5354.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.219 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce":
[info]   599247.381 ±(99.9%) 10143.499 ops/s [Average]
[info]   (min, avg, max) = (595806.354, 599247.381, 603114.035), stdev = 2634.234
[info]   CI (99.9%): [589103.882, 609390.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   1953.240 ±(99.9%) 32.999 MB/sec [Average]
[info]   (min, avg, max) = (1942.040, 1953.240, 1965.788), stdev = 8.570
[info]   CI (99.9%): [1920.240, 1986.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5128.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5128.001, 5128.001, 5128.001), stdev = 0.001
[info]   CI (99.9%): [5128.001, 5128.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1967.410 ±(99.9%) 588.921 MB/sec [Average]
[info]   (min, avg, max) = (1694.015, 1967.410, 2041.278), stdev = 152.941
[info]   CI (99.9%): [1378.488, 2556.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5164.236 ±(99.9%) 1489.224 B/op [Average]
[info]   (min, avg, max) = (4473.085, 5164.236, 5354.319), stdev = 386.747
[info]   CI (99.9%): [3675.012, 6653.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.083), stdev = 0.019
[info]   CI (99.9%): [0.003, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.197 ±(99.9%) 0.188 B/op [Average]
[info]   (min, avg, max) = (0.109, 0.197, 0.220), stdev = 0.049
[info]   CI (99.9%): [0.009, 0.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.000, 14.000), stdev = 3.391
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson
[info] # Run progress: 16.18% complete, ETA 00:15:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 814770.575 ops/s
[info] # Warmup Iteration   2: 1230858.899 ops/s
[info] # Warmup Iteration   3: 1237962.318 ops/s
[info] # Warmup Iteration   4: 1247156.075 ops/s
[info] # Warmup Iteration   5: 1254748.551 ops/s
[info] Iteration   1: 1262618.647 ops/s
[info]                  ·gc.alloc.rate:               1187.775 MB/sec
[info]                  ·gc.alloc.rate.norm:          1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1235.172 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1258270.670 ops/s
[info]                  ·gc.alloc.rate:               1183.694 MB/sec
[info]                  ·gc.alloc.rate.norm:          1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1331.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1664.785 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 1259536.112 ops/s
[info]                  ·gc.alloc.rate:               1184.863 MB/sec
[info]                  ·gc.alloc.rate.norm:          1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1253.614 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 1247212.433 ops/s
[info]                  ·gc.alloc.rate:                   1173.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1694.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1257330.772 ops/s
[info]                  ·gc.alloc.rate:                   1182.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1264.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson":
[info]   1256993.727 ±(99.9%) 22413.373 ops/s [Average]
[info]   (min, avg, max) = (1247212.433, 1256993.727, 1262618.647), stdev = 5820.682
[info]   CI (99.9%): [1234580.354, 1279407.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1182.479 ±(99.9%) 21.123 MB/sec [Average]
[info]   (min, avg, max) = (1173.257, 1182.479, 1187.775), stdev = 5.486
[info]   CI (99.9%): [1161.357, 1203.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1136.167 ±(99.9%) 708.336 MB/sec [Average]
[info]   (min, avg, max) = (991.288, 1136.167, 1343.469), stdev = 183.953
[info]   CI (99.9%): [427.831, 1844.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1422.655 ±(99.9%) 905.569 B/op [Average]
[info]   (min, avg, max) = (1235.172, 1422.655, 1694.714), stdev = 235.173
[info]   CI (99.9%): [517.086, 2328.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.090 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.304
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter
[info] # Run progress: 17.65% complete, ETA 00:15:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1895321.354 ops/s
[info] # Warmup Iteration   2: 2325652.383 ops/s
[info] # Warmup Iteration   3: 2376361.723 ops/s
[info] # Warmup Iteration   4: 2396611.693 ops/s
[info] # Warmup Iteration   5: 2362485.098 ops/s
[info] Iteration   1: 2399987.968 ops/s
[info]                  ·gc.alloc.rate:                   1098.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     648.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2385649.374 ops/s
[info]                  ·gc.alloc.rate:                   1091.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     875.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2367837.534 ops/s
[info]                  ·gc.alloc.rate:                   1083.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     665.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2378635.630 ops/s
[info]                  ·gc.alloc.rate:                   1088.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     664.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2380112.711 ops/s
[info]                  ·gc.alloc.rate:                   1089.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     666.480 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter":
[info]   2382444.643 ±(99.9%) 45208.293 ops/s [Average]
[info]   (min, avg, max) = (2367837.534, 2382444.643, 2399987.968), stdev = 11740.450
[info]   CI (99.9%): [2337236.351, 2427652.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1090.328 ±(99.9%) 20.651 MB/sec [Average]
[info]   (min, avg, max) = (1083.667, 1090.328, 1098.361), stdev = 5.363
[info]   CI (99.9%): [1069.677, 1110.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   720.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (720.000, 720.000, 720.000), stdev = 0.001
[info]   CI (99.9%): [720.000, 720.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1066.196 ±(99.9%) 563.058 MB/sec [Average]
[info]   (min, avg, max) = (989.315, 1066.196, 1327.459), stdev = 146.224
[info]   CI (99.9%): [503.137, 1629.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   704.035 ±(99.9%) 370.072 B/op [Average]
[info]   (min, avg, max) = (648.518, 704.035, 875.452), stdev = 96.107
[info]   CI (99.9%): [333.963, 1074.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.038, 0.055), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 11.000), stdev = 4.278
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay
[info] # Run progress: 19.12% complete, ETA 00:14:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 114162.022 ops/s
[info] # Warmup Iteration   2: 208985.167 ops/s
[info] # Warmup Iteration   3: 219471.963 ops/s
[info] # Warmup Iteration   4: 218316.398 ops/s
[info] # Warmup Iteration   5: 219737.959 ops/s
[info] Iteration   1: 218578.377 ops/s
[info]                  ·gc.alloc.rate:                   1330.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9526.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.300 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 220045.361 ops/s
[info]                  ·gc.alloc.rate:                   1339.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9524.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.447 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 221256.091 ops/s
[info]                  ·gc.alloc.rate:                   1346.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9526.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.296 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 219392.147 ops/s
[info]                  ·gc.alloc.rate:                   1335.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9653.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.299 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 218249.207 ops/s
[info]                  ·gc.alloc.rate:                   1328.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9732.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.300 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay":
[info]   219504.237 ±(99.9%) 4639.463 ops/s [Average]
[info]   (min, avg, max) = (218249.207, 219504.237, 221256.091), stdev = 1204.854
[info]   CI (99.9%): [214864.774, 224143.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1336.101 ±(99.9%) 28.406 MB/sec [Average]
[info]   (min, avg, max) = (1328.358, 1336.101, 1346.819), stdev = 7.377
[info]   CI (99.9%): [1307.696, 1364.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9576.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9576.002, 9576.002, 9576.002), stdev = 0.001
[info]   CI (99.9%): [9576.002, 9576.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1338.406 ±(99.9%) 41.204 MB/sec [Average]
[info]   (min, avg, max) = (1323.573, 1338.406, 1350.101), stdev = 10.700
[info]   CI (99.9%): [1297.203, 1379.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9592.776 ±(99.9%) 368.600 B/op [Average]
[info]   (min, avg, max) = (9524.669, 9592.776, 9732.745), stdev = 95.724
[info]   CI (99.9%): [9224.176, 9961.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.046, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.010, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.328 ±(99.9%) 0.255 B/op [Average]
[info]   (min, avg, max) = (0.296, 0.328, 0.447), stdev = 0.066
[info]   CI (99.9%): [0.073, 0.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 9.000), stdev = 2.168
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson
[info] # Run progress: 20.59% complete, ETA 00:14:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 998709.294 ops/s
[info] # Warmup Iteration   2: 1558806.213 ops/s
[info] # Warmup Iteration   3: 1554790.429 ops/s
[info] # Warmup Iteration   4: 1596324.151 ops/s
[info] # Warmup Iteration   5: 1572987.052 ops/s
[info] Iteration   1: 1567636.705 ops/s
[info]                  ·gc.alloc.rate:                   1012.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1001.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1557970.231 ops/s
[info]                  ·gc.alloc.rate:                   1006.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1011.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1592171.166 ops/s
[info]                  ·gc.alloc.rate:                   1028.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     993.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1593316.989 ops/s
[info]                  ·gc.alloc.rate:                   1028.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     996.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1592307.810 ops/s
[info]                  ·gc.alloc.rate:                   1028.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     999.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson":
[info]   1580680.580 ±(99.9%) 64226.371 ops/s [Average]
[info]   (min, avg, max) = (1557970.231, 1580680.580, 1593316.989), stdev = 16679.385
[info]   CI (99.9%): [1516454.209, 1644906.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1020.804 ±(99.9%) 41.390 MB/sec [Average]
[info]   (min, avg, max) = (1006.167, 1020.804, 1028.936), stdev = 10.749
[info]   CI (99.9%): [979.413, 1062.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1005.162 ±(99.9%) 21.863 MB/sec [Average]
[info]   (min, avg, max) = (997.659, 1005.162, 1011.962), stdev = 5.678
[info]   CI (99.9%): [983.299, 1027.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1000.482 ±(99.9%) 26.274 B/op [Average]
[info]   (min, avg, max) = (993.656, 1000.482, 1011.464), stdev = 6.823
[info]   CI (99.9%): [974.209, 1026.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.088 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.063), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 8.000), stdev = 2.387
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 22.06% complete, ETA 00:14:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5271815.188 ops/s
[info] # Warmup Iteration   2: 4015938.458 ops/s
[info] # Warmup Iteration   3: 4180819.675 ops/s
[info] # Warmup Iteration   4: 4165838.133 ops/s
[info] # Warmup Iteration   5: 4167140.531 ops/s
[info] Iteration   1: 4193657.130 ops/s
[info]                  ·gc.alloc.rate:                   554.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     244.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4211544.103 ops/s
[info]                  ·gc.alloc.rate:               556.807 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 122.106 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 4146122.642 ops/s
[info]                  ·gc.alloc.rate:                   548.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     248.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 4134560.493 ops/s
[info]                  ·gc.alloc.rate:               546.631 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 249.901 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 4159574.294 ops/s
[info]                  ·gc.alloc.rate:                   549.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter":
[info]   4169091.732 ±(99.9%) 125015.973 ops/s [Average]
[info]   (min, avg, max) = (4134560.493, 4169091.732, 4211544.103), stdev = 32466.251
[info]   CI (99.9%): [4044075.760, 4294107.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   551.188 ±(99.9%) 16.532 MB/sec [Average]
[info]   (min, avg, max) = (546.631, 551.188, 556.807), stdev = 4.293
[info]   CI (99.9%): [534.656, 567.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   523.929 ±(99.9%) 689.211 MB/sec [Average]
[info]   (min, avg, max) = (326.872, 523.929, 656.747), stdev = 178.986
[info]   CI (99.9%): [≈ 0, 1213.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   197.921 ±(99.9%) 262.609 B/op [Average]
[info]   (min, avg, max) = (122.106, 197.921, 249.901), stdev = 68.199
[info]   CI (99.9%): [≈ 0, 460.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.032), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 6.000), stdev = 2.449
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay
[info] # Run progress: 23.53% complete, ETA 00:13:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 133998.267 ops/s
[info] # Warmup Iteration   2: 259701.047 ops/s
[info] # Warmup Iteration   3: 272418.125 ops/s
[info] # Warmup Iteration   4: 277238.653 ops/s
[info] # Warmup Iteration   5: 271254.795 ops/s
[info] Iteration   1: 273411.273 ops/s
[info]                  ·gc.alloc.rate:                   1241.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7600.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.240 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 276486.544 ops/s
[info]                  ·gc.alloc.rate:                   1255.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5676.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.237 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 277273.184 ops/s
[info]                  ·gc.alloc.rate:                   1259.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7583.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 277277.785 ops/s
[info]                  ·gc.alloc.rate:                   1259.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7621.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 276099.373 ops/s
[info]                  ·gc.alloc.rate:                   1253.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7683.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.356 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay":
[info]   276109.632 ±(99.9%) 6131.400 ops/s [Average]
[info]   (min, avg, max) = (273411.273, 276109.632, 277277.785), stdev = 1592.305
[info]   CI (99.9%): [269978.232, 282241.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1253.744 ±(99.9%) 27.835 MB/sec [Average]
[info]   (min, avg, max) = (1241.518, 1253.744, 1259.061), stdev = 7.229
[info]   CI (99.9%): [1225.909, 1281.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7144.002, 7144.002, 7144.002), stdev = 0.001
[info]   CI (99.9%): [7144.001, 7144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1269.271 ±(99.9%) 586.149 MB/sec [Average]
[info]   (min, avg, max) = (997.600, 1269.271, 1348.337), stdev = 152.221
[info]   CI (99.9%): [683.122, 1855.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7233.010 ±(99.9%) 3353.571 B/op [Average]
[info]   (min, avg, max) = (5676.567, 7233.010, 7683.899), stdev = 870.912
[info]   CI (99.9%): [3879.438, 10586.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.237 ±(99.9%) 0.324 B/op [Average]
[info]   (min, avg, max) = (0.118, 0.237, 0.356), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 11.000), stdev = 4.266
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce
[info] # Run progress: 25.00% complete, ETA 00:13:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 365413.927 ops/s
[info] # Warmup Iteration   2: 535112.882 ops/s
[info] # Warmup Iteration   3: 566189.408 ops/s
[info] # Warmup Iteration   4: 565717.722 ops/s
[info] # Warmup Iteration   5: 560871.005 ops/s
[info] Iteration   1: 567089.801 ops/s
[info]                  ·gc.alloc.rate:                   1882.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4679.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 559980.043 ops/s
[info]                  ·gc.alloc.rate:                   1859.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5706.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 557453.119 ops/s
[info]                  ·gc.alloc.rate:                   1850.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4786.507 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         23.000 ms
[info] Iteration   4: 562277.239 ops/s
[info]                  ·gc.alloc.rate:                   1867.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5705.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 569901.144 ops/s
[info]                  ·gc.alloc.rate:                   1892.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4691.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce":
[info]   563340.269 ±(99.9%) 19651.848 ops/s [Average]
[info]   (min, avg, max) = (557453.119, 563340.269, 569901.144), stdev = 5103.522
[info]   CI (99.9%): [543688.422, 582992.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1870.541 ±(99.9%) 65.355 MB/sec [Average]
[info]   (min, avg, max) = (1850.928, 1870.541, 1892.360), stdev = 16.973
[info]   CI (99.9%): [1805.185, 1935.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1830.512 ±(99.9%) 719.767 MB/sec [Average]
[info]   (min, avg, max) = (1686.640, 1830.512, 2039.167), stdev = 186.921
[info]   CI (99.9%): [1110.745, 2550.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5114.014 ±(99.9%) 2087.623 B/op [Average]
[info]   (min, avg, max) = (4679.261, 5114.014, 5706.689), stdev = 542.149
[info]   CI (99.9%): [3026.391, 7201.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.163 ±(99.9%) 0.189 B/op [Average]
[info]   (min, avg, max) = (0.115, 0.163, 0.233), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 13.000, 23.000), stdev = 5.657
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson
[info] # Run progress: 26.47% complete, ETA 00:13:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 416304.802 ops/s
[info] # Warmup Iteration   2: 643087.743 ops/s
[info] # Warmup Iteration   3: 649862.392 ops/s
[info] # Warmup Iteration   4: 644263.957 ops/s
[info] # Warmup Iteration   5: 653340.062 ops/s
[info] Iteration   1: 659324.620 ops/s
[info]                  ·gc.alloc.rate:                   824.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2365.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 658595.091 ops/s
[info]                  ·gc.alloc.rate:                   823.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1587.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 654593.431 ops/s
[info]                  ·gc.alloc.rate:                   818.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2404.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 655173.706 ops/s
[info]                  ·gc.alloc.rate:                   819.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1607.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 647627.787 ops/s
[info]                  ·gc.alloc.rate:               810.122 MB/sec
[info]                  ·gc.alloc.rate.norm:          1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1630.247 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson":
[info]   655062.927 ±(99.9%) 17870.495 ops/s [Average]
[info]   (min, avg, max) = (647627.787, 655062.927, 659324.620), stdev = 4640.911
[info]   CI (99.9%): [637192.432, 672933.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   819.453 ±(99.9%) 22.404 MB/sec [Average]
[info]   (min, avg, max) = (810.122, 819.453, 824.784), stdev = 5.818
[info]   CI (99.9%): [797.048, 841.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1968.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1968.001, 1968.001, 1968.001), stdev = 0.001
[info]   CI (99.9%): [1968.001, 1968.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   799.403 ±(99.9%) 691.289 MB/sec [Average]
[info]   (min, avg, max) = (664.452, 799.403, 1000.681), stdev = 179.525
[info]   CI (99.9%): [108.114, 1490.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1919.049 ±(99.9%) 1640.437 B/op [Average]
[info]   (min, avg, max) = (1587.184, 1919.049, 2404.932), stdev = 426.016
[info]   CI (99.9%): [278.612, 3559.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.060 ±(99.9%) 0.161 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.060, 0.100), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 9.000), stdev = 2.881
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 27.94% complete, ETA 00:13:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3996782.162 ops/s
[info] # Warmup Iteration   2: 4132521.755 ops/s
[info] # Warmup Iteration   3: 4123669.655 ops/s
[info] # Warmup Iteration   4: 4149503.287 ops/s
[info] # Warmup Iteration   5: 4205156.766 ops/s
[info] Iteration   1: 4196096.614 ops/s
[info]                  ·gc.alloc.rate:                   192.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 4064224.915 ops/s
[info]                  ·gc.alloc.rate:               185.992 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 99.057 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     21.000 ms
[info] Iteration   3: 4125057.408 ops/s
[info]                  ·gc.alloc.rate:               188.790 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 97.601 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 4144156.046 ops/s
[info]                  ·gc.alloc.rate:      189.665 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4142125.836 ops/s
[info]                  ·gc.alloc.rate:                   189.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.218 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.842 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter":
[info]   4134332.164 ±(99.9%) 182379.366 ops/s [Average]
[info]   (min, avg, max) = (4064224.915, 4134332.164, 4196096.614), stdev = 47363.342
[info]   CI (99.9%): [3951952.798, 4316711.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   189.209 ±(99.9%) 8.354 MB/sec [Average]
[info]   (min, avg, max) = (185.992, 189.209, 192.031), stdev = 2.170
[info]   CI (99.9%): [180.855, 197.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   218.651 ±(99.9%) 484.781 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 218.651, 325.554), stdev = 125.896
[info]   CI (99.9%): [≈ 0, 703.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   83.251 ±(99.9%) 184.467 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 83.251, 123.650), stdev = 47.906
[info]   CI (99.9%): [≈ 0, 267.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.446 ±(99.9%) 3.815 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.446, 2.218), stdev = 0.991
[info]   CI (99.9%): [≈ 0, 4.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.169 ±(99.9%) 1.449 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.169, 0.842), stdev = 0.376
[info]   CI (99.9%): [≈ 0, 1.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 7.200, 21.000), stdev = 8.136
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay
[info] # Run progress: 29.41% complete, ETA 00:12:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103704.193 ops/s
[info] # Warmup Iteration   2: 197972.954 ops/s
[info] # Warmup Iteration   3: 200406.979 ops/s
[info] # Warmup Iteration   4: 203889.565 ops/s
[info] # Warmup Iteration   5: 200293.105 ops/s
[info] Iteration   1: 201465.568 ops/s
[info]                  ·gc.alloc.rate:                   1118.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10288.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.651 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 200239.894 ops/s
[info]                  ·gc.alloc.rate:                   1111.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7809.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.654 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 201232.907 ops/s
[info]                  ·gc.alloc.rate:                   1117.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10420.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.488 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 202838.388 ops/s
[info]                  ·gc.alloc.rate:                   1126.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7786.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 202105.772 ops/s
[info]                  ·gc.alloc.rate:               1122.208 MB/sec
[info]                  ·gc.alloc.rate.norm:          8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7848.926 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay":
[info]   201576.506 ±(99.9%) 3747.889 ops/s [Average]
[info]   (min, avg, max) = (200239.894, 201576.506, 202838.388), stdev = 973.315
[info]   CI (99.9%): [197828.617, 205324.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1119.301 ±(99.9%) 20.877 MB/sec [Average]
[info]   (min, avg, max) = (1111.847, 1119.301, 1126.344), stdev = 5.422
[info]   CI (99.9%): [1098.424, 1140.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8736.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8736.002, 8736.002, 8736.002), stdev = 0.001
[info]   CI (99.9%): [8736.002, 8736.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1131.283 ±(99.9%) 682.073 MB/sec [Average]
[info]   (min, avg, max) = (993.893, 1131.283, 1332.797), stdev = 177.132
[info]   CI (99.9%): [449.211, 1813.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8830.682 ±(99.9%) 5359.027 B/op [Average]
[info]   (min, avg, max) = (7786.890, 8830.682, 10420.010), stdev = 1391.722
[info]   CI (99.9%): [3471.654, 14189.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.391 ±(99.9%) 1.142 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.391, 0.654), stdev = 0.297
[info]   CI (99.9%): [≈ 0, 1.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 11.000), stdev = 3.564
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 30.88% complete, ETA 00:12:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3080040.022 ops/s
[info] # Warmup Iteration   2: 3340668.216 ops/s
[info] # Warmup Iteration   3: 3416047.090 ops/s
[info] # Warmup Iteration   4: 3404494.234 ops/s
[info] # Warmup Iteration   5: 3350392.601 ops/s
[info] Iteration   1: 3342110.781 ops/s
[info]                  ·gc.alloc.rate:                   1002.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.008 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     465.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 3348290.567 ops/s
[info]                  ·gc.alloc.rate:                   1004.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     466.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3321699.385 ops/s
[info]                  ·gc.alloc.rate:                   996.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     472.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 3311396.447 ops/s
[info]                  ·gc.alloc.rate:                   993.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     476.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 3302109.015 ops/s
[info]                  ·gc.alloc.rate:               990.650 MB/sec
[info]                  ·gc.alloc.rate.norm:          472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 479.441 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter":
[info]   3325121.239 ±(99.9%) 75924.692 ops/s [Average]
[info]   (min, avg, max) = (3302109.015, 3325121.239, 3348290.567), stdev = 19717.402
[info]   CI (99.9%): [3249196.547, 3401045.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   997.595 ±(99.9%) 22.894 MB/sec [Average]
[info]   (min, avg, max) = (990.650, 997.595, 1004.577), stdev = 5.946
[info]   CI (99.9%): [974.700, 1020.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   472.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (472.000, 472.000, 472.000), stdev = 0.001
[info]   CI (99.9%): [472.000, 472.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   997.511 ±(99.9%) 27.521 MB/sec [Average]
[info]   (min, avg, max) = (988.008, 997.511, 1006.268), stdev = 7.147
[info]   CI (99.9%): [969.990, 1025.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   471.989 ±(99.9%) 23.417 B/op [Average]
[info]   (min, avg, max) = (465.077, 471.989, 479.441), stdev = 6.081
[info]   CI (99.9%): [448.572, 495.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.039), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.800, 10.000), stdev = 1.095
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 32.35% complete, ETA 00:12:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127927.183 ops/s
[info] # Warmup Iteration   2: 225965.216 ops/s
[info] # Warmup Iteration   3: 237879.868 ops/s
[info] # Warmup Iteration   4: 238560.572 ops/s
[info] # Warmup Iteration   5: 236590.929 ops/s
[info] Iteration   1: 239660.564 ops/s
[info]                  ·gc.alloc.rate:                   1288.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8688.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.273 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 240651.431 ops/s
[info]                  ·gc.alloc.rate:                   1293.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6528.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.681 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 236993.704 ops/s
[info]                  ·gc.alloc.rate:                   1273.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8883.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.553 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 237134.427 ops/s
[info]                  ·gc.alloc.rate:                   1274.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8922.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 235594.816 ops/s
[info]                  ·gc.alloc.rate:                   1266.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9011.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.695 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay":
[info]   238006.988 ±(99.9%) 8015.926 ops/s [Average]
[info]   (min, avg, max) = (235594.816, 238006.988, 240651.431), stdev = 2081.710
[info]   CI (99.9%): [229991.062, 246022.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1279.258 ±(99.9%) 43.211 MB/sec [Average]
[info]   (min, avg, max) = (1266.280, 1279.258, 1293.513), stdev = 11.222
[info]   CI (99.9%): [1236.047, 1322.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8456.002, 8456.002, 8456.002), stdev = 0.001
[info]   CI (99.9%): [8456.002, 8456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1270.919 ±(99.9%) 587.300 MB/sec [Average]
[info]   (min, avg, max) = (998.642, 1270.919, 1349.446), stdev = 152.520
[info]   CI (99.9%): [683.619, 1858.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8406.686 ±(99.9%) 4068.709 B/op [Average]
[info]   (min, avg, max) = (6528.359, 8406.686, 9011.367), stdev = 1056.631
[info]   CI (99.9%): [4337.977, 12475.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.468 ±(99.9%) 0.964 B/op [Average]
[info]   (min, avg, max) = (0.138, 0.468, 0.695), stdev = 0.250
[info]   CI (99.9%): [≈ 0, 1.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 10.000), stdev = 2.588
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce
[info] # Run progress: 33.82% complete, ETA 00:12:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 309777.285 ops/s
[info] # Warmup Iteration   2: 529422.234 ops/s
[info] # Warmup Iteration   3: 542063.595 ops/s
[info] # Warmup Iteration   4: 555278.221 ops/s
[info] # Warmup Iteration   5: 553031.788 ops/s
[info] Iteration   1: 549078.795 ops/s
[info]                  ·gc.alloc.rate:                   1929.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5800.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 544678.996 ops/s
[info]                  ·gc.alloc.rate:                   1913.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5870.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   3: 551266.799 ops/s
[info]                  ·gc.alloc.rate:                   1937.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4842.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 541930.978 ops/s
[info]                  ·gc.alloc.rate:                   1904.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5919.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 549624.267 ops/s
[info]                  ·gc.alloc.rate:                   1931.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2040.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5840.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce":
[info]   547315.967 ±(99.9%) 14913.058 ops/s [Average]
[info]   (min, avg, max) = (541930.978, 547315.967, 551266.799), stdev = 3872.874
[info]   CI (99.9%): [532402.908, 562229.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1923.131 ±(99.9%) 52.429 MB/sec [Average]
[info]   (min, avg, max) = (1904.200, 1923.131, 1937.029), stdev = 13.616
[info]   CI (99.9%): [1870.702, 1975.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5528.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5528.001, 5528.001, 5528.001), stdev = 0.001
[info]   CI (99.9%): [5528.001, 5528.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1966.705 ±(99.9%) 581.748 MB/sec [Average]
[info]   (min, avg, max) = (1696.688, 1966.705, 2040.585), stdev = 151.078
[info]   CI (99.9%): [1384.957, 2548.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5654.906 ±(99.9%) 1757.602 B/op [Average]
[info]   (min, avg, max) = (4842.104, 5654.906, 5919.928), stdev = 456.444
[info]   CI (99.9%): [3897.304, 7412.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.119 ±(99.9%) 0.228 B/op [Average]
[info]   (min, avg, max) = (0.060, 0.119, 0.179), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 11.200, 18.000), stdev = 5.541
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson
[info] # Run progress: 35.29% complete, ETA 00:11:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 291017.122 ops/s
[info] # Warmup Iteration   2: 521771.551 ops/s
[info] # Warmup Iteration   3: 521351.933 ops/s
[info] # Warmup Iteration   4: 521994.513 ops/s
[info] # Warmup Iteration   5: 523077.502 ops/s
[info] Iteration   1: 519572.430 ops/s
[info]                  ·gc.alloc.rate:                   528.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1978.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 524117.263 ops/s
[info]                  ·gc.alloc.rate:                   533.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     983.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 521760.957 ops/s
[info]                  ·gc.alloc.rate:                   530.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1983.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 514017.359 ops/s
[info]                  ·gc.alloc.rate:                   522.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2021.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 522019.391 ops/s
[info]                  ·gc.alloc.rate:                   530.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     999.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson":
[info]   520297.480 ±(99.9%) 14871.552 ops/s [Average]
[info]   (min, avg, max) = (514017.359, 520297.480, 524117.263), stdev = 3862.095
[info]   CI (99.9%): [505425.928, 535169.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   529.143 ±(99.9%) 15.136 MB/sec [Average]
[info]   (min, avg, max) = (522.749, 529.143, 533.037), stdev = 3.931
[info]   CI (99.9%): [514.007, 544.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   526.136 ±(99.9%) 691.146 MB/sec [Average]
[info]   (min, avg, max) = (327.544, 526.136, 660.412), stdev = 179.489
[info]   CI (99.9%): [≈ 0, 1217.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1593.121 ±(99.9%) 2116.930 B/op [Average]
[info]   (min, avg, max) = (983.180, 1593.121, 2021.352), stdev = 549.760
[info]   CI (99.9%): [≈ 0, 3710.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.088 ±(99.9%) 0.216 B/op [Average]
[info]   (min, avg, max) = (0.063, 0.088, 0.188), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 5.000), stdev = 1.517
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter
[info] # Run progress: 36.76% complete, ETA 00:11:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2359725.831 ops/s
[info] # Warmup Iteration   2: 2658389.836 ops/s
[info] # Warmup Iteration   3: 2755065.576 ops/s
[info] # Warmup Iteration   4: 2782510.377 ops/s
[info] # Warmup Iteration   5: 2789100.114 ops/s
[info] Iteration   1: 2741406.173 ops/s
[info]                  ·gc.alloc.rate:               738.826 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 375.185 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 2773111.221 ops/s
[info]                  ·gc.alloc.rate:                   747.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     558.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2784297.397 ops/s
[info]                  ·gc.alloc.rate:                   750.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     372.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2783761.615 ops/s
[info]                  ·gc.alloc.rate:                   750.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     373.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2782029.540 ops/s
[info]                  ·gc.alloc.rate:                   749.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     375.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter":
[info]   2772921.189 ±(99.9%) 70033.236 ops/s [Average]
[info]   (min, avg, max) = (2741406.173, 2772921.189, 2784297.397), stdev = 18187.409
[info]   CI (99.9%): [2702887.953, 2842954.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   747.337 ±(99.9%) 18.912 MB/sec [Average]
[info]   (min, avg, max) = (738.826, 747.337, 750.404), stdev = 4.911
[info]   CI (99.9%): [728.425, 766.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   424.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (424.000, 424.000, 424.000), stdev = 0.001
[info]   CI (99.9%): [424.000, 424.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   724.757 ±(99.9%) 561.113 MB/sec [Average]
[info]   (min, avg, max) = (653.766, 724.757, 985.340), stdev = 145.719
[info]   CI (99.9%): [163.644, 1285.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   411.190 ±(99.9%) 318.184 B/op [Average]
[info]   (min, avg, max) = (372.419, 411.190, 558.990), stdev = 82.631
[info]   CI (99.9%): [93.006, 729.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.072 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.047), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.200, 9.000), stdev = 3.033
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay
[info] # Run progress: 38.24% complete, ETA 00:11:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68290.720 ops/s
[info] # Warmup Iteration   2: 167047.708 ops/s
[info] # Warmup Iteration   3: 173344.546 ops/s
[info] # Warmup Iteration   4: 172823.725 ops/s
[info] # Warmup Iteration   5: 171774.279 ops/s
[info] Iteration   1: 171983.229 ops/s
[info]                  ·gc.alloc.rate:                   1173.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9037.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.572 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 171922.496 ops/s
[info]                  ·gc.alloc.rate:                   1173.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12135.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.143 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 172041.094 ops/s
[info]                  ·gc.alloc.rate:                   1174.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9150.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.381 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 172635.914 ops/s
[info]                  ·gc.alloc.rate:                   1178.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12209.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.380 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 170978.595 ops/s
[info]                  ·gc.alloc.rate:                   1166.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9283.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay":
[info]   171912.266 ±(99.9%) 2291.978 ops/s [Average]
[info]   (min, avg, max) = (170978.595, 171912.266, 172635.914), stdev = 595.219
[info]   CI (99.9%): [169620.288, 174204.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1173.151 ±(99.9%) 15.624 MB/sec [Average]
[info]   (min, avg, max) = (1166.783, 1173.151, 1178.083), stdev = 4.057
[info]   CI (99.9%): [1157.527, 1188.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10736.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10736.003, 10736.003, 10736.003), stdev = 0.001
[info]   CI (99.9%): [10736.002, 10736.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1132.711 ±(99.9%) 704.924 MB/sec [Average]
[info]   (min, avg, max) = (987.980, 1132.711, 1339.810), stdev = 183.067
[info]   CI (99.9%): [427.786, 1837.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10363.452 ±(99.9%) 6369.795 B/op [Average]
[info]   (min, avg, max) = (9037.661, 10363.452, 12209.833), stdev = 1654.215
[info]   CI (99.9%): [3993.657, 16733.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.533 ±(99.9%) 1.411 B/op [Average]
[info]   (min, avg, max) = (0.192, 0.533, 1.143), stdev = 0.367
[info]   CI (99.9%): [≈ 0, 1.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 13.000), stdev = 3.082
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce
[info] # Run progress: 39.71% complete, ETA 00:11:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 230646.659 ops/s
[info] # Warmup Iteration   2: 456231.537 ops/s
[info] # Warmup Iteration   3: 470501.128 ops/s
[info] # Warmup Iteration   4: 469582.993 ops/s
[info] # Warmup Iteration   5: 460076.850 ops/s
[info] Iteration   1: 462927.871 ops/s
[info]                  ·gc.alloc.rate:                   1645.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5710.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.212 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 466579.795 ops/s
[info]                  ·gc.alloc.rate:                   1658.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5690.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.211 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 469235.973 ops/s
[info]                  ·gc.alloc.rate:                   1667.820 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5677.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 462685.893 ops/s
[info]                  ·gc.alloc.rate:                   1644.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5766.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.354 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 464245.483 ops/s
[info]                  ·gc.alloc.rate:                   1650.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5758.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.282 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce":
[info]   465135.003 ±(99.9%) 10644.471 ops/s [Average]
[info]   (min, avg, max) = (462685.893, 465135.003, 469235.973), stdev = 2764.335
[info]   CI (99.9%): [454490.532, 475779.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1653.267 ±(99.9%) 37.834 MB/sec [Average]
[info]   (min, avg, max) = (1644.544, 1653.267, 1667.820), stdev = 9.825
[info]   CI (99.9%): [1615.433, 1691.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1691.314 ±(99.9%) 28.763 MB/sec [Average]
[info]   (min, avg, max) = (1680.328, 1691.314, 1699.300), stdev = 7.470
[info]   CI (99.9%): [1662.551, 1720.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5720.839 ±(99.9%) 154.720 B/op [Average]
[info]   (min, avg, max) = (5677.375, 5720.839, 5766.872), stdev = 40.180
[info]   CI (99.9%): [5566.119, 5875.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.226 ±(99.9%) 0.406 B/op [Average]
[info]   (min, avg, max) = (0.070, 0.226, 0.354), stdev = 0.105
[info]   CI (99.9%): [≈ 0, 0.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.800, 13.000), stdev = 2.588
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson
[info] # Run progress: 41.18% complete, ETA 00:10:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 415494.127 ops/s
[info] # Warmup Iteration   2: 914460.567 ops/s
[info] # Warmup Iteration   3: 900809.203 ops/s
[info] # Warmup Iteration   4: 899340.588 ops/s
[info] # Warmup Iteration   5: 903272.720 ops/s
[info] Iteration   1: 910465.210 ops/s
[info]                  ·gc.alloc.rate:                   1074.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1721.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 901350.645 ops/s
[info]                  ·gc.alloc.rate:                   1063.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2330.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 904859.259 ops/s
[info]                  ·gc.alloc.rate:                   1067.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1749.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 898454.047 ops/s
[info]                  ·gc.alloc.rate:                   1059.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1767.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 906061.870 ops/s
[info]                  ·gc.alloc.rate:                   1068.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1755.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson":
[info]   904238.206 ±(99.9%) 17675.415 ops/s [Average]
[info]   (min, avg, max) = (898454.047, 904238.206, 910465.210), stdev = 4590.249
[info]   CI (99.9%): [886562.792, 921913.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1066.755 ±(99.9%) 20.751 MB/sec [Average]
[info]   (min, avg, max) = (1059.949, 1066.755, 1074.067), stdev = 5.389
[info]   CI (99.9%): [1046.005, 1087.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.000, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1071.602 ±(99.9%) 568.610 MB/sec [Average]
[info]   (min, avg, max) = (995.945, 1071.602, 1335.545), stdev = 147.666
[info]   CI (99.9%): [502.992, 1640.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1864.859 ±(99.9%) 1005.544 B/op [Average]
[info]   (min, avg, max) = (1721.005, 1864.859, 2330.996), stdev = 261.137
[info]   CI (99.9%): [859.315, 2870.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.101 ±(99.9%) 0.285 B/op [Average]
[info]   (min, avg, max) = (0.036, 0.101, 0.182), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 9.000), stdev = 2.608
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter
[info] # Run progress: 42.65% complete, ETA 00:10:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2620280.542 ops/s
[info] # Warmup Iteration   2: 3097822.381 ops/s
[info] # Warmup Iteration   3: 3147315.306 ops/s
[info] # Warmup Iteration   4: 3179778.877 ops/s
[info] # Warmup Iteration   5: 3180461.697 ops/s
[info] Iteration   1: 3179095.497 ops/s
[info]                  ·gc.alloc.rate:                   792.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     324.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3140419.765 ops/s
[info]                  ·gc.alloc.rate:                   782.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     329.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3133470.109 ops/s
[info]                  ·gc.alloc.rate:                   780.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     496.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 3129856.040 ops/s
[info]                  ·gc.alloc.rate:                   779.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     333.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3156375.045 ops/s
[info]                  ·gc.alloc.rate:                   786.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     497.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter":
[info]   3147843.291 ±(99.9%) 77844.210 ops/s [Average]
[info]   (min, avg, max) = (3129856.040, 3147843.291, 3179095.497), stdev = 20215.894
[info]   CI (99.9%): [3069999.081, 3225687.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   784.328 ±(99.9%) 19.376 MB/sec [Average]
[info]   (min, avg, max) = (779.866, 784.328, 792.122), stdev = 5.032
[info]   CI (99.9%): [764.953, 803.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.485 ±(99.9%) 707.130 MB/sec [Average]
[info]   (min, avg, max) = (655.081, 792.485, 997.926), stdev = 183.639
[info]   CI (99.9%): [85.355, 1499.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   396.154 ±(99.9%) 354.920 B/op [Average]
[info]   (min, avg, max) = (324.182, 396.154, 497.426), stdev = 92.172
[info]   CI (99.9%): [41.234, 751.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.033 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.019, 0.031), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.140
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay
[info] # Run progress: 44.12% complete, ETA 00:10:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 146824.989 ops/s
[info] # Warmup Iteration   2: 250909.265 ops/s
[info] # Warmup Iteration   3: 255590.541 ops/s
[info] # Warmup Iteration   4: 257037.977 ops/s
[info] # Warmup Iteration   5: 256058.956 ops/s
[info] Iteration   1: 253506.105 ops/s
[info]                  ·gc.alloc.rate:                   1304.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8215.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.388 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 257781.678 ops/s
[info]                  ·gc.alloc.rate:                   1326.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8134.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.508 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 256001.817 ops/s
[info]                  ·gc.alloc.rate:                   1317.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8233.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.384 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 255474.631 ops/s
[info]                  ·gc.alloc.rate:                   1314.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8289.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 256030.409 ops/s
[info]                  ·gc.alloc.rate:                   1317.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8296.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay":
[info]   255758.928 ±(99.9%) 5896.722 ops/s [Average]
[info]   (min, avg, max) = (253506.105, 255758.928, 257781.678), stdev = 1531.360
[info]   CI (99.9%): [249862.206, 261655.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1316.092 ±(99.9%) 30.405 MB/sec [Average]
[info]   (min, avg, max) = (1304.528, 1316.092, 1326.558), stdev = 7.896
[info]   CI (99.9%): [1285.687, 1346.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8096.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8096.002, 8096.002, 8096.002), stdev = 0.001
[info]   CI (99.9%): [8096.002, 8096.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1338.499 ±(99.9%) 40.435 MB/sec [Average]
[info]   (min, avg, max) = (1323.786, 1338.499, 1350.093), stdev = 10.501
[info]   CI (99.9%): [1298.064, 1378.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8233.970 ±(99.9%) 253.263 B/op [Average]
[info]   (min, avg, max) = (8134.203, 8233.970, 8296.228), stdev = 65.771
[info]   CI (99.9%): [7980.707, 8487.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.333 ±(99.9%) 0.559 B/op [Average]
[info]   (min, avg, max) = (0.128, 0.333, 0.508), stdev = 0.145
[info]   CI (99.9%): [≈ 0, 0.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 13.000), stdev = 3.507
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson
[info] # Run progress: 45.59% complete, ETA 00:09:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 143835.929 ops/s
[info] # Warmup Iteration   2: 655200.206 ops/s
[info] # Warmup Iteration   3: 693347.278 ops/s
[info] # Warmup Iteration   4: 697001.667 ops/s
[info] # Warmup Iteration   5: 696590.435 ops/s
[info] Iteration   1: 693160.367 ops/s
[info]                  ·gc.alloc.rate:               898.800 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2245.379 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 694405.564 ops/s
[info]                  ·gc.alloc.rate:                   900.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2256.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.330 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 697359.798 ops/s
[info]                  ·gc.alloc.rate:                   904.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1504.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 691315.264 ops/s
[info]                  ·gc.alloc.rate:                   896.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2283.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 697196.420 ops/s
[info]                  ·gc.alloc.rate:                   904.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2273.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson":
[info]   694687.483 ±(99.9%) 10044.842 ops/s [Average]
[info]   (min, avg, max) = (691315.264, 694687.483, 697359.798), stdev = 2608.613
[info]   CI (99.9%): [684642.641, 704732.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   900.773 ±(99.9%) 12.980 MB/sec [Average]
[info]   (min, avg, max) = (896.423, 900.773, 904.241), stdev = 3.371
[info]   CI (99.9%): [887.793, 913.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   932.571 ±(99.9%) 572.850 MB/sec [Average]
[info]   (min, avg, max) = (666.739, 932.571, 1007.265), stdev = 148.767
[info]   CI (99.9%): [359.721, 1505.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2112.605 ±(99.9%) 1310.912 B/op [Average]
[info]   (min, avg, max) = (1504.188, 2112.605, 2283.997), stdev = 340.440
[info]   CI (99.9%): [801.693, 3423.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.223 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.146), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.104 ±(99.9%) 0.504 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.104, 0.330), stdev = 0.131
[info]   CI (99.9%): [≈ 0, 0.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 10.000), stdev = 3.114
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 47.06% complete, ETA 00:09:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2006576.514 ops/s
[info] # Warmup Iteration   2: 2393260.467 ops/s
[info] # Warmup Iteration   3: 2449937.916 ops/s
[info] # Warmup Iteration   4: 2457423.558 ops/s
[info] # Warmup Iteration   5: 2455736.309 ops/s
[info] Iteration   1: 2441068.304 ops/s
[info]                  ·gc.alloc.rate:                   1155.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     851.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2446674.665 ops/s
[info]                  ·gc.alloc.rate:                   1157.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     641.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2442904.823 ops/s
[info]                  ·gc.alloc.rate:                   1155.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     645.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2416534.480 ops/s
[info]                  ·gc.alloc.rate:                   1142.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     873.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2460356.089 ops/s
[info]                  ·gc.alloc.rate:                   1163.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     646.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter":
[info]   2441507.672 ±(99.9%) 61119.983 ops/s [Average]
[info]   (min, avg, max) = (2416534.480, 2441507.672, 2460356.089), stdev = 15872.665
[info]   CI (99.9%): [2380387.689, 2502627.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1154.769 ±(99.9%) 28.880 MB/sec [Average]
[info]   (min, avg, max) = (1142.815, 1154.769, 1163.513), stdev = 7.500
[info]   CI (99.9%): [1125.889, 1183.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1134.808 ±(99.9%) 693.706 MB/sec [Average]
[info]   (min, avg, max) = (997.927, 1134.808, 1342.155), stdev = 180.153
[info]   CI (99.9%): [441.102, 1828.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   731.596 ±(99.9%) 461.202 B/op [Average]
[info]   (min, avg, max) = (641.679, 731.596, 873.775), stdev = 119.773
[info]   CI (99.9%): [270.394, 1192.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.046 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.032, 0.054), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 6.000), stdev = 1.643
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay
[info] # Run progress: 48.53% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 125363.923 ops/s
[info] # Warmup Iteration   2: 212345.719 ops/s
[info] # Warmup Iteration   3: 220543.566 ops/s
[info] # Warmup Iteration   4: 219023.196 ops/s
[info] # Warmup Iteration   5: 221689.922 ops/s
[info] Iteration   1: 220082.848 ops/s
[info]                  ·gc.alloc.rate:                   1172.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              8384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9427.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.447 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 218229.947 ops/s
[info]                  ·gc.alloc.rate:                   1162.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              8384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7175.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.450 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 221257.746 ops/s
[info]                  ·gc.alloc.rate:                   1179.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              8384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9491.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.444 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 221845.219 ops/s
[info]                  ·gc.alloc.rate:                   1182.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              8384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7131.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 220012.893 ops/s
[info]                  ·gc.alloc.rate:                   1172.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              8384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9625.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.596 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay":
[info]   220285.731 ±(99.9%) 5349.023 ops/s [Average]
[info]   (min, avg, max) = (218229.947, 220285.731, 221845.219), stdev = 1389.124
[info]   CI (99.9%): [214936.708, 225634.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1173.901 ±(99.9%) 28.400 MB/sec [Average]
[info]   (min, avg, max) = (1162.975, 1173.901, 1182.169), stdev = 7.375
[info]   CI (99.9%): [1145.501, 1202.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8384.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8384.002, 8384.002, 8384.002), stdev = 0.001
[info]   CI (99.9%): [8384.002, 8384.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1200.108 ±(99.9%) 703.075 MB/sec [Average]
[info]   (min, avg, max) = (995.296, 1200.108, 1346.136), stdev = 182.586
[info]   CI (99.9%): [497.033, 1903.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8570.206 ±(99.9%) 4988.749 B/op [Average]
[info]   (min, avg, max) = (7131.338, 8570.206, 9625.778), stdev = 1295.562
[info]   CI (99.9%): [3581.457, 13558.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.015
[info]   CI (99.9%): [0.006, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.446 ±(99.9%) 0.409 B/op [Average]
[info]   (min, avg, max) = (0.295, 0.446, 0.596), stdev = 0.106
[info]   CI (99.9%): [0.038, 0.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.800, 13.000), stdev = 4.147
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce
[info] # Run progress: 50.00% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 78555.131 ops/s
[info] # Warmup Iteration   2: 447005.493 ops/s
[info] # Warmup Iteration   3: 474327.952 ops/s
[info] # Warmup Iteration   4: 463606.528 ops/s
[info] # Warmup Iteration   5: 472594.850 ops/s
[info] Iteration   1: 471053.561 ops/s
[info]                  ·gc.alloc.rate:                   1389.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4462.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 467736.828 ops/s
[info]                  ·gc.alloc.rate:                   1379.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4515.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 460883.734 ops/s
[info]                  ·gc.alloc.rate:                   1359.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4600.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 467274.601 ops/s
[info]                  ·gc.alloc.rate:                   1378.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5691.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 460572.920 ops/s
[info]                  ·gc.alloc.rate:                   1358.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4629.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce":
[info]   465504.329 ±(99.9%) 17706.744 ops/s [Average]
[info]   (min, avg, max) = (460572.920, 465504.329, 471053.561), stdev = 4598.385
[info]   CI (99.9%): [447797.584, 483211.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1372.910 ±(99.9%) 52.169 MB/sec [Average]
[info]   (min, avg, max) = (1358.387, 1372.910, 1389.237), stdev = 13.548
[info]   CI (99.9%): [1320.741, 1425.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4640.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4640.001, 4640.001, 4640.001), stdev = 0.001
[info]   CI (99.9%): [4640.001, 4640.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1414.464 ±(99.9%) 594.610 MB/sec [Average]
[info]   (min, avg, max) = (1336.138, 1414.464, 1690.404), stdev = 154.418
[info]   CI (99.9%): [819.854, 2009.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4780.081 ±(99.9%) 1978.281 B/op [Average]
[info]   (min, avg, max) = (4462.651, 4780.081, 5691.332), stdev = 513.753
[info]   CI (99.9%): [2801.800, 6758.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.127 ±(99.9%) 0.226 B/op [Average]
[info]   (min, avg, max) = (0.070, 0.127, 0.210), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 12.000), stdev = 3.391
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson
[info] # Run progress: 51.47% complete, ETA 00:08:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 571873.204 ops/s
[info] # Warmup Iteration   2: 942856.918 ops/s
[info] # Warmup Iteration   3: 958548.734 ops/s
[info] # Warmup Iteration   4: 948643.660 ops/s
[info] # Warmup Iteration   5: 950588.952 ops/s
[info] Iteration   1: 858658.590 ops/s
[info]                  ·gc.alloc.rate:                   659.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1207.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 962489.014 ops/s
[info]                  ·gc.alloc.rate:               739.056 MB/sec
[info]                  ·gc.alloc.rate.norm:          1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1081.696 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 959204.787 ops/s
[info]                  ·gc.alloc.rate:                   736.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1089.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 963150.314 ops/s
[info]                  ·gc.alloc.rate:                   739.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1634.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 967756.098 ops/s
[info]                  ·gc.alloc.rate:                   743.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1088.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson":
[info]   942251.761 ±(99.9%) 180323.547 ops/s [Average]
[info]   (min, avg, max) = (858658.590, 942251.761, 967756.098), stdev = 46829.452
[info]   CI (99.9%): [761928.214, 1122575.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   723.497 ±(99.9%) 138.488 MB/sec [Average]
[info]   (min, avg, max) = (659.297, 723.497, 743.066), stdev = 35.965
[info]   CI (99.9%): [585.009, 861.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1208.000, 1208.000, 1208.001), stdev = 0.001
[info]   CI (99.9%): [1208.000, 1208.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   731.065 ±(99.9%) 580.444 MB/sec [Average]
[info]   (min, avg, max) = (659.097, 731.065, 1000.630), stdev = 150.739
[info]   CI (99.9%): [150.622, 1311.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1220.353 ±(99.9%) 913.968 B/op [Average]
[info]   (min, avg, max) = (1081.696, 1220.353, 1634.425), stdev = 237.354
[info]   CI (99.9%): [306.386, 2134.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.056 ±(99.9%) 0.121 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.056, 0.076), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 5.000), stdev = 1.342
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 52.94% complete, ETA 00:08:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3088224.569 ops/s
[info] # Warmup Iteration   2: 3338915.319 ops/s
[info] # Warmup Iteration   3: 3320150.101 ops/s
[info] # Warmup Iteration   4: 3386212.886 ops/s
[info] # Warmup Iteration   5: 3372352.948 ops/s
[info] Iteration   1: 3391095.142 ops/s
[info]                  ·gc.alloc.rate:      103.463 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3376994.480 ops/s
[info]                  ·gc.alloc.rate:               103.038 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119.219 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 3342346.546 ops/s
[info]                  ·gc.alloc.rate:      102.044 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3351774.099 ops/s
[info]                  ·gc.alloc.rate:      102.263 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3338531.343 ops/s
[info]                  ·gc.alloc.rate:               101.858 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 120.595 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter":
[info]   3360148.322 ±(99.9%) 88141.553 ops/s [Average]
[info]   (min, avg, max) = (3338531.343, 3360148.322, 3391095.142), stdev = 22890.081
[info]   CI (99.9%): [3272006.769, 3448289.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   102.533 ±(99.9%) 2.646 MB/sec [Average]
[info]   (min, avg, max) = (101.858, 102.533, 103.463), stdev = 0.687
[info]   CI (99.9%): [99.888, 105.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   102.365 ±(99.9%) 539.740 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.365, 255.917), stdev = 140.169
[info]   CI (99.9%): [≈ 0, 642.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   47.963 ±(99.9%) 252.901 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 47.963, 120.595), stdev = 65.678
[info]   CI (99.9%): [≈ 0, 300.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 4.000), stdev = 1.789
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay
[info] # Run progress: 54.41% complete, ETA 00:08:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 91305.479 ops/s
[info] # Warmup Iteration   2: 160546.760 ops/s
[info] # Warmup Iteration   3: 167596.858 ops/s
[info] # Warmup Iteration   4: 168472.291 ops/s
[info] # Warmup Iteration   5: 168939.746 ops/s
[info] Iteration   1: 167181.646 ops/s
[info]                  ·gc.alloc.rate:                   1138.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9309.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.588 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 168104.468 ops/s
[info]                  ·gc.alloc.rate:                   1144.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12411.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.780 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 168588.687 ops/s
[info]                  ·gc.alloc.rate:                   1147.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9337.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.583 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 167042.826 ops/s
[info]                  ·gc.alloc.rate:                   1137.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12618.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.588 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 165965.485 ops/s
[info]                  ·gc.alloc.rate:               1129.982 MB/sec
[info]                  ·gc.alloc.rate.norm:          10712.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9564.325 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay":
[info]   167376.623 ±(99.9%) 3917.263 ops/s [Average]
[info]   (min, avg, max) = (165965.485, 167376.623, 168588.687), stdev = 1017.301
[info]   CI (99.9%): [163459.359, 171293.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1139.651 ±(99.9%) 26.789 MB/sec [Average]
[info]   (min, avg, max) = (1129.982, 1139.651, 1147.931), stdev = 6.957
[info]   CI (99.9%): [1112.861, 1166.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10712.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10712.003, 10712.003, 10712.003), stdev = 0.001
[info]   CI (99.9%): [10712.002, 10712.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1132.996 ±(99.9%) 703.852 MB/sec [Average]
[info]   (min, avg, max) = (989.357, 1132.996, 1339.822), stdev = 182.788
[info]   CI (99.9%): [429.144, 1836.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10648.472 ±(99.9%) 6578.799 B/op [Average]
[info]   (min, avg, max) = (9309.819, 10648.472, 12618.889), stdev = 1708.493
[info]   CI (99.9%): [4069.673, 17227.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.508 ±(99.9%) 1.140 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.508, 0.780), stdev = 0.296
[info]   CI (99.9%): [≈ 0, 1.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 12.000), stdev = 3.033
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce
[info] # Run progress: 55.88% complete, ETA 00:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 817059.633 ops/s
[info] # Warmup Iteration   2: 1249998.831 ops/s
[info] # Warmup Iteration   3: 1279394.414 ops/s
[info] # Warmup Iteration   4: 1305185.665 ops/s
[info] # Warmup Iteration   5: 1302581.461 ops/s
[info] Iteration   1: 1307847.581 ops/s
[info]                  ·gc.alloc.rate:                   1463.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1610.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1302516.074 ops/s
[info]                  ·gc.alloc.rate:                   1457.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1682.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2031.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1284273.852 ops/s
[info]                  ·gc.alloc.rate:                   1436.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1655.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 1293546.330 ops/s
[info]                  ·gc.alloc.rate:                   1447.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1646.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1282385.994 ops/s
[info]                  ·gc.alloc.rate:                   1434.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2080.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce":
[info]   1294113.966 ±(99.9%) 42788.217 ops/s [Average]
[info]   (min, avg, max) = (1282385.994, 1294113.966, 1307847.581), stdev = 11111.964
[info]   CI (99.9%): [1251325.749, 1336902.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1447.737 ±(99.9%) 48.008 MB/sec [Average]
[info]   (min, avg, max) = (1434.591, 1447.737, 1463.149), stdev = 12.468
[info]   CI (99.9%): [1399.729, 1495.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1760.000, 1760.000, 1760.000), stdev = 0.001
[info]   CI (99.9%): [1760.000, 1760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1484.384 ±(99.9%) 719.437 MB/sec [Average]
[info]   (min, avg, max) = (1338.887, 1484.384, 1695.670), stdev = 186.836
[info]   CI (99.9%): [764.947, 2203.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1804.927 ±(99.9%) 887.345 B/op [Average]
[info]   (min, avg, max) = (1610.527, 1804.927, 2080.300), stdev = 230.441
[info]   CI (99.9%): [917.582, 2692.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.045 ±(99.9%) 0.081 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.045, 0.076), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.600, 15.000), stdev = 5.128
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 57.35% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2604289.961 ops/s
[info] # Warmup Iteration   2: 3806835.955 ops/s
[info] # Warmup Iteration   3: 3834792.132 ops/s
[info] # Warmup Iteration   4: 3783042.058 ops/s
[info] # Warmup Iteration   5: 3869254.144 ops/s
[info] Iteration   1: 3802798.146 ops/s
[info]                  ·gc.alloc.rate:                   1044.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     410.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 3817086.018 ops/s
[info]                  ·gc.alloc.rate:                   1048.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     411.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3900696.384 ops/s
[info]                  ·gc.alloc.rate:                   1071.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     404.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3802239.150 ops/s
[info]                  ·gc.alloc.rate:                   1044.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     555.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3848666.013 ops/s
[info]                  ·gc.alloc.rate:                   1056.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     413.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson":
[info]   3834297.142 ±(99.9%) 160293.295 ops/s [Average]
[info]   (min, avg, max) = (3802239.150, 3834297.142, 3900696.384), stdev = 41627.660
[info]   CI (99.9%): [3674003.847, 3994590.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1052.841 ±(99.9%) 44.024 MB/sec [Average]
[info]   (min, avg, max) = (1044.021, 1052.841, 1071.078), stdev = 11.433
[info]   CI (99.9%): [1008.817, 1096.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1070.105 ±(99.9%) 588.897 MB/sec [Average]
[info]   (min, avg, max) = (993.274, 1070.105, 1343.433), stdev = 152.935
[info]   CI (99.9%): [481.208, 1659.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   439.348 ±(99.9%) 251.199 B/op [Average]
[info]   (min, avg, max) = (404.648, 439.348, 555.892), stdev = 65.236
[info]   CI (99.9%): [188.148, 690.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.046, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.010, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.019, 0.026), stdev = 0.004
[info]   CI (99.9%): [0.004, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 9.000), stdev = 2.775
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 58.82% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15020042.205 ops/s
[info] # Warmup Iteration   2: 15624567.093 ops/s
[info] # Warmup Iteration   3: 15880050.215 ops/s
[info] # Warmup Iteration   4: 15922652.110 ops/s
[info] # Warmup Iteration   5: 16088996.084 ops/s
[info] Iteration   1: 15959771.101 ops/s
[info]                  ·gc.alloc.rate:                   486.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 15941728.427 ops/s
[info]                  ·gc.alloc.rate:               486.371 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32.192 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 15126624.755 ops/s
[info]                  ·gc.alloc.rate:                   461.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 15311214.848 ops/s
[info]                  ·gc.alloc.rate:               467.143 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.586 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 15280269.880 ops/s
[info]                  ·gc.alloc.rate:                   466.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter":
[info]   15523921.802 ±(99.9%) 1524512.725 ops/s [Average]
[info]   (min, avg, max) = (15126624.755, 15523921.802, 15959771.101), stdev = 395911.113
[info]   CI (99.9%): [13999409.077, 17048434.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   473.627 ±(99.9%) 46.501 MB/sec [Average]
[info]   (min, avg, max) = (461.506, 473.627, 486.921), stdev = 12.076
[info]   CI (99.9%): [427.126, 520.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.860 ±(99.9%) 690.153 MB/sec [Average]
[info]   (min, avg, max) = (326.198, 522.860, 656.404), stdev = 179.231
[info]   CI (99.9%): [≈ 0, 1213.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   53.107 ±(99.9%) 71.310 B/op [Average]
[info]   (min, avg, max) = (32.192, 53.107, 67.926), stdev = 18.519
[info]   CI (99.9%): [≈ 0, 124.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.011), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.800, 6.000), stdev = 2.490
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 60.29% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 562126.817 ops/s
[info] # Warmup Iteration   2: 798646.485 ops/s
[info] # Warmup Iteration   3: 811982.265 ops/s
[info] # Warmup Iteration   4: 811221.011 ops/s
[info] # Warmup Iteration   5: 811598.229 ops/s
[info] Iteration   1: 816290.029 ops/s
[info]                  ·gc.alloc.rate:                   1224.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2548.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 814002.959 ops/s
[info]                  ·gc.alloc.rate:                   1221.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2572.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 801304.879 ops/s
[info]                  ·gc.alloc.rate:                   1201.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1969.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 813426.745 ops/s
[info]                  ·gc.alloc.rate:                   1220.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2597.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 808738.820 ops/s
[info]                  ·gc.alloc.rate:                   1213.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2623.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay":
[info]   810752.686 ±(99.9%) 22918.105 ops/s [Average]
[info]   (min, avg, max) = (801304.879, 810752.686, 816290.029), stdev = 5951.759
[info]   CI (99.9%): [787834.582, 833670.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1216.161 ±(99.9%) 34.432 MB/sec [Average]
[info]   (min, avg, max) = (1201.967, 1216.161, 1224.480), stdev = 8.942
[info]   CI (99.9%): [1181.729, 1250.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2360.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2360.001, 2360.001, 2360.001), stdev = 0.001
[info]   CI (99.9%): [2360.000, 2360.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1269.572 ±(99.9%) 574.584 MB/sec [Average]
[info]   (min, avg, max) = (1003.281, 1269.572, 1348.472), stdev = 149.218
[info]   CI (99.9%): [694.988, 1844.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2462.282 ±(99.9%) 1065.394 B/op [Average]
[info]   (min, avg, max) = (1969.891, 2462.282, 2623.278), stdev = 276.680
[info]   CI (99.9%): [1396.887, 3527.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.057 ±(99.9%) 0.138 B/op [Average]
[info]   (min, avg, max) = (0.040, 0.057, 0.121), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 12.000), stdev = 4.025
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce
[info] # Run progress: 61.76% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 322554.605 ops/s
[info] # Warmup Iteration   2: 717336.182 ops/s
[info] # Warmup Iteration   3: 730913.255 ops/s
[info] # Warmup Iteration   4: 727994.327 ops/s
[info] # Warmup Iteration   5: 729240.151 ops/s
[info] Iteration   1: 731816.143 ops/s
[info]                  ·gc.alloc.rate:                   1767.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4344.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 726441.936 ops/s
[info]                  ·gc.alloc.rate:                   1754.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3660.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 714744.895 ops/s
[info]                  ·gc.alloc.rate:                   1726.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3730.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 733909.918 ops/s
[info]                  ·gc.alloc.rate:                   1772.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3639.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 733879.874 ops/s
[info]                  ·gc.alloc.rate:                   1772.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3642.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce":
[info]   728158.553 ±(99.9%) 31167.786 ops/s [Average]
[info]   (min, avg, max) = (714744.895, 728158.553, 733909.918), stdev = 8094.175
[info]   CI (99.9%): [696990.767, 759326.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1758.755 ±(99.9%) 75.346 MB/sec [Average]
[info]   (min, avg, max) = (1726.302, 1758.755, 1772.625), stdev = 19.567
[info]   CI (99.9%): [1683.409, 1834.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3800.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3800.001, 3800.001, 3800.001), stdev = 0.001
[info]   CI (99.9%): [3800.001, 3800.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1760.635 ±(99.9%) 560.424 MB/sec [Average]
[info]   (min, avg, max) = (1690.374, 1760.635, 2020.912), stdev = 145.540
[info]   CI (99.9%): [1200.211, 2321.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3803.692 ±(99.9%) 1172.771 B/op [Average]
[info]   (min, avg, max) = (3639.897, 3803.692, 4344.574), stdev = 304.565
[info]   CI (99.9%): [2630.921, 4976.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.090 ±(99.9%) 0.174 B/op [Average]
[info]   (min, avg, max) = (0.045, 0.090, 0.135), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.400, 19.000), stdev = 5.413
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson
[info] # Run progress: 63.24% complete, ETA 00:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1660491.870 ops/s
[info] # Warmup Iteration   2: 2554518.802 ops/s
[info] # Warmup Iteration   3: 2601021.916 ops/s
[info] # Warmup Iteration   4: 2586181.064 ops/s
[info] # Warmup Iteration   5: 2594400.675 ops/s
[info] Iteration   1: 2604769.611 ops/s
[info]                  ·gc.alloc.rate:                   1509.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     809.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2565175.143 ops/s
[info]                  ·gc.alloc.rate:                   1487.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1032.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 2579288.958 ops/s
[info]                  ·gc.alloc.rate:                   1495.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     824.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2580064.999 ops/s
[info]                  ·gc.alloc.rate:                   1495.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1032.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2586537.568 ops/s
[info]                  ·gc.alloc.rate:                   1499.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1357.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     825.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson":
[info]   2583167.256 ±(99.9%) 55347.635 ops/s [Average]
[info]   (min, avg, max) = (2565175.143, 2583167.256, 2604769.611), stdev = 14373.605
[info]   CI (99.9%): [2527819.621, 2638514.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1497.465 ±(99.9%) 32.078 MB/sec [Average]
[info]   (min, avg, max) = (1487.024, 1497.465, 1509.977), stdev = 8.331
[info]   CI (99.9%): [1465.387, 1529.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1485.400 ±(99.9%) 715.341 MB/sec [Average]
[info]   (min, avg, max) = (1339.823, 1485.400, 1694.107), stdev = 185.772
[info]   CI (99.9%): [770.059, 2200.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   905.016 ±(99.9%) 449.527 B/op [Average]
[info]   (min, avg, max) = (809.230, 905.016, 1032.977), stdev = 116.741
[info]   CI (99.9%): [455.489, 1354.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.025, 0.038), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 19.000), stdev = 6.693
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter
[info] # Run progress: 64.71% complete, ETA 00:06:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3900104.621 ops/s
[info] # Warmup Iteration   2: 4254370.509 ops/s
[info] # Warmup Iteration   3: 4400571.797 ops/s
[info] # Warmup Iteration   4: 4447743.365 ops/s
[info] # Warmup Iteration   5: 4460241.748 ops/s
[info] Iteration   1: 4422982.696 ops/s
[info]                  ·gc.alloc.rate:               1214.483 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1325.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 471.478 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 4338766.922 ops/s
[info]                  ·gc.alloc.rate:                   1191.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     362.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4263936.366 ops/s
[info]                  ·gc.alloc.rate:                   1170.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     493.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4415994.723 ops/s
[info]                  ·gc.alloc.rate:                   1212.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     359.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4407843.794 ops/s
[info]                  ·gc.alloc.rate:                   1210.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     481.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter":
[info]   4369904.900 ±(99.9%) 262436.200 ops/s [Average]
[info]   (min, avg, max) = (4263936.366, 4369904.900, 4422982.696), stdev = 68153.848
[info]   CI (99.9%): [4107468.700, 4632341.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1199.907 ±(99.9%) 72.053 MB/sec [Average]
[info]   (min, avg, max) = (1170.803, 1199.907, 1214.483), stdev = 18.712
[info]   CI (99.9%): [1127.854, 1271.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1204.125 ±(99.9%) 705.117 MB/sec [Average]
[info]   (min, avg, max) = (999.280, 1204.125, 1348.814), stdev = 183.117
[info]   CI (99.9%): [499.008, 1909.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   433.692 ±(99.9%) 258.165 B/op [Average]
[info]   (min, avg, max) = (359.216, 433.692, 493.991), stdev = 67.045
[info]   CI (99.9%): [175.527, 691.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.193 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.125), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.071 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.046), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay
[info] # Run progress: 66.18% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 188813.731 ops/s
[info] # Warmup Iteration   2: 337886.964 ops/s
[info] # Warmup Iteration   3: 346015.788 ops/s
[info] # Warmup Iteration   4: 345475.016 ops/s
[info] # Warmup Iteration   5: 347801.655 ops/s
[info] Iteration   1: 346599.299 ops/s
[info]                  ·gc.alloc.rate:                   1237.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5995.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 342568.818 ops/s
[info]                  ·gc.alloc.rate:                   1222.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6111.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.478 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 341583.198 ops/s
[info]                  ·gc.alloc.rate:                   1219.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4620.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.288 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 341408.401 ops/s
[info]                  ·gc.alloc.rate:                   1218.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6189.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.288 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 341949.837 ops/s
[info]                  ·gc.alloc.rate:                   1220.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4651.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay":
[info]   342821.911 ±(99.9%) 8309.198 ops/s [Average]
[info]   (min, avg, max) = (341408.401, 342821.911, 346599.299), stdev = 2157.872
[info]   CI (99.9%): [334512.713, 351131.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1223.747 ±(99.9%) 29.702 MB/sec [Average]
[info]   (min, avg, max) = (1218.695, 1223.747, 1237.253), stdev = 7.714
[info]   CI (99.9%): [1194.045, 1253.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1201.793 ±(99.9%) 685.094 MB/sec [Average]
[info]   (min, avg, max) = (1003.298, 1201.793, 1343.139), stdev = 177.917
[info]   CI (99.9%): [516.699, 1886.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5513.750 ±(99.9%) 3096.845 B/op [Average]
[info]   (min, avg, max) = (4620.974, 5513.750, 6189.464), stdev = 804.241
[info]   CI (99.9%): [2416.906, 8610.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.249 ±(99.9%) 0.618 B/op [Average]
[info]   (min, avg, max) = (0.095, 0.249, 0.478), stdev = 0.160
[info]   CI (99.9%): [≈ 0, 0.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 12.000), stdev = 3.912
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson
[info] # Run progress: 67.65% complete, ETA 00:05:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1611953.361 ops/s
[info] # Warmup Iteration   2: 2221756.966 ops/s
[info] # Warmup Iteration   3: 2195118.130 ops/s
[info] # Warmup Iteration   4: 2222726.625 ops/s
[info] # Warmup Iteration   5: 2216051.131 ops/s
[info] Iteration   1: 2210775.199 ops/s
[info]                  ·gc.alloc.rate:                   944.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     705.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2207222.094 ops/s
[info]                  ·gc.alloc.rate:                   942.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     710.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2160966.620 ops/s
[info]                  ·gc.alloc.rate:               923.043 MB/sec
[info]                  ·gc.alloc.rate.norm:          672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 728.983 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 2185959.295 ops/s
[info]                  ·gc.alloc.rate:                   933.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     723.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2242486.632 ops/s
[info]                  ·gc.alloc.rate:                   957.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     707.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson":
[info]   2201481.968 ±(99.9%) 116845.671 ops/s [Average]
[info]   (min, avg, max) = (2160966.620, 2201481.968, 2242486.632), stdev = 30344.450
[info]   CI (99.9%): [2084636.297, 2318327.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   940.317 ±(99.9%) 49.641 MB/sec [Average]
[info]   (min, avg, max) = (923.043, 940.317, 957.660), stdev = 12.892
[info]   CI (99.9%): [890.676, 989.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1000.669 ±(99.9%) 27.297 MB/sec [Average]
[info]   (min, avg, max) = (990.946, 1000.669, 1008.760), stdev = 7.089
[info]   CI (99.9%): [973.372, 1027.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   715.231 ±(99.9%) 40.408 B/op [Average]
[info]   (min, avg, max) = (705.186, 715.231, 728.983), stdev = 10.494
[info]   CI (99.9%): [674.823, 755.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.051 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.030), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 9.000), stdev = 2.408
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 69.12% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3782854.447 ops/s
[info] # Warmup Iteration   2: 4216730.408 ops/s
[info] # Warmup Iteration   3: 4157287.725 ops/s
[info] # Warmup Iteration   4: 4294942.075 ops/s
[info] # Warmup Iteration   5: 4254470.333 ops/s
[info] Iteration   1: 4283869.072 ops/s
[info]                  ·gc.alloc.rate:               784.206 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 240.462 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 4267368.739 ops/s
[info]                  ·gc.alloc.rate:                   781.174 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     242.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 4257284.805 ops/s
[info]                  ·gc.alloc.rate:                   779.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     365.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 4283364.970 ops/s
[info]                  ·gc.alloc.rate:                   784.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     243.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4279408.592 ops/s
[info]                  ·gc.alloc.rate:                   783.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.383 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     244.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter":
[info]   4274259.236 ±(99.9%) 44632.164 ops/s [Average]
[info]   (min, avg, max) = (4257284.805, 4274259.236, 4283869.072), stdev = 11590.831
[info]   CI (99.9%): [4229627.072, 4318891.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   782.439 ±(99.9%) 8.158 MB/sec [Average]
[info]   (min, avg, max) = (779.345, 782.439, 784.206), stdev = 2.119
[info]   CI (99.9%): [774.281, 790.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   725.649 ±(99.9%) 567.712 MB/sec [Average]
[info]   (min, avg, max) = (654.764, 725.649, 989.285), stdev = 147.433
[info]   CI (99.9%): [157.937, 1293.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   267.194 ±(99.9%) 211.861 B/op [Average]
[info]   (min, avg, max) = (240.462, 267.194, 365.582), stdev = 55.020
[info]   CI (99.9%): [55.334, 479.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.031), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.400, 11.000), stdev = 4.037
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay
[info] # Run progress: 70.59% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 274855.214 ops/s
[info] # Warmup Iteration   2: 488405.703 ops/s
[info] # Warmup Iteration   3: 500116.319 ops/s
[info] # Warmup Iteration   4: 508313.193 ops/s
[info] # Warmup Iteration   5: 509148.606 ops/s
[info] Iteration   1: 514592.435 ops/s
[info]                  ·gc.alloc.rate:                   1528.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              4672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4068.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 510668.496 ops/s
[info]                  ·gc.alloc.rate:                   1516.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              4672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5159.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.321 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 504164.000 ops/s
[info]                  ·gc.alloc.rate:                   1497.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              4672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4200.876 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 513565.586 ops/s
[info]                  ·gc.alloc.rate:                   1525.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              4672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1688.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5173.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 511280.237 ops/s
[info]                  ·gc.alloc.rate:                   1518.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              4672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4168.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay":
[info]   510854.151 ±(99.9%) 15676.990 ops/s [Average]
[info]   (min, avg, max) = (504164.000, 510854.151, 514592.435), stdev = 4071.265
[info]   CI (99.9%): [495177.160, 526531.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1517.020 ±(99.9%) 46.750 MB/sec [Average]
[info]   (min, avg, max) = (1497.059, 1517.020, 1528.177), stdev = 12.141
[info]   CI (99.9%): [1470.270, 1563.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4672.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4672.001, 4672.001, 4672.001), stdev = 0.001
[info]   CI (99.9%): [4672.001, 4672.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1479.027 ±(99.9%) 713.371 MB/sec [Average]
[info]   (min, avg, max) = (1330.840, 1479.027, 1688.655), stdev = 185.260
[info]   CI (99.9%): [765.656, 2192.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4554.231 ±(99.9%) 2159.831 B/op [Average]
[info]   (min, avg, max) = (4068.694, 4554.231, 5173.163), stdev = 560.901
[info]   CI (99.9%): [2394.400, 6714.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.180 ±(99.9%) 0.322 B/op [Average]
[info]   (min, avg, max) = (0.127, 0.180, 0.321), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 12.000), stdev = 3.130
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 72.06% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123679.081 ops/s
[info] # Warmup Iteration   2: 984355.610 ops/s
[info] # Warmup Iteration   3: 1001554.365 ops/s
[info] # Warmup Iteration   4: 1004153.595 ops/s
[info] # Warmup Iteration   5: 996144.042 ops/s
[info] Iteration   1: 1014555.943 ops/s
[info]                  ·gc.alloc.rate:                   1253.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2064.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 995872.834 ops/s
[info]                  ·gc.alloc.rate:                   1230.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2115.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 1015656.797 ops/s
[info]                  ·gc.alloc.rate:                   1255.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1561.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1006533.505 ops/s
[info]                  ·gc.alloc.rate:                   1243.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2108.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1014469.189 ops/s
[info]                  ·gc.alloc.rate:                   1253.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2097.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson":
[info]   1009417.654 ±(99.9%) 32367.600 ops/s [Average]
[info]   (min, avg, max) = (995872.834, 1009417.654, 1015656.797), stdev = 8405.763
[info]   CI (99.9%): [977050.054, 1041785.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1247.282 ±(99.9%) 40.096 MB/sec [Average]
[info]   (min, avg, max) = (1230.497, 1247.282, 1255.002), stdev = 10.413
[info]   CI (99.9%): [1207.186, 1287.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1944.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1944.000, 1944.000, 1944.000), stdev = 0.001
[info]   CI (99.9%): [1944.000, 1944.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1275.963 ±(99.9%) 577.857 MB/sec [Average]
[info]   (min, avg, max) = (1007.938, 1275.963, 1352.810), stdev = 150.068
[info]   CI (99.9%): [698.106, 1853.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1989.454 ±(99.9%) 924.735 B/op [Average]
[info]   (min, avg, max) = (1561.298, 1989.454, 2115.561), stdev = 240.151
[info]   CI (99.9%): [1064.718, 2914.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.065 ±(99.9%) 0.124 B/op [Average]
[info]   (min, avg, max) = (0.032, 0.065, 0.097), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.400, 14.000), stdev = 5.030
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 73.53% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2020653.385 ops/s
[info] # Warmup Iteration   2: 2292575.785 ops/s
[info] # Warmup Iteration   3: 2290851.214 ops/s
[info] # Warmup Iteration   4: 2326504.658 ops/s
[info] # Warmup Iteration   5: 2333548.527 ops/s
[info] Iteration   1: 2330891.210 ops/s
[info]                  ·gc.alloc.rate:                   450.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     219.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 2324180.391 ops/s
[info]                  ·gc.alloc.rate:               449.113 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 220.593 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 2322074.457 ops/s
[info]                  ·gc.alloc.rate:                   448.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     442.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2326943.589 ops/s
[info]                  ·gc.alloc.rate:               449.657 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 221.004 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2333528.170 ops/s
[info]                  ·gc.alloc.rate:                   450.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     441.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   2327523.564 ±(99.9%) 18122.822 ops/s [Average]
[info]   (min, avg, max) = (2322074.457, 2327523.564, 2333528.170), stdev = 4706.439
[info]   CI (99.9%): [2309400.742, 2345646.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   449.764 ±(99.9%) 3.510 MB/sec [Average]
[info]   (min, avg, max) = (448.709, 449.764, 450.928), stdev = 0.912
[info]   CI (99.9%): [446.254, 453.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.185 ±(99.9%) 690.514 MB/sec [Average]
[info]   (min, avg, max) = (325.892, 457.185, 654.792), stdev = 179.324
[info]   CI (99.9%): [≈ 0, 1147.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   309.006 ±(99.9%) 466.573 B/op [Average]
[info]   (min, avg, max) = (219.958, 309.006, 442.037), stdev = 121.167
[info]   CI (99.9%): [≈ 0, 775.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.196 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.133 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.085), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 6.000), stdev = 2.550
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 75.00% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 104701.106 ops/s
[info] # Warmup Iteration   2: 246419.062 ops/s
[info] # Warmup Iteration   3: 247638.932 ops/s
[info] # Warmup Iteration   4: 251060.308 ops/s
[info] # Warmup Iteration   5: 252078.606 ops/s
[info] Iteration   1: 251187.180 ops/s
[info]                  ·gc.alloc.rate:                   984.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6160.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 251098.443 ops/s
[info]                  ·gc.alloc.rate:                   984.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6187.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.652 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 250805.680 ops/s
[info]                  ·gc.alloc.rate:                   983.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6235.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 252124.178 ops/s
[info]                  ·gc.alloc.rate:                   988.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6231.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 252065.248 ops/s
[info]                  ·gc.alloc.rate:                   988.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6261.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay":
[info]   251456.146 ±(99.9%) 2310.925 ops/s [Average]
[info]   (min, avg, max) = (250805.680, 251456.146, 252124.178), stdev = 600.140
[info]   CI (99.9%): [249145.221, 253767.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   985.844 ±(99.9%) 9.095 MB/sec [Average]
[info]   (min, avg, max) = (983.258, 985.844, 988.462), stdev = 2.362
[info]   CI (99.9%): [976.750, 994.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.422 ±(99.9%) 30.704 MB/sec [Average]
[info]   (min, avg, max) = (983.617, 993.422, 1003.305), stdev = 7.974
[info]   CI (99.9%): [962.718, 1024.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6215.375 ±(99.9%) 155.968 B/op [Average]
[info]   (min, avg, max) = (6160.630, 6215.375, 6261.999), stdev = 40.504
[info]   CI (99.9%): [6059.407, 6371.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.104), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.339 ±(99.9%) 0.675 B/op [Average]
[info]   (min, avg, max) = (0.260, 0.339, 0.652), stdev = 0.175
[info]   CI (99.9%): [≈ 0, 1.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 7.000), stdev = 2.168
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce
[info] # Run progress: 76.47% complete, ETA 00:04:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 407588.058 ops/s
[info] # Warmup Iteration   2: 610563.232 ops/s
[info] # Warmup Iteration   3: 608205.854 ops/s
[info] # Warmup Iteration   4: 614399.319 ops/s
[info] # Warmup Iteration   5: 618292.451 ops/s
[info] Iteration   1: 618017.207 ops/s
[info]                  ·gc.alloc.rate:                   1577.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1675.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4264.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 616698.654 ops/s
[info]                  ·gc.alloc.rate:                   1574.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3436.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 615250.082 ops/s
[info]                  ·gc.alloc.rate:                   1570.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4321.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 617601.342 ops/s
[info]                  ·gc.alloc.rate:               1576.548 MB/sec
[info]                  ·gc.alloc.rate.norm:          4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1694.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4317.056 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   5: 622462.607 ops/s
[info]                  ·gc.alloc.rate:                   1588.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1358.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3432.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce":
[info]   618005.978 ±(99.9%) 10426.904 ops/s [Average]
[info]   (min, avg, max) = (615250.082, 618005.978, 622462.607), stdev = 2707.834
[info]   CI (99.9%): [607579.074, 628432.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1577.576 ±(99.9%) 26.623 MB/sec [Average]
[info]   (min, avg, max) = (1570.556, 1577.576, 1588.961), stdev = 6.914
[info]   CI (99.9%): [1550.953, 1604.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4016.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4016.001, 4016.001, 4016.001), stdev = 0.001
[info]   CI (99.9%): [4016.001, 4016.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1553.025 ±(99.9%) 704.996 MB/sec [Average]
[info]   (min, avg, max) = (1347.147, 1553.025, 1694.732), stdev = 183.085
[info]   CI (99.9%): [848.029, 2258.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3954.408 ±(99.9%) 1828.835 B/op [Average]
[info]   (min, avg, max) = (3432.741, 3954.408, 4321.439), stdev = 474.943
[info]   CI (99.9%): [2125.573, 5783.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.074 ±(99.9%) 0.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.074, 0.107), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 11.000), stdev = 2.702
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson
[info] # Run progress: 77.94% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 854934.307 ops/s
[info] # Warmup Iteration   2: 1190704.547 ops/s
[info] # Warmup Iteration   3: 1223287.564 ops/s
[info] # Warmup Iteration   4: 1221905.502 ops/s
[info] # Warmup Iteration   5: 1209867.900 ops/s
[info] Iteration   1: 1204496.463 ops/s
[info]                  ·gc.alloc.rate:                   741.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     853.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1213003.641 ops/s
[info]                  ·gc.alloc.rate:                   746.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     851.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1196726.507 ops/s
[info]                  ·gc.alloc.rate:                   736.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     866.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1064499.049 ops/s
[info]                  ·gc.alloc.rate:               654.986 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 978.024 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1196575.495 ops/s
[info]                  ·gc.alloc.rate:                   736.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1311.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson":
[info]   1175060.231 ±(99.9%) 239408.991 ops/s [Average]
[info]   (min, avg, max) = (1064499.049, 1175060.231, 1213003.641), stdev = 62173.755
[info]   CI (99.9%): [935651.240, 1414469.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   723.008 ±(99.9%) 147.304 MB/sec [Average]
[info]   (min, avg, max) = (654.986, 723.008, 746.394), stdev = 38.254
[info]   CI (99.9%): [575.704, 870.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   968.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (968.000, 968.000, 968.000), stdev = 0.001
[info]   CI (99.9%): [968.000, 968.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   725.597 ±(99.9%) 584.964 MB/sec [Average]
[info]   (min, avg, max) = (653.406, 725.597, 997.291), stdev = 151.913
[info]   CI (99.9%): [140.633, 1310.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   972.102 ±(99.9%) 757.713 B/op [Average]
[info]   (min, avg, max) = (851.358, 972.102, 1311.252), stdev = 196.776
[info]   CI (99.9%): [214.389, 1729.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.074 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.054), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.400, 9.000), stdev = 3.578
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 79.41% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3996175.557 ops/s
[info] # Warmup Iteration   2: 4398438.453 ops/s
[info] # Warmup Iteration   3: 4420411.789 ops/s
[info] # Warmup Iteration   4: 4450713.023 ops/s
[info] # Warmup Iteration   5: 4347994.333 ops/s
[info] Iteration   1: 4406031.848 ops/s
[info]                  ·gc.alloc.rate:                   672.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     233.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4347827.582 ops/s
[info]                  ·gc.alloc.rate:                   663.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     236.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 4434185.247 ops/s
[info]                  ·gc.alloc.rate:               676.419 MB/sec
[info]                  ·gc.alloc.rate.norm:          240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 233.020 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 4412041.155 ops/s
[info]                  ·gc.alloc.rate:                   673.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     235.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4402591.691 ops/s
[info]                  ·gc.alloc.rate:                   671.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     236.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter":
[info]   4400535.505 ±(99.9%) 122938.222 ops/s [Average]
[info]   (min, avg, max) = (4347827.582, 4400535.505, 4434185.247), stdev = 31926.666
[info]   CI (99.9%): [4277597.283, 4523473.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   671.300 ±(99.9%) 18.729 MB/sec [Average]
[info]   (min, avg, max) = (663.266, 671.300, 676.419), stdev = 4.864
[info]   CI (99.9%): [652.571, 690.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   657.079 ±(99.9%) 13.244 MB/sec [Average]
[info]   (min, avg, max) = (653.075, 657.079, 661.750), stdev = 3.439
[info]   CI (99.9%): [643.835, 670.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   234.924 ±(99.9%) 6.945 B/op [Average]
[info]   (min, avg, max) = (233.020, 234.924, 236.920), stdev = 1.803
[info]   CI (99.9%): [227.979, 241.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.033 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.022), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 5.000), stdev = 1.643
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay
[info] # Run progress: 80.88% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 166928.499 ops/s
[info] # Warmup Iteration   2: 354817.315 ops/s
[info] # Warmup Iteration   3: 374425.973 ops/s
[info] # Warmup Iteration   4: 372691.049 ops/s
[info] # Warmup Iteration   5: 371630.288 ops/s
[info] Iteration   1: 371833.345 ops/s
[info]                  ·gc.alloc.rate:                   1272.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5594.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.352 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 371658.049 ops/s
[info]                  ·gc.alloc.rate:                   1271.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5633.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.353 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 374028.814 ops/s
[info]                  ·gc.alloc.rate:                   1279.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5628.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 376885.708 ops/s
[info]                  ·gc.alloc.rate:                   1289.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5613.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 372116.108 ops/s
[info]                  ·gc.alloc.rate:                   1273.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4278.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay":
[info]   373304.405 ±(99.9%) 8531.817 ops/s [Average]
[info]   (min, avg, max) = (371658.049, 373304.405, 376885.708), stdev = 2215.686
[info]   CI (99.9%): [364772.588, 381836.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1277.499 ±(99.9%) 29.194 MB/sec [Average]
[info]   (min, avg, max) = (1271.882, 1277.499, 1289.776), stdev = 7.582
[info]   CI (99.9%): [1248.305, 1306.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5384.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5384.001, 5384.001, 5384.001), stdev = 0.001
[info]   CI (99.9%): [5384.001, 5384.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1269.561 ±(99.9%) 555.481 MB/sec [Average]
[info]   (min, avg, max) = (1011.948, 1269.561, 1344.790), stdev = 144.257
[info]   CI (99.9%): [714.080, 1825.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5349.696 ±(99.9%) 2306.802 B/op [Average]
[info]   (min, avg, max) = (4278.401, 5349.696, 5633.471), stdev = 599.069
[info]   CI (99.9%): [3042.894, 7656.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.229 ±(99.9%) 0.516 B/op [Average]
[info]   (min, avg, max) = (0.087, 0.229, 0.353), stdev = 0.134
[info]   CI (99.9%): [≈ 0, 0.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.200, 18.000), stdev = 5.891
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce
[info] # Run progress: 82.35% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127244.708 ops/s
[info] # Warmup Iteration   2: 339291.387 ops/s
[info] # Warmup Iteration   3: 349403.633 ops/s
[info] # Warmup Iteration   4: 353279.670 ops/s
[info] # Warmup Iteration   5: 348039.850 ops/s
[info] Iteration   1: 346640.483 ops/s
[info]                  ·gc.alloc.rate:                   1031.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4453.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 347068.651 ops/s
[info]                  ·gc.alloc.rate:                   1032.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4475.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 349749.222 ops/s
[info]                  ·gc.alloc.rate:                   1040.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4474.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.375 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 345631.718 ops/s
[info]                  ·gc.alloc.rate:               1028.146 MB/sec
[info]                  ·gc.alloc.rate.norm:          4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      999.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4548.515 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   5: 347838.847 ops/s
[info]                  ·gc.alloc.rate:                   1034.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4543.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce":
[info]   347385.784 ±(99.9%) 5941.700 ops/s [Average]
[info]   (min, avg, max) = (345631.718, 347385.784, 349749.222), stdev = 1543.041
[info]   CI (99.9%): [341444.084, 353327.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1033.363 ±(99.9%) 17.630 MB/sec [Average]
[info]   (min, avg, max) = (1028.146, 1033.363, 1040.366), stdev = 4.578
[info]   CI (99.9%): [1015.733, 1050.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4680.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4680.001, 4680.001, 4680.001), stdev = 0.001
[info]   CI (99.9%): [4680.001, 4680.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   993.414 ±(99.9%) 35.804 MB/sec [Average]
[info]   (min, avg, max) = (981.276, 993.414, 1004.630), stdev = 9.298
[info]   CI (99.9%): [957.609, 1029.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4499.125 ±(99.9%) 168.973 B/op [Average]
[info]   (min, avg, max) = (4453.653, 4499.125, 4548.515), stdev = 43.882
[info]   CI (99.9%): [4330.152, 4668.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.188 ±(99.9%) 0.678 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.188, 0.378), stdev = 0.176
[info]   CI (99.9%): [≈ 0, 0.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 10.000), stdev = 3.578
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson
[info] # Run progress: 83.82% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123529.902 ops/s
[info] # Warmup Iteration   2: 1043309.648 ops/s
[info] # Warmup Iteration   3: 1064229.348 ops/s
[info] # Warmup Iteration   4: 1056858.424 ops/s
[info] # Warmup Iteration   5: 1062075.417 ops/s
[info] Iteration   1: 1064813.310 ops/s
[info]                  ·gc.alloc.rate:                   1104.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1962.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 1061274.582 ops/s
[info]                  ·gc.alloc.rate:                   1100.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1484.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1063675.510 ops/s
[info]                  ·gc.alloc.rate:                   1103.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1487.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1076387.808 ops/s
[info]                  ·gc.alloc.rate:                   1116.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1967.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1066872.436 ops/s
[info]                  ·gc.alloc.rate:                   1106.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1492.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson":
[info]   1066604.729 ±(99.9%) 22451.292 ops/s [Average]
[info]   (min, avg, max) = (1061274.582, 1066604.729, 1076387.808), stdev = 5830.529
[info]   CI (99.9%): [1044153.437, 1089056.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1106.415 ±(99.9%) 23.307 MB/sec [Average]
[info]   (min, avg, max) = (1100.902, 1106.415, 1116.574), stdev = 6.053
[info]   CI (99.9%): [1083.109, 1129.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1138.686 ±(99.9%) 698.231 MB/sec [Average]
[info]   (min, avg, max) = (1001.273, 1138.686, 1346.139), stdev = 181.328
[info]   CI (99.9%): [440.455, 1836.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1678.874 ±(99.9%) 1005.705 B/op [Average]
[info]   (min, avg, max) = (1484.309, 1678.874, 1967.536), stdev = 261.178
[info]   CI (99.9%): [673.170, 2684.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.074 ±(99.9%) 0.135 B/op [Average]
[info]   (min, avg, max) = (0.031, 0.074, 0.123), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 12.000), stdev = 3.536
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter
[info] # Run progress: 85.29% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2052771.249 ops/s
[info] # Warmup Iteration   2: 2334610.080 ops/s
[info] # Warmup Iteration   3: 2339390.277 ops/s
[info] # Warmup Iteration   4: 2352853.680 ops/s
[info] # Warmup Iteration   5: 2401441.782 ops/s
[info] Iteration   1: 2397283.330 ops/s
[info]                  ·gc.alloc.rate:                   572.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     427.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2393736.933 ops/s
[info]                  ·gc.alloc.rate:                   572.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     429.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2379288.667 ops/s
[info]                  ·gc.alloc.rate:                   568.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     433.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2375247.396 ops/s
[info]                  ·gc.alloc.rate:               567.676 MB/sec
[info]                  ·gc.alloc.rate.norm:          376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 217.389 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 2395275.555 ops/s
[info]                  ·gc.alloc.rate:                   572.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     432.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter":
[info]   2388166.376 ±(99.9%) 39004.008 ops/s [Average]
[info]   (min, avg, max) = (2375247.396, 2388166.376, 2397283.330), stdev = 10129.217
[info]   CI (99.9%): [2349162.369, 2427170.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   570.767 ±(99.9%) 9.330 MB/sec [Average]
[info]   (min, avg, max) = (567.676, 570.767, 572.961), stdev = 2.423
[info]   CI (99.9%): [561.438, 580.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   376.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (376.000, 376.000, 376.000), stdev = 0.001
[info]   CI (99.9%): [376.000, 376.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   589.258 ±(99.9%) 561.991 MB/sec [Average]
[info]   (min, avg, max) = (328.208, 589.258, 657.738), stdev = 145.947
[info]   CI (99.9%): [27.267, 1151.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   387.954 ±(99.9%) 367.244 B/op [Average]
[info]   (min, avg, max) = (217.389, 387.954, 433.170), stdev = 95.372
[info]   CI (99.9%): [20.711, 755.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.087 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.055), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 6.000), stdev = 1.817
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay
[info] # Run progress: 86.76% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 99901.314 ops/s
[info] # Warmup Iteration   2: 251712.089 ops/s
[info] # Warmup Iteration   3: 253547.701 ops/s
[info] # Warmup Iteration   4: 253085.349 ops/s
[info] # Warmup Iteration   5: 253737.885 ops/s
[info] Iteration   1: 256762.591 ops/s
[info]                  ·gc.alloc.rate:                   946.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6028.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 254526.100 ops/s
[info]                  ·gc.alloc.rate:                   938.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4069.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 257299.575 ops/s
[info]                  ·gc.alloc.rate:                   948.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6061.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 254863.412 ops/s
[info]                  ·gc.alloc.rate:                   939.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6158.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 254207.466 ops/s
[info]                  ·gc.alloc.rate:                   937.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6198.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay":
[info]   255531.829 ±(99.9%) 5394.994 ops/s [Average]
[info]   (min, avg, max) = (254207.466, 255531.829, 257299.575), stdev = 1401.063
[info]   CI (99.9%): [250136.835, 260926.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   942.040 ±(99.9%) 19.897 MB/sec [Average]
[info]   (min, avg, max) = (937.176, 942.040, 948.566), stdev = 5.167
[info]   CI (99.9%): [922.143, 961.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.002, 5800.002, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.002, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.563 ±(99.9%) 577.827 MB/sec [Average]
[info]   (min, avg, max) = (658.394, 926.563, 1001.592), stdev = 150.060
[info]   CI (99.9%): [348.736, 1504.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5703.356 ±(99.9%) 3526.398 B/op [Average]
[info]   (min, avg, max) = (4069.804, 5703.356, 6198.662), stdev = 915.794
[info]   CI (99.9%): [2176.958, 9229.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.256 ±(99.9%) 0.346 B/op [Average]
[info]   (min, avg, max) = (0.128, 0.256, 0.382), stdev = 0.090
[info]   CI (99.9%): [≈ 0, 0.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 6.000), stdev = 1.817
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce
[info] # Run progress: 88.24% complete, ETA 00:02:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 135541.181 ops/s
[info] # Warmup Iteration   2: 332393.878 ops/s
[info] # Warmup Iteration   3: 341510.146 ops/s
[info] # Warmup Iteration   4: 342639.691 ops/s
[info] # Warmup Iteration   5: 344379.724 ops/s
[info] Iteration   1: 343928.017 ops/s
[info]                  ·gc.alloc.rate:               1016.127 MB/sec
[info]                  ·gc.alloc.rate.norm:          4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1309.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5990.086 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 340201.551 ops/s
[info]                  ·gc.alloc.rate:                   1005.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4574.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 345082.637 ops/s
[info]                  ·gc.alloc.rate:                   1019.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4540.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.285 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 346488.209 ops/s
[info]                  ·gc.alloc.rate:                   1023.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4546.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 346571.444 ops/s
[info]                  ·gc.alloc.rate:                   1023.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4564.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce":
[info]   344454.372 ±(99.9%) 10073.821 ops/s [Average]
[info]   (min, avg, max) = (340201.551, 344454.372, 346571.444), stdev = 2616.139
[info]   CI (99.9%): [334380.550, 354528.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   1017.654 ±(99.9%) 29.787 MB/sec [Average]
[info]   (min, avg, max) = (1005.074, 1017.654, 1023.921), stdev = 7.736
[info]   CI (99.9%): [987.867, 1047.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4648.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4648.001, 4648.001, 4648.001), stdev = 0.001
[info]   CI (99.9%): [4648.001, 4648.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1060.330 ±(99.9%) 536.933 MB/sec [Average]
[info]   (min, avg, max) = (989.274, 1060.330, 1309.528), stdev = 139.440
[info]   CI (99.9%): [523.398, 1597.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4843.402 ±(99.9%) 2468.898 B/op [Average]
[info]   (min, avg, max) = (4540.691, 4843.402, 5990.086), stdev = 641.165
[info]   CI (99.9%): [2374.504, 7312.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.114 ±(99.9%) 0.400 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.114, 0.285), stdev = 0.104
[info]   CI (99.9%): [≈ 0, 0.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.000, 10.000), stdev = 3.391
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 89.71% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 92173.759 ops/s
[info] # Warmup Iteration   2: 1013325.977 ops/s
[info] # Warmup Iteration   3: 1059095.615 ops/s
[info] # Warmup Iteration   4: 1031310.967 ops/s
[info] # Warmup Iteration   5: 1041666.636 ops/s
[info] Iteration   1: 1062816.766 ops/s
[info]                  ·gc.alloc.rate:                   1053.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1473.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1062098.303 ops/s
[info]                  ·gc.alloc.rate:                   1053.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1481.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1057914.797 ops/s
[info]                  ·gc.alloc.rate:               1048.977 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1493.006 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 1058767.298 ops/s
[info]                  ·gc.alloc.rate:                   1049.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1498.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1045013.202 ops/s
[info]                  ·gc.alloc.rate:                   1036.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1521.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson":
[info]   1057322.073 ±(99.9%) 27697.369 ops/s [Average]
[info]   (min, avg, max) = (1045013.202, 1057322.073, 1062816.766), stdev = 7192.919
[info]   CI (99.9%): [1029624.704, 1085019.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1048.414 ±(99.9%) 27.485 MB/sec [Average]
[info]   (min, avg, max) = (1036.201, 1048.414, 1053.848), stdev = 7.138
[info]   CI (99.9%): [1020.929, 1075.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1003.689 ±(99.9%) 24.234 MB/sec [Average]
[info]   (min, avg, max) = (995.274, 1003.689, 1010.958), stdev = 6.293
[info]   CI (99.9%): [979.455, 1027.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1493.549 ±(99.9%) 71.864 B/op [Average]
[info]   (min, avg, max) = (1473.294, 1493.549, 1521.997), stdev = 18.663
[info]   CI (99.9%): [1421.685, 1565.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.043 ±(99.9%) 0.180 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.043, 0.123), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 10.000), stdev = 2.950
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 91.18% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1827958.861 ops/s
[info] # Warmup Iteration   2: 2049867.220 ops/s
[info] # Warmup Iteration   3: 2069985.576 ops/s
[info] # Warmup Iteration   4: 2088825.356 ops/s
[info] # Warmup Iteration   5: 2089631.864 ops/s
[info] Iteration   1: 2091507.217 ops/s
[info]                  ·gc.alloc.rate:                   510.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     245.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2086397.469 ops/s
[info]                  ·gc.alloc.rate:                   509.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     491.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2119731.867 ops/s
[info]                  ·gc.alloc.rate:               517.401 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 242.610 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 2105081.125 ops/s
[info]                  ·gc.alloc.rate:                   513.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     489.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2085372.490 ops/s
[info]                  ·gc.alloc.rate:               508.988 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 247.356 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter":
[info]   2097618.034 ±(99.9%) 56393.065 ops/s [Average]
[info]   (min, avg, max) = (2085372.490, 2097618.034, 2119731.867), stdev = 14645.100
[info]   CI (99.9%): [2041224.968, 2154011.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   511.989 ±(99.9%) 13.793 MB/sec [Average]
[info]   (min, avg, max) = (508.988, 511.989, 517.401), stdev = 3.582
[info]   CI (99.9%): [498.196, 525.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   384.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (384.000, 384.000, 384.000), stdev = 0.001
[info]   CI (99.9%): [384.000, 384.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.565 ±(99.9%) 689.110 MB/sec [Average]
[info]   (min, avg, max) = (325.862, 457.565, 654.767), stdev = 178.960
[info]   CI (99.9%): [≈ 0, 1146.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   343.278 ±(99.9%) 518.079 B/op [Average]
[info]   (min, avg, max) = (242.610, 343.278, 491.955), stdev = 134.544
[info]   CI (99.9%): [≈ 0, 861.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.081 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.047), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 92.65% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 104492.870 ops/s
[info] # Warmup Iteration   2: 249317.910 ops/s
[info] # Warmup Iteration   3: 251879.225 ops/s
[info] # Warmup Iteration   4: 258910.999 ops/s
[info] # Warmup Iteration   5: 259021.364 ops/s
[info] Iteration   1: 257949.866 ops/s
[info]                  ·gc.alloc.rate:                   992.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5997.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 257242.645 ops/s
[info]                  ·gc.alloc.rate:                   990.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6038.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 260544.696 ops/s
[info]                  ·gc.alloc.rate:                   1002.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6001.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.377 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 260449.795 ops/s
[info]                  ·gc.alloc.rate:                   1002.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6028.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 256663.833 ops/s
[info]                  ·gc.alloc.rate:               987.986 MB/sec
[info]                  ·gc.alloc.rate.norm:          6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6149.712 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay":
[info]   258570.167 ±(99.9%) 6998.476 ops/s [Average]
[info]   (min, avg, max) = (256663.833, 258570.167, 260544.696), stdev = 1817.482
[info]   CI (99.9%): [251571.691, 265568.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   995.318 ±(99.9%) 26.980 MB/sec [Average]
[info]   (min, avg, max) = (987.986, 995.318, 1002.929), stdev = 7.007
[info]   CI (99.9%): [968.338, 1022.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6056.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6056.002, 6056.002, 6056.002), stdev = 0.001
[info]   CI (99.9%): [6056.002, 6056.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.138 ±(99.9%) 30.937 MB/sec [Average]
[info]   (min, avg, max) = (983.272, 993.138, 1003.275), stdev = 8.034
[info]   CI (99.9%): [962.201, 1024.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6042.952 ±(99.9%) 239.294 B/op [Average]
[info]   (min, avg, max) = (5997.100, 6042.952, 6149.712), stdev = 62.144
[info]   CI (99.9%): [5803.658, 6282.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.228 ±(99.9%) 0.635 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.228, 0.382), stdev = 0.165
[info]   CI (99.9%): [≈ 0, 0.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 11.000), stdev = 3.435
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce
[info] # Run progress: 94.12% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 374524.618 ops/s
[info] # Warmup Iteration   2: 604866.887 ops/s
[info] # Warmup Iteration   3: 633676.967 ops/s
[info] # Warmup Iteration   4: 634545.894 ops/s
[info] # Warmup Iteration   5: 635954.191 ops/s
[info] Iteration   1: 628689.717 ops/s
[info]                  ·gc.alloc.rate:               1230.796 MB/sec
[info]                  ·gc.alloc.rate.norm:          3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1332.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3335.330 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 637021.484 ops/s
[info]                  ·gc.alloc.rate:                   1247.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2481.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 628834.376 ops/s
[info]                  ·gc.alloc.rate:                   1231.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3364.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 629009.427 ops/s
[info]                  ·gc.alloc.rate:               1231.399 MB/sec
[info]                  ·gc.alloc.rate.norm:          3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3376.949 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 633009.737 ops/s
[info]                  ·gc.alloc.rate:               1239.222 MB/sec
[info]                  ·gc.alloc.rate.norm:          3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1014.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2522.491 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce":
[info]   631312.948 ±(99.9%) 14121.596 ops/s [Average]
[info]   (min, avg, max) = (628689.717, 631312.948, 637021.484), stdev = 3667.334
[info]   CI (99.9%): [617191.352, 645434.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1235.911 ±(99.9%) 27.688 MB/sec [Average]
[info]   (min, avg, max) = (1230.796, 1235.911, 1247.112), stdev = 7.190
[info]   CI (99.9%): [1208.223, 1263.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3080.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3080.001, 3080.001, 3080.001), stdev = 0.001
[info]   CI (99.9%): [3080.001, 3080.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1209.447 ±(99.9%) 702.502 MB/sec [Average]
[info]   (min, avg, max) = (1004.599, 1209.447, 1350.121), stdev = 182.437
[info]   CI (99.9%): [506.946, 1911.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3016.089 ±(99.9%) 1809.692 B/op [Average]
[info]   (min, avg, max) = (2481.064, 3016.089, 3376.949), stdev = 469.971
[info]   CI (99.9%): [1206.397, 4825.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.042 ±(99.9%) 0.261 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.156), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.387
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson
[info] # Run progress: 95.59% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1101252.903 ops/s
[info] # Warmup Iteration   2: 1504308.457 ops/s
[info] # Warmup Iteration   3: 1532855.959 ops/s
[info] # Warmup Iteration   4: 1527468.896 ops/s
[info] # Warmup Iteration   5: 1528568.873 ops/s
[info] Iteration   1: 1519855.791 ops/s
[info]                  ·gc.alloc.rate:                   680.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     676.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1520361.289 ops/s
[info]                  ·gc.alloc.rate:                   680.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     680.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1508959.129 ops/s
[info]                  ·gc.alloc.rate:                   675.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     688.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1510068.465 ops/s
[info]                  ·gc.alloc.rate:                   675.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     690.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1531171.617 ops/s
[info]                  ·gc.alloc.rate:               685.144 MB/sec
[info]                  ·gc.alloc.rate.norm:          704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 682.686 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson":
[info]   1518083.258 ±(99.9%) 34822.420 ops/s [Average]
[info]   (min, avg, max) = (1508959.129, 1518083.258, 1531171.617), stdev = 9043.272
[info]   CI (99.9%): [1483260.838, 1552905.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   679.312 ±(99.9%) 15.515 MB/sec [Average]
[info]   (min, avg, max) = (675.250, 679.312, 685.144), stdev = 4.029
[info]   CI (99.9%): [663.797, 694.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   704.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (704.000, 704.000, 704.000), stdev = 0.001
[info]   CI (99.9%): [704.000, 704.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   659.889 ±(99.9%) 16.473 MB/sec [Average]
[info]   (min, avg, max) = (653.753, 659.889, 664.401), stdev = 4.278
[info]   CI (99.9%): [643.417, 676.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   683.889 ±(99.9%) 22.251 B/op [Average]
[info]   (min, avg, max) = (676.712, 683.889, 690.832), stdev = 5.779
[info]   CI (99.9%): [661.638, 706.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.022), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 97.06% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3589617.440 ops/s
[info] # Warmup Iteration   2: 4275593.531 ops/s
[info] # Warmup Iteration   3: 4185114.118 ops/s
[info] # Warmup Iteration   4: 4227050.431 ops/s
[info] # Warmup Iteration   5: 4210163.836 ops/s
[info] Iteration   1: 4216198.202 ops/s
[info]                  ·gc.alloc.rate:                   343.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.176 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.812 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 4237346.247 ops/s
[info]                  ·gc.alloc.rate:                   344.754 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4213313.880 ops/s
[info]                  ·gc.alloc.rate:               342.780 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 121.687 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 4222820.522 ops/s
[info]                  ·gc.alloc.rate:               343.571 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 121.407 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 4228575.864 ops/s
[info]                  ·gc.alloc.rate:                   344.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter":
[info]   4223650.943 ±(99.9%) 37278.928 ops/s [Average]
[info]   (min, avg, max) = (4213313.880, 4223650.943, 4237346.247), stdev = 9681.219
[info]   CI (99.9%): [4186372.015, 4260929.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   343.636 ±(99.9%) 3.055 MB/sec [Average]
[info]   (min, avg, max) = (342.780, 343.636, 344.754), stdev = 0.793
[info]   CI (99.9%): [340.581, 346.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.810 ±(99.9%) 1.073 MB/sec [Average]
[info]   (min, avg, max) = (325.544, 325.810, 326.213), stdev = 0.279
[info]   CI (99.9%): [324.737, 326.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   121.361 ±(99.9%) 1.161 B/op [Average]
[info]   (min, avg, max) = (120.869, 121.361, 121.687), stdev = 0.301
[info]   CI (99.9%): [120.200, 122.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.448 ±(99.9%) 3.721 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.448, 2.176), stdev = 0.966
[info]   CI (99.9%): [≈ 0, 4.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.167 ±(99.9%) 1.389 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.167, 0.812), stdev = 0.361
[info]   CI (99.9%): [≈ 0, 1.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 5.000), stdev = 1.949
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay
[info] # Run progress: 98.53% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 95323.315 ops/s
[info] # Warmup Iteration   2: 210048.072 ops/s
[info] # Warmup Iteration   3: 211373.841 ops/s
[info] # Warmup Iteration   4: 212233.904 ops/s
[info] # Warmup Iteration   5: 211793.153 ops/s
[info] Iteration   1: 211853.634 ops/s
[info]                  ·gc.alloc.rate:                   1103.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7336.835 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.464 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 211406.578 ops/s
[info]                  ·gc.alloc.rate:                   1100.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9854.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.620 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 210101.656 ops/s
[info]                  ·gc.alloc.rate:                   1094.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7477.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.468 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 211852.498 ops/s
[info]                  ·gc.alloc.rate:               1103.123 MB/sec
[info]                  ·gc.alloc.rate.norm:          8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7450.415 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 210687.532 ops/s
[info]                  ·gc.alloc.rate:                   1097.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10029.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.311 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay":
[info]   211180.380 ±(99.9%) 2959.442 ops/s [Average]
[info]   (min, avg, max) = (210101.656, 211180.380, 211853.634), stdev = 768.558
[info]   CI (99.9%): [208220.938, 214139.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1099.624 ±(99.9%) 15.358 MB/sec [Average]
[info]   (min, avg, max) = (1094.040, 1099.624, 1103.123), stdev = 3.989
[info]   CI (99.9%): [1084.266, 1114.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8192.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8192.002, 8192.002, 8192.002), stdev = 0.001
[info]   CI (99.9%): [8192.002, 8192.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1131.437 ±(99.9%) 711.596 MB/sec [Average]
[info]   (min, avg, max) = (987.962, 1131.437, 1343.163), stdev = 184.799
[info]   CI (99.9%): [419.840, 1843.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8429.798 ±(99.9%) 5324.741 B/op [Average]
[info]   (min, avg, max) = (7336.835, 8429.798, 10029.827), stdev = 1382.818
[info]   CI (99.9%): [3105.057, 13754.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.373 ±(99.9%) 0.906 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.373, 0.620), stdev = 0.235
[info]   CI (99.9%): [≈ 0, 1.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.200, 12.000), stdev = 4.025
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:18:16
[info] Benchmark                                                                                    Mode  Cnt         Score         Error   Units
[info] JsonCodecBenchmark.missingReqFieldCirce                                                     thrpt    5   1460096.791 ±   17573.915   ops/s
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate                                      thrpt    5      2346.167 ±      28.167  MB/sec
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm                                 thrpt    5      2528.000 ±       0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space                             thrpt    5      2379.727 ±      18.359  MB/sec
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2564.180 ±      35.863    B/op
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.067 ±       0.067  MB/sec
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.072 ±       0.073    B/op
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.count                                           thrpt    5        35.000                counts
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.time                                            thrpt    5        53.000                    ms
[info] JsonCodecBenchmark.missingReqFieldJackson                                                   thrpt    5    204924.033 ±    3240.077   ops/s
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate                                    thrpt    5       491.850 ±       7.804  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm                               thrpt    5      3776.002 ±       0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space                           thrpt    5       516.472 ±     674.767  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      3965.729 ±    5188.292    B/op
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.025 ±       0.088  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.192 ±       0.673    B/op
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.count                                         thrpt    5         8.000                counts
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.time                                          thrpt    5        19.000                    ms
[info] JsonCodecBenchmark.missingReqFieldJsoniter                                                  thrpt    5    450622.369 ±   14691.153   ops/s
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate                                   thrpt    5       419.323 ±      13.658  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm                              thrpt    5      1464.001 ±       0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       456.682 ±     687.387  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1592.223 ±    2367.873    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.033 ±       0.146  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.116 ±       0.506    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.count                                        thrpt    5         7.000                counts
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.time                                         thrpt    5        20.000                    ms
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless                                         thrpt    5   1728105.070 ±   33200.994   ops/s
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate                          thrpt    5      1072.063 ±      20.578  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm                     thrpt    5       976.000 ±       0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space                 thrpt    5      1066.178 ±     563.097  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm            thrpt    5       970.987 ±     526.209    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space             thrpt    5         0.062 ±       0.139  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.057 ±       0.127    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.count                               thrpt    5        16.000                counts
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.time                                thrpt    5        28.000                    ms
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump                                   thrpt    5   3589238.447 ±  130252.091   ops/s
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate                    thrpt    5       511.037 ±      18.542  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm               thrpt    5       224.000 ±       0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space           thrpt    5       523.328 ±     692.348  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm      thrpt    5       229.936 ±     310.061    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space       thrpt    5         0.029 ±       0.156  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.013 ±       0.069    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count                         thrpt    5         8.000                counts
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time                          thrpt    5        19.000                    ms
[info] JsonCodecBenchmark.missingReqFieldPlay                                                      thrpt    5    125064.329 ±    6788.133   ops/s
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate                                       thrpt    5      1043.597 ±      56.637  MB/sec
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm                                  thrpt    5     13128.004 ±       0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1061.731 ±     558.687  MB/sec
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5     13353.719 ±    6868.227    B/op
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.058 ±       0.132  MB/sec
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.730 ±       1.632    B/op
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.count                                            thrpt    5        16.000                counts
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.time                                             thrpt    5        35.000                    ms
[info] JsonCodecBenchmark.readAnyRefsCirce                                                         thrpt    5   1143701.600 ±   24516.125   ops/s
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate                                          thrpt    5      1791.301 ±      38.399  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                                     thrpt    5      2464.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1829.381 ±     706.700  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2516.033 ±     952.757    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.050 ±       0.122  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.069 ±       0.167    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.count                                               thrpt    5        27.000                counts
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.time                                                thrpt    5        40.000                    ms
[info] JsonCodecBenchmark.readAnyRefsJackson                                                       thrpt    5   1889045.769 ±   56464.026   ops/s
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                                        thrpt    5      1325.603 ±      39.633  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                                   thrpt    5      1104.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1341.418 ±      40.948  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1117.219 ±      44.620    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.025 ±       0.105  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.021 ±       0.087    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.count                                             thrpt    5        20.000                counts
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.time                                              thrpt    5        42.000                    ms
[info] JsonCodecBenchmark.readAnyRefsJsoniter                                                      thrpt    5   6549160.085 ±  254655.869   ops/s
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                                       thrpt    5       832.553 ±      32.353  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       200.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       793.698 ±     697.178  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       190.871 ±     171.882    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.054 ±       0.134  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.013 ±       0.032    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.count                                            thrpt    5        12.000                counts
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.time                                             thrpt    5        31.000                    ms
[info] JsonCodecBenchmark.readAnyRefsPlay                                                          thrpt    5    430074.461 ±   14591.791   ops/s
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                           thrpt    5      1137.184 ±      38.596  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                                      thrpt    5      4160.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1132.676 ±     683.067  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      4144.194 ±    2515.337    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.062 ±       0.179  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.228 ±       0.655    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.count                                                thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.time                                                 thrpt    5        28.000                    ms
[info] JsonCodecBenchmark.readArraysCirce                                                          thrpt    5    599247.381 ±   10143.499   ops/s
[info] JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate                                           thrpt    5      1953.240 ±      32.999  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate.norm                                      thrpt    5      5128.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                                  thrpt    5      1967.410 ±     588.921  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5164.236 ±    1489.224    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                              thrpt    5         0.075 ±       0.072  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.197 ±       0.188    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.count                                                thrpt    5        29.000                counts
[info] JsonCodecBenchmark.readArraysCirce:·gc.time                                                 thrpt    5        45.000                    ms
[info] JsonCodecBenchmark.readArraysJackson                                                        thrpt    5   1256993.727 ±   22413.373   ops/s
[info] JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate                                         thrpt    5      1182.479 ±      21.123  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate.norm                                    thrpt    5      1480.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                                thrpt    5      1136.167 ±     708.336  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1422.655 ±     905.569    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                            thrpt    5         0.012 ±       0.072  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.016 ±       0.090    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.count                                              thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readArraysJackson:·gc.time                                               thrpt    5        21.000                    ms
[info] JsonCodecBenchmark.readArraysJsoniter                                                       thrpt    5   2382444.643 ±   45208.293   ops/s
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate                                        thrpt    5      1090.328 ±      20.651  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                                   thrpt    5       720.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5      1066.196 ±     563.058  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5       704.035 ±     370.072    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5         0.058 ±       0.105  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.038 ±       0.069    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.count                                             thrpt    5        16.000                counts
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.time                                              thrpt    5        27.000                    ms
[info] JsonCodecBenchmark.readArraysPlay                                                           thrpt    5    219504.237 ±    4639.463   ops/s
[info] JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate                                            thrpt    5      1336.101 ±      28.406  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate.norm                                       thrpt    5      9576.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                                   thrpt    5      1338.406 ±      41.204  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5      9592.776 ±     368.600    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                               thrpt    5         0.046 ±       0.036  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.328 ±       0.255    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.count                                                 thrpt    5        20.000                counts
[info] JsonCodecBenchmark.readArraysPlay:·gc.time                                                  thrpt    5        31.000                    ms
[info] JsonCodecBenchmark.readBitSetsJackson                                                       thrpt    5   1580680.580 ±   64226.371   ops/s
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate                                        thrpt    5      1020.804 ±      41.390  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                                   thrpt    5      1016.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1005.162 ±      21.863  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1000.482 ±      26.274    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.046 ±       0.088  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.046 ±       0.088    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.count                                             thrpt    5        15.000                counts
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.time                                              thrpt    5        29.000                    ms
[info] JsonCodecBenchmark.readBitSetsJsoniter                                                      thrpt    5   4169091.732 ±  125015.973   ops/s
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                                       thrpt    5       551.188 ±      16.532  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       208.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       523.929 ±     689.211  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       197.921 ±     262.609    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.033 ±       0.146  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.013 ±       0.055    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.count                                            thrpt    5         8.000                counts
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.time                                             thrpt    5        15.000                    ms
[info] JsonCodecBenchmark.readBitSetsPlay                                                          thrpt    5    276109.632 ±    6131.400   ops/s
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate                                           thrpt    5      1253.744 ±      27.835  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                                      thrpt    5      7144.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1269.271 ±     586.149  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      7233.010 ±    3353.571    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.042 ±       0.057  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.237 ±       0.324    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.count                                                thrpt    5        19.000                counts
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.time                                                 thrpt    5        34.000                    ms
[info] JsonCodecBenchmark.readExtractFieldsCirce                                                   thrpt    5    563340.269 ±   19651.848   ops/s
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate                                    thrpt    5      1870.541 ±      65.355  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                               thrpt    5      5224.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                           thrpt    5      1830.512 ±     719.767  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5      5114.014 ±    2087.623    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.058 ±       0.067  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.163 ±       0.189    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.count                                         thrpt    5        27.000                counts
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.time                                          thrpt    5        65.000                    ms
[info] JsonCodecBenchmark.readExtractFieldsJackson                                                 thrpt    5    655062.927 ±   17870.495   ops/s
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate                                  thrpt    5       819.453 ±      22.404  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                             thrpt    5      1968.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space                         thrpt    5       799.403 ±     691.289  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5      1919.049 ±    1640.437    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.025 ±       0.067  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.060 ±       0.161    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.count                                       thrpt    5        12.000                counts
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.time                                        thrpt    5        22.000                    ms
[info] JsonCodecBenchmark.readExtractFieldsJsoniter                                                thrpt    5   4134332.164 ±  182379.366   ops/s
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                                 thrpt    5       189.209 ±       8.354  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                            thrpt    5        72.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       218.651 ±     484.781  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5        83.251 ±     184.467    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.446 ±       3.815  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.169 ±       1.449    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.count                                      thrpt    5         4.000                counts
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.time                                       thrpt    5        36.000                    ms
[info] JsonCodecBenchmark.readExtractFieldsPlay                                                    thrpt    5    201576.506 ±    3747.889   ops/s
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate                                     thrpt    5      1119.301 ±      20.877  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                                thrpt    5      8736.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1131.283 ±     682.073  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5      8830.682 ±    5359.027    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.050 ±       0.146  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.391 ±       1.142    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.count                                          thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.time                                           thrpt    5        34.000                    ms
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter                                               thrpt    5   3325121.239 ±   75924.692   ops/s
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                                thrpt    5       997.595 ±      22.894  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                           thrpt    5       472.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       997.511 ±      27.521  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5       471.989 ±      23.417    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.050 ±       0.122  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.024 ±       0.058    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                                     thrpt    5        15.000                counts
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                                      thrpt    5        44.000                    ms
[info] JsonCodecBenchmark.readIntAndLongMapsPlay                                                   thrpt    5    238006.988 ±    8015.926   ops/s
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                                    thrpt    5      1279.258 ±      43.211  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                               thrpt    5      8456.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1270.919 ±     587.300  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5      8406.686 ±    4068.709    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.071 ±       0.146  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.468 ±       0.964    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.count                                         thrpt    5        19.000                counts
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.time                                          thrpt    5        36.000                    ms
[info] JsonCodecBenchmark.readIterablesCirce                                                       thrpt    5    547315.967 ±   14913.058   ops/s
[info] JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate                                        thrpt    5      1923.131 ±      52.429  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm                                   thrpt    5      5528.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                               thrpt    5      1966.705 ±     581.748  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5654.906 ±    1757.602    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                           thrpt    5         0.042 ±       0.080  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.119 ±       0.228    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.count                                             thrpt    5        29.000                counts
[info] JsonCodecBenchmark.readIterablesCirce:·gc.time                                              thrpt    5        56.000                    ms
[info] JsonCodecBenchmark.readIterablesJackson                                                     thrpt    5    520297.480 ±   14871.552   ops/s
[info] JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate                                      thrpt    5       529.143 ±      15.136  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                                 thrpt    5      1600.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                             thrpt    5       526.136 ±     691.146  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5      1593.121 ±    2116.930    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space                         thrpt    5         0.029 ±       0.072  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.088 ±       0.216    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.count                                           thrpt    5         8.000                counts
[info] JsonCodecBenchmark.readIterablesJackson:·gc.time                                            thrpt    5        13.000                    ms
[info] JsonCodecBenchmark.readIterablesJsoniter                                                    thrpt    5   2772921.189 ±   70033.236   ops/s
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                                     thrpt    5       747.337 ±      18.912  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                                thrpt    5       424.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5       724.757 ±     561.113  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5       411.190 ±     318.184    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5         0.042 ±       0.127  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.024 ±       0.072    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.count                                          thrpt    5        11.000                counts
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.time                                           thrpt    5        26.000                    ms
[info] JsonCodecBenchmark.readIterablesPlay                                                        thrpt    5    171912.266 ±    2291.978   ops/s
[info] JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate                                         thrpt    5      1173.151 ±      15.624  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                                    thrpt    5     10736.003 ±       0.001    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                                thrpt    5      1132.711 ±     704.924  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5     10363.452 ±    6369.795    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                            thrpt    5         0.058 ±       0.154  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.533 ±       1.411    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.count                                              thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readIterablesPlay:·gc.time                                               thrpt    5        40.000                    ms
[info] JsonCodecBenchmark.readMapsCirce                                                            thrpt    5    465135.003 ±   10644.471   ops/s
[info] JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate                                             thrpt    5      1653.267 ±      37.834  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate.norm                                        thrpt    5      5592.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1691.314 ±      28.763  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5720.839 ±     154.720    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.067 ±       0.119  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.226 ±       0.406    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.count                                                  thrpt    5        25.000                counts
[info] JsonCodecBenchmark.readMapsCirce:·gc.time                                                   thrpt    5        49.000                    ms
[info] JsonCodecBenchmark.readMapsJackson                                                          thrpt    5    904238.206 ±   17675.415   ops/s
[info] JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate                                           thrpt    5      1066.755 ±      20.751  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                                      thrpt    5      1856.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                                  thrpt    5      1071.602 ±     568.610  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5      1864.859 ±    1005.544    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.058 ±       0.164  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.101 ±       0.285    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.count                                                thrpt    5        16.000                counts
[info] JsonCodecBenchmark.readMapsJackson:·gc.time                                                 thrpt    5        27.000                    ms
[info] JsonCodecBenchmark.readMapsJsoniter                                                         thrpt    5   3147843.291 ±   77844.210   ops/s
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate                                          thrpt    5       784.328 ±      19.376  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                                     thrpt    5       392.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       792.485 ±     707.130  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5       396.154 ±     354.920    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.037 ±       0.067  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.019 ±       0.033    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.count                                               thrpt    5        12.000                counts
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.time                                                thrpt    5        23.000                    ms
[info] JsonCodecBenchmark.readMapsPlay                                                             thrpt    5    255758.928 ±    5896.722   ops/s
[info] JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate                                              thrpt    5      1316.092 ±      30.405  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                                         thrpt    5      8096.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                                     thrpt    5      1338.499 ±      40.435  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      8233.970 ±     253.263    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.054 ±       0.091  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.333 ±       0.559    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.count                                                   thrpt    5        20.000                counts
[info] JsonCodecBenchmark.readMapsPlay:·gc.time                                                    thrpt    5        37.000                    ms
[info] JsonCodecBenchmark.readMutableMapsJackson                                                   thrpt    5    694687.483 ±   10044.842   ops/s
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                                    thrpt    5       900.773 ±      12.980  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                               thrpt    5      2040.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                           thrpt    5       932.571 ±     572.850  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      2112.605 ±    1310.912    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.046 ±       0.223  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.104 ±       0.504    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.count                                         thrpt    5        14.000                counts
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.time                                          thrpt    5        31.000                    ms
[info] JsonCodecBenchmark.readMutableMapsJsoniter                                                  thrpt    5   2441507.672 ±   61119.983   ops/s
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                                   thrpt    5      1154.769 ±      28.880  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                              thrpt    5       744.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5      1134.808 ±     693.706  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       731.596 ±     461.202    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.050 ±       0.072  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.032 ±       0.046    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.count                                        thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.time                                         thrpt    5        16.000                    ms
[info] JsonCodecBenchmark.readMutableMapsPlay                                                      thrpt    5    220285.731 ±    5349.023   ops/s
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                                       thrpt    5      1173.901 ±      28.400  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                                  thrpt    5      8384.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1200.108 ±     703.075  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8570.206 ±    4988.749    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.062 ±       0.057  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.446 ±       0.409    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.count                                            thrpt    5        18.000                counts
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.time                                             thrpt    5        39.000                    ms
[info] JsonCodecBenchmark.readPrimitivesCirce                                                      thrpt    5    465504.329 ±   17706.744   ops/s
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate                                       thrpt    5      1372.910 ±      52.169  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                                  thrpt    5      4640.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1414.464 ±     594.610  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      4780.081 ±    1978.281    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.037 ±       0.067  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.127 ±       0.226    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.count                                            thrpt    5        21.000                counts
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.time                                             thrpt    5        40.000                    ms
[info] JsonCodecBenchmark.readPrimitivesJackson                                                    thrpt    5    942251.761 ±  180323.547   ops/s
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                                     thrpt    5       723.497 ±     138.488  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                                thrpt    5      1208.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       731.065 ±     580.444  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1220.353 ±     913.968    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.033 ±       0.072  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.056 ±       0.121    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.count                                          thrpt    5        11.000                counts
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.time                                           thrpt    5        13.000                    ms
[info] JsonCodecBenchmark.readPrimitivesJsoniter                                                   thrpt    5   3360148.322 ±   88141.553   ops/s
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                                    thrpt    5       102.533 ±       2.646  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                               thrpt    5        48.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       102.365 ±     539.740  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5        47.963 ±     252.901    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.count                                         thrpt    5         2.000                counts
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.time                                          thrpt    5         6.000                    ms
[info] JsonCodecBenchmark.readPrimitivesPlay                                                       thrpt    5    167376.623 ±    3917.263   ops/s
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                                        thrpt    5      1139.651 ±      26.789  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                                   thrpt    5     10712.003 ±       0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1132.996 ±     703.852  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5     10648.472 ±    6578.799    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.054 ±       0.122  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.508 ±       1.140    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.count                                             thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.time                                              thrpt    5        41.000                    ms
[info] JsonCodecBenchmark.writeAnyRefsCirce                                                        thrpt    5   1294113.966 ±   42788.217   ops/s
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate                                         thrpt    5      1447.737 ±      48.008  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                                    thrpt    5      1760.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                                thrpt    5      1484.384 ±     719.437  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1804.927 ±     887.345    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                            thrpt    5         0.037 ±       0.067  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.045 ±       0.081    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.count                                              thrpt    5        22.000                counts
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.time                                               thrpt    5        43.000                    ms
[info] JsonCodecBenchmark.writeAnyRefsJackson                                                      thrpt    5   3834297.142 ±  160293.295   ops/s
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                                       thrpt    5      1052.841 ±      44.024  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1070.105 ±     588.897  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       439.348 ±     251.199    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±       0.036  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.019 ±       0.015    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.count                                            thrpt    5        16.000                counts
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.time                                             thrpt    5        29.000                    ms
[info] JsonCodecBenchmark.writeAnyRefsJsoniter                                                     thrpt    5  15523921.802 ± 1524512.725   ops/s
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                                      thrpt    5       473.627 ±      46.501  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                                 thrpt    5        48.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       522.860 ±     690.153  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5        53.107 ±      71.310    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.029 ±       0.166  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.003 ±       0.017    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.count                                           thrpt    5         8.000                counts
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.time                                            thrpt    5        19.000                    ms
[info] JsonCodecBenchmark.writeAnyRefsPlay                                                         thrpt    5    810752.686 ±   22918.105   ops/s
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                                          thrpt    5      1216.161 ±      34.432  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                                     thrpt    5      2360.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1269.572 ±     574.584  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2462.282 ±    1065.394    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.029 ±       0.072  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.057 ±       0.138    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.count                                               thrpt    5        19.000                counts
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.time                                                thrpt    5        24.000                    ms
[info] JsonCodecBenchmark.writeArraysCirce                                                         thrpt    5    728158.553 ±   31167.786   ops/s
[info] JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate                                          thrpt    5      1758.755 ±      75.346  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm                                     thrpt    5      3800.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1760.635 ±     560.424  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      3803.692 ±    1172.771    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.042 ±       0.080  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.090 ±       0.174    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.count                                               thrpt    5        26.000                counts
[info] JsonCodecBenchmark.writeArraysCirce:·gc.time                                                thrpt    5        47.000                    ms
[info] JsonCodecBenchmark.writeArraysJackson                                                       thrpt    5   2583167.256 ±   55347.635   ops/s
[info] JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate                                        thrpt    5      1497.465 ±      32.078  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm                                   thrpt    5       912.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1485.400 ±     715.341  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5       905.016 ±     449.527    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.042 ±       0.057  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.025 ±       0.035    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.count                                             thrpt    5        22.000                counts
[info] JsonCodecBenchmark.writeArraysJackson:·gc.time                                              thrpt    5        38.000                    ms
[info] JsonCodecBenchmark.writeArraysJsoniter                                                      thrpt    5   4369904.900 ±  262436.200   ops/s
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate                                       thrpt    5      1199.907 ±      72.053  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5      1204.125 ±     705.117  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       433.692 ±     258.165    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.071 ±       0.193  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.026 ±       0.071    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.count                                            thrpt    5        18.000                counts
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.time                                             thrpt    5        18.000                    ms
[info] JsonCodecBenchmark.writeArraysPlay                                                          thrpt    5    342821.911 ±    8309.198   ops/s
[info] JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate                                           thrpt    5      1223.747 ±      29.702  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm                                      thrpt    5      5616.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1201.793 ±     685.094  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5513.750 ±    3096.845    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.054 ±       0.134  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.249 ±       0.618    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.count                                                thrpt    5        18.000                counts
[info] JsonCodecBenchmark.writeArraysPlay:·gc.time                                                 thrpt    5        38.000                    ms
[info] JsonCodecBenchmark.writeBitSetsJackson                                                      thrpt    5   2201481.968 ±  116845.671   ops/s
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                                       thrpt    5       940.317 ±      49.641  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                                  thrpt    5       672.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1000.669 ±      27.297  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       715.231 ±      40.408    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.029 ±       0.072  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.021 ±       0.051    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.count                                            thrpt    5        15.000                counts
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.time                                             thrpt    5        28.000                    ms
[info] JsonCodecBenchmark.writeBitSetsJsoniter                                                     thrpt    5   4274259.236 ±   44632.164   ops/s
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                                      thrpt    5       782.439 ±       8.158  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                                 thrpt    5       288.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       725.649 ±     567.712  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5       267.194 ±     211.861    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.046 ±       0.132  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.017 ±       0.049    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.count                                           thrpt    5        11.000                counts
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.time                                            thrpt    5        27.000                    ms
[info] JsonCodecBenchmark.writeBitSetsPlay                                                         thrpt    5    510854.151 ±   15676.990   ops/s
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate                                          thrpt    5      1517.020 ±      46.750  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                                     thrpt    5      4672.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1479.027 ±     713.371  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      4554.231 ±    2159.831    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.058 ±       0.105  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.180 ±       0.322    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.count                                               thrpt    5        22.000                counts
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.time                                                thrpt    5        33.000                    ms
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson                                               thrpt    5   1009417.654 ±   32367.600   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                                thrpt    5      1247.282 ±      40.096  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1944.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1275.963 ±     577.857  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1989.454 ±     924.735    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.042 ±       0.080  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.065 ±       0.124    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.count                                     thrpt    5        19.000                counts
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.time                                      thrpt    5        32.000                    ms
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter                                              thrpt    5   2327523.564 ±   18122.822   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                               thrpt    5       449.764 ±       3.510  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       304.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       457.185 ±     690.514  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       309.006 ±     466.573    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.042 ±       0.196  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.028 ±       0.133    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                                    thrpt    5         7.000                counts
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                                     thrpt    5        15.000                    ms
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay                                                  thrpt    5    251456.146 ±    2310.925   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                                   thrpt    5       985.844 ±       9.095  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                              thrpt    5      6168.002 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5       993.422 ±      30.704  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      6215.375 ±     155.968    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.054 ±       0.108  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.339 ±       0.675    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.count                                        thrpt    5        15.000                counts
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.time                                         thrpt    5        19.000                    ms
[info] JsonCodecBenchmark.writeIterablesCirce                                                      thrpt    5    618005.978 ±   10426.904   ops/s
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate                                       thrpt    5      1577.576 ±      26.623  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                                  thrpt    5      4016.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1553.025 ±     704.996  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      3954.408 ±    1828.835    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.029 ±       0.072  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.074 ±       0.183    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.count                                            thrpt    5        23.000                counts
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.time                                             thrpt    5        42.000                    ms
[info] JsonCodecBenchmark.writeIterablesJackson                                                    thrpt    5   1175060.231 ±  239408.991   ops/s
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate                                     thrpt    5       723.008 ±     147.304  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                                thrpt    5       968.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       725.597 ±     584.964  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5       972.102 ±     757.713    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.021 ±       0.057  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.027 ±       0.074    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.count                                          thrpt    5        11.000                counts
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.time                                           thrpt    5        27.000                    ms
[info] JsonCodecBenchmark.writeIterablesJsoniter                                                   thrpt    5   4400535.505 ±  122938.222   ops/s
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                                    thrpt    5       671.300 ±      18.729  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                               thrpt    5       240.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       657.079 ±      13.244  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5       234.924 ±       6.945    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.033 ±       0.091  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.012 ±       0.033    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.count                                         thrpt    5        10.000                counts
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.time                                          thrpt    5        11.000                    ms
[info] JsonCodecBenchmark.writeIterablesPlay                                                       thrpt    5    373304.405 ±    8531.817   ops/s
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate                                        thrpt    5      1277.499 ±      29.194  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                                   thrpt    5      5384.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1269.561 ±     555.481  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5349.696 ±    2306.802    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.054 ±       0.122  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.229 ±       0.516    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.count                                             thrpt    5        19.000                counts
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.time                                              thrpt    5        41.000                    ms
[info] JsonCodecBenchmark.writeMapsCirce                                                           thrpt    5    347385.784 ±    5941.700   ops/s
[info] JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate                                            thrpt    5      1033.363 ±      17.630  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm                                       thrpt    5      4680.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                                   thrpt    5       993.414 ±      35.804  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                              thrpt    5      4499.125 ±     168.973    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                               thrpt    5         0.042 ±       0.150  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.188 ±       0.678    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.count                                                 thrpt    5        15.000                counts
[info] JsonCodecBenchmark.writeMapsCirce:·gc.time                                                  thrpt    5        28.000                    ms
[info] JsonCodecBenchmark.writeMapsJackson                                                         thrpt    5   1066604.729 ±   22451.292   ops/s
[info] JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate                                          thrpt    5      1106.415 ±      23.307  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                                     thrpt    5      1632.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                                 thrpt    5      1138.686 ±     698.231  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                            thrpt    5      1678.874 ±    1005.705    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                             thrpt    5         0.050 ±       0.091  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.074 ±       0.135    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.count                                               thrpt    5        17.000                counts
[info] JsonCodecBenchmark.writeMapsJackson:·gc.time                                                thrpt    5        35.000                    ms
[info] JsonCodecBenchmark.writeMapsJsoniter                                                        thrpt    5   2388166.376 ±   39004.008   ops/s
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                                         thrpt    5       570.767 ±       9.330  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                                    thrpt    5       376.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                                thrpt    5       589.258 ±     561.991  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                           thrpt    5       387.954 ±     367.244    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                            thrpt    5         0.037 ±       0.132  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.025 ±       0.087    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.count                                              thrpt    5         9.000                counts
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.time                                               thrpt    5        18.000                    ms
[info] JsonCodecBenchmark.writeMapsPlay                                                            thrpt    5    255531.829 ±    5394.994   ops/s
[info] JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate                                             thrpt    5       942.040 ±      19.897  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                                        thrpt    5      5800.002 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                                    thrpt    5       926.563 ±     577.827  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5703.356 ±    3526.398    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                                thrpt    5         0.042 ±       0.057  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.256 ±       0.346    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.count                                                  thrpt    5        14.000                counts
[info] JsonCodecBenchmark.writeMapsPlay:·gc.time                                                   thrpt    5        22.000                    ms
[info] JsonCodecBenchmark.writeMutableMapsCirce                                                    thrpt    5    344454.372 ±   10073.821   ops/s
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate                                     thrpt    5      1017.654 ±      29.787  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                                thrpt    5      4648.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                            thrpt    5      1060.330 ±     536.933  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5      4843.402 ±    2468.898    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space                        thrpt    5         0.025 ±       0.088  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.114 ±       0.400    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.count                                          thrpt    5        16.000                counts
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.time                                           thrpt    5        30.000                    ms
[info] JsonCodecBenchmark.writeMutableMapsJackson                                                  thrpt    5   1057322.073 ±   27697.369   ops/s
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                                   thrpt    5      1048.414 ±      27.485  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                              thrpt    5      1560.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space                          thrpt    5      1003.689 ±      24.234  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1493.549 ±      71.864    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space                      thrpt    5         0.029 ±       0.122  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.043 ±       0.180    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.count                                        thrpt    5        15.000                counts
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.time                                         thrpt    5        26.000                    ms
[info] JsonCodecBenchmark.writeMutableMapsJsoniter                                                 thrpt    5   2097618.034 ±   56393.065   ops/s
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                                  thrpt    5       511.989 ±      13.793  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                             thrpt    5       384.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5       457.565 ±     689.110  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5       343.278 ±     518.079    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5         0.029 ±       0.108  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.022 ±       0.081    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.count                                       thrpt    5         7.000                counts
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.time                                        thrpt    5         8.000                    ms
[info] JsonCodecBenchmark.writeMutableMapsPlay                                                     thrpt    5    258570.167 ±    6998.476   ops/s
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                                      thrpt    5       995.318 ±      26.980  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                                 thrpt    5      6056.002 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                             thrpt    5       993.138 ±      30.937  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5      6042.952 ±     239.294    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space                         thrpt    5         0.037 ±       0.105  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.228 ±       0.635    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.count                                           thrpt    5        15.000                counts
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.time                                            thrpt    5        32.000                    ms
[info] JsonCodecBenchmark.writePrimitivesCirce                                                     thrpt    5    631312.948 ±   14121.596   ops/s
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate                                      thrpt    5      1235.911 ±      27.688  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                                 thrpt    5      3080.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                             thrpt    5      1209.447 ±     702.502  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      3016.089 ±    1809.692    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.017 ±       0.105  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.042 ±       0.261    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.count                                           thrpt    5        18.000                counts
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.time                                            thrpt    5        34.000                    ms
[info] JsonCodecBenchmark.writePrimitivesJackson                                                   thrpt    5   1518083.258 ±   34822.420   ops/s
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                                    thrpt    5       679.312 ±      15.515  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                               thrpt    5       704.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                           thrpt    5       659.889 ±      16.473  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5       683.889 ±      22.251    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.017 ±       0.036  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.017 ±       0.037    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.count                                         thrpt    5        10.000                counts
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.time                                          thrpt    5        12.000                    ms
[info] JsonCodecBenchmark.writePrimitivesJsoniter                                                  thrpt    5   4223650.943 ±   37278.928   ops/s
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                                   thrpt    5       343.636 ±       3.055  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                              thrpt    5       128.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       325.810 ±       1.073  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       121.361 ±       1.161    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.448 ±       3.721  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.167 ±       1.389    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.count                                        thrpt    5         5.000                counts
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.time                                         thrpt    5        13.000                    ms
[info] JsonCodecBenchmark.writePrimitivesPlay                                                      thrpt    5    211180.380 ±    2959.442   ops/s
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                                       thrpt    5      1099.624 ±      15.358  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                                  thrpt    5      8192.002 ±       0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1131.437 ±     711.596  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8429.798 ±    5324.741    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.050 ±       0.122  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.373 ±       0.906    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.count                                            thrpt    5        17.000                counts
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.time                                             thrpt    5        31.000                    ms
[success] Total time: 1134 s, completed Nov 13, 2017 9:09:33 AM
