[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Nov 1, 2017 7:30:40 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:196:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, count)
[warn]       ^
[warn] one warning found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:49:53: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1868115770 => if (in.isReusableCharsEqualsTo(l, "bd"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _bd = in.readBigDecimal(_bd)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 135249149 => if (in.isReusableCharsEqualsTo(l, "os"))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs];
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           if (x.os.ne(null).&&(x.os.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "os");
[info]               out.writeVal(x.os.get)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = materialize[AnyRefs]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:51:51: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       private val reqFields: Array[String] = Array("aa", "a");
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Arrays = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _aa: Array[Array[Int]] = new Array[Array[Int]](0);
[info]           var _a: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1396692260 => if (in.isReusableCharsEqualsTo(l, "aa"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _aa = d1(in, _aa)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 272946562 => if (in.isReusableCharsEqualsTo(l, "a"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _a = d2(in, _a)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Arrays];
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "aa");
[info]             e1(out, x.aa)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "a");
[info]             e2(out, x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: Array[Int]): Array[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               buf.+=(d0(in, new Array[Int](0)))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d2(in: JsonReader, default: Array[BigInt]): Array[BigInt] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               buf.+=(in.readBigInt(null))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: Array[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var c = false;
[info]         while (i.<(l)) 
[info]           {
[info]             c = out.writeComma(c);
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: Array[Array[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var c = false;
[info]         while (i.<(l)) 
[info]           {
[info]             c = out.writeComma(c);
[info]             e0(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: Array[BigInt]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var c = false;
[info]         while (i.<(l)) 
[info]           {
[info]             c = out.writeComma(c);
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = materialize[Arrays]
[info]                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:53:53: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.BitSets = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case -311899171 => if (in.isReusableCharsEqualsTo(l, "bs"))
[info]                       _bs = d0(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 395882128 => if (in.isReusableCharsEqualsTo(l, "mbs"))
[info]                       _mbs = d1(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.BitSets];
[info]           var c = false;
[info]           if (x.bs.ne(null).&&(x.bs.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "bs");
[info]               e0(out, x.bs)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mbs.ne(null).&&(x.mbs.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "mbs");
[info]               e1(out, x.mbs)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = BitSet.newBuilder;
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = BitSet.empty;
[info]             do 
[info]               buf.add(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.mutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = materialize[BitSets]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:55:57: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Iterables = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, "l"))
[info]                       _l = d0(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       _s = d1(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 753022030 => if (in.isReusableCharsEqualsTo(l, "ls"))
[info]                       _ls = d2(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Iterables];
[info]           var c = false;
[info]           if (x.l.ne(null).&&(x.l.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "l");
[info]               e0(out, x.l)
[info]             }
[info]           else
[info]             ();
[info]           if (x.s.ne(null).&&(x.s.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "s");
[info]               e1(out, x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.ls.ne(null).&&(x.ls.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "ls");
[info]               e2(out, x.ls)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: List[String]): List[String] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = List.newBuilder[String];
[info]             do 
[info]               buf.+=(in.readString(null))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = Set.newBuilder[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d2(in: JsonReader, default: List[Set[Int]]): List[Set[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               buf.+=(d1(in, Set.empty[Int]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = materialize[Iterables]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:57:47: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Maps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Maps];
[info]           var c = false;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = HashMap.empty[Long, Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsInt(), d1(in, HashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = materialize[Maps]
[info]                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:59:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps];
[info]           var c = false;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf.update(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               buf.update(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               buf.update(in.readObjectFieldAsInt(), d1(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = materialize[MutableMaps]
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:61:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps];
[info]           var c = false;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = IntMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsInt(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = LongMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               buf.update(in.readObjectFieldAsLong(), d1(in, LongMap.empty[Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:63:59: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Primitives = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 255;
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 479329913 => if (in.isReusableCharsEqualsTo(l, "b"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isReusableCharsEqualsTo(l, "i"))
[info]                       {
[info]                         req0.&=(-5);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, "l"))
[info]                       {
[info]                         req0.&=(-9);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -986815646 => if (in.isReusableCharsEqualsTo(l, "bl"))
[info]                       {
[info]                         req0.&=(-17);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1128364876 => if (in.isReusableCharsEqualsTo(l, "ch"))
[info]                       {
[info]                         req0.&=(-33);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 977778859 => if (in.isReusableCharsEqualsTo(l, "dbl"))
[info]                       {
[info]                         req0.&=(-65);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2108804597 => if (in.isReusableCharsEqualsTo(l, "f"))
[info]                       {
[info]                         req0.&=(-129);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Primitives];
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = materialize[Primitives]
[info]                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:65:65: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       private val reqFields: Array[String] = Array("s", "l");
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, "l"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.ExtractFields];
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = materialize[ExtractFields]
[info]                                                                 ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 82 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 65 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce
[info] # Run progress: 0.00% complete, ETA 00:10:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 670414.690 ops/s
[info] # Warmup Iteration   2: 1124089.364 ops/s
[info] # Warmup Iteration   3: 1142292.061 ops/s
[info] # Warmup Iteration   4: 1131163.505 ops/s
[info] # Warmup Iteration   5: 1124096.527 ops/s
[info] Iteration   1: 1123552.437 ops/s
[info]                  ·gc.alloc.rate:                   1816.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2833.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1126066.612 ops/s
[info]                  ·gc.alloc.rate:                   1820.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2363.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 1114799.180 ops/s
[info]                  ·gc.alloc.rate:                   1802.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2393.951 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 1120610.837 ops/s
[info]                  ·gc.alloc.rate:                   1812.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2862.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1127344.157 ops/s
[info]                  ·gc.alloc.rate:                   1822.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2371.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce":
[info]   1122474.645 ±(99.9%) 19268.861 ops/s [Average]
[info]   (min, avg, max) = (1114799.180, 1122474.645, 1127344.157), stdev = 5004.062
[info]   CI (99.9%): [1103205.783, 1141743.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1815.053 ±(99.9%) 31.252 MB/sec [Average]
[info]   (min, avg, max) = (1802.594, 1815.053, 1822.896), stdev = 8.116
[info]   CI (99.9%): [1783.801, 1846.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2544.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2544.000, 2544.000, 2544.000), stdev = 0.001
[info]   CI (99.9%): [2544.000, 2544.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1829.933 ±(99.9%) 707.355 MB/sec [Average]
[info]   (min, avg, max) = (1691.989, 1829.933, 2038.822), stdev = 183.698
[info]   CI (99.9%): [1122.578, 2537.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2564.965 ±(99.9%) 995.691 B/op [Average]
[info]   (min, avg, max) = (2363.899, 2564.965, 2862.439), stdev = 258.578
[info]   CI (99.9%): [1569.274, 3560.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.064 ±(99.9%) 0.094 B/op [Average]
[info]   (min, avg, max) = (0.029, 0.064, 0.088), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.time":
[info]   68.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.600, 16.000), stdev = 2.510
[info]   CI (99.9%): [68.000, 68.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson
[info] # Run progress: 1.64% complete, ETA 00:16:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1222384.673 ops/s
[info] # Warmup Iteration   2: 1901644.715 ops/s
[info] # Warmup Iteration   3: 1969169.150 ops/s
[info] # Warmup Iteration   4: 1953271.834 ops/s
[info] # Warmup Iteration   5: 1957596.485 ops/s
[info] Iteration   1: 1918389.759 ops/s
[info]                  ·gc.alloc.rate:                   1346.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1089.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1919401.263 ops/s
[info]                  ·gc.alloc.rate:                   1346.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1096.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1950272.914 ops/s
[info]                  ·gc.alloc.rate:                   1368.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1084.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1934221.616 ops/s
[info]                  ·gc.alloc.rate:                   1357.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1097.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 1960559.927 ops/s
[info]                  ·gc.alloc.rate:                   1375.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1086.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson":
[info]   1936569.096 ±(99.9%) 71886.688 ops/s [Average]
[info]   (min, avg, max) = (1918389.759, 1936569.096, 1960559.927), stdev = 18668.744
[info]   CI (99.9%): [1864682.408, 2008455.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1358.957 ±(99.9%) 50.450 MB/sec [Average]
[info]   (min, avg, max) = (1346.196, 1358.957, 1375.797), stdev = 13.102
[info]   CI (99.9%): [1308.506, 1409.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1342.609 ±(99.9%) 37.640 MB/sec [Average]
[info]   (min, avg, max) = (1328.851, 1342.609, 1353.429), stdev = 9.775
[info]   CI (99.9%): [1304.969, 1380.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1090.749 ±(99.9%) 22.162 B/op [Average]
[info]   (min, avg, max) = (1084.561, 1090.749, 1097.333), stdev = 5.755
[info]   CI (99.9%): [1068.587, 1112.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.046 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.034, 0.051), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 14.000), stdev = 4.506
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 3.28% complete, ETA 00:15:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6090842.190 ops/s
[info] # Warmup Iteration   2: 6099529.651 ops/s
[info] # Warmup Iteration   3: 6266417.701 ops/s
[info] # Warmup Iteration   4: 6278304.209 ops/s
[info] # Warmup Iteration   5: 6280567.826 ops/s
[info] Iteration   1: 6199326.916 ops/s
[info]                  ·gc.alloc.rate:                   788.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     249.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 6214627.498 ops/s
[info]                  ·gc.alloc.rate:                   790.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 6184771.515 ops/s
[info]                  ·gc.alloc.rate:                   786.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 6182616.223 ops/s
[info]                  ·gc.alloc.rate:                   785.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     253.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 6256546.047 ops/s
[info]                  ·gc.alloc.rate:                   795.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter":
[info]   6207577.640 ±(99.9%) 116460.043 ops/s [Average]
[info]   (min, avg, max) = (6182616.223, 6207577.640, 6256546.047), stdev = 30244.303
[info]   CI (99.9%): [6091117.597, 6324037.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   789.147 ±(99.9%) 14.777 MB/sec [Average]
[info]   (min, avg, max) = (785.985, 789.147, 795.351), stdev = 3.838
[info]   CI (99.9%): [774.370, 803.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.639 ±(99.9%) 692.212 MB/sec [Average]
[info]   (min, avg, max) = (657.788, 792.639, 995.644), stdev = 179.765
[info]   CI (99.9%): [100.427, 1484.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   200.976 ±(99.9%) 177.489 B/op [Average]
[info]   (min, avg, max) = (166.515, 200.976, 253.349), stdev = 46.093
[info]   CI (99.9%): [23.487, 378.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.013, 0.021), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 1.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay
[info] # Run progress: 4.92% complete, ETA 00:15:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 257158.044 ops/s
[info] # Warmup Iteration   2: 426172.512 ops/s
[info] # Warmup Iteration   3: 435444.348 ops/s
[info] # Warmup Iteration   4: 435398.613 ops/s
[info] # Warmup Iteration   5: 437252.417 ops/s
[info] Iteration   1: 437520.936 ops/s
[info]                  ·gc.alloc.rate:                   1156.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4744.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 439379.548 ops/s
[info]                  ·gc.alloc.rate:                   1161.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3563.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.298 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 421444.813 ops/s
[info]                  ·gc.alloc.rate:                   1114.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4982.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 435031.158 ops/s
[info]                  ·gc.alloc.rate:               1150.330 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3636.730 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 436330.072 ops/s
[info]                  ·gc.alloc.rate:                   1153.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3637.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay":
[info]   433941.305 ±(99.9%) 27596.288 ops/s [Average]
[info]   (min, avg, max) = (421444.813, 433941.305, 439379.548), stdev = 7166.668
[info]   CI (99.9%): [406345.017, 461537.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1147.406 ±(99.9%) 73.014 MB/sec [Average]
[info]   (min, avg, max) = (1114.341, 1147.406, 1161.807), stdev = 18.962
[info]   CI (99.9%): [1074.392, 1220.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.819 ±(99.9%) 683.650 MB/sec [Average]
[info]   (min, avg, max) = (995.273, 1132.819, 1334.785), stdev = 177.542
[info]   CI (99.9%): [449.169, 1816.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4113.229 ±(99.9%) 2660.965 B/op [Average]
[info]   (min, avg, max) = (3563.704, 4113.229, 4982.948), stdev = 691.044
[info]   CI (99.9%): [1452.263, 6774.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.166 ±(99.9%) 0.431 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.166, 0.298), stdev = 0.112
[info]   CI (99.9%): [≈ 0, 0.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.000, 13.000), stdev = 4.848
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce
[info] # Run progress: 6.56% complete, ETA 00:15:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 296999.391 ops/s
[info] # Warmup Iteration   2: 515073.195 ops/s
[info] # Warmup Iteration   3: 519959.071 ops/s
[info] # Warmup Iteration   4: 519699.584 ops/s
[info] # Warmup Iteration   5: 518288.536 ops/s
[info] Iteration   1: 515639.466 ops/s
[info]                  ·gc.alloc.rate:                   1680.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5130.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 511332.255 ops/s
[info]                  ·gc.alloc.rate:                   1666.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5197.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 514248.663 ops/s
[info]                  ·gc.alloc.rate:                   1676.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5182.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 517821.623 ops/s
[info]                  ·gc.alloc.rate:                   1687.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5154.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 514626.579 ops/s
[info]                  ·gc.alloc.rate:                   1677.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5195.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce":
[info]   514733.717 ±(99.9%) 9065.842 ops/s [Average]
[info]   (min, avg, max) = (511332.255, 514733.717, 517821.623), stdev = 2354.370
[info]   CI (99.9%): [505667.875, 523799.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   1677.762 ±(99.9%) 29.565 MB/sec [Average]
[info]   (min, avg, max) = (1666.684, 1677.762, 1687.845), stdev = 7.678
[info]   CI (99.9%): [1648.197, 1707.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5128.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5128.001, 5128.001, 5128.001), stdev = 0.001
[info]   CI (99.9%): [5128.001, 5128.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1692.198 ±(99.9%) 26.744 MB/sec [Average]
[info]   (min, avg, max) = (1681.677, 1692.198, 1699.334), stdev = 6.945
[info]   CI (99.9%): [1665.453, 1718.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5172.197 ±(99.9%) 110.287 B/op [Average]
[info]   (min, avg, max) = (5130.949, 5172.197, 5197.690), stdev = 28.641
[info]   CI (99.9%): [5061.909, 5282.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.166 ±(99.9%) 0.373 B/op [Average]
[info]   (min, avg, max) = (0.063, 0.166, 0.256), stdev = 0.097
[info]   CI (99.9%): [≈ 0, 0.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 11.000), stdev = 2.915
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson
[info] # Run progress: 8.20% complete, ETA 00:15:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 821833.951 ops/s
[info] # Warmup Iteration   2: 1278453.003 ops/s
[info] # Warmup Iteration   3: 1303603.511 ops/s
[info] # Warmup Iteration   4: 1290634.833 ops/s
[info] # Warmup Iteration   5: 1286108.236 ops/s
[info] Iteration   1: 1288383.044 ops/s
[info]                  ·gc.alloc.rate:               1172.707 MB/sec
[info]                  ·gc.alloc.rate.norm:          1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1212.926 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 1284663.793 ops/s
[info]                  ·gc.alloc.rate:                   1169.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1631.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1293034.539 ops/s
[info]                  ·gc.alloc.rate:                   1176.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1223.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1261004.959 ops/s
[info]                  ·gc.alloc.rate:                   1147.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1677.841 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1296679.157 ops/s
[info]                  ·gc.alloc.rate:                   1180.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1227.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson":
[info]   1284753.099 ±(99.9%) 54045.393 ops/s [Average]
[info]   (min, avg, max) = (1261004.959, 1284753.099, 1296679.157), stdev = 14035.417
[info]   CI (99.9%): [1230707.705, 1338798.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1169.383 ±(99.9%) 49.238 MB/sec [Average]
[info]   (min, avg, max) = (1147.745, 1169.383, 1180.245), stdev = 12.787
[info]   CI (99.9%): [1120.145, 1218.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1432.000, 1432.000, 1432.000), stdev = 0.001
[info]   CI (99.9%): [1432.000, 1432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1137.495 ±(99.9%) 707.144 MB/sec [Average]
[info]   (min, avg, max) = (993.301, 1137.495, 1344.786), stdev = 183.643
[info]   CI (99.9%): [430.351, 1844.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1394.636 ±(99.9%) 916.381 B/op [Average]
[info]   (min, avg, max) = (1212.926, 1394.636, 1677.841), stdev = 237.981
[info]   CI (99.9%): [478.255, 2311.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.051), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 11.000), stdev = 2.510
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter
[info] # Run progress: 9.84% complete, ETA 00:14:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2325207.862 ops/s
[info] # Warmup Iteration   2: 2552238.172 ops/s
[info] # Warmup Iteration   3: 2595799.661 ops/s
[info] # Warmup Iteration   4: 2585000.893 ops/s
[info] # Warmup Iteration   5: 2625403.237 ops/s
[info] Iteration   1: 2591863.670 ops/s
[info]                  ·gc.alloc.rate:                   1186.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     602.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2599484.757 ops/s
[info]                  ·gc.alloc.rate:                   1189.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     806.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2624412.694 ops/s
[info]                  ·gc.alloc.rate:                   1201.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     601.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 2644519.180 ops/s
[info]                  ·gc.alloc.rate:                   1210.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     799.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2640234.259 ops/s
[info]                  ·gc.alloc.rate:                   1208.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     803.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter":
[info]   2620102.912 ±(99.9%) 91174.976 ops/s [Average]
[info]   (min, avg, max) = (2591863.670, 2620102.912, 2644519.180), stdev = 23677.852
[info]   CI (99.9%): [2528927.936, 2711277.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1199.082 ±(99.9%) 41.625 MB/sec [Average]
[info]   (min, avg, max) = (1186.189, 1199.082, 1210.243), stdev = 10.810
[info]   CI (99.9%): [1157.457, 1240.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   720.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (720.000, 720.000, 720.000), stdev = 0.001
[info]   CI (99.9%): [720.000, 720.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1204.269 ±(99.9%) 724.007 MB/sec [Average]
[info]   (min, avg, max) = (993.295, 1204.269, 1348.811), stdev = 188.022
[info]   CI (99.9%): [480.262, 1928.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   722.760 ±(99.9%) 423.613 B/op [Average]
[info]   (min, avg, max) = (601.648, 722.760, 806.259), stdev = 110.011
[info]   CI (99.9%): [299.147, 1146.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.040, 0.050), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 11.000), stdev = 3.033
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay
[info] # Run progress: 11.48% complete, ETA 00:14:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 116936.820 ops/s
[info] # Warmup Iteration   2: 219708.544 ops/s
[info] # Warmup Iteration   3: 225856.883 ops/s
[info] # Warmup Iteration   4: 225423.172 ops/s
[info] # Warmup Iteration   5: 224336.253 ops/s
[info] Iteration   1: 222403.499 ops/s
[info]                  ·gc.alloc.rate:                   1362.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9381.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 223694.434 ops/s
[info]                  ·gc.alloc.rate:                   1370.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9387.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.439 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 223179.935 ops/s
[info]                  ·gc.alloc.rate:                   1367.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9456.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.587 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 224610.309 ops/s
[info]                  ·gc.alloc.rate:                   1376.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9438.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 223979.879 ops/s
[info]                  ·gc.alloc.rate:                   1372.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9487.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.439 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay":
[info]   223573.611 ±(99.9%) 3209.309 ops/s [Average]
[info]   (min, avg, max) = (222403.499, 223573.611, 224610.309), stdev = 833.447
[info]   CI (99.9%): [220364.302, 226782.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1369.905 ±(99.9%) 19.696 MB/sec [Average]
[info]   (min, avg, max) = (1362.726, 1369.905, 1376.252), stdev = 5.115
[info]   CI (99.9%): [1350.208, 1389.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9640.002, 9640.002, 9640.002), stdev = 0.001
[info]   CI (99.9%): [9640.002, 9640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1340.121 ±(99.9%) 38.140 MB/sec [Average]
[info]   (min, avg, max) = (1326.145, 1340.121, 1350.775), stdev = 9.905
[info]   CI (99.9%): [1301.981, 1378.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9430.350 ±(99.9%) 175.468 B/op [Average]
[info]   (min, avg, max) = (9381.227, 9430.350, 9487.999), stdev = 45.569
[info]   CI (99.9%): [9254.882, 9605.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.410 ±(99.9%) 0.473 B/op [Average]
[info]   (min, avg, max) = (0.292, 0.410, 0.587), stdev = 0.123
[info]   CI (99.9%): [≈ 0, 0.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 9.200, 14.000), stdev = 4.550
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson
[info] # Run progress: 13.11% complete, ETA 00:14:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1017007.031 ops/s
[info] # Warmup Iteration   2: 1601253.322 ops/s
[info] # Warmup Iteration   3: 1611799.536 ops/s
[info] # Warmup Iteration   4: 1586025.740 ops/s
[info] # Warmup Iteration   5: 1617931.853 ops/s
[info] Iteration   1: 1612899.863 ops/s
[info]                  ·gc.alloc.rate:                   1025.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1282.539 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1616270.416 ops/s
[info]                  ·gc.alloc.rate:                   1027.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     967.520 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1617912.209 ops/s
[info]                  ·gc.alloc.rate:                   1028.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     971.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1615268.774 ops/s
[info]                  ·gc.alloc.rate:                   1026.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     977.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1604447.173 ops/s
[info]                  ·gc.alloc.rate:                   1019.820 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     988.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson":
[info]   1613359.687 ±(99.9%) 20419.921 ops/s [Average]
[info]   (min, avg, max) = (1604447.173, 1613359.687, 1617912.209), stdev = 5302.989
[info]   CI (99.9%): [1592939.767, 1633779.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1025.503 ±(99.9%) 13.000 MB/sec [Average]
[info]   (min, avg, max) = (1019.820, 1025.503, 1028.401), stdev = 3.376
[info]   CI (99.9%): [1012.502, 1038.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1000.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1000.000, 1000.000, 1000.000), stdev = 0.001
[info]   CI (99.9%): [1000.000, 1000.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1063.884 ±(99.9%) 540.700 MB/sec [Average]
[info]   (min, avg, max) = (993.965, 1063.884, 1314.907), stdev = 140.418
[info]   CI (99.9%): [523.184, 1604.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1037.461 ±(99.9%) 528.381 B/op [Average]
[info]   (min, avg, max) = (967.520, 1037.461, 1282.539), stdev = 137.219
[info]   CI (99.9%): [509.080, 1565.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.041, 0.061), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 11.000), stdev = 3.578
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 14.75% complete, ETA 00:13:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5195117.562 ops/s
[info] # Warmup Iteration   2: 5666795.445 ops/s
[info] # Warmup Iteration   3: 5656613.371 ops/s
[info] # Warmup Iteration   4: 5629855.055 ops/s
[info] # Warmup Iteration   5: 5681922.299 ops/s
[info] Iteration   1: 5601675.760 ops/s
[info]                  ·gc.alloc.rate:                   598.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     183.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5670691.567 ops/s
[info]                  ·gc.alloc.rate:                   605.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     181.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 5724511.927 ops/s
[info]                  ·gc.alloc.rate:                   611.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 5670712.574 ops/s
[info]                  ·gc.alloc.rate:                   605.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     182.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 5655428.246 ops/s
[info]                  ·gc.alloc.rate:               603.897 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 91.861 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter":
[info]   5664604.015 ±(99.9%) 169028.474 ops/s [Average]
[info]   (min, avg, max) = (5601675.760, 5664604.015, 5724511.927), stdev = 43896.158
[info]   CI (99.9%): [5495575.540, 5833632.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   604.887 ±(99.9%) 18.033 MB/sec [Average]
[info]   (min, avg, max) = (598.171, 604.887, 611.272), stdev = 4.683
[info]   CI (99.9%): [586.855, 622.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   590.114 ±(99.9%) 559.533 MB/sec [Average]
[info]   (min, avg, max) = (330.204, 590.114, 657.753), stdev = 145.309
[info]   CI (99.9%): [30.581, 1149.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   163.873 ±(99.9%) 155.069 B/op [Average]
[info]   (min, avg, max) = (91.861, 163.873, 183.237), stdev = 40.271
[info]   CI (99.9%): [8.805, 318.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.027 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.017), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay
[info] # Run progress: 16.39% complete, ETA 00:13:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 125627.061 ops/s
[info] # Warmup Iteration   2: 264325.114 ops/s
[info] # Warmup Iteration   3: 270135.447 ops/s
[info] # Warmup Iteration   4: 271743.577 ops/s
[info] # Warmup Iteration   5: 268310.296 ops/s
[info] Iteration   1: 271187.516 ops/s
[info]                  ·gc.alloc.rate:                   1231.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5746.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 266409.456 ops/s
[info]                  ·gc.alloc.rate:                   1209.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7845.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.246 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 265572.159 ops/s
[info]                  ·gc.alloc.rate:                   1205.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7917.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.247 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   4: 269090.656 ops/s
[info]                  ·gc.alloc.rate:                   1221.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5885.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 270801.542 ops/s
[info]                  ·gc.alloc.rate:                   1229.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7828.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.242 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay":
[info]   268612.266 ±(99.9%) 9769.623 ops/s [Average]
[info]   (min, avg, max) = (265572.159, 268612.266, 271187.516), stdev = 2537.140
[info]   CI (99.9%): [258842.643, 278381.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1219.739 ±(99.9%) 44.428 MB/sec [Average]
[info]   (min, avg, max) = (1205.896, 1219.739, 1231.423), stdev = 11.538
[info]   CI (99.9%): [1175.312, 1264.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7144.002, 7144.002, 7144.002), stdev = 0.001
[info]   CI (99.9%): [7144.002, 7144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1201.931 ±(99.9%) 715.525 MB/sec [Average]
[info]   (min, avg, max) = (990.605, 1201.931, 1347.519), stdev = 185.819
[info]   CI (99.9%): [486.407, 1917.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7044.613 ±(99.9%) 4324.663 B/op [Average]
[info]   (min, avg, max) = (5746.919, 7044.613, 7917.498), stdev = 1123.101
[info]   CI (99.9%): [2719.951, 11369.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.195 ±(99.9%) 0.261 B/op [Average]
[info]   (min, avg, max) = (0.121, 0.195, 0.247), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.400, 24.000), stdev = 8.792
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce
[info] # Run progress: 18.03% complete, ETA 00:13:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 361207.326 ops/s
[info] # Warmup Iteration   2: 556979.138 ops/s
[info] # Warmup Iteration   3: 559543.205 ops/s
[info] # Warmup Iteration   4: 562622.420 ops/s
[info] # Warmup Iteration   5: 558388.887 ops/s
[info] Iteration   1: 552913.205 ops/s
[info]                  ·gc.alloc.rate:                   1835.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4799.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 554308.180 ops/s
[info]                  ·gc.alloc.rate:                   1840.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5765.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 555214.673 ops/s
[info]                  ·gc.alloc.rate:                   1843.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4805.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 569306.156 ops/s
[info]                  ·gc.alloc.rate:               1890.433 MB/sec
[info]                  ·gc.alloc.rate.norm:          5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2039.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5635.357 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 571801.285 ops/s
[info]                  ·gc.alloc.rate:                   1898.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4676.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce":
[info]   560708.700 ±(99.9%) 34915.937 ops/s [Average]
[info]   (min, avg, max) = (552913.205, 560708.700, 571801.285), stdev = 9067.558
[info]   CI (99.9%): [525792.763, 595624.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1861.856 ±(99.9%) 116.002 MB/sec [Average]
[info]   (min, avg, max) = (1835.931, 1861.856, 1898.696), stdev = 30.125
[info]   CI (99.9%): [1745.854, 1977.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1830.595 ±(99.9%) 719.794 MB/sec [Average]
[info]   (min, avg, max) = (1686.643, 1830.595, 2039.292), stdev = 186.928
[info]   CI (99.9%): [1110.801, 2550.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5136.425 ±(99.9%) 1999.450 B/op [Average]
[info]   (min, avg, max) = (4676.600, 5136.425, 5765.044), stdev = 519.251
[info]   CI (99.9%): [3136.975, 7135.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.117 ±(99.9%) 0.274 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.117, 0.177), stdev = 0.071
[info]   CI (99.9%): [≈ 0, 0.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.400, 18.000), stdev = 4.615
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson
[info] # Run progress: 19.67% complete, ETA 00:13:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 457390.059 ops/s
[info] # Warmup Iteration   2: 708352.788 ops/s
[info] # Warmup Iteration   3: 714623.444 ops/s
[info] # Warmup Iteration   4: 719577.216 ops/s
[info] # Warmup Iteration   5: 719538.511 ops/s
[info] Iteration   1: 723323.139 ops/s
[info]                  ·gc.alloc.rate:                   897.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1423.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 721182.133 ops/s
[info]                  ·gc.alloc.rate:                   894.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2153.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 706829.653 ops/s
[info]                  ·gc.alloc.rate:                   876.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2212.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 710110.767 ops/s
[info]                  ·gc.alloc.rate:               881.046 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1474.932 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 723043.079 ops/s
[info]                  ·gc.alloc.rate:                   897.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2180.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson":
[info]   716897.754 ±(99.9%) 30125.989 ops/s [Average]
[info]   (min, avg, max) = (706829.653, 716897.754, 723323.139), stdev = 7823.624
[info]   CI (99.9%): [686771.765, 747023.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   889.491 ±(99.9%) 37.488 MB/sec [Average]
[info]   (min, avg, max) = (876.960, 889.491, 897.486), stdev = 9.736
[info]   CI (99.9%): [852.003, 926.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   860.686 ±(99.9%) 705.593 MB/sec [Average]
[info]   (min, avg, max) = (654.451, 860.686, 1001.979), stdev = 183.240
[info]   CI (99.9%): [155.094, 1566.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1888.932 ±(99.9%) 1549.478 B/op [Average]
[info]   (min, avg, max) = (1423.408, 1888.932, 2212.373), stdev = 402.394
[info]   CI (99.9%): [339.454, 3438.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.123 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.091), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 7.000), stdev = 1.817
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 21.31% complete, ETA 00:12:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4140107.955 ops/s
[info] # Warmup Iteration   2: 4272557.064 ops/s
[info] # Warmup Iteration   3: 4339269.421 ops/s
[info] # Warmup Iteration   4: 4336134.269 ops/s
[info] # Warmup Iteration   5: 4336574.260 ops/s
[info] Iteration   1: 4365224.742 ops/s
[info]                  ·gc.alloc.rate:      199.769 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 4338896.242 ops/s
[info]                  ·gc.alloc.rate:               198.566 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 92.789 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 4323558.260 ops/s
[info]                  ·gc.alloc.rate:                   197.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4361861.249 ops/s
[info]                  ·gc.alloc.rate:      199.617 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4344959.725 ops/s
[info]                  ·gc.alloc.rate:                   198.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.773 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter":
[info]   4346900.044 ±(99.9%) 65920.751 ops/s [Average]
[info]   (min, avg, max) = (4323558.260, 4346900.044, 4365224.742), stdev = 17119.410
[info]   CI (99.9%): [4280979.293, 4412820.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   198.932 ±(99.9%) 3.011 MB/sec [Average]
[info]   (min, avg, max) = (197.867, 198.932, 199.769), stdev = 0.782
[info]   CI (99.9%): [195.921, 201.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   167.467 ±(99.9%) 598.763 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 167.467, 325.538), stdev = 155.497
[info]   CI (99.9%): [≈ 0, 766.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   60.757 ±(99.9%) 217.133 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 60.757, 117.877), stdev = 56.389
[info]   CI (99.9%): [≈ 0, 277.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.435 ±(99.9%) 3.659 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.435, 2.135), stdev = 0.950
[info]   CI (99.9%): [≈ 0, 4.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.158 ±(99.9%) 1.325 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.158, 0.773), stdev = 0.344
[info]   CI (99.9%): [≈ 0, 1.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay
[info] # Run progress: 22.95% complete, ETA 00:12:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68955.053 ops/s
[info] # Warmup Iteration   2: 189260.575 ops/s
[info] # Warmup Iteration   3: 190370.842 ops/s
[info] # Warmup Iteration   4: 192056.508 ops/s
[info] # Warmup Iteration   5: 189023.958 ops/s
[info] Iteration   1: 191649.247 ops/s
[info]                  ·gc.alloc.rate:               992.112 MB/sec
[info]                  ·gc.alloc.rate.norm:          8144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8076.151 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 189881.223 ops/s
[info]                  ·gc.alloc.rate:                   982.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              8144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8196.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.690 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 193159.194 ops/s
[info]                  ·gc.alloc.rate:                   999.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              8144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8095.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.339 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 189913.579 ops/s
[info]                  ·gc.alloc.rate:                   983.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              8144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8272.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.345 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 192676.829 ops/s
[info]                  ·gc.alloc.rate:                   997.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              8144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8192.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.170 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay":
[info]   191456.014 ±(99.9%) 5867.535 ops/s [Average]
[info]   (min, avg, max) = (189881.223, 191456.014, 193159.194), stdev = 1523.780
[info]   CI (99.9%): [185588.479, 197323.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   991.105 ±(99.9%) 30.383 MB/sec [Average]
[info]   (min, avg, max) = (982.931, 991.105, 999.907), stdev = 7.890
[info]   CI (99.9%): [960.722, 1021.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8144.002, 8144.002, 8144.002), stdev = 0.001
[info]   CI (99.9%): [8144.002, 8144.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   993.819 ±(99.9%) 29.442 MB/sec [Average]
[info]   (min, avg, max) = (983.846, 993.819, 1003.321), stdev = 7.646
[info]   CI (99.9%): [964.377, 1023.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8166.632 ±(99.9%) 310.422 B/op [Average]
[info]   (min, avg, max) = (8076.151, 8166.632, 8272.653), stdev = 80.616
[info]   CI (99.9%): [7856.210, 8477.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.309 ±(99.9%) 0.986 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.309, 0.690), stdev = 0.256
[info]   CI (99.9%): [≈ 0, 1.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 8.000), stdev = 1.483
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 24.59% complete, ETA 00:12:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2939461.054 ops/s
[info] # Warmup Iteration   2: 3072195.433 ops/s
[info] # Warmup Iteration   3: 3039882.299 ops/s
[info] # Warmup Iteration   4: 3072361.542 ops/s
[info] # Warmup Iteration   5: 3086578.196 ops/s
[info] Iteration   1: 3063455.357 ops/s
[info]                  ·gc.alloc.rate:                   1448.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     685.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3081227.583 ops/s
[info]                  ·gc.alloc.rate:                   1457.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1677.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     856.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 3127343.546 ops/s
[info]                  ·gc.alloc.rate:                   1478.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     677.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3121544.512 ops/s
[info]                  ·gc.alloc.rate:                   1476.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     681.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3096943.225 ops/s
[info]                  ·gc.alloc.rate:                   1464.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     860.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter":
[info]   3098102.844 ±(99.9%) 103522.505 ops/s [Average]
[info]   (min, avg, max) = (3063455.357, 3098102.844, 3127343.546), stdev = 26884.466
[info]   CI (99.9%): [2994580.339, 3201625.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1465.104 ±(99.9%) 48.880 MB/sec [Average]
[info]   (min, avg, max) = (1448.735, 1465.104, 1478.896), stdev = 12.694
[info]   CI (99.9%): [1416.224, 1513.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1481.041 ±(99.9%) 720.267 MB/sec [Average]
[info]   (min, avg, max) = (1334.162, 1481.041, 1694.031), stdev = 187.051
[info]   CI (99.9%): [760.774, 2201.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   752.311 ±(99.9%) 373.490 B/op [Average]
[info]   (min, avg, max) = (677.883, 752.311, 860.562), stdev = 96.994
[info]   CI (99.9%): [378.821, 1125.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.073 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.034, 0.053), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 12.000), stdev = 3.033
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 26.23% complete, ETA 00:12:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 143097.159 ops/s
[info] # Warmup Iteration   2: 236202.424 ops/s
[info] # Warmup Iteration   3: 243624.678 ops/s
[info] # Warmup Iteration   4: 245520.001 ops/s
[info] # Warmup Iteration   5: 243740.001 ops/s
[info] Iteration   1: 243956.085 ops/s
[info]                  ·gc.alloc.rate:                   1316.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8535.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 242610.556 ops/s
[info]                  ·gc.alloc.rate:                   1308.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8642.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.405 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 242240.960 ops/s
[info]                  ·gc.alloc.rate:                   1306.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8701.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.676 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 242880.626 ops/s
[info]                  ·gc.alloc.rate:                   1310.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8719.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 243528.666 ops/s
[info]                  ·gc.alloc.rate:                   1313.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8722.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay":
[info]   243043.379 ±(99.9%) 2672.134 ops/s [Average]
[info]   (min, avg, max) = (242240.960, 243043.379, 243956.085), stdev = 693.945
[info]   CI (99.9%): [240371.245, 245715.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1311.235 ±(99.9%) 14.360 MB/sec [Average]
[info]   (min, avg, max) = (1306.926, 1311.235, 1316.183), stdev = 3.729
[info]   CI (99.9%): [1296.876, 1325.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8488.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8488.002, 8488.002, 8488.002), stdev = 0.001
[info]   CI (99.9%): [8488.002, 8488.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1338.444 ±(99.9%) 40.891 MB/sec [Average]
[info]   (min, avg, max) = (1323.471, 1338.444, 1350.033), stdev = 10.619
[info]   CI (99.9%): [1297.553, 1379.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8664.230 ±(99.9%) 304.234 B/op [Average]
[info]   (min, avg, max) = (8535.001, 8664.230, 8722.240), stdev = 79.009
[info]   CI (99.9%): [8359.996, 8968.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.324 ±(99.9%) 0.873 B/op [Average]
[info]   (min, avg, max) = (0.135, 0.324, 0.676), stdev = 0.227
[info]   CI (99.9%): [≈ 0, 1.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 11.000), stdev = 1.924
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce
[info] # Run progress: 27.87% complete, ETA 00:11:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 351409.609 ops/s
[info] # Warmup Iteration   2: 522125.497 ops/s
[info] # Warmup Iteration   3: 516978.638 ops/s
[info] # Warmup Iteration   4: 516608.807 ops/s
[info] # Warmup Iteration   5: 535209.940 ops/s
[info] Iteration   1: 537455.969 ops/s
[info]                  ·gc.alloc.rate:                   1883.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4937.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 529191.495 ops/s
[info]                  ·gc.alloc.rate:                   1854.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6038.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 530257.021 ops/s
[info]                  ·gc.alloc.rate:                   1857.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5031.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 535418.282 ops/s
[info]                  ·gc.alloc.rate:                   1875.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5992.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.245 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 510854.570 ops/s
[info]                  ·gc.alloc.rate:                   1789.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5235.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce":
[info]   528635.467 ±(99.9%) 40519.074 ops/s [Average]
[info]   (min, avg, max) = (510854.570, 528635.467, 537455.969), stdev = 10522.675
[info]   CI (99.9%): [488116.393, 569154.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1852.136 ±(99.9%) 142.081 MB/sec [Average]
[info]   (min, avg, max) = (1789.796, 1852.136, 1883.135), stdev = 36.898
[info]   CI (99.9%): [1710.054, 1994.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5512.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5512.001, 5512.001, 5512.001), stdev = 0.001
[info]   CI (99.9%): [5512.001, 5512.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1830.639 ±(99.9%) 719.494 MB/sec [Average]
[info]   (min, avg, max) = (1686.760, 1830.639, 2039.250), stdev = 186.850
[info]   CI (99.9%): [1111.145, 2550.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5447.039 ±(99.9%) 2041.165 B/op [Average]
[info]   (min, avg, max) = (4937.206, 5447.039, 6038.527), stdev = 530.084
[info]   CI (99.9%): [3405.874, 7488.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.173 ±(99.9%) 0.254 B/op [Average]
[info]   (min, avg, max) = (0.064, 0.173, 0.245), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 13.000, 24.000), stdev = 7.348
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson
[info] # Run progress: 29.51% complete, ETA 00:11:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 305377.394 ops/s
[info] # Warmup Iteration   2: 561242.410 ops/s
[info] # Warmup Iteration   3: 561364.621 ops/s
[info] # Warmup Iteration   4: 560728.746 ops/s
[info] # Warmup Iteration   5: 562397.821 ops/s
[info] Iteration   1: 560098.441 ops/s
[info]                  ·gc.alloc.rate:               569.618 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 920.048 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 561162.573 ops/s
[info]                  ·gc.alloc.rate:                   570.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1840.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 559499.680 ops/s
[info]                  ·gc.alloc.rate:               569.024 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1853.300 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 568259.283 ops/s
[info]                  ·gc.alloc.rate:                   577.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1832.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.404 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 566868.392 ops/s
[info]                  ·gc.alloc.rate:               576.492 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 920.156 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson":
[info]   563177.674 ±(99.9%) 15702.188 ops/s [Average]
[info]   (min, avg, max) = (559499.680, 563177.674, 568259.283), stdev = 4077.808
[info]   CI (99.9%): [547475.485, 578879.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   572.751 ±(99.9%) 15.950 MB/sec [Average]
[info]   (min, avg, max) = (569.024, 572.751, 577.920), stdev = 4.142
[info]   CI (99.9%): [556.801, 588.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   527.276 ±(99.9%) 695.117 MB/sec [Average]
[info]   (min, avg, max) = (327.547, 527.276, 661.759), stdev = 180.520
[info]   CI (99.9%): [≈ 0, 1222.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1473.192 ±(99.9%) 1944.406 B/op [Average]
[info]   (min, avg, max) = (920.048, 1473.192, 1853.300), stdev = 504.956
[info]   CI (99.9%): [≈ 0, 3417.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.243 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.146), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.104 ±(99.9%) 0.674 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.104, 0.404), stdev = 0.175
[info]   CI (99.9%): [≈ 0, 0.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.600, 6.000), stdev = 2.408
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter
[info] # Run progress: 31.15% complete, ETA 00:11:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2701846.641 ops/s
[info] # Warmup Iteration   2: 2953592.581 ops/s
[info] # Warmup Iteration   3: 2974307.563 ops/s
[info] # Warmup Iteration   4: 2966396.395 ops/s
[info] # Warmup Iteration   5: 2946864.725 ops/s
[info] Iteration   1: 2975677.317 ops/s
[info]                  ·gc.alloc.rate:                   741.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     345.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2894875.250 ops/s
[info]                  ·gc.alloc.rate:                   721.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     535.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2948591.810 ops/s
[info]                  ·gc.alloc.rate:                   734.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     351.840 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2942611.657 ops/s
[info]                  ·gc.alloc.rate:               733.210 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 353.797 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2972579.526 ops/s
[info]                  ·gc.alloc.rate:                   740.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     351.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter":
[info]   2946867.112 ±(99.9%) 125003.571 ops/s [Average]
[info]   (min, avg, max) = (2894875.250, 2946867.112, 2975677.317), stdev = 32463.030
[info]   CI (99.9%): [2821863.541, 3071870.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   734.258 ±(99.9%) 31.085 MB/sec [Average]
[info]   (min, avg, max) = (721.332, 734.258, 741.430), stdev = 8.073
[info]   CI (99.9%): [703.173, 765.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   724.928 ±(99.9%) 561.436 MB/sec [Average]
[info]   (min, avg, max) = (653.740, 724.928, 985.658), stdev = 145.803
[info]   CI (99.9%): [163.492, 1286.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   387.679 ±(99.9%) 318.724 B/op [Average]
[info]   (min, avg, max) = (345.638, 387.679, 535.645), stdev = 82.772
[info]   CI (99.9%): [68.955, 706.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.034), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.800, 8.000), stdev = 2.588
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay
[info] # Run progress: 32.79% complete, ETA 00:11:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 61116.212 ops/s
[info] # Warmup Iteration   2: 184606.648 ops/s
[info] # Warmup Iteration   3: 191103.245 ops/s
[info] # Warmup Iteration   4: 183689.352 ops/s
[info] # Warmup Iteration   5: 188785.048 ops/s
[info] Iteration   1: 190231.300 ops/s
[info]                  ·gc.alloc.rate:                   1341.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              11096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10947.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.344 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 189952.204 ops/s
[info]                  ·gc.alloc.rate:                   1339.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              11096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11038.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.690 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 191463.367 ops/s
[info]                  ·gc.alloc.rate:                   1350.377 MB/sec
[info]                  ·gc.alloc.rate.norm:              11096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11009.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.513 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 188799.427 ops/s
[info]                  ·gc.alloc.rate:                   1331.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              11096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11217.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.347 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 188997.473 ops/s
[info]                  ·gc.alloc.rate:                   1332.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              11096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11239.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.347 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay":
[info]   189888.754 ±(99.9%) 4121.171 ops/s [Average]
[info]   (min, avg, max) = (188799.427, 189888.754, 191463.367), stdev = 1070.255
[info]   CI (99.9%): [185767.583, 194009.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1339.258 ±(99.9%) 29.123 MB/sec [Average]
[info]   (min, avg, max) = (1331.587, 1339.258, 1350.377), stdev = 7.563
[info]   CI (99.9%): [1310.135, 1368.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   11096.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11096.002, 11096.002, 11096.002), stdev = 0.001
[info]   CI (99.9%): [11096.002, 11096.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1338.523 ±(99.9%) 40.570 MB/sec [Average]
[info]   (min, avg, max) = (1323.769, 1338.523, 1350.102), stdev = 10.536
[info]   CI (99.9%): [1297.953, 1379.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11090.390 ±(99.9%) 501.283 B/op [Average]
[info]   (min, avg, max) = (10947.754, 11090.390, 11239.042), stdev = 130.182
[info]   CI (99.9%): [10589.107, 11591.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.448 ±(99.9%) 0.590 B/op [Average]
[info]   (min, avg, max) = (0.344, 0.448, 0.690), stdev = 0.153
[info]   CI (99.9%): [≈ 0, 1.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 13.000), stdev = 3.362
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce
[info] # Run progress: 34.43% complete, ETA 00:10:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 235564.954 ops/s
[info] # Warmup Iteration   2: 446392.198 ops/s
[info] # Warmup Iteration   3: 464498.455 ops/s
[info] # Warmup Iteration   4: 466426.996 ops/s
[info] # Warmup Iteration   5: 463132.919 ops/s
[info] Iteration   1: 467320.499 ops/s
[info]                  ·gc.alloc.rate:                   1661.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5656.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 463371.111 ops/s
[info]                  ·gc.alloc.rate:                   1647.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5730.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 457438.986 ops/s
[info]                  ·gc.alloc.rate:                   1625.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5823.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 461467.304 ops/s
[info]                  ·gc.alloc.rate:                   1640.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5782.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.213 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 463802.380 ops/s
[info]                  ·gc.alloc.rate:                   1648.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1359.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4611.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce":
[info]   462680.056 ±(99.9%) 13911.761 ops/s [Average]
[info]   (min, avg, max) = (457438.986, 462680.056, 467320.499), stdev = 3612.840
[info]   CI (99.9%): [448768.295, 476591.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1644.564 ±(99.9%) 49.541 MB/sec [Average]
[info]   (min, avg, max) = (1625.901, 1644.564, 1661.097), stdev = 12.866
[info]   CI (99.9%): [1595.023, 1694.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1623.382 ±(99.9%) 568.542 MB/sec [Average]
[info]   (min, avg, max) = (1359.477, 1623.382, 1696.004), stdev = 147.649
[info]   CI (99.9%): [1054.840, 2191.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5520.905 ±(99.9%) 1972.306 B/op [Average]
[info]   (min, avg, max) = (4611.460, 5520.905, 5823.907), stdev = 512.202
[info]   CI (99.9%): [3548.599, 7493.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.142 ±(99.9%) 0.194 B/op [Average]
[info]   (min, avg, max) = (0.071, 0.142, 0.213), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 9.600, 13.000), stdev = 4.159
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson
[info] # Run progress: 36.07% complete, ETA 00:10:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 457926.198 ops/s
[info] # Warmup Iteration   2: 884822.501 ops/s
[info] # Warmup Iteration   3: 892803.018 ops/s
[info] # Warmup Iteration   4: 889964.653 ops/s
[info] # Warmup Iteration   5: 891270.856 ops/s
[info] Iteration   1: 893202.469 ops/s
[info]                  ·gc.alloc.rate:                   1053.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1755.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.220 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 888260.806 ops/s
[info]                  ·gc.alloc.rate:                   1048.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2360.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 892586.784 ops/s
[info]                  ·gc.alloc.rate:               1053.023 MB/sec
[info]                  ·gc.alloc.rate.norm:          1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1773.089 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 892599.835 ops/s
[info]                  ·gc.alloc.rate:                   1053.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1778.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 883853.701 ops/s
[info]                  ·gc.alloc.rate:                   1042.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1801.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson":
[info]   890100.719 ±(99.9%) 15457.526 ops/s [Average]
[info]   (min, avg, max) = (883853.701, 890100.719, 893202.469), stdev = 4014.270
[info]   CI (99.9%): [874643.193, 905558.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1050.222 ±(99.9%) 17.948 MB/sec [Average]
[info]   (min, avg, max) = (1042.735, 1050.222, 1053.721), stdev = 4.661
[info]   CI (99.9%): [1032.274, 1068.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.000, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1071.537 ±(99.9%) 564.904 MB/sec [Average]
[info]   (min, avg, max) = (996.610, 1071.537, 1333.762), stdev = 146.704
[info]   CI (99.9%): [506.633, 1636.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1893.901 ±(99.9%) 1006.994 B/op [Average]
[info]   (min, avg, max) = (1755.407, 1893.901, 2360.790), stdev = 261.513
[info]   CI (99.9%): [886.908, 2900.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.088 ±(99.9%) 0.325 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.088, 0.220), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 2.280
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter
[info] # Run progress: 37.70% complete, ETA 00:10:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2983764.507 ops/s
[info] # Warmup Iteration   2: 3278247.759 ops/s
[info] # Warmup Iteration   3: 3353510.583 ops/s
[info] # Warmup Iteration   4: 3305755.126 ops/s
[info] # Warmup Iteration   5: 3349124.547 ops/s
[info] Iteration   1: 3353501.325 ops/s
[info]                  ·gc.alloc.rate:                   835.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.349 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     461.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3336513.238 ops/s
[info]                  ·gc.alloc.rate:                   831.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     465.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3278209.118 ops/s
[info]                  ·gc.alloc.rate:                   816.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     317.589 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 3304395.412 ops/s
[info]                  ·gc.alloc.rate:                   823.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     316.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 3294212.032 ops/s
[info]                  ·gc.alloc.rate:                   820.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     477.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter":
[info]   3313366.225 ±(99.9%) 119152.251 ops/s [Average]
[info]   (min, avg, max) = (3278209.118, 3313366.225, 3353501.325), stdev = 30943.461
[info]   CI (99.9%): [3194213.974, 3432518.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   825.588 ±(99.9%) 29.745 MB/sec [Average]
[info]   (min, avg, max) = (816.831, 825.588, 835.605), stdev = 7.725
[info]   CI (99.9%): [795.843, 855.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   859.237 ±(99.9%) 690.955 MB/sec [Average]
[info]   (min, avg, max) = (661.776, 859.237, 999.263), stdev = 179.439
[info]   CI (99.9%): [168.282, 1550.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   407.606 ±(99.9%) 319.966 B/op [Average]
[info]   (min, avg, max) = (316.023, 407.606, 477.249), stdev = 83.094
[info]   CI (99.9%): [87.640, 727.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.062 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.028, 0.049), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.000, 8.000), stdev = 2.550
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay
[info] # Run progress: 39.34% complete, ETA 00:09:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 138481.279 ops/s
[info] # Warmup Iteration   2: 251074.802 ops/s
[info] # Warmup Iteration   3: 255721.940 ops/s
[info] # Warmup Iteration   4: 256050.792 ops/s
[info] # Warmup Iteration   5: 254627.740 ops/s
[info] Iteration   1: 254664.798 ops/s
[info]                  ·gc.alloc.rate:               1320.864 MB/sec
[info]                  ·gc.alloc.rate.norm:          8160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1323.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8178.106 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 254404.140 ops/s
[info]                  ·gc.alloc.rate:                   1319.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              8160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8242.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.515 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 251691.922 ops/s
[info]                  ·gc.alloc.rate:                   1305.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              8160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8374.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.651 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 253988.914 ops/s
[info]                  ·gc.alloc.rate:               1317.374 MB/sec
[info]                  ·gc.alloc.rate.norm:          8160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8338.150 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   5: 254848.183 ops/s
[info]                  ·gc.alloc.rate:                   1321.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              8160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8334.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay":
[info]   253919.592 ±(99.9%) 4953.625 ops/s [Average]
[info]   (min, avg, max) = (251691.922, 253919.592, 254848.183), stdev = 1286.441
[info]   CI (99.9%): [248965.967, 258873.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1316.985 ±(99.9%) 25.608 MB/sec [Average]
[info]   (min, avg, max) = (1305.455, 1316.985, 1321.718), stdev = 6.650
[info]   CI (99.9%): [1291.376, 1342.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8160.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8160.002, 8160.002, 8160.002), stdev = 0.001
[info]   CI (99.9%): [8160.002, 8160.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1338.523 ±(99.9%) 40.473 MB/sec [Average]
[info]   (min, avg, max) = (1323.794, 1338.523, 1350.036), stdev = 10.511
[info]   CI (99.9%): [1298.049, 1378.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8293.648 ±(99.9%) 312.151 B/op [Average]
[info]   (min, avg, max) = (8178.106, 8293.648, 8374.961), stdev = 81.065
[info]   CI (99.9%): [7981.497, 8605.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.285 ±(99.9%) 1.139 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.285, 0.651), stdev = 0.296
[info]   CI (99.9%): [≈ 0, 1.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.400, 16.000), stdev = 4.336
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson
[info] # Run progress: 40.98% complete, ETA 00:09:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 124992.829 ops/s
[info] # Warmup Iteration   2: 604863.943 ops/s
[info] # Warmup Iteration   3: 695640.047 ops/s
[info] # Warmup Iteration   4: 693287.957 ops/s
[info] # Warmup Iteration   5: 694041.944 ops/s
[info] Iteration   1: 697213.654 ops/s
[info]                  ·gc.alloc.rate:               904.067 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1484.236 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 685991.484 ops/s
[info]                  ·gc.alloc.rate:                   889.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2274.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 688331.256 ops/s
[info]                  ·gc.alloc.rate:                   892.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2279.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 690057.930 ops/s
[info]                  ·gc.alloc.rate:                   894.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2284.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 692613.840 ops/s
[info]                  ·gc.alloc.rate:               898.065 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1522.848 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson":
[info]   690841.633 ±(99.9%) 16582.768 ops/s [Average]
[info]   (min, avg, max) = (685991.484, 690841.633, 697213.654), stdev = 4306.492
[info]   CI (99.9%): [674258.865, 707424.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   895.683 ±(99.9%) 21.821 MB/sec [Average]
[info]   (min, avg, max) = (889.507, 895.683, 904.067), stdev = 5.667
[info]   CI (99.9%): [873.863, 917.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   863.756 ±(99.9%) 702.216 MB/sec [Average]
[info]   (min, avg, max) = (657.769, 863.756, 1001.954), stdev = 182.363
[info]   CI (99.9%): [161.540, 1565.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1969.169 ±(99.9%) 1637.638 B/op [Average]
[info]   (min, avg, max) = (1484.236, 1969.169, 2284.375), stdev = 425.289
[info]   CI (99.9%): [331.531, 3606.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.154 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.096), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 5.000), stdev = 1.673
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 42.62% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2105129.637 ops/s
[info] # Warmup Iteration   2: 2449440.214 ops/s
[info] # Warmup Iteration   3: 2441928.763 ops/s
[info] # Warmup Iteration   4: 2426646.405 ops/s
[info] # Warmup Iteration   5: 2409164.283 ops/s
[info] Iteration   1: 2457911.397 ops/s
[info]                  ·gc.alloc.rate:                   1674.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1071.937 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2455221.323 ops/s
[info]                  ·gc.alloc.rate:                   1673.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1078.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2452877.208 ops/s
[info]                  ·gc.alloc.rate:                   1671.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     867.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2473735.949 ops/s
[info]                  ·gc.alloc.rate:                   1685.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1077.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2452744.305 ops/s
[info]                  ·gc.alloc.rate:                   1671.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1088.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter":
[info]   2458498.036 ±(99.9%) 33787.843 ops/s [Average]
[info]   (min, avg, max) = (2452744.305, 2458498.036, 2473735.949), stdev = 8774.595
[info]   CI (99.9%): [2424710.194, 2492285.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1675.199 ±(99.9%) 22.988 MB/sec [Average]
[info]   (min, avg, max) = (1671.286, 1675.199, 1685.560), stdev = 5.970
[info]   CI (99.9%): [1652.211, 1698.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   1072.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1072.000, 1072.000, 1072.000), stdev = 0.001
[info]   CI (99.9%): [1072.000, 1072.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1620.315 ±(99.9%) 578.290 MB/sec [Average]
[info]   (min, avg, max) = (1352.140, 1620.315, 1697.309), stdev = 150.180
[info]   CI (99.9%): [1042.025, 2198.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1036.787 ±(99.9%) 365.638 B/op [Average]
[info]   (min, avg, max) = (867.271, 1036.787, 1088.692), stdev = 94.955
[info]   CI (99.9%): [671.149, 1402.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.059 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.035, 0.053), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 1.924
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay
[info] # Run progress: 44.26% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 118707.200 ops/s
[info] # Warmup Iteration   2: 209069.257 ops/s
[info] # Warmup Iteration   3: 213999.295 ops/s
[info] # Warmup Iteration   4: 214569.199 ops/s
[info] # Warmup Iteration   5: 212168.579 ops/s
[info] Iteration   1: 213763.833 ops/s
[info]                  ·gc.alloc.rate:                   1126.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7271.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 214826.045 ops/s
[info]                  ·gc.alloc.rate:                   1131.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9711.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.915 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 213495.504 ops/s
[info]                  ·gc.alloc.rate:                   1124.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7373.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.307 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 212264.477 ops/s
[info]                  ·gc.alloc.rate:                   1118.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7440.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.309 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 215348.913 ops/s
[info]                  ·gc.alloc.rate:                   1134.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9824.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay":
[info]   213939.755 ±(99.9%) 4639.227 ops/s [Average]
[info]   (min, avg, max) = (212264.477, 213939.755, 215348.913), stdev = 1204.792
[info]   CI (99.9%): [209300.528, 218578.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1127.006 ±(99.9%) 24.337 MB/sec [Average]
[info]   (min, avg, max) = (1118.221, 1127.006, 1134.368), stdev = 6.320
[info]   CI (99.9%): [1102.669, 1151.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8288.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8288.002, 8288.002, 8288.002), stdev = 0.001
[info]   CI (99.9%): [8288.002, 8288.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.650 ±(99.9%) 713.548 MB/sec [Average]
[info]   (min, avg, max) = (987.914, 1132.650, 1344.683), stdev = 185.306
[info]   CI (99.9%): [419.102, 1846.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8324.445 ±(99.9%) 5082.999 B/op [Average]
[info]   (min, avg, max) = (7271.015, 8324.445, 9824.619), stdev = 1320.039
[info]   CI (99.9%): [3241.445, 13407.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.125), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.367 ±(99.9%) 1.217 B/op [Average]
[info]   (min, avg, max) = (0.152, 0.367, 0.915), stdev = 0.316
[info]   CI (99.9%): [≈ 0, 1.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 6.000), stdev = 1.517
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson
[info] # Run progress: 45.90% complete, ETA 00:08:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 631663.147 ops/s
[info] # Warmup Iteration   2: 958931.383 ops/s
[info] # Warmup Iteration   3: 967250.792 ops/s
[info] # Warmup Iteration   4: 984770.490 ops/s
[info] # Warmup Iteration   5: 978042.009 ops/s
[info] Iteration   1: 981052.294 ops/s
[info]                  ·gc.alloc.rate:                   713.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1038.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 972301.316 ops/s
[info]                  ·gc.alloc.rate:                   707.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1053.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 976854.493 ops/s
[info]                  ·gc.alloc.rate:               710.317 MB/sec
[info]                  ·gc.alloc.rate.norm:          1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1584.728 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 978511.448 ops/s
[info]                  ·gc.alloc.rate:               711.534 MB/sec
[info]                  ·gc.alloc.rate.norm:          1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1059.654 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 980155.481 ops/s
[info]                  ·gc.alloc.rate:                   712.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1062.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson":
[info]   977775.006 ±(99.9%) 13305.390 ops/s [Average]
[info]   (min, avg, max) = (972301.316, 977775.006, 981052.294), stdev = 3455.367
[info]   CI (99.9%): [964469.617, 991080.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   710.989 ±(99.9%) 9.641 MB/sec [Average]
[info]   (min, avg, max) = (707.024, 710.989, 713.369), stdev = 2.504
[info]   CI (99.9%): [701.349, 720.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1144.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1144.000, 1144.000, 1144.000), stdev = 0.001
[info]   CI (99.9%): [1144.000, 1144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   720.720 ±(99.9%) 567.083 MB/sec [Average]
[info]   (min, avg, max) = (647.750, 720.720, 983.967), stdev = 147.270
[info]   CI (99.9%): [153.637, 1287.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1159.762 ±(99.9%) 915.439 B/op [Average]
[info]   (min, avg, max) = (1038.770, 1159.762, 1584.728), stdev = 237.737
[info]   CI (99.9%): [244.323, 2075.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.108 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.067), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 6.000), stdev = 1.789
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 47.54% complete, ETA 00:08:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2861778.287 ops/s
[info] # Warmup Iteration   2: 3032998.746 ops/s
[info] # Warmup Iteration   3: 2995851.712 ops/s
[info] # Warmup Iteration   4: 3039667.245 ops/s
[info] # Warmup Iteration   5: 3038358.139 ops/s
[info] Iteration   1: 3031376.248 ops/s
[info]                  ·gc.alloc.rate:                   92.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     132.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.693 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.954 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3035880.768 ops/s
[info]                  ·gc.alloc.rate:      92.625 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3026348.093 ops/s
[info]                  ·gc.alloc.rate:               92.332 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 133.034 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 3042031.289 ops/s
[info]                  ·gc.alloc.rate:      92.811 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3042524.880 ops/s
[info]                  ·gc.alloc.rate:      92.826 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter":
[info]   3035632.256 ±(99.9%) 26735.432 ops/s [Average]
[info]   (min, avg, max) = (3026348.093, 3035632.256, 3042524.880), stdev = 6943.107
[info]   CI (99.9%): [3008896.823, 3062367.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   92.617 ±(99.9%) 0.814 MB/sec [Average]
[info]   (min, avg, max) = (92.332, 92.617, 92.826), stdev = 0.211
[info]   CI (99.9%): [91.803, 93.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   102.362 ±(99.9%) 539.724 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.362, 255.906), stdev = 140.165
[info]   CI (99.9%): [≈ 0, 642.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   53.169 ±(99.9%) 280.344 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 53.169, 133.034), stdev = 72.805
[info]   CI (99.9%): [≈ 0, 333.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1.139 ±(99.9%) 9.803 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.139, 5.693), stdev = 2.546
[info]   CI (99.9%): [≈ 0, 10.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.591 ±(99.9%) 5.088 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.591, 2.954), stdev = 1.321
[info]   CI (99.9%): [≈ 0, 5.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay
[info] # Run progress: 49.18% complete, ETA 00:08:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 95766.565 ops/s
[info] # Warmup Iteration   2: 161177.705 ops/s
[info] # Warmup Iteration   3: 161875.925 ops/s
[info] # Warmup Iteration   4: 161097.551 ops/s
[info] # Warmup Iteration   5: 163817.424 ops/s
[info] Iteration   1: 162114.314 ops/s
[info]                  ·gc.alloc.rate:                   1103.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              10704.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9587.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.404 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 161985.050 ops/s
[info]                  ·gc.alloc.rate:                   1102.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              10704.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9653.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.607 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 162273.442 ops/s
[info]                  ·gc.alloc.rate:                   1104.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              10704.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12922.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.404 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 162918.620 ops/s
[info]                  ·gc.alloc.rate:                   1108.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              10704.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9701.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.402 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 163526.738 ops/s
[info]                  ·gc.alloc.rate:                   1112.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              10704.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9700.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.401 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay":
[info]   162563.633 ±(99.9%) 2491.372 ops/s [Average]
[info]   (min, avg, max) = (161985.050, 162563.633, 163526.738), stdev = 647.001
[info]   CI (99.9%): [160072.260, 165055.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1106.123 ±(99.9%) 16.653 MB/sec [Average]
[info]   (min, avg, max) = (1102.116, 1106.123, 1112.581), stdev = 4.325
[info]   CI (99.9%): [1089.471, 1122.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10704.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10704.003, 10704.003, 10704.003), stdev = 0.001
[info]   CI (99.9%): [10704.002, 10704.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1065.594 ±(99.9%) 575.941 MB/sec [Average]
[info]   (min, avg, max) = (988.377, 1065.594, 1332.771), stdev = 149.570
[info]   CI (99.9%): [489.653, 1641.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10312.947 ±(99.9%) 5619.042 B/op [Average]
[info]   (min, avg, max) = (9587.700, 10312.947, 12922.011), stdev = 1459.247
[info]   CI (99.9%): [4693.905, 15931.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.046, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.010, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.443 ±(99.9%) 0.352 B/op [Average]
[info]   (min, avg, max) = (0.401, 0.443, 0.607), stdev = 0.091
[info]   CI (99.9%): [0.092, 0.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 10.000), stdev = 2.168
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce
[info] # Run progress: 50.82% complete, ETA 00:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 898259.804 ops/s
[info] # Warmup Iteration   2: 1271591.735 ops/s
[info] # Warmup Iteration   3: 1295252.137 ops/s
[info] # Warmup Iteration   4: 1299296.514 ops/s
[info] # Warmup Iteration   5: 1284404.416 ops/s
[info] Iteration   1: 1286099.404 ops/s
[info]                  ·gc.alloc.rate:                   1438.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2048.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1289907.131 ops/s
[info]                  ·gc.alloc.rate:                   1443.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1641.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1294004.939 ops/s
[info]                  ·gc.alloc.rate:                   1447.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1642.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1276926.710 ops/s
[info]                  ·gc.alloc.rate:                   1428.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.037 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2085.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1281568.418 ops/s
[info]                  ·gc.alloc.rate:                   1433.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1665.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce":
[info]   1285701.320 ±(99.9%) 25893.402 ops/s [Average]
[info]   (min, avg, max) = (1276926.710, 1285701.320, 1294004.939), stdev = 6724.434
[info]   CI (99.9%): [1259807.918, 1311594.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1438.310 ±(99.9%) 28.974 MB/sec [Average]
[info]   (min, avg, max) = (1428.511, 1438.310, 1447.616), stdev = 7.525
[info]   CI (99.9%): [1409.336, 1467.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1760.000, 1760.000, 1760.000), stdev = 0.001
[info]   CI (99.9%): [1760.000, 1760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1484.351 ±(99.9%) 701.895 MB/sec [Average]
[info]   (min, avg, max) = (1346.130, 1484.351, 1693.037), stdev = 182.280
[info]   CI (99.9%): [782.455, 2186.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1816.932 ±(99.9%) 882.137 B/op [Average]
[info]   (min, avg, max) = (1641.848, 1816.932, 2085.910), stdev = 229.088
[info]   CI (99.9%): [934.795, 2699.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.088 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.041, 0.077), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 12.000), stdev = 3.647
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 52.46% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2535652.578 ops/s
[info] # Warmup Iteration   2: 3835131.678 ops/s
[info] # Warmup Iteration   3: 3859424.975 ops/s
[info] # Warmup Iteration   4: 3791807.557 ops/s
[info] # Warmup Iteration   5: 3834297.497 ops/s
[info] Iteration   1: 3822929.849 ops/s
[info]                  ·gc.alloc.rate:               1049.752 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 408.765 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 3790231.830 ops/s
[info]                  ·gc.alloc.rate:                   1040.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     414.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3813930.138 ops/s
[info]                  ·gc.alloc.rate:                   1047.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     414.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 3796870.982 ops/s
[info]                  ·gc.alloc.rate:                   1042.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     417.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3822000.129 ops/s
[info]                  ·gc.alloc.rate:                   1049.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     416.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson":
[info]   3809192.586 ±(99.9%) 57325.539 ops/s [Average]
[info]   (min, avg, max) = (3790231.830, 3809192.586, 3822929.849), stdev = 14887.261
[info]   CI (99.9%): [3751867.046, 3866518.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1045.961 ±(99.9%) 15.701 MB/sec [Average]
[info]   (min, avg, max) = (1040.773, 1045.961, 1049.752), stdev = 4.077
[info]   CI (99.9%): [1030.260, 1061.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1003.018 ±(99.9%) 26.551 MB/sec [Average]
[info]   (min, avg, max) = (993.291, 1003.018, 1010.925), stdev = 6.895
[info]   CI (99.9%): [976.467, 1029.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   414.269 ±(99.9%) 12.894 B/op [Average]
[info]   (min, avg, max) = (408.765, 414.269, 417.515), stdev = 3.349
[info]   CI (99.9%): [401.375, 427.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.038 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.026), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 9.000), stdev = 2.074
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 54.10% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13477695.036 ops/s
[info] # Warmup Iteration   2: 14073733.793 ops/s
[info] # Warmup Iteration   3: 14437791.576 ops/s
[info] # Warmup Iteration   4: 14425473.560 ops/s
[info] # Warmup Iteration   5: 14353825.393 ops/s
[info] Iteration   1: 14519986.782 ops/s
[info]                  ·gc.alloc.rate:               442.996 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35.310 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 14294673.173 ops/s
[info]                  ·gc.alloc.rate:               436.121 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35.866 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 14484440.411 ops/s
[info]                  ·gc.alloc.rate:                   441.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 13887950.325 ops/s
[info]                  ·gc.alloc.rate:               423.719 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37.028 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 14235968.999 ops/s
[info]                  ·gc.alloc.rate:               434.328 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36.123 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter":
[info]   14284603.938 ±(99.9%) 972507.807 ops/s [Average]
[info]   (min, avg, max) = (13887950.325, 14284603.938, 14519986.782), stdev = 252557.189
[info]   CI (99.9%): [13312096.131, 15257111.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   435.816 ±(99.9%) 29.666 MB/sec [Average]
[info]   (min, avg, max) = (423.719, 435.816, 442.996), stdev = 7.704
[info]   CI (99.9%): [406.150, 465.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   391.576 ±(99.9%) 561.454 MB/sec [Average]
[info]   (min, avg, max) = (325.874, 391.576, 652.404), stdev = 145.808
[info]   CI (99.9%): [≈ 0, 953.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   43.038 ±(99.9%) 59.942 B/op [Average]
[info]   (min, avg, max) = (35.310, 43.038, 70.863), stdev = 15.567
[info]   CI (99.9%): [≈ 0, 102.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.012 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.007), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 9.000), stdev = 3.493
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 55.74% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 713523.253 ops/s
[info] # Warmup Iteration   2: 1045919.992 ops/s
[info] # Warmup Iteration   3: 1052387.636 ops/s
[info] # Warmup Iteration   4: 1052098.954 ops/s
[info] # Warmup Iteration   5: 1046713.084 ops/s
[info] Iteration   1: 1043180.795 ops/s
[info]                  ·gc.alloc.rate:                   1543.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1667.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2515.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1039509.826 ops/s
[info]                  ·gc.alloc.rate:                   1538.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2031.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1061816.447 ops/s
[info]                  ·gc.alloc.rate:                   1571.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2497.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1042224.645 ops/s
[info]                  ·gc.alloc.rate:                   1542.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2553.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1042198.245 ops/s
[info]                  ·gc.alloc.rate:                   1542.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2047.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay":
[info]   1045785.992 ±(99.9%) 34906.672 ops/s [Average]
[info]   (min, avg, max) = (1039509.826, 1045785.992, 1061816.447), stdev = 9065.152
[info]   CI (99.9%): [1010879.320, 1080692.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1547.469 ±(99.9%) 51.532 MB/sec [Average]
[info]   (min, avg, max) = (1538.208, 1547.469, 1571.135), stdev = 13.383
[info]   CI (99.9%): [1495.937, 1599.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2328.000, 2328.000, 2328.000), stdev = 0.001
[info]   CI (99.9%): [2328.000, 2328.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1548.516 ±(99.9%) 701.845 MB/sec [Average]
[info]   (min, avg, max) = (1342.192, 1548.516, 1691.330), stdev = 182.267
[info]   CI (99.9%): [846.671, 2250.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2328.756 ±(99.9%) 1020.890 B/op [Average]
[info]   (min, avg, max) = (2031.340, 2328.756, 2553.103), stdev = 265.122
[info]   CI (99.9%): [1307.866, 3349.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.125), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.107 ±(99.9%) 0.220 B/op [Average]
[info]   (min, avg, max) = (0.031, 0.107, 0.189), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 12.000), stdev = 2.793
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce
[info] # Run progress: 57.38% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 427123.522 ops/s
[info] # Warmup Iteration   2: 697147.119 ops/s
[info] # Warmup Iteration   3: 699951.200 ops/s
[info] # Warmup Iteration   4: 704350.373 ops/s
[info] # Warmup Iteration   5: 710166.939 ops/s
[info] Iteration   1: 709933.548 ops/s
[info]                  ·gc.alloc.rate:                   1704.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4469.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 718511.728 ops/s
[info]                  ·gc.alloc.rate:                   1724.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3699.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 713822.719 ops/s
[info]                  ·gc.alloc.rate:               1713.184 MB/sec
[info]                  ·gc.alloc.rate.norm:          3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1693.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3733.652 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 707723.027 ops/s
[info]                  ·gc.alloc.rate:                   1698.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3773.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 715199.244 ops/s
[info]                  ·gc.alloc.rate:                   1716.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3738.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce":
[info]   713038.053 ±(99.9%) 16465.164 ops/s [Average]
[info]   (min, avg, max) = (707723.027, 713038.053, 718511.728), stdev = 4275.951
[info]   CI (99.9%): [696572.889, 729503.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1711.379 ±(99.9%) 39.452 MB/sec [Average]
[info]   (min, avg, max) = (1698.588, 1711.379, 1724.517), stdev = 10.246
[info]   CI (99.9%): [1671.927, 1750.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3776.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3776.001, 3776.001, 3776.001), stdev = 0.001
[info]   CI (99.9%): [3776.001, 3776.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1759.402 ±(99.9%) 554.647 MB/sec [Average]
[info]   (min, avg, max) = (1689.377, 1759.402, 2016.980), stdev = 144.040
[info]   CI (99.9%): [1204.755, 2314.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3882.699 ±(99.9%) 1266.991 B/op [Average]
[info]   (min, avg, max) = (3699.059, 3882.699, 4469.412), stdev = 329.033
[info]   CI (99.9%): [2615.708, 5149.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.064 ±(99.9%) 0.202 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.064, 0.138), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.800, 12.000), stdev = 3.962
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson
[info] # Run progress: 59.02% complete, ETA 00:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1081888.124 ops/s
[info] # Warmup Iteration   2: 1626236.542 ops/s
[info] # Warmup Iteration   3: 1675246.237 ops/s
[info] # Warmup Iteration   4: 1645506.648 ops/s
[info] # Warmup Iteration   5: 1649878.378 ops/s
[info] Iteration   1: 1674306.599 ops/s
[info]                  ·gc.alloc.rate:                   970.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     931.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1648594.152 ops/s
[info]                  ·gc.alloc.rate:                   955.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     951.711 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1628750.711 ops/s
[info]                  ·gc.alloc.rate:                   944.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     967.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1646071.019 ops/s
[info]                  ·gc.alloc.rate:               954.219 MB/sec
[info]                  ·gc.alloc.rate.norm:          912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 961.139 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1660986.995 ops/s
[info]                  ·gc.alloc.rate:                   962.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     955.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson":
[info]   1651741.895 ±(99.9%) 65723.718 ops/s [Average]
[info]   (min, avg, max) = (1628750.711, 1651741.895, 1674306.599), stdev = 17068.241
[info]   CI (99.9%): [1586018.177, 1717465.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   957.498 ±(99.9%) 38.097 MB/sec [Average]
[info]   (min, avg, max) = (944.164, 957.498, 970.580), stdev = 9.894
[info]   CI (99.9%): [919.401, 995.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1000.886 ±(99.9%) 26.735 MB/sec [Average]
[info]   (min, avg, max) = (991.280, 1000.886, 1008.946), stdev = 6.943
[info]   CI (99.9%): [974.151, 1027.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   953.427 ±(99.9%) 52.343 B/op [Average]
[info]   (min, avg, max) = (931.451, 953.427, 967.165), stdev = 13.593
[info]   CI (99.9%): [901.084, 1005.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.086 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.059), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 1.000
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter
[info] # Run progress: 60.66% complete, ETA 00:06:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3901275.080 ops/s
[info] # Warmup Iteration   2: 4239086.371 ops/s
[info] # Warmup Iteration   3: 4243437.444 ops/s
[info] # Warmup Iteration   4: 4219033.123 ops/s
[info] # Warmup Iteration   5: 4267261.775 ops/s
[info] Iteration   1: 4258593.356 ops/s
[info]                  ·gc.alloc.rate:                   1169.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     366.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 4206992.891 ops/s
[info]                  ·gc.alloc.rate:                   1155.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     497.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 4217719.462 ops/s
[info]                  ·gc.alloc.rate:                   1158.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     374.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4223935.641 ops/s
[info]                  ·gc.alloc.rate:                   1159.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     375.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4287206.410 ops/s
[info]                  ·gc.alloc.rate:                   1177.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     494.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter":
[info]   4238889.552 ±(99.9%) 127884.687 ops/s [Average]
[info]   (min, avg, max) = (4206992.891, 4238889.552, 4287206.410), stdev = 33211.247
[info]   CI (99.9%): [4111004.864, 4366774.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1163.993 ±(99.9%) 35.096 MB/sec [Average]
[info]   (min, avg, max) = (1155.236, 1163.993, 1177.233), stdev = 9.114
[info]   CI (99.9%): [1128.897, 1199.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1136.621 ±(99.9%) 713.919 MB/sec [Average]
[info]   (min, avg, max) = (993.351, 1136.621, 1347.521), stdev = 185.402
[info]   CI (99.9%): [422.702, 1850.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   421.761 ±(99.9%) 262.048 B/op [Average]
[info]   (min, avg, max) = (366.954, 421.761, 497.944), stdev = 68.053
[info]   CI (99.9%): [159.713, 683.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.034 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.020, 0.031), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 11.000), stdev = 2.864
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay
[info] # Run progress: 62.30% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 185902.723 ops/s
[info] # Warmup Iteration   2: 343561.494 ops/s
[info] # Warmup Iteration   3: 350285.714 ops/s
[info] # Warmup Iteration   4: 349322.660 ops/s
[info] # Warmup Iteration   5: 352323.136 ops/s
[info] Iteration   1: 353845.064 ops/s
[info]                  ·gc.alloc.rate:                   1263.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5875.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 349131.605 ops/s
[info]                  ·gc.alloc.rate:                   1246.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5996.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.375 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 351533.266 ops/s
[info]                  ·gc.alloc.rate:                   1254.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5988.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 345867.588 ops/s
[info]                  ·gc.alloc.rate:                   1234.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4586.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 353053.514 ops/s
[info]                  ·gc.alloc.rate:                   1260.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6008.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay":
[info]   350686.207 ±(99.9%) 12467.988 ops/s [Average]
[info]   (min, avg, max) = (345867.588, 350686.207, 353845.064), stdev = 3237.897
[info]   CI (99.9%): [338218.220, 363154.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1251.829 ±(99.9%) 44.497 MB/sec [Average]
[info]   (min, avg, max) = (1234.620, 1251.829, 1263.080), stdev = 11.556
[info]   CI (99.9%): [1207.332, 1296.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1269.433 ±(99.9%) 563.507 MB/sec [Average]
[info]   (min, avg, max) = (1008.250, 1269.433, 1348.485), stdev = 146.341
[info]   CI (99.9%): [705.926, 1832.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5691.304 ±(99.9%) 2387.546 B/op [Average]
[info]   (min, avg, max) = (4586.294, 5691.304, 6008.959), stdev = 620.038
[info]   CI (99.9%): [3303.758, 8078.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.206 ±(99.9%) 0.397 B/op [Average]
[info]   (min, avg, max) = (0.093, 0.206, 0.375), stdev = 0.103
[info]   CI (99.9%): [≈ 0, 0.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 9.000), stdev = 2.702
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson
[info] # Run progress: 63.93% complete, ETA 00:05:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1764286.935 ops/s
[info] # Warmup Iteration   2: 2663918.663 ops/s
[info] # Warmup Iteration   3: 2684437.885 ops/s
[info] # Warmup Iteration   4: 2707173.406 ops/s
[info] # Warmup Iteration   5: 2687145.416 ops/s
[info] Iteration   1: 2676958.107 ops/s
[info]                  ·gc.alloc.rate:                   1143.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     781.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2685954.241 ops/s
[info]                  ·gc.alloc.rate:                   1147.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     587.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2679759.876 ops/s
[info]                  ·gc.alloc.rate:               1144.639 MB/sec
[info]                  ·gc.alloc.rate.norm:          672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 590.974 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 2695486.822 ops/s
[info]                  ·gc.alloc.rate:                   1151.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     786.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2671959.776 ops/s
[info]                  ·gc.alloc.rate:                   1141.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1013.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     597.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson":
[info]   2682023.764 ±(99.9%) 34910.102 ops/s [Average]
[info]   (min, avg, max) = (2671959.776, 2682023.764, 2695486.822), stdev = 9066.043
[info]   CI (99.9%): [2647113.663, 2716933.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1145.607 ±(99.9%) 14.920 MB/sec [Average]
[info]   (min, avg, max) = (1141.327, 1145.607, 1151.363), stdev = 3.875
[info]   CI (99.9%): [1130.687, 1160.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1140.301 ±(99.9%) 698.320 MB/sec [Average]
[info]   (min, avg, max) = (1003.285, 1140.301, 1347.469), stdev = 181.352
[info]   CI (99.9%): [441.981, 1838.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   668.770 ±(99.9%) 405.659 B/op [Average]
[info]   (min, avg, max) = (587.650, 668.770, 786.459), stdev = 105.348
[info]   CI (99.9%): [263.111, 1074.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.012), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 6.000), stdev = 0.894
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 65.57% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3401225.933 ops/s
[info] # Warmup Iteration   2: 3796936.674 ops/s
[info] # Warmup Iteration   3: 3880124.140 ops/s
[info] # Warmup Iteration   4: 3857611.679 ops/s
[info] # Warmup Iteration   5: 3857951.584 ops/s
[info] Iteration   1: 3830597.394 ops/s
[info]                  ·gc.alloc.rate:                   701.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     268.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 3854794.513 ops/s
[info]                  ·gc.alloc.rate:                   705.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     267.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3858633.172 ops/s
[info]                  ·gc.alloc.rate:                   706.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     268.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3827101.994 ops/s
[info]                  ·gc.alloc.rate:                   700.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     271.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 3815761.528 ops/s
[info]                  ·gc.alloc.rate:                   698.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     273.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter":
[info]   3837377.720 ±(99.9%) 71365.898 ops/s [Average]
[info]   (min, avg, max) = (3815761.528, 3837377.720, 3858633.172), stdev = 18533.497
[info]   CI (99.9%): [3766011.823, 3908743.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   702.469 ±(99.9%) 13.083 MB/sec [Average]
[info]   (min, avg, max) = (698.499, 702.469, 706.358), stdev = 3.397
[info]   CI (99.9%): [689.386, 715.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   658.150 ±(99.9%) 14.234 MB/sec [Average]
[info]   (min, avg, max) = (653.742, 658.150, 663.058), stdev = 3.696
[info]   CI (99.9%): [643.916, 672.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   269.838 ±(99.9%) 9.574 B/op [Average]
[info]   (min, avg, max) = (267.628, 269.838, 273.388), stdev = 2.486
[info]   CI (99.9%): [260.265, 279.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.044 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.020, 0.034), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 13.000), stdev = 3.701
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay
[info] # Run progress: 67.21% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 290968.220 ops/s
[info] # Warmup Iteration   2: 478176.273 ops/s
[info] # Warmup Iteration   3: 482849.007 ops/s
[info] # Warmup Iteration   4: 484245.664 ops/s
[info] # Warmup Iteration   5: 484073.912 ops/s
[info] Iteration   1: 489027.709 ops/s
[info]                  ·gc.alloc.rate:                   1447.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4273.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 472649.536 ops/s
[info]                  ·gc.alloc.rate:                   1398.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.364 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5563.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.347 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 464269.806 ops/s
[info]                  ·gc.alloc.rate:                   1374.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4557.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 465069.591 ops/s
[info]                  ·gc.alloc.rate:                   1376.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4565.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 468028.518 ops/s
[info]                  ·gc.alloc.rate:               1385.053 MB/sec
[info]                  ·gc.alloc.rate.norm:          4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1352.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4547.436 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay":
[info]   471809.032 ±(99.9%) 39162.278 ops/s [Average]
[info]   (min, avg, max) = (464269.806, 471809.032, 489027.709), stdev = 10170.319
[info]   CI (99.9%): [432646.754, 510971.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1396.298 ±(99.9%) 115.869 MB/sec [Average]
[info]   (min, avg, max) = (1374.010, 1396.298, 1447.242), stdev = 30.091
[info]   CI (99.9%): [1280.429, 1512.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1409.383 ±(99.9%) 565.080 MB/sec [Average]
[info]   (min, avg, max) = (1328.460, 1409.383, 1671.364), stdev = 146.750
[info]   CI (99.9%): [844.302, 1974.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4701.343 ±(99.9%) 1914.299 B/op [Average]
[info]   (min, avg, max) = (4273.860, 4701.343, 5563.196), stdev = 497.137
[info]   CI (99.9%): [2787.045, 6615.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.153 ±(99.9%) 0.478 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.153, 0.347), stdev = 0.124
[info]   CI (99.9%): [≈ 0, 0.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 8.000), stdev = 2.345
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 68.85% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 148567.874 ops/s
[info] # Warmup Iteration   2: 977004.636 ops/s
[info] # Warmup Iteration   3: 991073.398 ops/s
[info] # Warmup Iteration   4: 984355.809 ops/s
[info] # Warmup Iteration   5: 986225.439 ops/s
[info] Iteration   1: 992817.906 ops/s
[info]                  ·gc.alloc.rate:                   1267.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              2008.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1584.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 984549.046 ops/s
[info]                  ·gc.alloc.rate:                   1256.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              2008.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2139.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 989719.937 ops/s
[info]                  ·gc.alloc.rate:                   1263.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              2008.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2137.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 991387.482 ops/s
[info]                  ·gc.alloc.rate:               1265.341 MB/sec
[info]                  ·gc.alloc.rate.norm:          2008.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2142.027 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 990251.108 ops/s
[info]                  ·gc.alloc.rate:                   1263.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              2008.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1612.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson":
[info]   989745.096 ±(99.9%) 12084.399 ops/s [Average]
[info]   (min, avg, max) = (984549.046, 989745.096, 992817.906), stdev = 3138.280
[info]   CI (99.9%): [977660.697, 1001829.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1263.247 ±(99.9%) 15.351 MB/sec [Average]
[info]   (min, avg, max) = (1256.639, 1263.247, 1267.135), stdev = 3.987
[info]   CI (99.9%): [1247.896, 1278.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   2008.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2008.000, 2008.000, 2008.000), stdev = 0.001
[info]   CI (99.9%): [2008.000, 2008.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1209.672 ±(99.9%) 711.914 MB/sec [Average]
[info]   (min, avg, max) = (999.593, 1209.672, 1349.798), stdev = 184.882
[info]   CI (99.9%): [497.758, 1921.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1923.235 ±(99.9%) 1142.951 B/op [Average]
[info]   (min, avg, max) = (1584.033, 1923.235, 2142.027), stdev = 296.821
[info]   CI (99.9%): [780.284, 3066.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.053 ±(99.9%) 0.194 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.053, 0.133), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 9.000), stdev = 2.550
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 70.49% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2104516.179 ops/s
[info] # Warmup Iteration   2: 2346073.200 ops/s
[info] # Warmup Iteration   3: 2299673.960 ops/s
[info] # Warmup Iteration   4: 2339924.868 ops/s
[info] # Warmup Iteration   5: 2334752.577 ops/s
[info] Iteration   1: 2354380.181 ops/s
[info]                  ·gc.alloc.rate:               454.937 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 217.763 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 2297960.255 ops/s
[info]                  ·gc.alloc.rate:                   444.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     446.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 2336587.222 ops/s
[info]                  ·gc.alloc.rate:               451.498 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 219.645 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 2330855.171 ops/s
[info]                  ·gc.alloc.rate:               450.394 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 220.634 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 2320396.835 ops/s
[info]                  ·gc.alloc.rate:                   448.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     443.937 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   2328035.933 ±(99.9%) 80265.244 ops/s [Average]
[info]   (min, avg, max) = (2297960.255, 2328035.933, 2354380.181), stdev = 20844.629
[info]   CI (99.9%): [2247770.689, 2408301.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   449.850 ±(99.9%) 15.505 MB/sec [Average]
[info]   (min, avg, max) = (444.035, 449.850, 454.937), stdev = 4.026
[info]   CI (99.9%): [434.345, 465.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.168 ±(99.9%) 689.903 MB/sec [Average]
[info]   (min, avg, max) = (325.882, 457.168, 654.784), stdev = 179.166
[info]   CI (99.9%): [≈ 0, 1147.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   309.682 ±(99.9%) 476.340 B/op [Average]
[info]   (min, avg, max) = (217.763, 309.682, 446.433), stdev = 123.704
[info]   CI (99.9%): [≈ 0, 786.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.029), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 4.400, 13.000), stdev = 5.128
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 72.13% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 101147.577 ops/s
[info] # Warmup Iteration   2: 240396.877 ops/s
[info] # Warmup Iteration   3: 241630.351 ops/s
[info] # Warmup Iteration   4: 241212.271 ops/s
[info] # Warmup Iteration   5: 241196.435 ops/s
[info] Iteration   1: 242158.280 ops/s
[info]                  ·gc.alloc.rate:               949.387 MB/sec
[info]                  ·gc.alloc.rate.norm:          6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6392.700 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 242580.268 ops/s
[info]                  ·gc.alloc.rate:                   951.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6407.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.270 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 245922.668 ops/s
[info]                  ·gc.alloc.rate:                   964.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6358.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 243277.436 ops/s
[info]                  ·gc.alloc.rate:                   953.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4303.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 246851.610 ops/s
[info]                  ·gc.alloc.rate:                   967.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6383.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay":
[info]   244158.052 ±(99.9%) 8084.770 ops/s [Average]
[info]   (min, avg, max) = (242158.280, 244158.052, 246851.610), stdev = 2099.589
[info]   CI (99.9%): [236073.282, 252242.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   957.236 ±(99.9%) 31.661 MB/sec [Average]
[info]   (min, avg, max) = (949.387, 957.236, 967.757), stdev = 8.222
[info]   CI (99.9%): [925.575, 988.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.584 ±(99.9%) 562.711 MB/sec [Average]
[info]   (min, avg, max) = (665.441, 926.584, 1001.598), stdev = 146.134
[info]   CI (99.9%): [363.872, 1489.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5969.088 ±(99.9%) 3586.712 B/op [Average]
[info]   (min, avg, max) = (4303.148, 5969.088, 6407.328), stdev = 931.458
[info]   CI (99.9%): [2382.376, 9555.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.187 ±(99.9%) 0.460 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.187, 0.270), stdev = 0.119
[info]   CI (99.9%): [≈ 0, 0.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 9.000), stdev = 2.915
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce
[info] # Run progress: 73.77% complete, ETA 00:04:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 424427.798 ops/s
[info] # Warmup Iteration   2: 581534.985 ops/s
[info] # Warmup Iteration   3: 604129.958 ops/s
[info] # Warmup Iteration   4: 605239.599 ops/s
[info] # Warmup Iteration   5: 603147.321 ops/s
[info] Iteration   1: 609808.835 ops/s
[info]                  ·gc.alloc.rate:               1562.784 MB/sec
[info]                  ·gc.alloc.rate.norm:          4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3460.891 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 599623.506 ops/s
[info]                  ·gc.alloc.rate:                   1536.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4422.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.273 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 593649.079 ops/s
[info]                  ·gc.alloc.rate:               1521.586 MB/sec
[info]                  ·gc.alloc.rate.norm:          4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1352.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3585.129 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 600435.691 ops/s
[info]                  ·gc.alloc.rate:                   1538.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4440.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 591687.337 ops/s
[info]                  ·gc.alloc.rate:               1516.495 MB/sec
[info]                  ·gc.alloc.rate.norm:          4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1357.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3609.413 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce":
[info]   599040.890 ±(99.9%) 27321.933 ops/s [Average]
[info]   (min, avg, max) = (591687.337, 599040.890, 609808.835), stdev = 7095.419
[info]   CI (99.9%): [571718.956, 626362.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1535.275 ±(99.9%) 69.721 MB/sec [Average]
[info]   (min, avg, max) = (1516.495, 1535.275, 1562.784), stdev = 18.106
[info]   CI (99.9%): [1465.553, 1604.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4032.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4032.001, 4032.001, 4032.001), stdev = 0.001
[info]   CI (99.9%): [4032.001, 4032.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1486.397 ±(99.9%) 716.269 MB/sec [Average]
[info]   (min, avg, max) = (1341.425, 1486.397, 1694.720), stdev = 186.013
[info]   CI (99.9%): [770.128, 2202.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3903.591 ±(99.9%) 1867.649 B/op [Average]
[info]   (min, avg, max) = (3460.891, 3903.591, 4440.499), stdev = 485.022
[info]   CI (99.9%): [2035.943, 5771.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.066 ±(99.9%) 0.456 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.066, 0.273), stdev = 0.118
[info]   CI (99.9%): [≈ 0, 0.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 14.000), stdev = 3.962
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson
[info] # Run progress: 75.41% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 824722.505 ops/s
[info] # Warmup Iteration   2: 1236884.798 ops/s
[info] # Warmup Iteration   3: 1240712.039 ops/s
[info] # Warmup Iteration   4: 1219217.974 ops/s
[info] # Warmup Iteration   5: 1241536.211 ops/s
[info] Iteration   1: 1218469.711 ops/s
[info]                  ·gc.alloc.rate:               749.732 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 847.565 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 1209335.314 ops/s
[info]                  ·gc.alloc.rate:                   744.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     857.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1219387.615 ops/s
[info]                  ·gc.alloc.rate:               750.279 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1281.572 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1225128.363 ops/s
[info]                  ·gc.alloc.rate:               753.818 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 854.930 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1223701.068 ops/s
[info]                  ·gc.alloc.rate:               752.935 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 859.362 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson":
[info]   1219204.414 ±(99.9%) 23837.131 ops/s [Average]
[info]   (min, avg, max) = (1209335.314, 1219204.414, 1225128.363), stdev = 6190.427
[info]   CI (99.9%): [1195367.283, 1243041.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   750.171 ±(99.9%) 14.678 MB/sec [Average]
[info]   (min, avg, max) = (744.090, 750.171, 753.818), stdev = 3.812
[info]   CI (99.9%): [735.493, 764.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   968.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (968.000, 968.000, 968.000), stdev = 0.001
[info]   CI (99.9%): [968.000, 968.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   728.615 ±(99.9%) 570.107 MB/sec [Average]
[info]   (min, avg, max) = (656.453, 728.615, 993.322), stdev = 148.055
[info]   CI (99.9%): [158.508, 1298.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   940.173 ±(99.9%) 735.089 B/op [Average]
[info]   (min, avg, max) = (847.565, 940.173, 1281.572), stdev = 190.900
[info]   CI (99.9%): [205.084, 1675.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.093 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.054), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.800, 12.000), stdev = 4.658
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 77.05% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4229593.115 ops/s
[info] # Warmup Iteration   2: 4915129.389 ops/s
[info] # Warmup Iteration   3: 4886094.933 ops/s
[info] # Warmup Iteration   4: 4751830.334 ops/s
[info] # Warmup Iteration   5: 4863108.899 ops/s
[info] Iteration   1: 4905616.196 ops/s
[info]                  ·gc.alloc.rate:                   823.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     315.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4875586.558 ops/s
[info]                  ·gc.alloc.rate:                   818.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 4835434.757 ops/s
[info]                  ·gc.alloc.rate:                   811.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     322.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4753216.864 ops/s
[info]                  ·gc.alloc.rate:                   797.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     219.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 4818833.098 ops/s
[info]                  ·gc.alloc.rate:                   808.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter":
[info]   4837737.495 ±(99.9%) 224087.012 ops/s [Average]
[info]   (min, avg, max) = (4753216.864, 4837737.495, 4905616.196), stdev = 58194.685
[info]   CI (99.9%): [4613650.483, 5061824.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   811.808 ±(99.9%) 37.516 MB/sec [Average]
[info]   (min, avg, max) = (797.683, 811.808, 823.189), stdev = 9.743
[info]   CI (99.9%): [774.292, 849.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.372 ±(99.9%) 685.345 MB/sec [Average]
[info]   (min, avg, max) = (657.753, 792.372, 991.946), stdev = 177.982
[info]   CI (99.9%): [107.027, 1477.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   257.432 ±(99.9%) 216.695 B/op [Average]
[info]   (min, avg, max) = (212.242, 257.432, 322.745), stdev = 56.275
[info]   CI (99.9%): [40.738, 474.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.047 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.018, 0.034), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.000, 11.000), stdev = 4.123
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay
[info] # Run progress: 78.69% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 212931.777 ops/s
[info] # Warmup Iteration   2: 370891.875 ops/s
[info] # Warmup Iteration   3: 380921.620 ops/s
[info] # Warmup Iteration   4: 374700.281 ops/s
[info] # Warmup Iteration   5: 376886.348 ops/s
[info] Iteration   1: 380239.927 ops/s
[info]                  ·gc.alloc.rate:                   1308.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5481.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 378468.672 ops/s
[info]                  ·gc.alloc.rate:                   1302.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5543.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 380998.285 ops/s
[info]                  ·gc.alloc.rate:                   1311.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5535.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.344 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 378180.957 ops/s
[info]                  ·gc.alloc.rate:                   1301.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5599.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 379489.539 ops/s
[info]                  ·gc.alloc.rate:               1306.429 MB/sec
[info]                  ·gc.alloc.rate.norm:          5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5598.826 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay":
[info]   379475.476 ±(99.9%) 4553.281 ops/s [Average]
[info]   (min, avg, max) = (378180.957, 379475.476, 380998.285), stdev = 1182.473
[info]   CI (99.9%): [374922.195, 384028.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1306.345 ±(99.9%) 15.720 MB/sec [Average]
[info]   (min, avg, max) = (1301.831, 1306.345, 1311.594), stdev = 4.082
[info]   CI (99.9%): [1290.625, 1322.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5416.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5416.001, 5416.001, 5416.001), stdev = 0.001
[info]   CI (99.9%): [5416.001, 5416.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1339.079 ±(99.9%) 39.286 MB/sec [Average]
[info]   (min, avg, max) = (1324.821, 1339.079, 1350.529), stdev = 10.203
[info]   CI (99.9%): [1299.792, 1378.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5551.783 ±(99.9%) 190.670 B/op [Average]
[info]   (min, avg, max) = (5481.597, 5551.783, 5599.990), stdev = 49.516
[info]   CI (99.9%): [5361.113, 5742.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.173 ±(99.9%) 0.468 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.173, 0.344), stdev = 0.122
[info]   CI (99.9%): [≈ 0, 0.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 9.000), stdev = 2.608
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce
[info] # Run progress: 80.33% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 133356.878 ops/s
[info] # Warmup Iteration   2: 314163.181 ops/s
[info] # Warmup Iteration   3: 344607.676 ops/s
[info] # Warmup Iteration   4: 344923.834 ops/s
[info] # Warmup Iteration   5: 346387.686 ops/s
[info] Iteration   1: 339227.069 ops/s
[info]                  ·gc.alloc.rate:                   1009.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6083.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.289 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   2: 344941.683 ops/s
[info]                  ·gc.alloc.rate:                   1026.096 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4521.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 348124.045 ops/s
[info]                  ·gc.alloc.rate:                   1035.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4510.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 345266.596 ops/s
[info]                  ·gc.alloc.rate:                   1027.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4568.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 347438.339 ops/s
[info]                  ·gc.alloc.rate:                   1033.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4561.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce":
[info]   344999.546 ±(99.9%) 13491.873 ops/s [Average]
[info]   (min, avg, max) = (339227.069, 344999.546, 348124.045), stdev = 3503.797
[info]   CI (99.9%): [331507.673, 358491.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1026.321 ±(99.9%) 39.576 MB/sec [Average]
[info]   (min, avg, max) = (1009.423, 1026.321, 1035.539), stdev = 10.278
[info]   CI (99.9%): [986.745, 1065.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4680.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4680.001, 4680.001, 4680.001), stdev = 0.001
[info]   CI (99.9%): [4680.001, 4680.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1062.224 ±(99.9%) 538.281 MB/sec [Average]
[info]   (min, avg, max) = (991.268, 1062.224, 1312.065), stdev = 139.790
[info]   CI (99.9%): [523.943, 1600.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4848.822 ±(99.9%) 2658.720 B/op [Average]
[info]   (min, avg, max) = (4510.066, 4848.822, 6083.141), stdev = 690.461
[info]   CI (99.9%): [2190.102, 7507.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.152 ±(99.9%) 0.334 B/op [Average]
[info]   (min, avg, max) = (0.094, 0.152, 0.289), stdev = 0.087
[info]   CI (99.9%): [≈ 0, 0.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.200, 22.000), stdev = 8.438
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson
[info] # Run progress: 81.97% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 128556.581 ops/s
[info] # Warmup Iteration   2: 1079022.559 ops/s
[info] # Warmup Iteration   3: 1092951.047 ops/s
[info] # Warmup Iteration   4: 1070499.654 ops/s
[info] # Warmup Iteration   5: 1070362.575 ops/s
[info] Iteration   1: 1065999.575 ops/s
[info]                  ·gc.alloc.rate:                   1105.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1471.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1071302.047 ops/s
[info]                  ·gc.alloc.rate:                   1111.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1470.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1075786.259 ops/s
[info]                  ·gc.alloc.rate:                   1116.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1961.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1080703.137 ops/s
[info]                  ·gc.alloc.rate:                   1121.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1470.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1076149.151 ops/s
[info]                  ·gc.alloc.rate:                   1116.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1479.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson":
[info]   1073988.034 ±(99.9%) 21441.781 ops/s [Average]
[info]   (min, avg, max) = (1065999.575, 1073988.034, 1080703.137), stdev = 5568.362
[info]   CI (99.9%): [1052546.253, 1095429.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1114.134 ±(99.9%) 22.262 MB/sec [Average]
[info]   (min, avg, max) = (1105.840, 1114.134, 1121.102), stdev = 5.781
[info]   CI (99.9%): [1091.872, 1136.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1072.583 ±(99.9%) 579.509 MB/sec [Average]
[info]   (min, avg, max) = (997.337, 1072.583, 1341.570), stdev = 150.497
[info]   CI (99.9%): [493.074, 1652.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1570.968 ±(99.9%) 841.562 B/op [Average]
[info]   (min, avg, max) = (1470.455, 1570.968, 1961.862), stdev = 218.551
[info]   CI (99.9%): [729.406, 2412.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.049 ±(99.9%) 0.064 B/op [Average]
[info]   (min, avg, max) = (0.030, 0.049, 0.061), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 10.000), stdev = 3.050
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter
[info] # Run progress: 83.61% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2117087.137 ops/s
[info] # Warmup Iteration   2: 2246507.204 ops/s
[info] # Warmup Iteration   3: 2341954.084 ops/s
[info] # Warmup Iteration   4: 2367533.235 ops/s
[info] # Warmup Iteration   5: 2383573.516 ops/s
[info] Iteration   1: 2372393.818 ops/s
[info]                  ·gc.alloc.rate:                   566.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     432.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2378956.371 ops/s
[info]                  ·gc.alloc.rate:                   568.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     431.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2352376.144 ops/s
[info]                  ·gc.alloc.rate:                   562.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     438.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2351560.202 ops/s
[info]                  ·gc.alloc.rate:               562.031 MB/sec
[info]                  ·gc.alloc.rate.norm:          376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 219.582 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   5: 2386430.419 ops/s
[info]                  ·gc.alloc.rate:                   570.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     433.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter":
[info]   2368343.391 ±(99.9%) 60664.762 ops/s [Average]
[info]   (min, avg, max) = (2351560.202, 2368343.391, 2386430.419), stdev = 15754.446
[info]   CI (99.9%): [2307678.629, 2429008.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   566.029 ±(99.9%) 14.503 MB/sec [Average]
[info]   (min, avg, max) = (562.031, 566.029, 570.361), stdev = 3.766
[info]   CI (99.9%): [551.526, 580.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   376.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (376.000, 376.000, 376.000), stdev = 0.001
[info]   CI (99.9%): [376.000, 376.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   589.249 ±(99.9%) 561.939 MB/sec [Average]
[info]   (min, avg, max) = (328.224, 589.249, 657.781), stdev = 145.934
[info]   CI (99.9%): [27.310, 1151.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   391.130 ±(99.9%) 369.389 B/op [Average]
[info]   (min, avg, max) = (219.582, 391.130, 438.111), stdev = 95.929
[info]   CI (99.9%): [21.741, 760.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.099 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.069), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.000, 10.000), stdev = 3.674
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay
[info] # Run progress: 85.25% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 120980.428 ops/s
[info] # Warmup Iteration   2: 244679.972 ops/s
[info] # Warmup Iteration   3: 254382.555 ops/s
[info] # Warmup Iteration   4: 255297.552 ops/s
[info] # Warmup Iteration   5: 255750.033 ops/s
[info] Iteration   1: 256639.261 ops/s
[info]                  ·gc.alloc.rate:               946.114 MB/sec
[info]                  ·gc.alloc.rate.norm:          5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6031.957 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 257039.302 ops/s
[info]                  ·gc.alloc.rate:                   947.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6055.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.510 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 256809.236 ops/s
[info]                  ·gc.alloc.rate:                   946.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4054.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.255 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 258222.385 ops/s
[info]                  ·gc.alloc.rate:                   951.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6078.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 259156.087 ops/s
[info]                  ·gc.alloc.rate:                   955.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6080.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.253 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay":
[info]   257573.254 ±(99.9%) 4159.722 ops/s [Average]
[info]   (min, avg, max) = (256639.261, 257573.254, 259156.087), stdev = 1080.266
[info]   CI (99.9%): [253413.532, 261732.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   949.548 ±(99.9%) 15.321 MB/sec [Average]
[info]   (min, avg, max) = (946.114, 949.548, 955.381), stdev = 3.979
[info]   CI (99.9%): [934.227, 964.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.002, 5800.002, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.001, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.822 ±(99.9%) 571.223 MB/sec [Average]
[info]   (min, avg, max) = (661.742, 926.822, 1001.577), stdev = 148.345
[info]   CI (99.9%): [355.599, 1498.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5659.941 ±(99.9%) 3457.651 B/op [Average]
[info]   (min, avg, max) = (4054.042, 5659.941, 6080.449), stdev = 897.941
[info]   CI (99.9%): [2202.290, 9117.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.254 ±(99.9%) 0.694 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.254, 0.510), stdev = 0.180
[info]   CI (99.9%): [≈ 0, 0.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 7.000), stdev = 2.074
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce
[info] # Run progress: 86.89% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 109253.130 ops/s
[info] # Warmup Iteration   2: 348508.892 ops/s
[info] # Warmup Iteration   3: 356151.328 ops/s
[info] # Warmup Iteration   4: 356699.617 ops/s
[info] # Warmup Iteration   5: 356734.332 ops/s
[info] Iteration   1: 354435.344 ops/s
[info]                  ·gc.alloc.rate:                   1030.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5874.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.370 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 357869.409 ops/s
[info]                  ·gc.alloc.rate:                   1040.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4387.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 361460.540 ops/s
[info]                  ·gc.alloc.rate:                   1051.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4366.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 362153.287 ops/s
[info]                  ·gc.alloc.rate:                   1053.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4372.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 362411.133 ops/s
[info]                  ·gc.alloc.rate:                   1054.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4385.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce":
[info]   359665.942 ±(99.9%) 13273.587 ops/s [Average]
[info]   (min, avg, max) = (354435.344, 359665.942, 362411.133), stdev = 3447.108
[info]   CI (99.9%): [346392.355, 372939.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   1046.115 ±(99.9%) 38.595 MB/sec [Average]
[info]   (min, avg, max) = (1030.923, 1046.115, 1054.116), stdev = 10.023
[info]   CI (99.9%): [1007.521, 1084.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4576.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4576.001, 4576.001, 4576.001), stdev = 0.001
[info]   CI (99.9%): [4576.001, 4576.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1068.306 ±(99.9%) 549.619 MB/sec [Average]
[info]   (min, avg, max) = (997.926, 1068.306, 1323.507), stdev = 142.734
[info]   CI (99.9%): [518.687, 1617.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4677.431 ±(99.9%) 2577.441 B/op [Average]
[info]   (min, avg, max) = (4366.710, 4677.431, 5874.707), stdev = 669.353
[info]   CI (99.9%): [2099.990, 7254.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.147 ±(99.9%) 0.480 B/op [Average]
[info]   (min, avg, max) = (0.090, 0.147, 0.370), stdev = 0.125
[info]   CI (99.9%): [≈ 0, 0.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 10.000), stdev = 3.114
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 88.52% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58734.551 ops/s
[info] # Warmup Iteration   2: 882972.767 ops/s
[info] # Warmup Iteration   3: 971041.159 ops/s
[info] # Warmup Iteration   4: 967100.554 ops/s
[info] # Warmup Iteration   5: 969416.920 ops/s
[info] Iteration   1: 958213.329 ops/s
[info]                  ·gc.alloc.rate:                   950.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1627.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 961227.089 ops/s
[info]                  ·gc.alloc.rate:                   953.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1631.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 967723.906 ops/s
[info]                  ·gc.alloc.rate:               959.511 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1627.845 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 975612.627 ops/s
[info]                  ·gc.alloc.rate:                   967.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1621.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 976341.201 ops/s
[info]                  ·gc.alloc.rate:                   968.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1625.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson":
[info]   967823.630 ±(99.9%) 31583.477 ops/s [Average]
[info]   (min, avg, max) = (958213.329, 967823.630, 976341.201), stdev = 8202.129
[info]   CI (99.9%): [936240.153, 999407.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   959.659 ±(99.9%) 31.331 MB/sec [Average]
[info]   (min, avg, max) = (950.135, 959.659, 968.118), stdev = 8.136
[info]   CI (99.9%): [928.328, 990.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1000.617 ±(99.9%) 26.517 MB/sec [Average]
[info]   (min, avg, max) = (991.290, 1000.617, 1008.638), stdev = 6.886
[info]   CI (99.9%): [974.099, 1027.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1626.600 ±(99.9%) 14.292 B/op [Average]
[info]   (min, avg, max) = (1621.122, 1626.600, 1631.171), stdev = 3.712
[info]   CI (99.9%): [1612.308, 1640.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.054 ±(99.9%) 0.149 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.102), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 8.000), stdev = 1.924
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 90.16% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1822965.073 ops/s
[info] # Warmup Iteration   2: 2057845.120 ops/s
[info] # Warmup Iteration   3: 2034651.885 ops/s
[info] # Warmup Iteration   4: 2041895.358 ops/s
[info] # Warmup Iteration   5: 2034102.309 ops/s
[info] Iteration   1: 2056921.031 ops/s
[info]                  ·gc.alloc.rate:                   502.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     498.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 2073760.122 ops/s
[info]                  ·gc.alloc.rate:                   506.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     494.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2075311.432 ops/s
[info]                  ·gc.alloc.rate:               506.537 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 247.803 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2069612.845 ops/s
[info]                  ·gc.alloc.rate:                   505.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     497.711 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2074013.405 ops/s
[info]                  ·gc.alloc.rate:               506.212 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 248.711 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter":
[info]   2069923.767 ±(99.9%) 29175.934 ops/s [Average]
[info]   (min, avg, max) = (2056921.031, 2069923.767, 2075311.432), stdev = 7576.897
[info]   CI (99.9%): [2040747.833, 2099099.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   505.226 ±(99.9%) 7.113 MB/sec [Average]
[info]   (min, avg, max) = (502.054, 505.226, 506.537), stdev = 1.847
[info]   CI (99.9%): [498.113, 512.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   384.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (384.000, 384.000, 384.000), stdev = 0.001
[info]   CI (99.9%): [384.000, 384.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.735 ±(99.9%) 686.741 MB/sec [Average]
[info]   (min, avg, max) = (326.879, 522.735, 654.743), stdev = 178.344
[info]   CI (99.9%): [≈ 0, 1209.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   397.537 ±(99.9%) 524.767 B/op [Average]
[info]   (min, avg, max) = (247.803, 397.537, 498.508), stdev = 136.280
[info]   CI (99.9%): [≈ 0, 922.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.092 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.047), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 9.000), stdev = 3.578
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 91.80% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 105687.474 ops/s
[info] # Warmup Iteration   2: 256666.897 ops/s
[info] # Warmup Iteration   3: 261245.306 ops/s
[info] # Warmup Iteration   4: 257655.479 ops/s
[info] # Warmup Iteration   5: 260881.060 ops/s
[info] Iteration   1: 260404.336 ops/s
[info]                  ·gc.alloc.rate:                   1002.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5952.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 261661.304 ops/s
[info]                  ·gc.alloc.rate:                   1007.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5952.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.626 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 259929.937 ops/s
[info]                  ·gc.alloc.rate:                   1000.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6024.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 262916.934 ops/s
[info]                  ·gc.alloc.rate:                   1012.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5987.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.249 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 261236.901 ops/s
[info]                  ·gc.alloc.rate:                   1005.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6046.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.251 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay":
[info]   261229.882 ±(99.9%) 4475.577 ops/s [Average]
[info]   (min, avg, max) = (259929.937, 261229.882, 262916.934), stdev = 1162.293
[info]   CI (99.9%): [256754.306, 265705.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   1005.563 ±(99.9%) 17.200 MB/sec [Average]
[info]   (min, avg, max) = (1000.582, 1005.563, 1012.050), stdev = 4.467
[info]   CI (99.9%): [988.362, 1022.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6056.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6056.002, 6056.002, 6056.002), stdev = 0.001
[info]   CI (99.9%): [6056.001, 6056.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   995.009 ±(99.9%) 29.274 MB/sec [Average]
[info]   (min, avg, max) = (985.270, 995.009, 1003.917), stdev = 7.602
[info]   CI (99.9%): [965.735, 1024.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5992.469 ±(99.9%) 162.343 B/op [Average]
[info]   (min, avg, max) = (5952.104, 5992.469, 6046.066), stdev = 42.160
[info]   CI (99.9%): [5830.126, 6154.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.326 ±(99.9%) 0.732 B/op [Average]
[info]   (min, avg, max) = (0.126, 0.326, 0.626), stdev = 0.190
[info]   CI (99.9%): [≈ 0, 1.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 11.000), stdev = 3.715
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce
[info] # Run progress: 93.44% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 431778.318 ops/s
[info] # Warmup Iteration   2: 642720.362 ops/s
[info] # Warmup Iteration   3: 667320.070 ops/s
[info] # Warmup Iteration   4: 665930.942 ops/s
[info] # Warmup Iteration   5: 662579.899 ops/s
[info] Iteration   1: 663472.326 ops/s
[info]                  ·gc.alloc.rate:                   1298.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3165.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 665185.602 ops/s
[info]                  ·gc.alloc.rate:                   1302.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3174.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 668760.842 ops/s
[info]                  ·gc.alloc.rate:               1309.231 MB/sec
[info]                  ·gc.alloc.rate.norm:          3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3170.006 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 659579.834 ops/s
[info]                  ·gc.alloc.rate:               1291.271 MB/sec
[info]                  ·gc.alloc.rate.norm:          3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1352.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3225.160 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 650119.049 ops/s
[info]                  ·gc.alloc.rate:               1272.710 MB/sec
[info]                  ·gc.alloc.rate.norm:          3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1015.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2458.580 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce":
[info]   661423.531 ±(99.9%) 27457.103 ops/s [Average]
[info]   (min, avg, max) = (650119.049, 661423.531, 668760.842), stdev = 7130.522
[info]   CI (99.9%): [633966.428, 688880.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1294.873 ±(99.9%) 53.804 MB/sec [Average]
[info]   (min, avg, max) = (1272.710, 1294.873, 1309.231), stdev = 13.973
[info]   CI (99.9%): [1241.069, 1348.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3080.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3080.001, 3080.001, 3080.001), stdev = 0.001
[info]   CI (99.9%): [3080.001, 3080.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1278.516 ±(99.9%) 565.780 MB/sec [Average]
[info]   (min, avg, max) = (1015.928, 1278.516, 1352.128), stdev = 146.931
[info]   CI (99.9%): [712.736, 1844.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3038.686 ±(99.9%) 1252.180 B/op [Average]
[info]   (min, avg, max) = (2458.580, 3038.686, 3225.160), stdev = 325.187
[info]   CI (99.9%): [1786.507, 4290.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.170 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.099), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 11.000), stdev = 3.962
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson
[info] # Run progress: 95.08% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1053412.964 ops/s
[info] # Warmup Iteration   2: 1532610.530 ops/s
[info] # Warmup Iteration   3: 1620446.198 ops/s
[info] # Warmup Iteration   4: 1624065.667 ops/s
[info] # Warmup Iteration   5: 1631050.020 ops/s
[info] Iteration   1: 1609706.269 ops/s
[info]                  ·gc.alloc.rate:                   671.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     637.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1609111.330 ops/s
[info]                  ·gc.alloc.rate:                   670.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     641.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1598086.161 ops/s
[info]                  ·gc.alloc.rate:                   667.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     968.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1547899.955 ops/s
[info]                  ·gc.alloc.rate:               645.424 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 336.961 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1620133.069 ops/s
[info]                  ·gc.alloc.rate:                   676.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     963.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson":
[info]   1596987.357 ±(99.9%) 109849.123 ops/s [Average]
[info]   (min, avg, max) = (1547899.955, 1596987.357, 1620133.069), stdev = 28527.468
[info]   CI (99.9%): [1487138.234, 1706836.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   666.331 ±(99.9%) 46.596 MB/sec [Average]
[info]   (min, avg, max) = (645.424, 666.331, 676.423), stdev = 12.101
[info]   CI (99.9%): [619.735, 712.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   723.692 ±(99.9%) 1062.791 MB/sec [Average]
[info]   (min, avg, max) = (331.529, 723.692, 993.319), stdev = 276.004
[info]   CI (99.9%): [≈ 0, 1786.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   709.462 ±(99.9%) 1018.785 B/op [Average]
[info]   (min, avg, max) = (336.961, 709.462, 968.244), stdev = 264.575
[info]   CI (99.9%): [≈ 0, 1728.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.033 ±(99.9%) 0.089 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.061), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 11.000), stdev = 4.438
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 96.72% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3331437.999 ops/s
[info] # Warmup Iteration   2: 4310552.394 ops/s
[info] # Warmup Iteration   3: 4331428.281 ops/s
[info] # Warmup Iteration   4: 4291382.603 ops/s
[info] # Warmup Iteration   5: 4279597.608 ops/s
[info] Iteration   1: 4292916.698 ops/s
[info]                  ·gc.alloc.rate:                   349.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.794 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4266739.429 ops/s
[info]                  ·gc.alloc.rate:                   347.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     240.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 4295110.159 ops/s
[info]                  ·gc.alloc.rate:                   349.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4326803.931 ops/s
[info]                  ·gc.alloc.rate:               352.028 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 118.610 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 4250469.108 ops/s
[info]                  ·gc.alloc.rate:                   345.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter":
[info]   4286407.865 ±(99.9%) 112732.140 ops/s [Average]
[info]   (min, avg, max) = (4250469.108, 4286407.865, 4326803.931), stdev = 29276.179
[info]   CI (99.9%): [4173675.725, 4399140.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   348.826 ±(99.9%) 9.325 MB/sec [Average]
[info]   (min, avg, max) = (345.815, 348.826, 352.028), stdev = 2.422
[info]   CI (99.9%): [339.501, 358.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   390.889 ±(99.9%) 560.823 MB/sec [Average]
[info]   (min, avg, max) = (325.079, 390.889, 651.423), stdev = 145.644
[info]   CI (99.9%): [≈ 0, 951.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   143.556 ±(99.9%) 208.050 B/op [Average]
[info]   (min, avg, max) = (118.610, 143.556, 240.196), stdev = 54.030
[info]   CI (99.9%): [≈ 0, 351.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.450 ±(99.9%) 3.694 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.450, 2.166), stdev = 0.959
[info]   CI (99.9%): [≈ 0, 4.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.165 ±(99.9%) 1.354 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.165, 0.794), stdev = 0.352
[info]   CI (99.9%): [≈ 0, 1.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 7.000), stdev = 2.280
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay
[info] # Run progress: 98.36% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 93659.129 ops/s
[info] # Warmup Iteration   2: 196041.916 ops/s
[info] # Warmup Iteration   3: 196056.814 ops/s
[info] # Warmup Iteration   4: 201073.430 ops/s
[info] # Warmup Iteration   5: 199132.683 ops/s
[info] Iteration   1: 200192.857 ops/s
[info]                  ·gc.alloc.rate:                   1091.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7763.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.327 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 200847.887 ops/s
[info]                  ·gc.alloc.rate:                   1094.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10372.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.489 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 201253.310 ops/s
[info]                  ·gc.alloc.rate:                   1097.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7806.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.488 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 200835.067 ops/s
[info]                  ·gc.alloc.rate:                   1094.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7859.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 199499.444 ops/s
[info]                  ·gc.alloc.rate:                   1087.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7938.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay":
[info]   200525.713 ±(99.9%) 2648.920 ops/s [Average]
[info]   (min, avg, max) = (199499.444, 200525.713, 201253.310), stdev = 687.916
[info]   CI (99.9%): [197876.793, 203174.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1093.099 ±(99.9%) 14.391 MB/sec [Average]
[info]   (min, avg, max) = (1087.515, 1093.099, 1097.038), stdev = 3.737
[info]   CI (99.9%): [1078.708, 1107.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8576.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8576.002, 8576.002, 8576.002), stdev = 0.001
[info]   CI (99.9%): [8576.002, 8576.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1064.129 ±(99.9%) 560.485 MB/sec [Average]
[info]   (min, avg, max) = (987.966, 1064.129, 1324.203), stdev = 145.556
[info]   CI (99.9%): [503.644, 1624.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8347.993 ±(99.9%) 4365.044 B/op [Average]
[info]   (min, avg, max) = (7763.952, 8347.993, 10372.482), stdev = 1133.588
[info]   CI (99.9%): [3982.949, 12713.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.326 ±(99.9%) 0.626 B/op [Average]
[info]   (min, avg, max) = (0.163, 0.326, 0.489), stdev = 0.163
[info]   CI (99.9%): [≈ 0, 0.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 11.000), stdev = 2.702
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:16:23
[info] Benchmark                                                                         Mode  Cnt         Score        Error   Units
[info] JsonCodecBenchmark.readAnyRefsCirce                                              thrpt    5   1122474.645 ±  19268.861   ops/s
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate                               thrpt    5      1815.053 ±     31.252  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                          thrpt    5      2544.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1829.933 ±    707.355  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2564.965 ±    995.691    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.046 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.064 ±      0.094    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.count                                    thrpt    5        27.000               counts
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.time                                     thrpt    5        68.000                   ms
[info] JsonCodecBenchmark.readAnyRefsJackson                                            thrpt    5   1936569.096 ±  71886.688   ops/s
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                             thrpt    5      1358.957 ±     50.450  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                        thrpt    5      1104.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1342.609 ±     37.640  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1090.749 ±     22.162    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.042 ±      0.057  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.034 ±      0.046    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.count                                  thrpt    5        20.000               counts
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.time                                   thrpt    5        38.000                   ms
[info] JsonCodecBenchmark.readAnyRefsJsoniter                                           thrpt    5   6207577.640 ± 116460.043   ops/s
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                            thrpt    5       789.147 ±     14.777  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                       thrpt    5       200.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       792.639 ±    692.212  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       200.976 ±    177.489    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.013 ±      0.023    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.count                                 thrpt    5        12.000               counts
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.time                                  thrpt    5        20.000                   ms
[info] JsonCodecBenchmark.readAnyRefsPlay                                               thrpt    5    433941.305 ±  27596.288   ops/s
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                thrpt    5      1147.406 ±     73.014  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                           thrpt    5      4160.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1132.819 ±    683.650  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      4113.229 ±   2660.965    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±      0.119  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.166 ±      0.431    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.count                                     thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.time                                      thrpt    5        35.000                   ms
[info] JsonCodecBenchmark.readArraysCirce                                               thrpt    5    514733.717 ±   9065.842   ops/s
[info] JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate                                thrpt    5      1677.762 ±     29.565  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate.norm                           thrpt    5      5128.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                       thrpt    5      1692.198 ±     26.744  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5172.197 ±    110.287    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                   thrpt    5         0.054 ±      0.122  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.166 ±      0.373    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.count                                     thrpt    5        25.000               counts
[info] JsonCodecBenchmark.readArraysCirce:·gc.time                                      thrpt    5        30.000                   ms
[info] JsonCodecBenchmark.readArraysJackson                                             thrpt    5   1284753.099 ±  54045.393   ops/s
[info] JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate                              thrpt    5      1169.383 ±     49.238  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate.norm                         thrpt    5      1432.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                     thrpt    5      1137.495 ±    707.144  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5      1394.636 ±    916.381    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                 thrpt    5         0.021 ±      0.057  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.026 ±      0.069    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.count                                   thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readArraysJackson:·gc.time                                    thrpt    5        37.000                   ms
[info] JsonCodecBenchmark.readArraysJsoniter                                            thrpt    5   2620102.912 ±  91174.976   ops/s
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate                             thrpt    5      1199.082 ±     41.625  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                        thrpt    5       720.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5      1204.269 ±    724.007  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5       722.760 ±    423.613    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5         0.067 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.040 ±      0.041    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.count                                  thrpt    5        18.000               counts
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.time                                   thrpt    5        29.000                   ms
[info] JsonCodecBenchmark.readArraysPlay                                                thrpt    5    223573.611 ±   3209.309   ops/s
[info] JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate                                 thrpt    5      1369.905 ±     19.696  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate.norm                            thrpt    5      9640.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                        thrpt    5      1340.121 ±     38.140  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5      9430.350 ±    175.468    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                    thrpt    5         0.058 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.410 ±      0.473    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.count                                      thrpt    5        20.000               counts
[info] JsonCodecBenchmark.readArraysPlay:·gc.time                                       thrpt    5        46.000                   ms
[info] JsonCodecBenchmark.readBitSetsJackson                                            thrpt    5   1613359.687 ±  20419.921   ops/s
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate                             thrpt    5      1025.503 ±     13.000  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                        thrpt    5      1000.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1063.884 ±    540.700  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1037.461 ±    528.381    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.042 ±      0.057  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.041 ±      0.055    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.count                                  thrpt    5        16.000               counts
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.time                                   thrpt    5        28.000                   ms
[info] JsonCodecBenchmark.readBitSetsJsoniter                                           thrpt    5   5664604.015 ± 169028.474   ops/s
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                            thrpt    5       604.887 ±     18.033  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                       thrpt    5       168.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       590.114 ±    559.533  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       163.873 ±    155.069    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.042 ±      0.098  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.012 ±      0.027    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.count                                 thrpt    5         9.000               counts
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.time                                  thrpt    5         9.000                   ms
[info] JsonCodecBenchmark.readBitSetsPlay                                               thrpt    5    268612.266 ±   9769.623   ops/s
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate                                thrpt    5      1219.739 ±     44.428  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                           thrpt    5      7144.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1201.931 ±    715.525  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      7044.613 ±   4324.663    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.033 ±      0.044  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.195 ±      0.261    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.count                                     thrpt    5        18.000               counts
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.time                                      thrpt    5        42.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsCirce                                        thrpt    5    560708.700 ±  34915.937   ops/s
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate                         thrpt    5      1861.856 ±    116.002  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                    thrpt    5      5224.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                thrpt    5      1830.595 ±    719.794  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm           thrpt    5      5136.425 ±   1999.450    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space            thrpt    5         0.042 ±      0.098  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.117 ±      0.274    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.count                              thrpt    5        27.000               counts
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.time                               thrpt    5        52.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsJackson                                      thrpt    5    716897.754 ±  30125.989   ops/s
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate                       thrpt    5       889.491 ±     37.488  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                  thrpt    5      1952.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space              thrpt    5       860.686 ±    705.593  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm         thrpt    5      1888.932 ±   1549.478    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space          thrpt    5         0.021 ±      0.057  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.046 ±      0.123    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.count                            thrpt    5        13.000               counts
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.time                             thrpt    5        27.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsJsoniter                                     thrpt    5   4346900.044 ±  65920.751   ops/s
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                      thrpt    5       198.932 ±      3.011  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                 thrpt    5        72.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space             thrpt    5       167.467 ±    598.763  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm        thrpt    5        60.757 ±    217.133    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space         thrpt    5         0.435 ±      3.659  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm    thrpt    5         0.158 ±      1.325    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.count                           thrpt    5         3.000               counts
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.time                            thrpt    5         8.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsPlay                                         thrpt    5    191456.014 ±   5867.535   ops/s
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate                          thrpt    5       991.105 ±     30.383  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                     thrpt    5      8144.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                 thrpt    5       993.819 ±     29.442  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm            thrpt    5      8166.632 ±    310.422    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space             thrpt    5         0.037 ±      0.119  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.309 ±      0.986    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.count                               thrpt    5        15.000               counts
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.time                                thrpt    5        31.000                   ms
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter                                    thrpt    5   3098102.844 ± 103522.505   ops/s
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                     thrpt    5      1465.104 ±     48.880  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                thrpt    5       744.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space            thrpt    5      1481.041 ±    720.267  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm       thrpt    5       752.311 ±    373.490    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space        thrpt    5         0.067 ±      0.143  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.034 ±      0.073    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                          thrpt    5        22.000               counts
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                           thrpt    5        39.000                   ms
[info] JsonCodecBenchmark.readIntAndLongMapsPlay                                        thrpt    5    243043.379 ±   2672.134   ops/s
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                         thrpt    5      1311.235 ±     14.360  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                    thrpt    5      8488.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                thrpt    5      1338.444 ±     40.891  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm           thrpt    5      8664.230 ±    304.234    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space            thrpt    5         0.050 ±      0.134  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.324 ±      0.873    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.count                              thrpt    5        20.000               counts
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.time                               thrpt    5        41.000                   ms
[info] JsonCodecBenchmark.readIterablesCirce                                            thrpt    5    528635.467 ±  40519.074   ops/s
[info] JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate                             thrpt    5      1852.136 ±    142.081  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm                        thrpt    5      5512.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                    thrpt    5      1830.639 ±    719.494  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm               thrpt    5      5447.039 ±   2041.165    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                thrpt    5         0.058 ±      0.088  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.173 ±      0.254    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.count                                  thrpt    5        27.000               counts
[info] JsonCodecBenchmark.readIterablesCirce:·gc.time                                   thrpt    5        65.000                   ms
[info] JsonCodecBenchmark.readIterablesJackson                                          thrpt    5    563177.674 ±  15702.188   ops/s
[info] JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate                           thrpt    5       572.751 ±     15.950  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                      thrpt    5      1600.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                  thrpt    5       527.276 ±    695.117  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm             thrpt    5      1473.192 ±   1944.406    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space              thrpt    5         0.037 ±      0.243  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.104 ±      0.674    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.count                                thrpt    5         8.000               counts
[info] JsonCodecBenchmark.readIterablesJackson:·gc.time                                 thrpt    5        18.000                   ms
[info] JsonCodecBenchmark.readIterablesJsoniter                                         thrpt    5   2946867.112 ± 125003.571   ops/s
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                          thrpt    5       734.258 ±     31.085  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                     thrpt    5       392.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                 thrpt    5       724.928 ±    561.436  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm            thrpt    5       387.679 ±    318.724    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space             thrpt    5         0.037 ±      0.105  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.020 ±      0.056    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.count                               thrpt    5        11.000               counts
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.time                                thrpt    5        24.000                   ms
[info] JsonCodecBenchmark.readIterablesPlay                                             thrpt    5    189888.754 ±   4121.171   ops/s
[info] JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate                              thrpt    5      1339.258 ±     29.123  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                         thrpt    5     11096.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                     thrpt    5      1338.523 ±     40.570  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                thrpt    5     11090.390 ±    501.283    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                 thrpt    5         0.054 ±      0.072  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.448 ±      0.590    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.count                                   thrpt    5        20.000               counts
[info] JsonCodecBenchmark.readIterablesPlay:·gc.time                                    thrpt    5        42.000                   ms
[info] JsonCodecBenchmark.readMapsCirce                                                 thrpt    5    462680.056 ±  13911.761   ops/s
[info] JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate                                  thrpt    5      1644.564 ±     49.541  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate.norm                             thrpt    5      5592.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                         thrpt    5      1623.382 ±    568.542  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5520.905 ±   1972.306    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                     thrpt    5         0.042 ±      0.057  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.142 ±      0.194    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.count                                       thrpt    5        24.000               counts
[info] JsonCodecBenchmark.readMapsCirce:·gc.time                                        thrpt    5        48.000                   ms
[info] JsonCodecBenchmark.readMapsJackson                                               thrpt    5    890100.719 ±  15457.526   ops/s
[info] JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate                                thrpt    5      1050.222 ±     17.948  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1856.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1071.537 ±    564.904  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1893.901 ±   1006.994    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.050 ±      0.185  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.088 ±      0.325    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.count                                     thrpt    5        16.000               counts
[info] JsonCodecBenchmark.readMapsJackson:·gc.time                                      thrpt    5        26.000                   ms
[info] JsonCodecBenchmark.readMapsJsoniter                                              thrpt    5   3313366.225 ± 119152.251   ops/s
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate                               thrpt    5       825.588 ±     29.745  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       392.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       859.237 ±    690.955  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       407.606 ±    319.966    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.058 ±      0.132  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.028 ±      0.062    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.count                                    thrpt    5        13.000               counts
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.time                                     thrpt    5        25.000                   ms
[info] JsonCodecBenchmark.readMapsPlay                                                  thrpt    5    253919.592 ±   4953.625   ops/s
[info] JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate                                   thrpt    5      1316.985 ±     25.608  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                              thrpt    5      8160.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1338.523 ±     40.473  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      8293.648 ±    312.151    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.046 ±      0.183  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.285 ±      1.139    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.count                                        thrpt    5        20.000               counts
[info] JsonCodecBenchmark.readMapsPlay:·gc.time                                         thrpt    5        47.000                   ms
[info] JsonCodecBenchmark.readMutableMapsJackson                                        thrpt    5    690841.633 ±  16582.768   ops/s
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                         thrpt    5       895.683 ±     21.821  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                    thrpt    5      2040.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                thrpt    5       863.756 ±    702.216  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5      1969.169 ±   1637.638    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.017 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.038 ±      0.154    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.count                              thrpt    5        13.000               counts
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.time                               thrpt    5        12.000                   ms
[info] JsonCodecBenchmark.readMutableMapsJsoniter                                       thrpt    5   2458498.036 ±  33787.843   ops/s
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                        thrpt    5      1675.199 ±     22.988  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                   thrpt    5      1072.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space               thrpt    5      1620.315 ±    578.290  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5      1036.787 ±    365.638    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.035 ±      0.059    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.count                             thrpt    5        24.000               counts
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.time                              thrpt    5        26.000                   ms
[info] JsonCodecBenchmark.readMutableMapsPlay                                           thrpt    5    213939.755 ±   4639.227   ops/s
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                            thrpt    5      1127.006 ±     24.337  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                       thrpt    5      8288.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1132.650 ±    713.548  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8324.445 ±   5082.999    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.050 ±      0.166  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.367 ±      1.217    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.count                                 thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.time                                  thrpt    5        18.000                   ms
[info] JsonCodecBenchmark.readPrimitivesJackson                                         thrpt    5    977775.006 ±  13305.390   ops/s
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                          thrpt    5       710.989 ±      9.641  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                     thrpt    5      1144.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       720.720 ±    567.083  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5      1159.762 ±    915.439    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.017 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.027 ±      0.108    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.count                               thrpt    5        11.000               counts
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.time                                thrpt    5        16.000                   ms
[info] JsonCodecBenchmark.readPrimitivesJsoniter                                        thrpt    5   3035632.256 ±  26735.432   ops/s
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                         thrpt    5        92.617 ±      0.814  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                    thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       102.362 ±    539.724  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5        53.169 ±    280.344    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         1.139 ±      9.803  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.591 ±      5.088    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.count                              thrpt    5         2.000               counts
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.time                               thrpt    5         5.000                   ms
[info] JsonCodecBenchmark.readPrimitivesPlay                                            thrpt    5    162563.633 ±   2491.372   ops/s
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                             thrpt    5      1106.123 ±     16.653  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                        thrpt    5     10704.003 ±      0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1065.594 ±    575.941  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5     10312.947 ±   5619.042    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.046 ±      0.036  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.443 ±      0.352    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.count                                  thrpt    5        16.000               counts
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.time                                   thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsCirce                                             thrpt    5   1285701.320 ±  25893.402   ops/s
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate                              thrpt    5      1438.310 ±     28.974  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                         thrpt    5      1760.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                     thrpt    5      1484.351 ±    701.895  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                thrpt    5      1816.932 ±    882.137    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                 thrpt    5         0.033 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.041 ±      0.088    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.count                                   thrpt    5        22.000               counts
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.time                                    thrpt    5        28.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsJackson                                           thrpt    5   3809192.586 ±  57325.539   ops/s
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                            thrpt    5      1045.961 ±     15.701  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                       thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1003.018 ±     26.551  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       414.269 ±     12.894    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.029 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.012 ±      0.038    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.count                                 thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.time                                  thrpt    5        33.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsJsoniter                                          thrpt    5  14284603.938 ± 972507.807   ops/s
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                           thrpt    5       435.816 ±     29.666  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                      thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       391.576 ±    561.454  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5        43.038 ±     59.942    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.012 ±      0.108  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.001 ±      0.012    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.count                                thrpt    5         6.000               counts
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.time                                 thrpt    5        16.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsPlay                                              thrpt    5   1045785.992 ±  34906.672   ops/s
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                               thrpt    5      1547.469 ±     51.532  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                          thrpt    5      2328.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1548.516 ±    701.845  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2328.756 ±   1020.890    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.071 ±      0.146  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.107 ±      0.220    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.count                                    thrpt    5        23.000               counts
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.time                                     thrpt    5        37.000                   ms
[info] JsonCodecBenchmark.writeArraysCirce                                              thrpt    5    713038.053 ±  16465.164   ops/s
[info] JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate                               thrpt    5      1711.379 ±     39.452  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm                          thrpt    5      3776.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1759.402 ±    554.647  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      3882.699 ±   1266.991    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.029 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.064 ±      0.202    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.count                                    thrpt    5        26.000               counts
[info] JsonCodecBenchmark.writeArraysCirce:·gc.time                                     thrpt    5        44.000                   ms
[info] JsonCodecBenchmark.writeArraysJackson                                            thrpt    5   1651741.895 ±  65723.718   ops/s
[info] JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate                             thrpt    5       957.498 ±     38.097  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm                        thrpt    5       912.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1000.886 ±     26.735  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5       953.427 ±     52.343    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.029 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.028 ±      0.086    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.count                                  thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeArraysJackson:·gc.time                                   thrpt    5        25.000                   ms
[info] JsonCodecBenchmark.writeArraysJsoniter                                           thrpt    5   4238889.552 ± 127884.687   ops/s
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate                            thrpt    5      1163.993 ±     35.096  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                       thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1136.621 ±    713.919  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       421.761 ±    262.048    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.020 ±      0.034    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.count                                 thrpt    5        17.000               counts
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.time                                  thrpt    5        31.000                   ms
[info] JsonCodecBenchmark.writeArraysPlay                                               thrpt    5    350686.207 ±  12467.988   ops/s
[info] JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate                                thrpt    5      1251.829 ±     44.497  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm                           thrpt    5      5616.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1269.433 ±    563.507  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5691.304 ±   2387.546    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±      0.088  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.206 ±      0.397    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.count                                     thrpt    5        19.000               counts
[info] JsonCodecBenchmark.writeArraysPlay:·gc.time                                      thrpt    5        28.000                   ms
[info] JsonCodecBenchmark.writeBitSetsJackson                                           thrpt    5   2682023.764 ±  34910.102   ops/s
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                            thrpt    5      1145.607 ±     14.920  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                       thrpt    5       672.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1140.301 ±    698.320  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       668.770 ±    405.659    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.017 ±      0.036  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.010 ±      0.021    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.count                                 thrpt    5        17.000               counts
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.time                                  thrpt    5        27.000                   ms
[info] JsonCodecBenchmark.writeBitSetsJsoniter                                          thrpt    5   3837377.720 ±  71365.898   ops/s
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                           thrpt    5       702.469 ±     13.083  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                      thrpt    5       288.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       658.150 ±     14.234  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5       269.838 ±      9.574    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.050 ±      0.108  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.020 ±      0.044    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.count                                thrpt    5        10.000               counts
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.time                                 thrpt    5        41.000                   ms
[info] JsonCodecBenchmark.writeBitSetsPlay                                              thrpt    5    471809.032 ±  39162.278   ops/s
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate                               thrpt    5      1396.298 ±    115.869  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                          thrpt    5      4656.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1409.383 ±    565.080  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      4701.343 ±   1914.299    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.046 ±      0.143  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.153 ±      0.478    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.count                                    thrpt    5        21.000               counts
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.time                                     thrpt    5        20.000                   ms
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson                                    thrpt    5    989745.096 ±  12084.399   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                     thrpt    5      1263.247 ±     15.351  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                thrpt    5      2008.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space            thrpt    5      1209.672 ±    711.914  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm       thrpt    5      1923.235 ±   1142.951    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space        thrpt    5         0.033 ±      0.122  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.053 ±      0.194    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.count                          thrpt    5        18.000               counts
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.time                           thrpt    5        25.000                   ms
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter                                   thrpt    5   2328035.933 ±  80265.244   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                    thrpt    5       449.850 ±     15.505  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm               thrpt    5       304.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space           thrpt    5       457.168 ±    689.903  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm      thrpt    5       309.682 ±    476.340    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space       thrpt    5         0.012 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.009 ±      0.049    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                         thrpt    5         7.000               counts
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                          thrpt    5        22.000                   ms
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay                                       thrpt    5    244158.052 ±   8084.770   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                        thrpt    5       957.236 ±     31.661  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                   thrpt    5      6168.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space               thrpt    5       926.584 ±    562.711  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm          thrpt    5      5969.088 ±   3586.712    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space           thrpt    5         0.029 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.187 ±      0.460    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.count                             thrpt    5        14.000               counts
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.time                              thrpt    5        20.000                   ms
[info] JsonCodecBenchmark.writeIterablesCirce                                           thrpt    5    599040.890 ±  27321.933   ops/s
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate                            thrpt    5      1535.275 ±     69.721  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                       thrpt    5      4032.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                   thrpt    5      1486.397 ±    716.269  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm              thrpt    5      3903.591 ±   1867.649    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space               thrpt    5         0.025 ±      0.174  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.066 ±      0.456    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.count                                 thrpt    5        22.000               counts
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.time                                  thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.writeIterablesJackson                                         thrpt    5   1219204.414 ±  23837.131   ops/s
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate                          thrpt    5       750.171 ±     14.678  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                     thrpt    5       968.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       728.615 ±    570.107  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5       940.173 ±    735.089    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.008 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.011 ±      0.093    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.count                               thrpt    5        11.000               counts
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.time                                thrpt    5        24.000                   ms
[info] JsonCodecBenchmark.writeIterablesJsoniter                                        thrpt    5   4837737.495 ± 224087.012   ops/s
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                         thrpt    5       811.808 ±     37.516  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                    thrpt    5       264.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       792.372 ±    685.345  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       257.432 ±    216.695    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.054 ±      0.146  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.018 ±      0.047    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.count                              thrpt    5        12.000               counts
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.time                               thrpt    5        20.000                   ms
[info] JsonCodecBenchmark.writeIterablesPlay                                            thrpt    5    379475.476 ±   4553.281   ops/s
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate                             thrpt    5      1306.345 ±     15.720  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                        thrpt    5      5416.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1339.079 ±     39.286  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5      5551.783 ±    190.670    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.042 ±      0.113  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.173 ±      0.468    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.count                                  thrpt    5        20.000               counts
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.time                                   thrpt    5        27.000                   ms
[info] JsonCodecBenchmark.writeMapsCirce                                                thrpt    5    344999.546 ±  13491.873   ops/s
[info] JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate                                 thrpt    5      1026.321 ±     39.576  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm                            thrpt    5      4680.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                        thrpt    5      1062.224 ±    538.281  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5      4848.822 ±   2658.720    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                    thrpt    5         0.033 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.152 ±      0.334    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.count                                      thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writeMapsCirce:·gc.time                                       thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.writeMapsJackson                                              thrpt    5   1073988.034 ±  21441.781   ops/s
[info] JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate                               thrpt    5      1114.134 ±     22.262  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                          thrpt    5      1632.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                      thrpt    5      1072.583 ±    579.509  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                 thrpt    5      1570.968 ±    841.562    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                  thrpt    5         0.033 ±      0.044  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.049 ±      0.064    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.count                                    thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writeMapsJackson:·gc.time                                     thrpt    5        27.000                   ms
[info] JsonCodecBenchmark.writeMapsJsoniter                                             thrpt    5   2368343.391 ±  60664.762   ops/s
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                              thrpt    5       566.029 ±     14.503  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                         thrpt    5       376.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5       589.249 ±    561.939  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5       391.130 ±    369.389    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.062 ±      0.150  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.041 ±      0.099    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.count                                   thrpt    5         9.000               counts
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.time                                    thrpt    5        20.000                   ms
[info] JsonCodecBenchmark.writeMapsPlay                                                 thrpt    5    257573.254 ±   4159.722   ops/s
[info] JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate                                  thrpt    5       949.548 ±     15.321  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                             thrpt    5      5800.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                         thrpt    5       926.822 ±    571.223  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5659.941 ±   3457.651    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.042 ±      0.113  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.254 ±      0.694    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.count                                       thrpt    5        14.000               counts
[info] JsonCodecBenchmark.writeMapsPlay:·gc.time                                        thrpt    5        23.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsCirce                                         thrpt    5    359665.942 ±  13273.587   ops/s
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate                          thrpt    5      1046.115 ±     38.595  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                     thrpt    5      4576.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                 thrpt    5      1068.306 ±    549.619  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm            thrpt    5      4677.431 ±   2577.441    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space             thrpt    5         0.033 ±      0.108  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.147 ±      0.480    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.count                               thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.time                                thrpt    5        26.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsJackson                                       thrpt    5    967823.630 ±  31583.477   ops/s
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                        thrpt    5       959.659 ±     31.331  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                   thrpt    5      1560.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space               thrpt    5      1000.617 ±     26.517  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm          thrpt    5      1626.600 ±     14.292    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space           thrpt    5         0.033 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.054 ±      0.149    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.count                             thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.time                              thrpt    5        31.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsJsoniter                                      thrpt    5   2069923.767 ±  29175.934   ops/s
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                       thrpt    5       505.226 ±      7.113  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                  thrpt    5       384.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space              thrpt    5       522.735 ±    686.741  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm         thrpt    5       397.537 ±    524.767    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space          thrpt    5         0.029 ±      0.122  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.022 ±      0.092    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.count                            thrpt    5         8.000               counts
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.time                             thrpt    5        13.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsPlay                                          thrpt    5    261229.882 ±   4475.577   ops/s
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                           thrpt    5      1005.563 ±     17.200  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                      thrpt    5      6056.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                  thrpt    5       995.009 ±     29.274  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm             thrpt    5      5992.469 ±    162.343    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space              thrpt    5         0.054 ±      0.122  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.326 ±      0.732    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.count                                thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.time                                 thrpt    5        23.000                   ms
[info] JsonCodecBenchmark.writePrimitivesCirce                                          thrpt    5    661423.531 ±  27457.103   ops/s
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate                           thrpt    5      1294.873 ±     53.804  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                      thrpt    5      3080.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                  thrpt    5      1278.516 ±    565.780  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm             thrpt    5      3038.686 ±   1252.180    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space              thrpt    5         0.012 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.030 ±      0.170    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.count                                thrpt    5        19.000               counts
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.time                                 thrpt    5        31.000                   ms
[info] JsonCodecBenchmark.writePrimitivesJackson                                        thrpt    5   1596987.357 ± 109849.123   ops/s
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                         thrpt    5       666.331 ±     46.596  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                    thrpt    5       656.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                thrpt    5       723.692 ±   1062.791  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5       709.462 ±   1018.785    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.033 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.033 ±      0.089    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.count                              thrpt    5        11.000               counts
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.time                               thrpt    5        34.000                   ms
[info] JsonCodecBenchmark.writePrimitivesJsoniter                                       thrpt    5   4286407.865 ± 112732.140   ops/s
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                        thrpt    5       348.826 ±      9.325  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                   thrpt    5       128.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space               thrpt    5       390.889 ±    560.823  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5       143.556 ±    208.050    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.450 ±      3.694  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.165 ±      1.354    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.count                             thrpt    5         6.000               counts
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.time                              thrpt    5        16.000                   ms
[info] JsonCodecBenchmark.writePrimitivesPlay                                           thrpt    5    200525.713 ±   2648.920   ops/s
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                            thrpt    5      1093.099 ±     14.391  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                       thrpt    5      8576.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1064.129 ±    560.485  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8347.993 ±   4365.044    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.042 ±      0.080  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.326 ±      0.626    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.count                                 thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.time                                  thrpt    5        33.000                   ms
[success] Total time: 1014 s, completed Nov 1, 2017 7:47:35 PM
