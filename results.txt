[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Oct 31, 2017 1:53:13 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 4 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:215:9: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]       v.getBytes(0, remaining, buf, count)
[warn]         ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:225:13: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]           v.getBytes(i, j, buf, count)
[warn]             ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:231:13: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]           v.getBytes(i, j, buf, count)
[warn]             ^
[warn] three warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:49:53: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       private val fields: Array[Array[Char]] = Array("s".toCharArray, "bd".toCharArray, "os".toCharArray);
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, fields(0)))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1868115770 => if (in.isReusableCharsEqualsTo(l, fields(1)))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _bd = in.readBigDecimal(_bd)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 135249149 => if (in.isReusableCharsEqualsTo(l, fields(2)))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs];
[info]           var first = true;
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           if (x.os.ne(null).&&(x.os.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("os");
[info]               out.writeVal(x.os.get)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = materialize[AnyRefs]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:51:51: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       private val fields: Array[Array[Char]] = Array("aa".toCharArray, "a".toCharArray);
[info]       private val reqFields: Array[String] = Array("aa", "a");
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Arrays = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _aa: Array[Array[Int]] = new Array[Array[Int]](0);
[info]           var _a: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1396692260 => if (in.isReusableCharsEqualsTo(l, fields(0)))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _aa = d1(in, _aa)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 272946562 => if (in.isReusableCharsEqualsTo(l, fields(1)))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _a = d2(in, _a)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Arrays];
[info]           var first = true;
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("aa");
[info]             e1(out, x.aa)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("a");
[info]             e2(out, x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: Array[Int]): Array[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               buf.+=(d0(in, new Array[Int](0)))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d2(in: JsonReader, default: Array[BigInt]): Array[BigInt] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               buf.+=(in.readBigInt(null))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: Array[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: Array[Array[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = out.writeSep(first);
[info]             e0(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: Array[BigInt]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = materialize[Arrays]
[info]                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:53:53: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       private val fields: Array[Array[Char]] = Array("bs".toCharArray, "mbs".toCharArray);
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.BitSets = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case -311899171 => if (in.isReusableCharsEqualsTo(l, fields(0)))
[info]                       _bs = d0(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 395882128 => if (in.isReusableCharsEqualsTo(l, fields(1)))
[info]                       _mbs = d1(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.BitSets];
[info]           var first = true;
[info]           if (x.bs.ne(null).&&(x.bs.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("bs");
[info]               e0(out, x.bs)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mbs.ne(null).&&(x.mbs.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("mbs");
[info]               e1(out, x.mbs)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = BitSet.newBuilder;
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = BitSet.empty;
[info]             do 
[info]               buf.add(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = out.writeSep(first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.mutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = out.writeSep(first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = materialize[BitSets]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:55:57: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       private val fields: Array[Array[Char]] = Array("l".toCharArray, "s".toCharArray, "ls".toCharArray);
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Iterables = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, fields(0)))
[info]                       _l = d0(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, fields(1)))
[info]                       _s = d1(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 753022030 => if (in.isReusableCharsEqualsTo(l, fields(2)))
[info]                       _ls = d2(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Iterables];
[info]           var first = true;
[info]           if (x.l.ne(null).&&(x.l.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("l");
[info]               e0(out, x.l)
[info]             }
[info]           else
[info]             ();
[info]           if (x.s.ne(null).&&(x.s.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("s");
[info]               e1(out, x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.ls.ne(null).&&(x.ls.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("ls");
[info]               e2(out, x.ls)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: List[String]): List[String] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = List.newBuilder[String];
[info]             do 
[info]               buf.+=(in.readString(null))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = Set.newBuilder[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d2(in: JsonReader, default: List[Set[Int]]): List[Set[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               buf.+=(d1(in, Set.empty[Int]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = out.writeSep(first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = out.writeSep(first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = out.writeSep(first);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = materialize[Iterables]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:57:47: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       private val fields: Array[Array[Char]] = Array("m".toCharArray, "mm".toCharArray);
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Maps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, fields(0)))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, fields(1)))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Maps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = HashMap.empty[Long, Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsInt(), d1(in, HashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = materialize[Maps]
[info]                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:59:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       private val fields: Array[Array[Char]] = Array("m".toCharArray, "mm".toCharArray);
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, fields(0)))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, fields(1)))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf.update(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               buf.update(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               buf.update(in.readObjectFieldAsInt(), d1(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = materialize[MutableMaps]
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:61:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       private val fields: Array[Array[Char]] = Array("m".toCharArray, "mm".toCharArray);
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, fields(0)))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, fields(1)))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = IntMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsInt(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = LongMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               buf.update(in.readObjectFieldAsLong(), d1(in, LongMap.empty[Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:63:59: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       private val fields: Array[Array[Char]] = Array("b".toCharArray, "s".toCharArray, "i".toCharArray, "l".toCharArray, "bl".toCharArray, "ch".toCharArray, "dbl".toCharArray, "f".toCharArray);
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Primitives = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 255;
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 479329913 => if (in.isReusableCharsEqualsTo(l, fields(0)))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, fields(1)))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isReusableCharsEqualsTo(l, fields(2)))
[info]                       {
[info]                         req0.&=(-5);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, fields(3)))
[info]                       {
[info]                         req0.&=(-9);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -986815646 => if (in.isReusableCharsEqualsTo(l, fields(4)))
[info]                       {
[info]                         req0.&=(-17);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1128364876 => if (in.isReusableCharsEqualsTo(l, fields(5)))
[info]                       {
[info]                         req0.&=(-33);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 977778859 => if (in.isReusableCharsEqualsTo(l, fields(6)))
[info]                       {
[info]                         req0.&=(-65);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2108804597 => if (in.isReusableCharsEqualsTo(l, fields(7)))
[info]                       {
[info]                         req0.&=(-129);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Primitives];
[info]           var first = true;
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = materialize[Primitives]
[info]                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:65:65: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       private val fields: Array[Array[Char]] = Array("s".toCharArray, "l".toCharArray);
[info]       private val reqFields: Array[String] = Array("s", "l");
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, fields(0)))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, fields(1)))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.ExtractFields];
[info]           var first = true;
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = materialize[ExtractFields]
[info]                                                                 ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 82 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 65 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*CodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce
[info] # Run progress: 0.00% complete, ETA 00:10:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 354035.064 ops/s
[info] # Warmup Iteration   2: 852614.272 ops/s
[info] # Warmup Iteration   3: 1088641.176 ops/s
[info] # Warmup Iteration   4: 1258170.217 ops/s
[info] # Warmup Iteration   5: 1270783.669 ops/s
[info] Iteration   1: 1280219.956 ops/s
[info]                  ·gc.alloc.rate:                   1998.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2066.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1278736.715 ops/s
[info]                  ·gc.alloc.rate:                   1996.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2494.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1270581.350 ops/s
[info]                  ·gc.alloc.rate:                   1983.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2518.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1269301.925 ops/s
[info]                  ·gc.alloc.rate:                   1981.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2525.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1240226.753 ops/s
[info]                  ·gc.alloc.rate:                   1936.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2586.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce":
[info]   1267813.340 ±(99.9%) 62213.280 ops/s [Average]
[info]   (min, avg, max) = (1240226.753, 1267813.340, 1280219.956), stdev = 16156.591
[info]   CI (99.9%): [1205600.060, 1330026.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1979.188 ±(99.9%) 97.296 MB/sec [Average]
[info]   (min, avg, max) = (1936.062, 1979.188, 1998.622), stdev = 25.267
[info]   CI (99.9%): [1881.892, 2076.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2456.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2456.000, 2456.000, 2456.000), stdev = 0.001
[info]   CI (99.9%): [2456.000, 2456.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1964.095 ±(99.9%) 608.078 MB/sec [Average]
[info]   (min, avg, max) = (1681.715, 1964.095, 2039.143), stdev = 157.916
[info]   CI (99.9%): [1356.017, 2572.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2438.495 ±(99.9%) 811.170 B/op [Average]
[info]   (min, avg, max) = (2066.570, 2438.495, 2586.764), stdev = 210.658
[info]   CI (99.9%): [1627.325, 3249.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.062 ±(99.9%) 0.090 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.062, 0.079), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.000, 12.000), stdev = 1.871
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson
[info] # Run progress: 1.64% complete, ETA 00:16:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1227963.189 ops/s
[info] # Warmup Iteration   2: 1798391.388 ops/s
[info] # Warmup Iteration   3: 1841371.740 ops/s
[info] # Warmup Iteration   4: 1865214.840 ops/s
[info] # Warmup Iteration   5: 1848635.864 ops/s
[info] Iteration   1: 1861447.470 ops/s
[info]                  ·gc.alloc.rate:                   1306.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1122.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1868429.334 ops/s
[info]                  ·gc.alloc.rate:                   1311.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1125.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1855009.498 ops/s
[info]                  ·gc.alloc.rate:                   1301.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1139.440 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 1862119.971 ops/s
[info]                  ·gc.alloc.rate:               1306.706 MB/sec
[info]                  ·gc.alloc.rate.norm:          1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1139.605 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 1859648.567 ops/s
[info]                  ·gc.alloc.rate:                   1305.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1144.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson":
[info]   1861330.968 ±(99.9%) 18648.247 ops/s [Average]
[info]   (min, avg, max) = (1855009.498, 1861330.968, 1868429.334), stdev = 4842.891
[info]   CI (99.9%): [1842682.721, 1879979.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1306.207 ±(99.9%) 13.121 MB/sec [Average]
[info]   (min, avg, max) = (1301.748, 1306.207, 1311.208), stdev = 3.408
[info]   CI (99.9%): [1293.086, 1319.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1342.083 ±(99.9%) 37.663 MB/sec [Average]
[info]   (min, avg, max) = (1328.237, 1342.083, 1352.873), stdev = 9.781
[info]   CI (99.9%): [1304.420, 1379.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1134.334 ±(99.9%) 37.070 B/op [Average]
[info]   (min, avg, max) = (1122.532, 1134.334, 1144.441), stdev = 9.627
[info]   CI (99.9%): [1097.264, 1171.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.035), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.400, 13.000), stdev = 3.847
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 3.28% complete, ETA 00:16:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5777888.371 ops/s
[info] # Warmup Iteration   2: 6106009.877 ops/s
[info] # Warmup Iteration   3: 6108469.343 ops/s
[info] # Warmup Iteration   4: 6163920.244 ops/s
[info] # Warmup Iteration   5: 6150335.080 ops/s
[info] Iteration   1: 6161795.240 ops/s
[info]                  ·gc.alloc.rate:                   783.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 6192061.166 ops/s
[info]                  ·gc.alloc.rate:                   787.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     250.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 6246751.956 ops/s
[info]                  ·gc.alloc.rate:                   794.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 6113404.213 ops/s
[info]                  ·gc.alloc.rate:                   777.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     170.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 5927331.291 ops/s
[info]                  ·gc.alloc.rate:                   753.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     265.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter":
[info]   6128268.773 ±(99.9%) 470931.490 ops/s [Average]
[info]   (min, avg, max) = (5927331.291, 6128268.773, 6246751.956), stdev = 122299.412
[info]   CI (99.9%): [5657337.283, 6599200.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   779.077 ±(99.9%) 59.955 MB/sec [Average]
[info]   (min, avg, max) = (753.504, 779.077, 794.181), stdev = 15.570
[info]   CI (99.9%): [719.122, 839.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.653 ±(99.9%) 702.073 MB/sec [Average]
[info]   (min, avg, max) = (655.102, 792.653, 998.590), stdev = 182.326
[info]   CI (99.9%): [90.580, 1494.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   203.959 ±(99.9%) 190.329 B/op [Average]
[info]   (min, avg, max) = (166.329, 203.959, 265.053), stdev = 49.428
[info]   CI (99.9%): [13.630, 394.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.012, 0.021), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 6.000, 10.000), stdev = 3.674
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay
[info] # Run progress: 4.92% complete, ETA 00:15:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 253787.768 ops/s
[info] # Warmup Iteration   2: 414109.378 ops/s
[info] # Warmup Iteration   3: 422664.722 ops/s
[info] # Warmup Iteration   4: 429050.226 ops/s
[info] # Warmup Iteration   5: 417916.962 ops/s
[info] Iteration   1: 417231.878 ops/s
[info]                  ·gc.alloc.rate:                   1103.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3730.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 416954.287 ops/s
[info]                  ·gc.alloc.rate:                   1102.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3750.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.314 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 419945.254 ops/s
[info]                  ·gc.alloc.rate:                   1110.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4993.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 416987.411 ops/s
[info]                  ·gc.alloc.rate:                   1102.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3787.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 429115.452 ops/s
[info]                  ·gc.alloc.rate:                   1134.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3696.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay":
[info]   420046.856 ±(99.9%) 20109.990 ops/s [Average]
[info]   (min, avg, max) = (416954.287, 420046.856, 429115.452), stdev = 5222.501
[info]   CI (99.9%): [399936.866, 440156.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1110.683 ±(99.9%) 53.100 MB/sec [Average]
[info]   (min, avg, max) = (1102.540, 1110.683, 1134.632), stdev = 13.790
[info]   CI (99.9%): [1057.582, 1163.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1065.659 ±(99.9%) 575.756 MB/sec [Average]
[info]   (min, avg, max) = (989.325, 1065.659, 1332.790), stdev = 149.522
[info]   CI (99.9%): [489.903, 1641.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   3991.692 ±(99.9%) 2159.499 B/op [Average]
[info]   (min, avg, max) = (3696.694, 3991.692, 4993.171), stdev = 560.815
[info]   CI (99.9%): [1832.193, 6151.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.172 ±(99.9%) 0.397 B/op [Average]
[info]   (min, avg, max) = (0.076, 0.172, 0.314), stdev = 0.103
[info]   CI (99.9%): [≈ 0, 0.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 11.000), stdev = 1.924
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce
[info] # Run progress: 6.56% complete, ETA 00:15:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 359869.369 ops/s
[info] # Warmup Iteration   2: 605312.160 ops/s
[info] # Warmup Iteration   3: 605791.075 ops/s
[info] # Warmup Iteration   4: 614314.788 ops/s
[info] # Warmup Iteration   5: 611670.735 ops/s
[info] Iteration   1: 614723.491 ops/s
[info]                  ·gc.alloc.rate:                   2003.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5185.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 611374.174 ops/s
[info]                  ·gc.alloc.rate:                   1992.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5232.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 612328.570 ops/s
[info]                  ·gc.alloc.rate:                   1995.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5234.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 611721.469 ops/s
[info]                  ·gc.alloc.rate:                   1993.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5244.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 606421.068 ops/s
[info]                  ·gc.alloc.rate:                   1976.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2042.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5298.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce":
[info]   611313.754 ±(99.9%) 11673.933 ops/s [Average]
[info]   (min, avg, max) = (606421.068, 611313.754, 614723.491), stdev = 3031.683
[info]   CI (99.9%): [599639.821, 622987.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   1992.560 ±(99.9%) 37.913 MB/sec [Average]
[info]   (min, avg, max) = (1976.680, 1992.560, 2003.666), stdev = 9.846
[info]   CI (99.9%): [1954.647, 2030.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5128.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5128.001, 5128.001, 5128.001), stdev = 0.001
[info]   CI (99.9%): [5128.001, 5128.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2035.652 ±(99.9%) 24.160 MB/sec [Average]
[info]   (min, avg, max) = (2026.192, 2035.652, 2042.578), stdev = 6.274
[info]   CI (99.9%): [2011.492, 2059.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5239.056 ±(99.9%) 155.686 B/op [Average]
[info]   (min, avg, max) = (5185.651, 5239.056, 5298.956), stdev = 40.431
[info]   CI (99.9%): [5083.370, 5394.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.107 ±(99.9%) 0.206 B/op [Average]
[info]   (min, avg, max) = (0.054, 0.107, 0.161), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.200, 15.000), stdev = 3.834
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson
[info] # Run progress: 8.20% complete, ETA 00:15:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 804959.629 ops/s
[info] # Warmup Iteration   2: 1280365.180 ops/s
[info] # Warmup Iteration   3: 1276520.780 ops/s
[info] # Warmup Iteration   4: 1275827.650 ops/s
[info] # Warmup Iteration   5: 1276388.839 ops/s
[info] Iteration   1: 1287650.319 ops/s
[info]                  ·gc.alloc.rate:                   1211.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1619.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1258567.739 ops/s
[info]                  ·gc.alloc.rate:                   1183.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1249.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 1287581.956 ops/s
[info]                  ·gc.alloc.rate:                   1211.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1637.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1263637.870 ops/s
[info]                  ·gc.alloc.rate:                   1188.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1256.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1283909.602 ops/s
[info]                  ·gc.alloc.rate:                   1207.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1653.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson":
[info]   1276269.497 ±(99.9%) 54072.977 ops/s [Average]
[info]   (min, avg, max) = (1258567.739, 1276269.497, 1287650.319), stdev = 14042.580
[info]   CI (99.9%): [1222196.520, 1330342.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1200.618 ±(99.9%) 50.910 MB/sec [Average]
[info]   (min, avg, max) = (1183.958, 1200.618, 1211.302), stdev = 13.221
[info]   CI (99.9%): [1149.708, 1251.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1204.744 ±(99.9%) 705.631 MB/sec [Average]
[info]   (min, avg, max) = (999.300, 1204.744, 1349.855), stdev = 183.250
[info]   CI (99.9%): [499.113, 1910.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1483.267 ±(99.9%) 811.354 B/op [Average]
[info]   (min, avg, max) = (1249.170, 1483.267, 1653.993), stdev = 210.706
[info]   CI (99.9%): [671.912, 2294.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.036 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.036, 0.051), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 19.000), stdev = 6.557
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter
[info] # Run progress: 9.84% complete, ETA 00:14:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2220925.497 ops/s
[info] # Warmup Iteration   2: 2457627.048 ops/s
[info] # Warmup Iteration   3: 2486721.890 ops/s
[info] # Warmup Iteration   4: 2495423.851 ops/s
[info] # Warmup Iteration   5: 2500316.741 ops/s
[info] Iteration   1: 2475778.665 ops/s
[info]                  ·gc.alloc.rate:                   1133.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     630.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2480750.558 ops/s
[info]                  ·gc.alloc.rate:                   1135.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     843.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 2480190.253 ops/s
[info]                  ·gc.alloc.rate:                   1135.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     635.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2494145.738 ops/s
[info]                  ·gc.alloc.rate:                   1141.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     846.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2467774.849 ops/s
[info]                  ·gc.alloc.rate:                   1129.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     644.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter":
[info]   2479728.012 ±(99.9%) 36914.280 ops/s [Average]
[info]   (min, avg, max) = (2467774.849, 2479728.012, 2494145.738), stdev = 9586.521
[info]   CI (99.9%): [2442813.733, 2516642.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1134.863 ±(99.9%) 16.948 MB/sec [Average]
[info]   (min, avg, max) = (1129.395, 1134.863, 1141.496), stdev = 4.401
[info]   CI (99.9%): [1117.915, 1151.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   720.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (720.000, 720.000, 720.000), stdev = 0.001
[info]   CI (99.9%): [720.000, 720.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1135.206 ±(99.9%) 706.039 MB/sec [Average]
[info]   (min, avg, max) = (991.973, 1135.206, 1342.234), stdev = 183.356
[info]   CI (99.9%): [429.167, 1841.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   719.961 ±(99.9%) 439.569 B/op [Average]
[info]   (min, avg, max) = (630.361, 719.961, 846.616), stdev = 114.155
[info]   CI (99.9%): [280.392, 1159.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.095 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.040, 0.066), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 13.000), stdev = 5.357
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay
[info] # Run progress: 11.48% complete, ETA 00:14:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 115524.393 ops/s
[info] # Warmup Iteration   2: 209256.100 ops/s
[info] # Warmup Iteration   3: 219389.493 ops/s
[info] # Warmup Iteration   4: 216405.830 ops/s
[info] # Warmup Iteration   5: 219895.286 ops/s
[info] Iteration   1: 221463.821 ops/s
[info]                  ·gc.alloc.rate:                   1347.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9402.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 220594.190 ops/s
[info]                  ·gc.alloc.rate:                   1342.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9505.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.594 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 221057.043 ops/s
[info]                  ·gc.alloc.rate:                   1345.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9535.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.296 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 219373.160 ops/s
[info]                  ·gc.alloc.rate:                   1335.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9653.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.299 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 222123.564 ops/s
[info]                  ·gc.alloc.rate:                   1352.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9562.846 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay":
[info]   220922.356 ±(99.9%) 3974.717 ops/s [Average]
[info]   (min, avg, max) = (219373.160, 220922.356, 222123.564), stdev = 1032.221
[info]   CI (99.9%): [216947.638, 224897.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1344.680 ±(99.9%) 24.206 MB/sec [Average]
[info]   (min, avg, max) = (1335.244, 1344.680, 1352.005), stdev = 6.286
[info]   CI (99.9%): [1320.473, 1368.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9576.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9576.002, 9576.002, 9576.002), stdev = 0.001
[info]   CI (99.9%): [9576.002, 9576.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1338.469 ±(99.9%) 40.967 MB/sec [Average]
[info]   (min, avg, max) = (1323.480, 1338.469, 1350.147), stdev = 10.639
[info]   CI (99.9%): [1297.502, 1379.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9531.967 ±(99.9%) 351.692 B/op [Average]
[info]   (min, avg, max) = (9402.104, 9531.967, 9653.812), stdev = 91.333
[info]   CI (99.9%): [9180.275, 9883.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.326 ±(99.9%) 0.627 B/op [Average]
[info]   (min, avg, max) = (0.148, 0.326, 0.594), stdev = 0.163
[info]   CI (99.9%): [≈ 0, 0.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 12.000), stdev = 3.362
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson
[info] # Run progress: 13.11% complete, ETA 00:14:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 986979.826 ops/s
[info] # Warmup Iteration   2: 1600399.076 ops/s
[info] # Warmup Iteration   3: 1633128.545 ops/s
[info] # Warmup Iteration   4: 1629415.303 ops/s
[info] # Warmup Iteration   5: 1610289.158 ops/s
[info] Iteration   1: 1619985.084 ops/s
[info]                  ·gc.alloc.rate:                   1046.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     954.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1613421.009 ops/s
[info]                  ·gc.alloc.rate:                   1041.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     966.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1627941.592 ops/s
[info]                  ·gc.alloc.rate:                   1051.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     963.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1620982.458 ops/s
[info]                  ·gc.alloc.rate:                   1046.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     972.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1627906.837 ops/s
[info]                  ·gc.alloc.rate:                   1051.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1297.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson":
[info]   1622047.396 ±(99.9%) 23491.798 ops/s [Average]
[info]   (min, avg, max) = (1613421.009, 1622047.396, 1627941.592), stdev = 6100.745
[info]   CI (99.9%): [1598555.598, 1645539.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1047.537 ±(99.9%) 15.165 MB/sec [Average]
[info]   (min, avg, max) = (1041.955, 1047.537, 1051.328), stdev = 3.938
[info]   CI (99.9%): [1032.372, 1062.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1063.231 ±(99.9%) 601.183 MB/sec [Average]
[info]   (min, avg, max) = (983.315, 1063.231, 1342.236), stdev = 156.125
[info]   CI (99.9%): [462.047, 1664.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1030.982 ±(99.9%) 573.427 B/op [Average]
[info]   (min, avg, max) = (954.914, 1030.982, 1297.133), stdev = 148.917
[info]   CI (99.9%): [457.556, 1604.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.032, 0.041), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 10.000), stdev = 3.194
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 14.75% complete, ETA 00:14:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5023873.802 ops/s
[info] # Warmup Iteration   2: 5392883.217 ops/s
[info] # Warmup Iteration   3: 5411435.149 ops/s
[info] # Warmup Iteration   4: 5443340.997 ops/s
[info] # Warmup Iteration   5: 5458006.760 ops/s
[info] Iteration   1: 5477625.193 ops/s
[info]                  ·gc.alloc.rate:                   584.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     187.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 5432821.056 ops/s
[info]                  ·gc.alloc.rate:               580.138 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 94.659 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 5438627.473 ops/s
[info]                  ·gc.alloc.rate:                   580.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     189.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5409634.875 ops/s
[info]                  ·gc.alloc.rate:                   577.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     191.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 5352345.830 ops/s
[info]                  ·gc.alloc.rate:                   571.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     193.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter":
[info]   5422210.885 ±(99.9%) 177423.486 ops/s [Average]
[info]   (min, avg, max) = (5352345.830, 5422210.885, 5477625.193), stdev = 46076.316
[info]   CI (99.9%): [5244787.399, 5599634.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   579.007 ±(99.9%) 18.951 MB/sec [Average]
[info]   (min, avg, max) = (571.548, 579.007, 584.929), stdev = 4.922
[info]   CI (99.9%): [560.056, 597.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   590.103 ±(99.9%) 566.691 MB/sec [Average]
[info]   (min, avg, max) = (326.878, 590.103, 659.089), stdev = 147.168
[info]   CI (99.9%): [23.412, 1156.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   171.273 ±(99.9%) 165.157 B/op [Average]
[info]   (min, avg, max) = (94.659, 171.273, 193.732), stdev = 42.891
[info]   CI (99.9%): [6.115, 336.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.012), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 9.000), stdev = 2.588
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay
[info] # Run progress: 16.39% complete, ETA 00:13:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 112835.713 ops/s
[info] # Warmup Iteration   2: 246851.991 ops/s
[info] # Warmup Iteration   3: 250042.957 ops/s
[info] # Warmup Iteration   4: 251475.514 ops/s
[info] # Warmup Iteration   5: 250922.300 ops/s
[info] Iteration   1: 249829.947 ops/s
[info]                  ·gc.alloc.rate:                   1134.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6221.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 254783.059 ops/s
[info]                  ·gc.alloc.rate:                   1156.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6137.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 251682.880 ops/s
[info]                  ·gc.alloc.rate:                   1142.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8331.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 254445.651 ops/s
[info]                  ·gc.alloc.rate:                   1155.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6207.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 254060.836 ops/s
[info]                  ·gc.alloc.rate:                   1153.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8327.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay":
[info]   252960.475 ±(99.9%) 8207.114 ops/s [Average]
[info]   (min, avg, max) = (249829.947, 252960.475, 254783.059), stdev = 2131.362
[info]   CI (99.9%): [244753.360, 261167.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1148.676 ±(99.9%) 37.250 MB/sec [Average]
[info]   (min, avg, max) = (1134.445, 1148.676, 1156.921), stdev = 9.674
[info]   CI (99.9%): [1111.425, 1185.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7144.002, 7144.002, 7144.002), stdev = 0.001
[info]   CI (99.9%): [7144.002, 7144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.707 ±(99.9%) 725.120 MB/sec [Average]
[info]   (min, avg, max) = (987.937, 1132.707, 1344.819), stdev = 188.311
[info]   CI (99.9%): [407.587, 1857.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7045.107 ±(99.9%) 4516.518 B/op [Average]
[info]   (min, avg, max) = (6137.570, 7045.107, 8331.388), stdev = 1172.925
[info]   CI (99.9%): [2528.589, 11561.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.042), stdev = 0.009
[info]   CI (99.9%): [0.002, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.233 ±(99.9%) 0.225 B/op [Average]
[info]   (min, avg, max) = (0.129, 0.233, 0.262), stdev = 0.058
[info]   CI (99.9%): [0.008, 0.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 11.000), stdev = 3.347
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce
[info] # Run progress: 18.03% complete, ETA 00:13:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 372951.013 ops/s
[info] # Warmup Iteration   2: 552020.834 ops/s
[info] # Warmup Iteration   3: 551274.271 ops/s
[info] # Warmup Iteration   4: 548944.287 ops/s
[info] # Warmup Iteration   5: 557567.811 ops/s
[info] Iteration   1: 556167.419 ops/s
[info]                  ·gc.alloc.rate:                   1846.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4771.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 547950.702 ops/s
[info]                  ·gc.alloc.rate:                   1819.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5832.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 555110.101 ops/s
[info]                  ·gc.alloc.rate:                   1843.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4806.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 540501.141 ops/s
[info]                  ·gc.alloc.rate:                   1794.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4946.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 547594.381 ops/s
[info]                  ·gc.alloc.rate:                   1818.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5859.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.239 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce":
[info]   549464.749 ±(99.9%) 24575.787 ops/s [Average]
[info]   (min, avg, max) = (540501.141, 549464.749, 556167.419), stdev = 6382.254
[info]   CI (99.9%): [524888.962, 574040.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1824.499 ±(99.9%) 81.540 MB/sec [Average]
[info]   (min, avg, max) = (1794.744, 1824.499, 1846.756), stdev = 21.176
[info]   CI (99.9%): [1742.958, 1906.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1830.590 ±(99.9%) 720.478 MB/sec [Average]
[info]   (min, avg, max) = (1686.672, 1830.590, 2039.612), stdev = 187.106
[info]   CI (99.9%): [1110.112, 2551.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5243.261 ±(99.9%) 2133.986 B/op [Average]
[info]   (min, avg, max) = (4771.164, 5243.261, 5859.790), stdev = 554.189
[info]   CI (99.9%): [3109.275, 7377.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.190 ±(99.9%) 0.295 B/op [Average]
[info]   (min, avg, max) = (0.061, 0.190, 0.239), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.800, 13.000), stdev = 2.950
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson
[info] # Run progress: 19.67% complete, ETA 00:13:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 405498.769 ops/s
[info] # Warmup Iteration   2: 677279.515 ops/s
[info] # Warmup Iteration   3: 682174.066 ops/s
[info] # Warmup Iteration   4: 678659.420 ops/s
[info] # Warmup Iteration   5: 688151.146 ops/s
[info] Iteration   1: 690977.230 ops/s
[info]                  ·gc.alloc.rate:               857.313 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1491.511 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 683720.681 ops/s
[info]                  ·gc.alloc.rate:                   848.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2273.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 679242.578 ops/s
[info]                  ·gc.alloc.rate:               842.752 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2300.653 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 682035.477 ops/s
[info]                  ·gc.alloc.rate:                   846.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1535.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 688874.272 ops/s
[info]                  ·gc.alloc.rate:                   854.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2291.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson":
[info]   684970.047 ±(99.9%) 18697.021 ops/s [Average]
[info]   (min, avg, max) = (679242.578, 684970.047, 690977.230), stdev = 4855.557
[info]   CI (99.9%): [666273.026, 703667.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   849.855 ±(99.9%) 23.189 MB/sec [Average]
[info]   (min, avg, max) = (842.752, 849.855, 857.313), stdev = 6.022
[info]   CI (99.9%): [826.666, 873.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   861.058 ±(99.9%) 705.787 MB/sec [Average]
[info]   (min, avg, max) = (655.067, 861.058, 1003.269), stdev = 183.291
[info]   CI (99.9%): [155.271, 1566.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1978.501 ±(99.9%) 1635.725 B/op [Average]
[info]   (min, avg, max) = (1491.511, 1978.501, 2300.653), stdev = 424.793
[info]   CI (99.9%): [342.776, 3614.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.048 ±(99.9%) 0.185 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.048, 0.096), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 8.200, 13.000), stdev = 4.087
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 21.31% complete, ETA 00:12:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4131784.832 ops/s
[info] # Warmup Iteration   2: 4376898.291 ops/s
[info] # Warmup Iteration   3: 4403913.950 ops/s
[info] # Warmup Iteration   4: 4393471.814 ops/s
[info] # Warmup Iteration   5: 4397559.887 ops/s
[info] Iteration   1: 4429589.569 ops/s
[info]                  ·gc.alloc.rate:      202.717 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 4409927.223 ops/s
[info]                  ·gc.alloc.rate:               201.814 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 91.296 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 4406969.981 ops/s
[info]                  ·gc.alloc.rate:                   201.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4408796.163 ops/s
[info]                  ·gc.alloc.rate:                   201.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.176 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.777 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4432392.293 ops/s
[info]                  ·gc.alloc.rate:      202.842 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter":
[info]   4417535.046 ±(99.9%) 47626.604 ops/s [Average]
[info]   (min, avg, max) = (4406969.981, 4417535.046, 4432392.293), stdev = 12368.478
[info]   CI (99.9%): [4369908.442, 4465161.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   202.164 ±(99.9%) 2.178 MB/sec [Average]
[info]   (min, avg, max) = (201.682, 202.164, 202.842), stdev = 0.566
[info]   CI (99.9%): [199.986, 204.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   167.468 ±(99.9%) 598.767 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 167.468, 325.542), stdev = 155.498
[info]   CI (99.9%): [≈ 0, 766.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   59.764 ±(99.9%) 213.679 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 59.764, 116.170), stdev = 55.492
[info]   CI (99.9%): [≈ 0, 273.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.437 ±(99.9%) 3.743 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.437, 2.176), stdev = 0.972
[info]   CI (99.9%): [≈ 0, 4.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.156 ±(99.9%) 1.336 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.156, 0.777), stdev = 0.347
[info]   CI (99.9%): [≈ 0, 1.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay
[info] # Run progress: 22.95% complete, ETA 00:12:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80354.236 ops/s
[info] # Warmup Iteration   2: 202073.886 ops/s
[info] # Warmup Iteration   3: 210553.414 ops/s
[info] # Warmup Iteration   4: 211502.949 ops/s
[info] # Warmup Iteration   5: 210785.014 ops/s
[info] Iteration   1: 209484.859 ops/s
[info]                  ·gc.alloc.rate:                   1150.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9894.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.626 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 207746.557 ops/s
[info]                  ·gc.alloc.rate:                   1140.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7527.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.315 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 203031.137 ops/s
[info]                  ·gc.alloc.rate:                   1115.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10327.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.484 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 207723.189 ops/s
[info]                  ·gc.alloc.rate:                   1140.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7603.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 206145.172 ops/s
[info]                  ·gc.alloc.rate:                   1132.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10258.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.318 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay":
[info]   206826.183 ±(99.9%) 9350.490 ops/s [Average]
[info]   (min, avg, max) = (203031.137, 206826.183, 209484.859), stdev = 2428.293
[info]   CI (99.9%): [197475.693, 216176.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1135.881 ±(99.9%) 51.272 MB/sec [Average]
[info]   (min, avg, max) = (1115.029, 1135.881, 1150.453), stdev = 13.315
[info]   CI (99.9%): [1084.608, 1187.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8640.002, 8640.002, 8640.002), stdev = 0.001
[info]   CI (99.9%): [8640.002, 8640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1198.506 ±(99.9%) 702.595 MB/sec [Average]
[info]   (min, avg, max) = (993.924, 1198.506, 1344.370), stdev = 182.462
[info]   CI (99.9%): [495.910, 1901.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9122.238 ±(99.9%) 5510.031 B/op [Average]
[info]   (min, avg, max) = (7527.102, 9122.238, 10327.695), stdev = 1430.937
[info]   CI (99.9%): [3612.208, 14632.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.380 ±(99.9%) 0.690 B/op [Average]
[info]   (min, avg, max) = (0.158, 0.380, 0.626), stdev = 0.179
[info]   CI (99.9%): [≈ 0, 1.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.800, 17.000), stdev = 5.495
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 24.59% complete, ETA 00:12:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2802774.949 ops/s
[info] # Warmup Iteration   2: 3025653.740 ops/s
[info] # Warmup Iteration   3: 3058203.728 ops/s
[info] # Warmup Iteration   4: 3055853.875 ops/s
[info] # Warmup Iteration   5: 3042297.137 ops/s
[info] Iteration   1: 3084199.867 ops/s
[info]                  ·gc.alloc.rate:                   1458.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     680.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3094402.306 ops/s
[info]                  ·gc.alloc.rate:                   1463.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     681.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3053285.312 ops/s
[info]                  ·gc.alloc.rate:                   1443.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     867.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 3084579.401 ops/s
[info]                  ·gc.alloc.rate:                   1458.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     689.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 3116165.450 ops/s
[info]                  ·gc.alloc.rate:                   1473.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     684.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter":
[info]   3086526.467 ±(99.9%) 87272.037 ops/s [Average]
[info]   (min, avg, max) = (3053285.312, 3086526.467, 3116165.450), stdev = 22664.271
[info]   CI (99.9%): [2999254.430, 3173798.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1459.655 ±(99.9%) 41.232 MB/sec [Average]
[info]   (min, avg, max) = (1443.962, 1459.655, 1473.663), stdev = 10.708
[info]   CI (99.9%): [1418.423, 1500.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1413.084 ±(99.9%) 582.764 MB/sec [Average]
[info]   (min, avg, max) = (1334.159, 1413.084, 1683.396), stdev = 151.342
[info]   CI (99.9%): [830.321, 1995.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   720.658 ±(99.9%) 316.091 B/op [Average]
[info]   (min, avg, max) = (680.569, 720.658, 867.368), stdev = 82.088
[info]   CI (99.9%): [404.567, 1036.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.146), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.093 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.034, 0.074), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.400, 15.000), stdev = 4.827
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 26.23% complete, ETA 00:12:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 136129.498 ops/s
[info] # Warmup Iteration   2: 238031.034 ops/s
[info] # Warmup Iteration   3: 242313.705 ops/s
[info] # Warmup Iteration   4: 241593.106 ops/s
[info] # Warmup Iteration   5: 239633.683 ops/s
[info] Iteration   1: 242984.829 ops/s
[info]                  ·gc.alloc.rate:                   1306.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8569.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 240638.419 ops/s
[info]                  ·gc.alloc.rate:                   1293.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8713.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.681 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 242822.007 ops/s
[info]                  ·gc.alloc.rate:                   1305.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8680.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.540 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 237832.050 ops/s
[info]                  ·gc.alloc.rate:               1278.320 MB/sec
[info]                  ·gc.alloc.rate.norm:          8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8903.981 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   5: 236524.636 ops/s
[info]                  ·gc.alloc.rate:                   1271.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6733.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay":
[info]   240160.388 ±(99.9%) 11214.906 ops/s [Average]
[info]   (min, avg, max) = (236524.636, 240160.388, 242984.829), stdev = 2912.475
[info]   CI (99.9%): [228945.483, 251375.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1290.803 ±(99.9%) 60.399 MB/sec [Average]
[info]   (min, avg, max) = (1271.177, 1290.803, 1306.003), stdev = 15.686
[info]   CI (99.9%): [1230.404, 1351.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8456.002, 8456.002, 8456.002), stdev = 0.001
[info]   CI (99.9%): [8456.002, 8456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1270.868 ±(99.9%) 557.756 MB/sec [Average]
[info]   (min, avg, max) = (1012.192, 1270.868, 1346.042), stdev = 144.848
[info]   CI (99.9%): [713.112, 1828.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8320.168 ±(99.9%) 3447.453 B/op [Average]
[info]   (min, avg, max) = (6733.206, 8320.168, 8903.981), stdev = 895.293
[info]   CI (99.9%): [4872.715, 11767.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.299 ±(99.9%) 1.132 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.299, 0.681), stdev = 0.294
[info]   CI (99.9%): [≈ 0, 1.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.387
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce
[info] # Run progress: 27.87% complete, ETA 00:11:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 334241.135 ops/s
[info] # Warmup Iteration   2: 529412.782 ops/s
[info] # Warmup Iteration   3: 540044.670 ops/s
[info] # Warmup Iteration   4: 537377.322 ops/s
[info] # Warmup Iteration   5: 529503.424 ops/s
[info] Iteration   1: 547624.565 ops/s
[info]                  ·gc.alloc.rate:                   1918.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5818.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 555466.559 ops/s
[info]                  ·gc.alloc.rate:                   1946.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4796.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 540376.839 ops/s
[info]                  ·gc.alloc.rate:                   1893.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.442 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5929.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   4: 550026.144 ops/s
[info]                  ·gc.alloc.rate:                   1927.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5832.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.238 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 551510.782 ops/s
[info]                  ·gc.alloc.rate:                   1932.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1700.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4851.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.178 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce":
[info]   549000.978 ±(99.9%) 21562.240 ops/s [Average]
[info]   (min, avg, max) = (540376.839, 549000.978, 555466.559), stdev = 5599.645
[info]   CI (99.9%): [527438.737, 570563.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1923.445 ±(99.9%) 75.623 MB/sec [Average]
[info]   (min, avg, max) = (1893.189, 1923.445, 1946.123), stdev = 19.639
[info]   CI (99.9%): [1847.822, 1999.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5512.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5512.001, 5512.001, 5512.001), stdev = 0.001
[info]   CI (99.9%): [5512.001, 5512.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1898.955 ±(99.9%) 710.225 MB/sec [Average]
[info]   (min, avg, max) = (1693.345, 1898.955, 2039.114), stdev = 184.443
[info]   CI (99.9%): [1188.730, 2609.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5445.457 ±(99.9%) 2192.851 B/op [Average]
[info]   (min, avg, max) = (4796.059, 5445.457, 5929.080), stdev = 569.476
[info]   CI (99.9%): [3252.606, 7638.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.167 ±(99.9%) 0.191 B/op [Average]
[info]   (min, avg, max) = (0.118, 0.167, 0.238), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 10.600, 20.000), stdev = 6.768
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson
[info] # Run progress: 29.51% complete, ETA 00:11:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 292629.951 ops/s
[info] # Warmup Iteration   2: 562990.966 ops/s
[info] # Warmup Iteration   3: 567567.300 ops/s
[info] # Warmup Iteration   4: 569697.724 ops/s
[info] # Warmup Iteration   5: 565634.489 ops/s
[info] Iteration   1: 565266.298 ops/s
[info]                  ·gc.alloc.rate:                   574.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     911.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.116 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 568223.578 ops/s
[info]                  ·gc.alloc.rate:                   577.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1817.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 561959.166 ops/s
[info]                  ·gc.alloc.rate:                   571.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1845.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 561307.509 ops/s
[info]                  ·gc.alloc.rate:                   570.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1854.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 562294.674 ops/s
[info]                  ·gc.alloc.rate:                   571.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     927.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson":
[info]   563810.245 ±(99.9%) 11157.692 ops/s [Average]
[info]   (min, avg, max) = (561307.509, 563810.245, 568223.578), stdev = 2897.617
[info]   CI (99.9%): [552652.553, 574967.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   573.388 ±(99.9%) 11.368 MB/sec [Average]
[info]   (min, avg, max) = (570.837, 573.388, 577.881), stdev = 2.952
[info]   CI (99.9%): [562.019, 584.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   527.262 ±(99.9%) 695.095 MB/sec [Average]
[info]   (min, avg, max) = (327.535, 527.262, 661.738), stdev = 180.514
[info]   CI (99.9%): [≈ 0, 1222.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1471.333 ±(99.9%) 1940.195 B/op [Average]
[info]   (min, avg, max) = (911.597, 1471.333, 1854.789), stdev = 503.862
[info]   CI (99.9%): [≈ 0, 3411.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.128 ±(99.9%) 0.293 B/op [Average]
[info]   (min, avg, max) = (0.058, 0.128, 0.233), stdev = 0.076
[info]   CI (99.9%): [≈ 0, 0.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 8.000), stdev = 2.828
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter
[info] # Run progress: 31.15% complete, ETA 00:11:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2573691.496 ops/s
[info] # Warmup Iteration   2: 2877240.898 ops/s
[info] # Warmup Iteration   3: 2855960.980 ops/s
[info] # Warmup Iteration   4: 2771590.178 ops/s
[info] # Warmup Iteration   5: 2872804.640 ops/s
[info] Iteration   1: 2920704.086 ops/s
[info]                  ·gc.alloc.rate:                   727.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     352.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2914726.920 ops/s
[info]                  ·gc.alloc.rate:                   726.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     354.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2903192.978 ops/s
[info]                  ·gc.alloc.rate:                   723.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     356.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2900589.706 ops/s
[info]                  ·gc.alloc.rate:                   722.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     538.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2890842.978 ops/s
[info]                  ·gc.alloc.rate:                   720.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     361.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter":
[info]   2906011.333 ±(99.9%) 45531.101 ops/s [Average]
[info]   (min, avg, max) = (2890842.978, 2906011.333, 2920704.086), stdev = 11824.282
[info]   CI (99.9%): [2860480.232, 2951542.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   724.076 ±(99.9%) 11.293 MB/sec [Average]
[info]   (min, avg, max) = (720.311, 724.076, 727.710), stdev = 2.933
[info]   CI (99.9%): [712.783, 735.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   724.799 ±(99.9%) 575.382 MB/sec [Average]
[info]   (min, avg, max) = (653.714, 724.799, 992.011), stdev = 149.425
[info]   CI (99.9%): [149.418, 1300.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   392.469 ±(99.9%) 313.640 B/op [Average]
[info]   (min, avg, max) = (352.140, 392.469, 538.044), stdev = 81.451
[info]   CI (99.9%): [78.829, 706.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.061 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.023, 0.045), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.800, 9.000), stdev = 3.033
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay
[info] # Run progress: 32.79% complete, ETA 00:11:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80896.598 ops/s
[info] # Warmup Iteration   2: 165916.870 ops/s
[info] # Warmup Iteration   3: 168924.258 ops/s
[info] # Warmup Iteration   4: 168753.429 ops/s
[info] # Warmup Iteration   5: 167776.184 ops/s
[info] Iteration   1: 169846.187 ops/s
[info]                  ·gc.alloc.rate:                   1160.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9151.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.386 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 168135.139 ops/s
[info]                  ·gc.alloc.rate:                   1149.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12408.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.585 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 169755.343 ops/s
[info]                  ·gc.alloc.rate:                   1160.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9273.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.579 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 169483.742 ops/s
[info]                  ·gc.alloc.rate:                   1158.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12437.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.387 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 170351.102 ops/s
[info]                  ·gc.alloc.rate:                   1164.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9318.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay":
[info]   169514.303 ±(99.9%) 3205.247 ops/s [Average]
[info]   (min, avg, max) = (168135.139, 169514.303, 170351.102), stdev = 832.392
[info]   CI (99.9%): [166309.056, 172719.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1158.488 ±(99.9%) 21.839 MB/sec [Average]
[info]   (min, avg, max) = (1149.093, 1158.488, 1164.194), stdev = 5.671
[info]   CI (99.9%): [1136.650, 1180.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10752.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10752.003, 10752.003, 10752.003), stdev = 0.001
[info]   CI (99.9%): [10752.002, 10752.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1132.693 ±(99.9%) 704.892 MB/sec [Average]
[info]   (min, avg, max) = (987.940, 1132.693, 1339.812), stdev = 183.058
[info]   CI (99.9%): [427.801, 1837.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10517.801 ±(99.9%) 6701.246 B/op [Average]
[info]   (min, avg, max) = (9151.413, 10517.801, 12437.167), stdev = 1740.292
[info]   CI (99.9%): [3816.555, 17219.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.426 ±(99.9%) 0.628 B/op [Average]
[info]   (min, avg, max) = (0.192, 0.426, 0.585), stdev = 0.163
[info]   CI (99.9%): [≈ 0, 1.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 10.000), stdev = 3.564
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce
[info] # Run progress: 34.43% complete, ETA 00:10:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 232079.172 ops/s
[info] # Warmup Iteration   2: 465790.080 ops/s
[info] # Warmup Iteration   3: 475005.644 ops/s
[info] # Warmup Iteration   4: 472852.485 ops/s
[info] # Warmup Iteration   5: 473512.156 ops/s
[info] Iteration   1: 476799.965 ops/s
[info]                  ·gc.alloc.rate:                   1694.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5548.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 476816.215 ops/s
[info]                  ·gc.alloc.rate:                   1694.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5574.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 475088.615 ops/s
[info]                  ·gc.alloc.rate:                   1688.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5609.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 475002.033 ops/s
[info]                  ·gc.alloc.rate:                   1688.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5619.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 470435.603 ops/s
[info]                  ·gc.alloc.rate:                   1672.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5682.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce":
[info]   474828.486 ±(99.9%) 10047.341 ops/s [Average]
[info]   (min, avg, max) = (470435.603, 474828.486, 476816.215), stdev = 2609.262
[info]   CI (99.9%): [464781.146, 484875.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1687.732 ±(99.9%) 35.654 MB/sec [Average]
[info]   (min, avg, max) = (1672.160, 1687.732, 1694.845), stdev = 9.259
[info]   CI (99.9%): [1652.077, 1723.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1692.216 ±(99.9%) 26.752 MB/sec [Average]
[info]   (min, avg, max) = (1681.664, 1692.216, 1699.339), stdev = 6.947
[info]   CI (99.9%): [1665.464, 1718.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5607.073 ±(99.9%) 196.216 B/op [Average]
[info]   (min, avg, max) = (5548.946, 5607.073, 5682.892), stdev = 50.957
[info]   CI (99.9%): [5410.858, 5803.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.111 ±(99.9%) 0.147 B/op [Average]
[info]   (min, avg, max) = (0.069, 0.111, 0.139), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 11.000), stdev = 1.817
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson
[info] # Run progress: 36.07% complete, ETA 00:10:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 414999.602 ops/s
[info] # Warmup Iteration   2: 840693.250 ops/s
[info] # Warmup Iteration   3: 860043.518 ops/s
[info] # Warmup Iteration   4: 860029.922 ops/s
[info] # Warmup Iteration   5: 860251.970 ops/s
[info] Iteration   1: 859989.812 ops/s
[info]                  ·gc.alloc.rate:                   1014.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1821.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.229 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 863518.408 ops/s
[info]                  ·gc.alloc.rate:                   1018.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1823.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 855676.920 ops/s
[info]                  ·gc.alloc.rate:                   1009.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1848.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 863298.387 ops/s
[info]                  ·gc.alloc.rate:               1018.463 MB/sec
[info]                  ·gc.alloc.rate.norm:          1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1836.880 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 865242.903 ops/s
[info]                  ·gc.alloc.rate:                   1020.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1838.829 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson":
[info]   861545.286 ±(99.9%) 14598.990 ops/s [Average]
[info]   (min, avg, max) = (855676.920, 861545.286, 865242.903), stdev = 3791.311
[info]   CI (99.9%): [846946.296, 876144.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1016.387 ±(99.9%) 17.229 MB/sec [Average]
[info]   (min, avg, max) = (1009.460, 1016.387, 1020.732), stdev = 4.474
[info]   CI (99.9%): [999.158, 1033.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.001, 1856.001, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1004.229 ±(99.9%) 23.290 MB/sec [Average]
[info]   (min, avg, max) = (995.941, 1004.229, 1011.289), stdev = 6.048
[info]   CI (99.9%): [980.939, 1027.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1833.813 ±(99.9%) 43.065 B/op [Average]
[info]   (min, avg, max) = (1821.966, 1833.813, 1848.311), stdev = 11.184
[info]   CI (99.9%): [1790.748, 1876.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.099 ±(99.9%) 0.321 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.099, 0.229), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 9.000), stdev = 2.775
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter
[info] # Run progress: 37.70% complete, ETA 00:10:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2919168.767 ops/s
[info] # Warmup Iteration   2: 3208454.953 ops/s
[info] # Warmup Iteration   3: 3258163.781 ops/s
[info] # Warmup Iteration   4: 3207534.578 ops/s
[info] # Warmup Iteration   5: 3253834.595 ops/s
[info] Iteration   1: 3217318.719 ops/s
[info]                  ·gc.alloc.rate:                   801.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     480.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3205323.877 ops/s
[info]                  ·gc.alloc.rate:                   798.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     323.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3242243.163 ops/s
[info]                  ·gc.alloc.rate:                   807.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     320.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 3260337.182 ops/s
[info]                  ·gc.alloc.rate:                   812.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     480.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3237908.316 ops/s
[info]                  ·gc.alloc.rate:                   806.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     323.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter":
[info]   3232626.251 ±(99.9%) 83213.588 ops/s [Average]
[info]   (min, avg, max) = (3205323.877, 3232626.251, 3260337.182), stdev = 21610.305
[info]   CI (99.9%): [3149412.663, 3315839.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   805.460 ±(99.9%) 20.728 MB/sec [Average]
[info]   (min, avg, max) = (798.673, 805.460, 812.373), stdev = 5.383
[info]   CI (99.9%): [784.732, 826.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.832 ±(99.9%) 692.017 MB/sec [Average]
[info]   (min, avg, max) = (658.427, 792.832, 995.623), stdev = 179.715
[info]   CI (99.9%): [100.815, 1484.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   385.736 ±(99.9%) 333.870 B/op [Average]
[info]   (min, avg, max) = (320.464, 385.736, 480.988), stdev = 86.705
[info]   CI (99.9%): [51.866, 719.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.060 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.026, 0.051), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 7.000), stdev = 2.074
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay
[info] # Run progress: 39.34% complete, ETA 00:09:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 138852.745 ops/s
[info] # Warmup Iteration   2: 246875.102 ops/s
[info] # Warmup Iteration   3: 252456.637 ops/s
[info] # Warmup Iteration   4: 248931.986 ops/s
[info] # Warmup Iteration   5: 252605.389 ops/s
[info] Iteration   1: 256314.340 ops/s
[info]                  ·gc.alloc.rate:                   1338.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8125.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 256959.257 ops/s
[info]                  ·gc.alloc.rate:                   1341.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8160.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.510 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 255216.117 ops/s
[info]                  ·gc.alloc.rate:                   1332.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8259.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.385 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 255478.459 ops/s
[info]                  ·gc.alloc.rate:                   1334.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8289.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 256389.512 ops/s
[info]                  ·gc.alloc.rate:                   1338.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8284.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay":
[info]   256071.537 ±(99.9%) 2744.238 ops/s [Average]
[info]   (min, avg, max) = (255216.117, 256071.537, 256959.257), stdev = 712.670
[info]   CI (99.9%): [253327.299, 258815.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1337.291 ±(99.9%) 14.331 MB/sec [Average]
[info]   (min, avg, max) = (1332.844, 1337.291, 1341.978), stdev = 3.722
[info]   CI (99.9%): [1322.960, 1351.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8216.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8216.002, 8216.002, 8216.002), stdev = 0.001
[info]   CI (99.9%): [8216.001, 8216.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1338.584 ±(99.9%) 40.376 MB/sec [Average]
[info]   (min, avg, max) = (1323.888, 1338.584, 1350.075), stdev = 10.485
[info]   CI (99.9%): [1298.208, 1378.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8224.051 ±(99.9%) 291.898 B/op [Average]
[info]   (min, avg, max) = (8125.753, 8224.051, 8289.852), stdev = 75.805
[info]   CI (99.9%): [7932.152, 8515.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.307 ±(99.9%) 0.560 B/op [Average]
[info]   (min, avg, max) = (0.128, 0.307, 0.510), stdev = 0.145
[info]   CI (99.9%): [≈ 0, 0.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 11.000), stdev = 3.715
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson
[info] # Run progress: 40.98% complete, ETA 00:09:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 107220.040 ops/s
[info] # Warmup Iteration   2: 666822.527 ops/s
[info] # Warmup Iteration   3: 701405.226 ops/s
[info] # Warmup Iteration   4: 703938.362 ops/s
[info] # Warmup Iteration   5: 703019.437 ops/s
[info] Iteration   1: 698860.155 ops/s
[info]                  ·gc.alloc.rate:                   906.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2227.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 695776.129 ops/s
[info]                  ·gc.alloc.rate:                   902.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2251.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.235 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 702252.508 ops/s
[info]                  ·gc.alloc.rate:                   910.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1493.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 700280.459 ops/s
[info]                  ·gc.alloc.rate:                   908.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2254.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 693965.850 ops/s
[info]                  ·gc.alloc.rate:                   899.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2283.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson":
[info]   698227.020 ±(99.9%) 12913.510 ops/s [Average]
[info]   (min, avg, max) = (693965.850, 698227.020, 702252.508), stdev = 3353.598
[info]   CI (99.9%): [685313.510, 711140.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   905.380 ±(99.9%) 16.827 MB/sec [Average]
[info]   (min, avg, max) = (899.816, 905.380, 910.636), stdev = 4.370
[info]   CI (99.9%): [888.553, 922.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   932.582 ±(99.9%) 572.773 MB/sec [Average]
[info]   (min, avg, max) = (666.786, 932.582, 1007.261), stdev = 148.747
[info]   CI (99.9%): [359.809, 1505.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2102.216 ±(99.9%) 1312.084 B/op [Average]
[info]   (min, avg, max) = (1493.730, 2102.216, 2283.592), stdev = 340.744
[info]   CI (99.9%): [790.131, 3414.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.132 ±(99.9%) 0.324 B/op [Average]
[info]   (min, avg, max) = (0.047, 0.132, 0.235), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 11.000), stdev = 3.899
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 42.62% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2054010.199 ops/s
[info] # Warmup Iteration   2: 2449569.481 ops/s
[info] # Warmup Iteration   3: 2473226.264 ops/s
[info] # Warmup Iteration   4: 2476703.839 ops/s
[info] # Warmup Iteration   5: 2513726.328 ops/s
[info] Iteration   1: 2519492.501 ops/s
[info]                  ·gc.alloc.rate:               1716.802 MB/sec
[info]                  ·gc.alloc.rate.norm:          1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1674.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1045.755 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 2507497.790 ops/s
[info]                  ·gc.alloc.rate:                   1708.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1056.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2503662.681 ops/s
[info]                  ·gc.alloc.rate:                   1706.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1062.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2505030.733 ops/s
[info]                  ·gc.alloc.rate:                   1706.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1064.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 2484101.828 ops/s
[info]                  ·gc.alloc.rate:                   1692.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1075.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter":
[info]   2503957.107 ±(99.9%) 49061.962 ops/s [Average]
[info]   (min, avg, max) = (2484101.828, 2503957.107, 2519492.501), stdev = 12741.236
[info]   CI (99.9%): [2454895.145, 2553019.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1706.227 ±(99.9%) 33.463 MB/sec [Average]
[info]   (min, avg, max) = (1692.675, 1706.227, 1716.802), stdev = 8.690
[info]   CI (99.9%): [1672.764, 1739.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   1072.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1072.000, 1072.000, 1072.000), stdev = 0.001
[info]   CI (99.9%): [1072.000, 1072.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1688.371 ±(99.9%) 36.020 MB/sec [Average]
[info]   (min, avg, max) = (1674.770, 1688.371, 1698.084), stdev = 9.354
[info]   CI (99.9%): [1652.351, 1724.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1060.824 ±(99.9%) 42.036 B/op [Average]
[info]   (min, avg, max) = (1045.755, 1060.824, 1075.426), stdev = 10.917
[info]   CI (99.9%): [1018.788, 1102.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.104 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.034, 0.065), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.600, 12.000), stdev = 3.130
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay
[info] # Run progress: 44.26% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 119484.902 ops/s
[info] # Warmup Iteration   2: 216407.572 ops/s
[info] # Warmup Iteration   3: 219520.219 ops/s
[info] # Warmup Iteration   4: 219391.894 ops/s
[info] # Warmup Iteration   5: 220084.300 ops/s
[info] Iteration   1: 218916.445 ops/s
[info]                  ·gc.alloc.rate:                   1153.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9482.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.299 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 220025.936 ops/s
[info]                  ·gc.alloc.rate:                   1159.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7116.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.447 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 222080.199 ops/s
[info]                  ·gc.alloc.rate:                   1169.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9455.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.443 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 221447.866 ops/s
[info]                  ·gc.alloc.rate:               1166.622 MB/sec
[info]                  ·gc.alloc.rate.norm:          8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7144.346 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 219644.726 ops/s
[info]                  ·gc.alloc.rate:                   1157.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9633.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay":
[info]   220423.034 ±(99.9%) 5031.592 ops/s [Average]
[info]   (min, avg, max) = (218916.445, 220423.034, 222080.199), stdev = 1306.688
[info]   CI (99.9%): [215391.442, 225454.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1161.276 ±(99.9%) 26.328 MB/sec [Average]
[info]   (min, avg, max) = (1153.298, 1161.276, 1169.944), stdev = 6.837
[info]   CI (99.9%): [1134.947, 1187.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8288.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8288.002, 8288.002, 8288.002), stdev = 0.001
[info]   CI (99.9%): [8288.002, 8288.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1200.128 ±(99.9%) 702.865 MB/sec [Average]
[info]   (min, avg, max) = (995.295, 1200.128, 1345.375), stdev = 182.532
[info]   CI (99.9%): [497.263, 1902.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8566.699 ±(99.9%) 5055.179 B/op [Average]
[info]   (min, avg, max) = (7116.751, 8566.699, 9633.921), stdev = 1312.814
[info]   CI (99.9%): [3511.520, 13621.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.268 ±(99.9%) 0.744 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.268, 0.447), stdev = 0.193
[info]   CI (99.9%): [≈ 0, 1.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 14.000), stdev = 3.782
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson
[info] # Run progress: 45.90% complete, ETA 00:08:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 638899.632 ops/s
[info] # Warmup Iteration   2: 1020227.819 ops/s
[info] # Warmup Iteration   3: 1034266.716 ops/s
[info] # Warmup Iteration   4: 1031696.200 ops/s
[info] # Warmup Iteration   5: 1021756.779 ops/s
[info] Iteration   1: 1012177.380 ops/s
[info]                  ·gc.alloc.rate:                   736.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1520.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1023706.818 ops/s
[info]                  ·gc.alloc.rate:                   744.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1007.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1028153.214 ops/s
[info]                  ·gc.alloc.rate:               747.621 MB/sec
[info]                  ·gc.alloc.rate.norm:          1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1008.530 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1010524.308 ops/s
[info]                  ·gc.alloc.rate:               735.080 MB/sec
[info]                  ·gc.alloc.rate.norm:          1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      992.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1544.849 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   5: 1031124.872 ops/s
[info]                  ·gc.alloc.rate:                   749.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1015.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson":
[info]   1021137.319 ±(99.9%) 35941.838 ops/s [Average]
[info]   (min, avg, max) = (1010524.308, 1021137.319, 1031124.872), stdev = 9333.981
[info]   CI (99.9%): [985195.480, 1057079.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   742.569 ±(99.9%) 25.808 MB/sec [Average]
[info]   (min, avg, max) = (735.080, 742.569, 749.752), stdev = 6.702
[info]   CI (99.9%): [716.761, 768.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1144.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1144.000, 1144.000, 1144.000), stdev = 0.001
[info]   CI (99.9%): [1144.000, 1144.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   790.233 ±(99.9%) 686.095 MB/sec [Average]
[info]   (min, avg, max) = (655.763, 790.233, 992.646), stdev = 178.177
[info]   CI (99.9%): [104.137, 1476.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1219.405 ±(99.9%) 1100.997 B/op [Average]
[info]   (min, avg, max) = (1007.794, 1219.405, 1544.849), stdev = 285.925
[info]   CI (99.9%): [118.407, 2320.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.135 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.065), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 7.000, 13.000), stdev = 5.099
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 47.54% complete, ETA 00:08:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2915153.928 ops/s
[info] # Warmup Iteration   2: 3113328.295 ops/s
[info] # Warmup Iteration   3: 3103066.150 ops/s
[info] # Warmup Iteration   4: 3125125.445 ops/s
[info] # Warmup Iteration   5: 3113617.501 ops/s
[info] Iteration   1: 3117295.946 ops/s
[info]                  ·gc.alloc.rate:      95.107 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3117614.991 ops/s
[info]                  ·gc.alloc.rate:      95.118 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3109479.881 ops/s
[info]                  ·gc.alloc.rate:                   94.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     129.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3114364.604 ops/s
[info]                  ·gc.alloc.rate:      95.023 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3116460.935 ops/s
[info]                  ·gc.alloc.rate:      95.086 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter":
[info]   3115043.271 ±(99.9%) 12931.222 ops/s [Average]
[info]   (min, avg, max) = (3109479.881, 3115043.271, 3117614.991), stdev = 3358.197
[info]   CI (99.9%): [3102112.050, 3127974.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   95.041 ±(99.9%) 0.391 MB/sec [Average]
[info]   (min, avg, max) = (94.872, 95.041, 95.118), stdev = 0.102
[info]   CI (99.9%): [94.650, 95.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   51.182 ±(99.9%) 440.693 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 51.182, 255.910), stdev = 114.447
[info]   CI (99.9%): [≈ 0, 491.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   25.895 ±(99.9%) 222.968 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 25.895, 129.477), stdev = 57.904
[info]   CI (99.9%): [≈ 0, 248.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.011), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   2.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay
[info] # Run progress: 49.18% complete, ETA 00:08:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 92799.537 ops/s
[info] # Warmup Iteration   2: 166299.350 ops/s
[info] # Warmup Iteration   3: 169906.441 ops/s
[info] # Warmup Iteration   4: 169994.130 ops/s
[info] # Warmup Iteration   5: 171584.029 ops/s
[info] Iteration   1: 170026.430 ops/s
[info]                  ·gc.alloc.rate:                   1172.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              10848.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12214.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.963 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 168494.376 ops/s
[info]                  ·gc.alloc.rate:                   1161.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              10848.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9293.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.583 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 168219.441 ops/s
[info]                  ·gc.alloc.rate:                   1159.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              10848.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12483.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.974 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 169478.925 ops/s
[info]                  ·gc.alloc.rate:                   1168.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              10848.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9341.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 169762.711 ops/s
[info]                  ·gc.alloc.rate:                   1170.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              10848.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12475.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.386 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay":
[info]   169196.376 ±(99.9%) 3066.503 ops/s [Average]
[info]   (min, avg, max) = (168219.441, 169196.376, 170026.430), stdev = 796.361
[info]   CI (99.9%): [166129.873, 172262.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1166.663 ±(99.9%) 21.193 MB/sec [Average]
[info]   (min, avg, max) = (1159.929, 1166.663, 1172.405), stdev = 5.504
[info]   CI (99.9%): [1145.470, 1187.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10848.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10848.003, 10848.003, 10848.003), stdev = 0.001
[info]   CI (99.9%): [10848.002, 10848.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1200.552 ±(99.9%) 703.203 MB/sec [Average]
[info]   (min, avg, max) = (995.286, 1200.552, 1346.174), stdev = 182.620
[info]   CI (99.9%): [497.349, 1903.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11161.778 ±(99.9%) 6497.324 B/op [Average]
[info]   (min, avg, max) = (9293.338, 11161.778, 12483.864), stdev = 1687.334
[info]   CI (99.9%): [4664.454, 17659.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.620 ±(99.9%) 1.336 B/op [Average]
[info]   (min, avg, max) = (0.193, 0.620, 0.974), stdev = 0.347
[info]   CI (99.9%): [≈ 0, 1.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.400, 12.000), stdev = 3.782
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce
[info] # Run progress: 50.82% complete, ETA 00:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 835422.208 ops/s
[info] # Warmup Iteration   2: 1227350.021 ops/s
[info] # Warmup Iteration   3: 1334495.171 ops/s
[info] # Warmup Iteration   4: 1311306.811 ops/s
[info] # Warmup Iteration   5: 1309718.973 ops/s
[info] Iteration   1: 1301986.234 ops/s
[info]                  ·gc.alloc.rate:                   1456.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2023.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 1309448.790 ops/s
[info]                  ·gc.alloc.rate:                   1464.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1617.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 1316961.334 ops/s
[info]                  ·gc.alloc.rate:               1473.225 MB/sec
[info]                  ·gc.alloc.rate.norm:          1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1351.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1614.103 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1327062.674 ops/s
[info]                  ·gc.alloc.rate:               1484.607 MB/sec
[info]                  ·gc.alloc.rate.norm:          1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1693.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2007.053 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 1310844.227 ops/s
[info]                  ·gc.alloc.rate:                   1466.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1628.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce":
[info]   1313260.652 ±(99.9%) 36105.448 ops/s [Average]
[info]   (min, avg, max) = (1301986.234, 1313260.652, 1327062.674), stdev = 9376.470
[info]   CI (99.9%): [1277155.204, 1349366.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1469.155 ±(99.9%) 40.359 MB/sec [Average]
[info]   (min, avg, max) = (1456.551, 1469.155, 1484.607), stdev = 10.481
[info]   CI (99.9%): [1428.797, 1509.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1760.000, 1760.000, 1760.000), stdev = 0.001
[info]   CI (99.9%): [1760.000, 1760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1484.371 ±(99.9%) 701.805 MB/sec [Average]
[info]   (min, avg, max) = (1346.156, 1484.371, 1693.002), stdev = 182.257
[info]   CI (99.9%): [782.566, 2186.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1778.111 ±(99.9%) 834.407 B/op [Average]
[info]   (min, avg, max) = (1614.103, 1778.111, 2023.603), stdev = 216.693
[info]   CI (99.9%): [943.704, 2612.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.129 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.075), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.200, 14.000), stdev = 4.207
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 52.46% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2681325.145 ops/s
[info] # Warmup Iteration   2: 3931957.349 ops/s
[info] # Warmup Iteration   3: 3929888.103 ops/s
[info] # Warmup Iteration   4: 3967433.924 ops/s
[info] # Warmup Iteration   5: 3949168.811 ops/s
[info] Iteration   1: 3965554.283 ops/s
[info]                  ·gc.alloc.rate:                   1088.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     526.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 3956420.773 ops/s
[info]                  ·gc.alloc.rate:                   1086.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     397.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3878191.605 ops/s
[info]                  ·gc.alloc.rate:                   1064.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     407.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 3896985.464 ops/s
[info]                  ·gc.alloc.rate:               1070.061 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 406.911 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   5: 3953704.231 ops/s
[info]                  ·gc.alloc.rate:                   1085.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     402.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson":
[info]   3930171.271 ±(99.9%) 152793.162 ops/s [Average]
[info]   (min, avg, max) = (3878191.605, 3930171.271, 3965554.283), stdev = 39679.899
[info]   CI (99.9%): [3777378.109, 4082964.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1079.188 ±(99.9%) 41.984 MB/sec [Average]
[info]   (min, avg, max) = (1064.913, 1079.188, 1088.921), stdev = 10.903
[info]   CI (99.9%): [1037.204, 1121.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1070.132 ±(99.9%) 551.375 MB/sec [Average]
[info]   (min, avg, max) = (999.975, 1070.132, 1326.172), stdev = 143.190
[info]   CI (99.9%): [518.757, 1621.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   428.180 ±(99.9%) 211.405 B/op [Average]
[info]   (min, avg, max) = (397.635, 428.180, 526.123), stdev = 54.901
[info]   CI (99.9%): [216.775, 639.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.017), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 10.000), stdev = 2.828
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 54.10% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13097659.752 ops/s
[info] # Warmup Iteration   2: 13623608.593 ops/s
[info] # Warmup Iteration   3: 13644789.231 ops/s
[info] # Warmup Iteration   4: 13729467.722 ops/s
[info] # Warmup Iteration   5: 13763090.195 ops/s
[info] Iteration   1: 13827762.358 ops/s
[info]                  ·gc.alloc.rate:                   421.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 13711514.621 ops/s
[info]                  ·gc.alloc.rate:               418.341 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37.391 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 13870099.087 ops/s
[info]                  ·gc.alloc.rate:                   423.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 13820825.960 ops/s
[info]                  ·gc.alloc.rate:                   421.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 13805894.073 ops/s
[info]                  ·gc.alloc.rate:               421.209 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37.250 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter":
[info]   13807219.220 ±(99.9%) 225535.405 ops/s [Average]
[info]   (min, avg, max) = (13711514.621, 13807219.220, 13870099.087), stdev = 58570.829
[info]   CI (99.9%): [13581683.814, 14032754.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   421.255 ±(99.9%) 6.867 MB/sec [Average]
[info]   (min, avg, max) = (418.341, 421.255, 423.167), stdev = 1.783
[info]   CI (99.9%): [414.388, 428.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   456.689 ±(99.9%) 687.424 MB/sec [Average]
[info]   (min, avg, max) = (325.878, 456.689, 653.090), stdev = 178.522
[info]   CI (99.9%): [≈ 0, 1144.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   52.020 ±(99.9%) 78.069 B/op [Average]
[info]   (min, avg, max) = (37.001, 52.020, 74.342), stdev = 20.274
[info]   CI (99.9%): [≈ 0, 130.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.007), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 4.000), stdev = 1.095
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 55.74% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 624693.842 ops/s
[info] # Warmup Iteration   2: 954724.145 ops/s
[info] # Warmup Iteration   3: 987495.871 ops/s
[info] # Warmup Iteration   4: 988886.116 ops/s
[info] # Warmup Iteration   5: 991169.063 ops/s
[info] Iteration   1: 978802.649 ops/s
[info]                  ·gc.alloc.rate:                   1448.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2139.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 982287.111 ops/s
[info]                  ·gc.alloc.rate:                   1453.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2144.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 926281.994 ops/s
[info]                  ·gc.alloc.rate:                   1370.595 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2284.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 924201.792 ops/s
[info]                  ·gc.alloc.rate:                   1367.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2298.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 936670.782 ops/s
[info]                  ·gc.alloc.rate:                   1386.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2273.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay":
[info]   949648.865 ±(99.9%) 110218.470 ops/s [Average]
[info]   (min, avg, max) = (924201.792, 949648.865, 982287.111), stdev = 28623.387
[info]   CI (99.9%): [839430.395, 1059867.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1405.215 ±(99.9%) 163.182 MB/sec [Average]
[info]   (min, avg, max) = (1367.564, 1405.215, 1453.558), stdev = 42.378
[info]   CI (99.9%): [1242.034, 1568.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2328.000, 2328.000, 2328.001), stdev = 0.001
[info]   CI (99.9%): [2328.000, 2328.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1343.608 ±(99.9%) 34.893 MB/sec [Average]
[info]   (min, avg, max) = (1330.809, 1343.608, 1353.475), stdev = 9.062
[info]   CI (99.9%): [1308.715, 1378.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2227.837 ±(99.9%) 304.981 B/op [Average]
[info]   (min, avg, max) = (2139.061, 2227.837, 2298.367), stdev = 79.203
[info]   CI (99.9%): [1922.855, 2532.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.076 ±(99.9%) 0.139 B/op [Average]
[info]   (min, avg, max) = (0.033, 0.076, 0.133), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 11.000), stdev = 2.864
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce
[info] # Run progress: 57.38% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 432605.770 ops/s
[info] # Warmup Iteration   2: 669480.201 ops/s
[info] # Warmup Iteration   3: 709670.157 ops/s
[info] # Warmup Iteration   4: 709624.139 ops/s
[info] # Warmup Iteration   5: 716721.891 ops/s
[info] Iteration   1: 709617.477 ops/s
[info]                  ·gc.alloc.rate:                   1714.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3716.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 713310.017 ops/s
[info]                  ·gc.alloc.rate:                   1722.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3716.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 709569.989 ops/s
[info]                  ·gc.alloc.rate:                   1713.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3749.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 717737.549 ops/s
[info]                  ·gc.alloc.rate:                   1733.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3716.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 715330.739 ops/s
[info]                  ·gc.alloc.rate:               1727.777 MB/sec
[info]                  ·gc.alloc.rate.norm:          3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1698.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3736.063 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce":
[info]   713113.154 ±(99.9%) 13765.075 ops/s [Average]
[info]   (min, avg, max) = (709569.989, 713113.154, 717737.549), stdev = 3574.746
[info]   CI (99.9%): [699348.079, 726878.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1722.429 ±(99.9%) 33.290 MB/sec [Average]
[info]   (min, avg, max) = (1713.811, 1722.429, 1733.615), stdev = 8.645
[info]   CI (99.9%): [1689.139, 1755.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3800.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3800.001, 3800.001, 3800.001), stdev = 0.001
[info]   CI (99.9%): [3800.001, 3800.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1689.344 ±(99.9%) 34.118 MB/sec [Average]
[info]   (min, avg, max) = (1676.365, 1689.344, 1698.706), stdev = 8.860
[info]   CI (99.9%): [1655.226, 1723.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3727.032 ±(99.9%) 59.295 B/op [Average]
[info]   (min, avg, max) = (3716.107, 3727.032, 3749.970), stdev = 15.399
[info]   CI (99.9%): [3667.737, 3786.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.083 ±(99.9%) 0.231 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.139), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.400, 18.000), stdev = 5.459
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson
[info] # Run progress: 59.02% complete, ETA 00:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1441582.668 ops/s
[info] # Warmup Iteration   2: 2448167.689 ops/s
[info] # Warmup Iteration   3: 2499672.373 ops/s
[info] # Warmup Iteration   4: 2501599.089 ops/s
[info] # Warmup Iteration   5: 2501651.399 ops/s
[info] Iteration   1: 2501876.164 ops/s
[info]                  ·gc.alloc.rate:                   1450.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     841.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2478534.309 ops/s
[info]                  ·gc.alloc.rate:                   1436.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1682.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1067.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2512399.486 ops/s
[info]                  ·gc.alloc.rate:                   1456.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     846.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2483777.991 ops/s
[info]                  ·gc.alloc.rate:                   1439.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     857.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2467708.998 ops/s
[info]                  ·gc.alloc.rate:                   1430.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     864.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson":
[info]   2488859.390 ±(99.9%) 69507.577 ops/s [Average]
[info]   (min, avg, max) = (2467708.998, 2488859.390, 2512399.486), stdev = 18050.897
[info]   CI (99.9%): [2419351.813, 2558366.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1442.781 ±(99.9%) 40.198 MB/sec [Average]
[info]   (min, avg, max) = (1430.518, 1442.781, 1456.381), stdev = 10.439
[info]   CI (99.9%): [1402.583, 1482.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1416.414 ±(99.9%) 572.581 MB/sec [Average]
[info]   (min, avg, max) = (1338.161, 1416.414, 1682.110), stdev = 148.698
[info]   CI (99.9%): [843.832, 1988.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   895.556 ±(99.9%) 372.195 B/op [Average]
[info]   (min, avg, max) = (841.474, 895.556, 1067.672), stdev = 96.658
[info]   CI (99.9%): [523.361, 1267.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.028 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.018, 0.026), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 10.000), stdev = 2.915
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter
[info] # Run progress: 60.66% complete, ETA 00:06:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4401826.058 ops/s
[info] # Warmup Iteration   2: 3732758.397 ops/s
[info] # Warmup Iteration   3: 3789959.471 ops/s
[info] # Warmup Iteration   4: 3735548.665 ops/s
[info] # Warmup Iteration   5: 3835245.373 ops/s
[info] Iteration   1: 3763356.892 ops/s
[info]                  ·gc.alloc.rate:                   1033.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     413.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 3760007.594 ops/s
[info]                  ·gc.alloc.rate:                   1032.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     415.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3718470.485 ops/s
[info]                  ·gc.alloc.rate:                   1021.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     563.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 3676977.288 ops/s
[info]                  ·gc.alloc.rate:                   1009.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     429.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3671678.390 ops/s
[info]                  ·gc.alloc.rate:               1008.205 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 431.457 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter":
[info]   3718098.130 ±(99.9%) 168403.646 ops/s [Average]
[info]   (min, avg, max) = (3671678.390, 3718098.130, 3763356.892), stdev = 43733.892
[info]   CI (99.9%): [3549694.484, 3886501.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1020.945 ±(99.9%) 46.206 MB/sec [Average]
[info]   (min, avg, max) = (1008.205, 1020.945, 1033.368), stdev = 12.000
[info]   CI (99.9%): [974.739, 1067.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1064.776 ±(99.9%) 576.177 MB/sec [Average]
[info]   (min, avg, max) = (987.962, 1064.776, 1332.094), stdev = 149.631
[info]   CI (99.9%): [488.599, 1640.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   450.621 ±(99.9%) 245.243 B/op [Average]
[info]   (min, avg, max) = (413.018, 450.621, 563.615), stdev = 63.689
[info]   CI (99.9%): [205.377, 695.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.044 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.026), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 11.000), stdev = 2.950
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay
[info] # Run progress: 62.30% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 167117.210 ops/s
[info] # Warmup Iteration   2: 330983.258 ops/s
[info] # Warmup Iteration   3: 335747.869 ops/s
[info] # Warmup Iteration   4: 334072.313 ops/s
[info] # Warmup Iteration   5: 336294.260 ops/s
[info] Iteration   1: 336887.773 ops/s
[info]                  ·gc.alloc.rate:                   1202.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6161.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 339372.324 ops/s
[info]                  ·gc.alloc.rate:                   1211.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6158.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.483 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 334415.273 ops/s
[info]                  ·gc.alloc.rate:                   1193.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4712.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 337075.609 ops/s
[info]                  ·gc.alloc.rate:                   1203.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6261.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 339685.090 ops/s
[info]                  ·gc.alloc.rate:                   1212.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6240.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay":
[info]   337487.214 ±(99.9%) 8247.453 ops/s [Average]
[info]   (min, avg, max) = (334415.273, 337487.214, 339685.090), stdev = 2141.837
[info]   CI (99.9%): [329239.761, 345734.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1204.715 ±(99.9%) 29.468 MB/sec [Average]
[info]   (min, avg, max) = (1193.739, 1204.715, 1212.569), stdev = 7.653
[info]   CI (99.9%): [1175.247, 1234.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1267.694 ±(99.9%) 574.342 MB/sec [Average]
[info]   (min, avg, max) = (1001.597, 1267.694, 1347.481), stdev = 149.155
[info]   CI (99.9%): [693.352, 1842.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5906.873 ±(99.9%) 2578.006 B/op [Average]
[info]   (min, avg, max) = (4712.060, 5906.873, 6261.074), stdev = 669.500
[info]   CI (99.9%): [3328.867, 8484.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.233 ±(99.9%) 0.622 B/op [Average]
[info]   (min, avg, max) = (0.096, 0.233, 0.483), stdev = 0.161
[info]   CI (99.9%): [≈ 0, 0.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.800, 15.000), stdev = 4.604
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson
[info] # Run progress: 63.93% complete, ETA 00:05:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1918132.263 ops/s
[info] # Warmup Iteration   2: 2693654.310 ops/s
[info] # Warmup Iteration   3: 2674803.639 ops/s
[info] # Warmup Iteration   4: 2663009.838 ops/s
[info] # Warmup Iteration   5: 2664161.992 ops/s
[info] Iteration   1: 2661366.379 ops/s
[info]                  ·gc.alloc.rate:                   1136.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     785.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2682740.828 ops/s
[info]                  ·gc.alloc.rate:                   1145.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     588.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2698170.094 ops/s
[info]                  ·gc.alloc.rate:                   1152.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     783.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 2715445.346 ops/s
[info]                  ·gc.alloc.rate:                   1159.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     585.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2710438.083 ops/s
[info]                  ·gc.alloc.rate:               1157.730 MB/sec
[info]                  ·gc.alloc.rate.norm:          672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1012.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 587.938 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson":
[info]   2693632.146 ±(99.9%) 84769.909 ops/s [Average]
[info]   (min, avg, max) = (2661366.379, 2693632.146, 2715445.346), stdev = 22014.476
[info]   CI (99.9%): [2608862.236, 2778402.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1150.555 ±(99.9%) 36.169 MB/sec [Average]
[info]   (min, avg, max) = (1136.784, 1150.555, 1159.858), stdev = 9.393
[info]   CI (99.9%): [1114.386, 1186.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1139.958 ±(99.9%) 690.714 MB/sec [Average]
[info]   (min, avg, max) = (1003.286, 1139.958, 1343.161), stdev = 179.376
[info]   CI (99.9%): [449.245, 1830.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   666.223 ±(99.9%) 416.005 B/op [Average]
[info]   (min, avg, max) = (585.702, 666.223, 785.939), stdev = 108.035
[info]   CI (99.9%): [250.218, 1082.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.072 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.049), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 11.000), stdev = 3.435
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 65.57% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3132792.531 ops/s
[info] # Warmup Iteration   2: 4149111.156 ops/s
[info] # Warmup Iteration   3: 4183298.481 ops/s
[info] # Warmup Iteration   4: 4232594.717 ops/s
[info] # Warmup Iteration   5: 4171968.148 ops/s
[info] Iteration   1: 4222329.541 ops/s
[info]                  ·gc.alloc.rate:                   644.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     243.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4168076.731 ops/s
[info]                  ·gc.alloc.rate:                   635.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     246.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 4244316.893 ops/s
[info]                  ·gc.alloc.rate:                   647.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     243.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4227937.081 ops/s
[info]                  ·gc.alloc.rate:                   644.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     244.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 4167415.414 ops/s
[info]                  ·gc.alloc.rate:                   635.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     249.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter":
[info]   4206015.132 ±(99.9%) 138074.142 ops/s [Average]
[info]   (min, avg, max) = (4167415.414, 4206015.132, 4244316.893), stdev = 35857.416
[info]   CI (99.9%): [4067940.990, 4344089.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   641.620 ±(99.9%) 21.053 MB/sec [Average]
[info]   (min, avg, max) = (635.733, 641.620, 647.461), stdev = 5.467
[info]   CI (99.9%): [620.567, 662.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   656.010 ±(99.9%) 12.221 MB/sec [Average]
[info]   (min, avg, max) = (652.417, 656.010, 660.402), stdev = 3.174
[info]   CI (99.9%): [643.789, 668.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   245.399 ±(99.9%) 10.247 B/op [Average]
[info]   (min, avg, max) = (243.068, 245.399, 249.313), stdev = 2.661
[info]   CI (99.9%): [235.152, 255.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.033 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.022, 0.031), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 6.200, 12.000), stdev = 4.817
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay
[info] # Run progress: 67.21% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 285961.551 ops/s
[info] # Warmup Iteration   2: 485591.785 ops/s
[info] # Warmup Iteration   3: 493260.602 ops/s
[info] # Warmup Iteration   4: 490349.308 ops/s
[info] # Warmup Iteration   5: 493072.974 ops/s
[info] Iteration   1: 492002.050 ops/s
[info]                  ·gc.alloc.rate:                   1456.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5313.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 493531.802 ops/s
[info]                  ·gc.alloc.rate:                   1460.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4265.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.332 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 495752.848 ops/s
[info]                  ·gc.alloc.rate:                   1467.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4267.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 500541.955 ops/s
[info]                  ·gc.alloc.rate:                   1481.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5303.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 491568.578 ops/s
[info]                  ·gc.alloc.rate:                   1454.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4332.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay":
[info]   494679.447 ±(99.9%) 14106.744 ops/s [Average]
[info]   (min, avg, max) = (491568.578, 494679.447, 500541.955), stdev = 3663.477
[info]   CI (99.9%): [480572.703, 508786.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1463.973 ±(99.9%) 41.705 MB/sec [Average]
[info]   (min, avg, max) = (1454.790, 1463.973, 1481.297), stdev = 10.831
[info]   CI (99.9%): [1422.267, 1505.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1477.124 ±(99.9%) 694.840 MB/sec [Average]
[info]   (min, avg, max) = (1338.127, 1477.124, 1687.277), stdev = 180.448
[info]   CI (99.9%): [782.284, 2171.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4696.593 ±(99.9%) 2153.315 B/op [Average]
[info]   (min, avg, max) = (4265.613, 4696.593, 5313.456), stdev = 559.209
[info]   CI (99.9%): [2543.279, 6849.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.185 ±(99.9%) 0.333 B/op [Average]
[info]   (min, avg, max) = (0.132, 0.185, 0.332), stdev = 0.086
[info]   CI (99.9%): [≈ 0, 0.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.800, 13.000), stdev = 3.768
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 68.85% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 172147.428 ops/s
[info] # Warmup Iteration   2: 936008.258 ops/s
[info] # Warmup Iteration   3: 959058.696 ops/s
[info] # Warmup Iteration   4: 978339.717 ops/s
[info] # Warmup Iteration   5: 951556.981 ops/s
[info] Iteration   1: 966347.326 ops/s
[info]                  ·gc.alloc.rate:                   1194.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1623.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 960585.441 ops/s
[info]                  ·gc.alloc.rate:                   1186.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2189.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 956180.987 ops/s
[info]                  ·gc.alloc.rate:               1181.429 MB/sec
[info]                  ·gc.alloc.rate.norm:          1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1657.364 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 949012.443 ops/s
[info]                  ·gc.alloc.rate:                   1172.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2233.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 960052.723 ops/s
[info]                  ·gc.alloc.rate:               1186.326 MB/sec
[info]                  ·gc.alloc.rate.norm:          1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1013.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1660.510 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson":
[info]   958435.784 ±(99.9%) 24634.453 ops/s [Average]
[info]   (min, avg, max) = (949012.443, 958435.784, 966347.326), stdev = 6397.489
[info]   CI (99.9%): [933801.330, 983070.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1184.289 ±(99.9%) 30.452 MB/sec [Average]
[info]   (min, avg, max) = (1172.664, 1184.289, 1194.063), stdev = 7.908
[info]   CI (99.9%): [1153.838, 1214.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1944.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1944.000, 1944.000, 1944.000), stdev = 0.001
[info]   CI (99.9%): [1944.000, 1944.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1140.420 ±(99.9%) 709.540 MB/sec [Average]
[info]   (min, avg, max) = (997.277, 1140.420, 1347.449), stdev = 184.265
[info]   CI (99.9%): [430.880, 1849.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1872.935 ±(99.9%) 1193.247 B/op [Average]
[info]   (min, avg, max) = (1623.623, 1872.935, 2233.753), stdev = 309.883
[info]   CI (99.9%): [679.688, 3066.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.173 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 12.000), stdev = 3.507
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 70.49% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3116315.899 ops/s
[info] # Warmup Iteration   2: 3407287.407 ops/s
[info] # Warmup Iteration   3: 3391170.175 ops/s
[info] # Warmup Iteration   4: 3377381.410 ops/s
[info] # Warmup Iteration   5: 3401111.206 ops/s
[info] Iteration   1: 3555751.019 ops/s
[info]                  ·gc.alloc.rate:                   415.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3556781.181 ops/s
[info]                  ·gc.alloc.rate:                   415.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     288.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3550509.291 ops/s
[info]                  ·gc.alloc.rate:               415.245 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 144.548 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 3534034.331 ops/s
[info]                  ·gc.alloc.rate:                   413.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3520911.139 ops/s
[info]                  ·gc.alloc.rate:                   411.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   3543597.392 ±(99.9%) 60130.967 ops/s [Average]
[info]   (min, avg, max) = (3520911.139, 3543597.392, 3556781.181), stdev = 15615.821
[info]   CI (99.9%): [3483466.425, 3603728.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   414.443 ±(99.9%) 7.024 MB/sec [Average]
[info]   (min, avg, max) = (411.790, 414.443, 415.984), stdev = 1.824
[info]   CI (99.9%): [407.420, 421.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   184.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (184.000, 184.000, 184.000), stdev = 0.001
[info]   CI (99.9%): [184.000, 184.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   391.318 ±(99.9%) 560.597 MB/sec [Average]
[info]   (min, avg, max) = (325.542, 391.318, 651.747), stdev = 145.585
[info]   CI (99.9%): [≈ 0, 951.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   173.629 ±(99.9%) 246.821 B/op [Average]
[info]   (min, avg, max) = (144.037, 173.629, 288.284), stdev = 64.099
[info]   CI (99.9%): [≈ 0, 420.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.030 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.019), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 10.000), stdev = 3.347
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 72.13% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 107690.659 ops/s
[info] # Warmup Iteration   2: 241166.166 ops/s
[info] # Warmup Iteration   3: 245667.439 ops/s
[info] # Warmup Iteration   4: 246344.872 ops/s
[info] # Warmup Iteration   5: 247653.143 ops/s
[info] Iteration   1: 246068.783 ops/s
[info]                  ·gc.alloc.rate:                   964.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6290.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 246922.346 ops/s
[info]                  ·gc.alloc.rate:                   968.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6294.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.531 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 244523.671 ops/s
[info]                  ·gc.alloc.rate:                   958.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6394.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.402 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 243512.446 ops/s
[info]                  ·gc.alloc.rate:                   954.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6451.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 243861.018 ops/s
[info]                  ·gc.alloc.rate:                   956.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6472.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay":
[info]   244977.653 ±(99.9%) 5637.020 ops/s [Average]
[info]   (min, avg, max) = (243512.446, 244977.653, 246922.346), stdev = 1463.916
[info]   CI (99.9%): [239340.633, 250614.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   960.437 ±(99.9%) 22.154 MB/sec [Average]
[info]   (min, avg, max) = (954.683, 960.437, 968.084), stdev = 5.753
[info]   CI (99.9%): [938.283, 982.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.536 ±(99.9%) 30.019 MB/sec [Average]
[info]   (min, avg, max) = (983.957, 993.536, 1003.248), stdev = 7.796
[info]   CI (99.9%): [963.517, 1023.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6380.953 ±(99.9%) 328.712 B/op [Average]
[info]   (min, avg, max) = (6290.979, 6380.953, 6472.532), stdev = 85.365
[info]   CI (99.9%): [6052.241, 6709.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.267 ±(99.9%) 0.723 B/op [Average]
[info]   (min, avg, max) = (0.133, 0.267, 0.531), stdev = 0.188
[info]   CI (99.9%): [≈ 0, 0.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 11.000), stdev = 3.162
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce
[info] # Run progress: 73.77% complete, ETA 00:04:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 406472.257 ops/s
[info] # Warmup Iteration   2: 567372.693 ops/s
[info] # Warmup Iteration   3: 573072.870 ops/s
[info] # Warmup Iteration   4: 570396.721 ops/s
[info] # Warmup Iteration   5: 567559.261 ops/s
[info] Iteration   1: 569575.236 ops/s
[info]                  ·gc.alloc.rate:               1459.710 MB/sec
[info]                  ·gc.alloc.rate.norm:          4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3700.822 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 571294.997 ops/s
[info]                  ·gc.alloc.rate:                   1464.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3707.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 566859.545 ops/s
[info]                  ·gc.alloc.rate:                   1452.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4688.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.231 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 568237.764 ops/s
[info]                  ·gc.alloc.rate:               1456.219 MB/sec
[info]                  ·gc.alloc.rate.norm:          4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1354.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3751.076 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 572540.469 ops/s
[info]                  ·gc.alloc.rate:                   1467.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3728.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce":
[info]   569701.602 ±(99.9%) 8788.025 ops/s [Average]
[info]   (min, avg, max) = (566859.545, 569701.602, 572540.469), stdev = 2282.222
[info]   CI (99.9%): [560913.578, 578489.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1460.036 ±(99.9%) 22.576 MB/sec [Average]
[info]   (min, avg, max) = (1452.780, 1460.036, 1467.348), stdev = 5.863
[info]   CI (99.9%): [1437.460, 1482.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4032.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4032.001, 4032.001, 4032.001), stdev = 0.001
[info]   CI (99.9%): [4032.001, 4032.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1417.374 ±(99.9%) 586.017 MB/sec [Average]
[info]   (min, avg, max) = (1339.813, 1417.374, 1689.340), stdev = 152.187
[info]   CI (99.9%): [831.356, 2003.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3915.162 ±(99.9%) 1666.488 B/op [Average]
[info]   (min, avg, max) = (3700.822, 3915.162, 4688.541), stdev = 432.782
[info]   CI (99.9%): [2248.675, 5581.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.069 ±(99.9%) 0.366 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.069, 0.231), stdev = 0.095
[info]   CI (99.9%): [≈ 0, 0.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 3.564
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson
[info] # Run progress: 75.41% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 849360.650 ops/s
[info] # Warmup Iteration   2: 1226374.655 ops/s
[info] # Warmup Iteration   3: 1259641.494 ops/s
[info] # Warmup Iteration   4: 1264153.107 ops/s
[info] # Warmup Iteration   5: 1257666.469 ops/s
[info] Iteration   1: 1242615.978 ops/s
[info]                  ·gc.alloc.rate:               764.575 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 831.090 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 1242450.559 ops/s
[info]                  ·gc.alloc.rate:                   764.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1252.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1260444.300 ops/s
[info]                  ·gc.alloc.rate:                   775.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     827.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1255607.233 ops/s
[info]                  ·gc.alloc.rate:               772.536 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 834.161 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1244174.807 ops/s
[info]                  ·gc.alloc.rate:               765.538 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 845.220 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson":
[info]   1249058.575 ±(99.9%) 32305.490 ops/s [Average]
[info]   (min, avg, max) = (1242450.559, 1249058.575, 1260444.300), stdev = 8389.633
[info]   CI (99.9%): [1216753.085, 1281364.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   768.526 ±(99.9%) 19.823 MB/sec [Average]
[info]   (min, avg, max) = (764.465, 768.526, 775.518), stdev = 5.148
[info]   CI (99.9%): [748.704, 788.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   968.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (968.000, 968.000, 968.000), stdev = 0.001
[info]   CI (99.9%): [968.000, 968.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   728.599 ±(99.9%) 561.478 MB/sec [Average]
[info]   (min, avg, max) = (656.436, 728.599, 989.317), stdev = 145.814
[info]   CI (99.9%): [167.120, 1290.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   918.169 ±(99.9%) 720.591 B/op [Average]
[info]   (min, avg, max) = (827.655, 918.169, 1252.719), stdev = 187.135
[info]   CI (99.9%): [197.578, 1638.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.090 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 9.000), stdev = 2.588
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 77.05% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4081320.711 ops/s
[info] # Warmup Iteration   2: 4215420.677 ops/s
[info] # Warmup Iteration   3: 4234797.387 ops/s
[info] # Warmup Iteration   4: 4245183.768 ops/s
[info] # Warmup Iteration   5: 4223163.105 ops/s
[info] Iteration   1: 4225346.009 ops/s
[info]                  ·gc.alloc.rate:                   580.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     242.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 4211682.438 ops/s
[info]                  ·gc.alloc.rate:                   578.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     244.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4234339.224 ops/s
[info]                  ·gc.alloc.rate:                   581.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     243.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4240827.730 ops/s
[info]                  ·gc.alloc.rate:               582.238 MB/sec
[info]                  ·gc.alloc.rate.norm:          216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 122.007 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 4278106.380 ops/s
[info]                  ·gc.alloc.rate:                   587.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     242.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter":
[info]   4238060.356 ±(99.9%) 95931.250 ops/s [Average]
[info]   (min, avg, max) = (4211682.438, 4238060.356, 4278106.380), stdev = 24913.041
[info]   CI (99.9%): [4142129.106, 4333991.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   581.851 ±(99.9%) 13.175 MB/sec [Average]
[info]   (min, avg, max) = (578.236, 581.851, 587.352), stdev = 3.422
[info]   CI (99.9%): [568.676, 595.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   216.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (216.000, 216.000, 216.000), stdev = 0.001
[info]   CI (99.9%): [216.000, 216.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   590.096 ±(99.9%) 562.387 MB/sec [Average]
[info]   (min, avg, max) = (328.875, 590.096, 659.084), stdev = 146.050
[info]   CI (99.9%): [27.710, 1152.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   219.080 ±(99.9%) 208.976 B/op [Average]
[info]   (min, avg, max) = (122.007, 219.080, 244.206), stdev = 54.270
[info]   CI (99.9%): [10.104, 428.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.044 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.031), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.200, 7.000), stdev = 2.588
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay
[info] # Run progress: 78.69% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 193670.913 ops/s
[info] # Warmup Iteration   2: 354364.884 ops/s
[info] # Warmup Iteration   3: 364703.528 ops/s
[info] # Warmup Iteration   4: 369181.567 ops/s
[info] # Warmup Iteration   5: 364238.260 ops/s
[info] Iteration   1: 365635.993 ops/s
[info]                  ·gc.alloc.rate:                   1258.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5688.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 367735.332 ops/s
[info]                  ·gc.alloc.rate:                   1265.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5693.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.445 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 365852.588 ops/s
[info]                  ·gc.alloc.rate:                   1259.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5754.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 366471.497 ops/s
[info]                  ·gc.alloc.rate:                   1261.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5773.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 364572.382 ops/s
[info]                  ·gc.alloc.rate:               1255.053 MB/sec
[info]                  ·gc.alloc.rate.norm:          5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1011.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4366.982 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay":
[info]   366053.558 ±(99.9%) 4478.875 ops/s [Average]
[info]   (min, avg, max) = (364572.382, 366053.558, 367735.332), stdev = 1163.150
[info]   CI (99.9%): [361574.684, 370532.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1260.169 ±(99.9%) 15.492 MB/sec [Average]
[info]   (min, avg, max) = (1255.053, 1260.169, 1265.995), stdev = 4.023
[info]   CI (99.9%): [1244.677, 1275.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5416.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5416.001, 5416.001, 5416.001), stdev = 0.001
[info]   CI (99.9%): [5416.001, 5416.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1269.604 ±(99.9%) 555.544 MB/sec [Average]
[info]   (min, avg, max) = (1011.963, 1269.604, 1344.835), stdev = 144.273
[info]   CI (99.9%): [714.060, 1825.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5455.462 ±(99.9%) 2347.357 B/op [Average]
[info]   (min, avg, max) = (4366.982, 5455.462, 5773.338), stdev = 609.601
[info]   CI (99.9%): [3108.105, 7802.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.197 ±(99.9%) 0.660 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.197, 0.445), stdev = 0.171
[info]   CI (99.9%): [≈ 0, 0.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce
[info] # Run progress: 80.33% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 150874.529 ops/s
[info] # Warmup Iteration   2: 331667.769 ops/s
[info] # Warmup Iteration   3: 340081.827 ops/s
[info] # Warmup Iteration   4: 340869.472 ops/s
[info] # Warmup Iteration   5: 339392.627 ops/s
[info] Iteration   1: 338503.268 ops/s
[info]                  ·gc.alloc.rate:                   1006.943 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4574.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 338545.826 ops/s
[info]                  ·gc.alloc.rate:                   1007.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4605.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.194 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 338088.440 ops/s
[info]                  ·gc.alloc.rate:               1005.707 MB/sec
[info]                  ·gc.alloc.rate.norm:          4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      997.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4640.801 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 340452.225 ops/s
[info]                  ·gc.alloc.rate:                   1012.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4627.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 340155.470 ops/s
[info]                  ·gc.alloc.rate:               1011.845 MB/sec
[info]                  ·gc.alloc.rate.norm:          4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4654.228 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce":
[info]   339149.046 ±(99.9%) 4136.958 ops/s [Average]
[info]   (min, avg, max) = (338088.440, 339149.046, 340452.225), stdev = 1074.355
[info]   CI (99.9%): [335012.088, 343286.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1008.866 ±(99.9%) 12.248 MB/sec [Average]
[info]   (min, avg, max) = (1005.707, 1008.866, 1012.718), stdev = 3.181
[info]   CI (99.9%): [996.618, 1021.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4680.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4680.001, 4680.001, 4680.001), stdev = 0.001
[info]   CI (99.9%): [4680.001, 4680.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   996.014 ±(99.9%) 33.222 MB/sec [Average]
[info]   (min, avg, max) = (984.269, 996.014, 1006.273), stdev = 8.628
[info]   CI (99.9%): [962.792, 1029.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4620.351 ±(99.9%) 120.813 B/op [Average]
[info]   (min, avg, max) = (4574.620, 4620.351, 4654.228), stdev = 31.375
[info]   CI (99.9%): [4499.538, 4741.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.097 ±(99.9%) 0.372 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.097, 0.194), stdev = 0.097
[info]   CI (99.9%): [≈ 0, 0.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 10.000), stdev = 2.881
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson
[info] # Run progress: 81.97% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79294.123 ops/s
[info] # Warmup Iteration   2: 1017189.553 ops/s
[info] # Warmup Iteration   3: 1027226.852 ops/s
[info] # Warmup Iteration   4: 1028234.056 ops/s
[info] # Warmup Iteration   5: 1028937.925 ops/s
[info] Iteration   1: 1017491.037 ops/s
[info]                  ·gc.alloc.rate:                   1055.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1538.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1029124.407 ops/s
[info]                  ·gc.alloc.rate:                   1067.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1528.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1027960.821 ops/s
[info]                  ·gc.alloc.rate:                   1066.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2050.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1024296.202 ops/s
[info]                  ·gc.alloc.rate:               1062.511 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1549.711 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 1031908.586 ops/s
[info]                  ·gc.alloc.rate:                   1070.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1542.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson":
[info]   1026156.211 ±(99.9%) 21413.657 ops/s [Average]
[info]   (min, avg, max) = (1017491.037, 1026156.211, 1031908.586), stdev = 5561.059
[info]   CI (99.9%): [1004742.554, 1047569.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1064.451 ±(99.9%) 22.190 MB/sec [Average]
[info]   (min, avg, max) = (1055.477, 1064.451, 1070.408), stdev = 5.763
[info]   CI (99.9%): [1042.262, 1086.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1071.179 ±(99.9%) 578.838 MB/sec [Average]
[info]   (min, avg, max) = (995.273, 1071.179, 1339.816), stdev = 150.322
[info]   CI (99.9%): [492.341, 1650.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1642.141 ±(99.9%) 879.710 B/op [Average]
[info]   (min, avg, max) = (1528.643, 1642.141, 2050.592), stdev = 228.458
[info]   CI (99.9%): [762.431, 2521.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.077 ±(99.9%) 0.207 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.077, 0.129), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 10.000), stdev = 2.881
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter
[info] # Run progress: 83.61% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3590542.524 ops/s
[info] # Warmup Iteration   2: 3907559.793 ops/s
[info] # Warmup Iteration   3: 3911020.359 ops/s
[info] # Warmup Iteration   4: 3951499.454 ops/s
[info] # Warmup Iteration   5: 3939682.085 ops/s
[info] Iteration   1: 3960476.547 ops/s
[info]                  ·gc.alloc.rate:                   584.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     259.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 3990537.657 ops/s
[info]                  ·gc.alloc.rate:               588.476 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 128.872 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 4006955.346 ops/s
[info]                  ·gc.alloc.rate:                   590.888 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     257.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3987919.945 ops/s
[info]                  ·gc.alloc.rate:               588.076 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 259.218 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 3936365.398 ops/s
[info]                  ·gc.alloc.rate:                   580.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     263.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter":
[info]   3976450.978 ±(99.9%) 107586.129 ops/s [Average]
[info]   (min, avg, max) = (3936365.398, 3976450.978, 4006955.346), stdev = 27939.776
[info]   CI (99.9%): [3868864.849, 4084037.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   586.386 ±(99.9%) 15.898 MB/sec [Average]
[info]   (min, avg, max) = (580.456, 586.386, 590.888), stdev = 4.129
[info]   CI (99.9%): [570.488, 602.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   232.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (232.000, 232.000, 232.000), stdev = 0.001
[info]   CI (99.9%): [232.000, 232.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   590.108 ±(99.9%) 566.681 MB/sec [Average]
[info]   (min, avg, max) = (326.888, 590.108, 659.058), stdev = 147.165
[info]   CI (99.9%): [23.427, 1156.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   233.577 ±(99.9%) 225.555 B/op [Average]
[info]   (min, avg, max) = (128.872, 233.577, 263.416), stdev = 58.576
[info]   CI (99.9%): [8.022, 459.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.070 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.033), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay
[info] # Run progress: 85.25% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 110577.252 ops/s
[info] # Warmup Iteration   2: 253155.512 ops/s
[info] # Warmup Iteration   3: 257511.654 ops/s
[info] # Warmup Iteration   4: 259847.724 ops/s
[info] # Warmup Iteration   5: 257644.410 ops/s
[info] Iteration   1: 260338.586 ops/s
[info]                  ·gc.alloc.rate:               959.753 MB/sec
[info]                  ·gc.alloc.rate.norm:          5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5946.240 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 259304.350 ops/s
[info]                  ·gc.alloc.rate:                   955.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6002.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.632 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 260009.220 ops/s
[info]                  ·gc.alloc.rate:                   958.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6013.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 260489.089 ops/s
[info]                  ·gc.alloc.rate:                   960.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6031.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 260761.340 ops/s
[info]                  ·gc.alloc.rate:                   961.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4032.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay":
[info]   260180.517 ±(99.9%) 2156.506 ops/s [Average]
[info]   (min, avg, max) = (259304.350, 260180.517, 260761.340), stdev = 560.038
[info]   CI (99.9%): [258024.011, 262337.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   959.184 ±(99.9%) 7.952 MB/sec [Average]
[info]   (min, avg, max) = (955.942, 959.184, 961.322), stdev = 2.065
[info]   CI (99.9%): [951.232, 967.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.002, 5800.002, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.001, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.828 ±(99.9%) 556.661 MB/sec [Average]
[info]   (min, avg, max) = (668.409, 926.828, 998.589), stdev = 144.563
[info]   CI (99.9%): [370.168, 1483.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5605.232 ±(99.9%) 3387.094 B/op [Average]
[info]   (min, avg, max) = (4032.753, 5605.232, 6031.133), stdev = 879.618
[info]   CI (99.9%): [2218.137, 8992.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.277 ±(99.9%) 0.936 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.277, 0.632), stdev = 0.243
[info]   CI (99.9%): [≈ 0, 1.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 6.000), stdev = 1.517
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce
[info] # Run progress: 86.89% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 142264.730 ops/s
[info] # Warmup Iteration   2: 323530.773 ops/s
[info] # Warmup Iteration   3: 334175.994 ops/s
[info] # Warmup Iteration   4: 333616.600 ops/s
[info] # Warmup Iteration   5: 334193.077 ops/s
[info] Iteration   1: 335905.213 ops/s
[info]                  ·gc.alloc.rate:                   970.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              4544.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4642.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 332272.246 ops/s
[info]                  ·gc.alloc.rate:                   959.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              4544.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4721.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 329965.507 ops/s
[info]                  ·gc.alloc.rate:               953.021 MB/sec
[info]                  ·gc.alloc.rate.norm:          4544.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3180.652 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 338712.213 ops/s
[info]                  ·gc.alloc.rate:                   978.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              4544.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4666.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 339664.323 ops/s
[info]                  ·gc.alloc.rate:                   981.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              4544.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4670.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce":
[info]   335303.900 ±(99.9%) 15955.893 ops/s [Average]
[info]   (min, avg, max) = (329965.507, 335303.900, 339664.323), stdev = 4143.695
[info]   CI (99.9%): [319348.007, 351259.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   968.450 ±(99.9%) 46.094 MB/sec [Average]
[info]   (min, avg, max) = (953.021, 968.450, 981.045), stdev = 11.971
[info]   CI (99.9%): [922.356, 1014.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4544.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4544.001, 4544.001, 4544.001), stdev = 0.001
[info]   CI (99.9%): [4544.001, 4544.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   933.709 ±(99.9%) 574.487 MB/sec [Average]
[info]   (min, avg, max) = (667.084, 933.709, 1008.256), stdev = 149.192
[info]   CI (99.9%): [359.222, 1508.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4376.359 ±(99.9%) 2576.257 B/op [Average]
[info]   (min, avg, max) = (3180.652, 4376.359, 4721.979), stdev = 669.046
[info]   CI (99.9%): [1800.102, 6952.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.097 ±(99.9%) 0.263 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.097, 0.193), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 9.000), stdev = 1.871
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 88.52% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 102606.111 ops/s
[info] # Warmup Iteration   2: 991117.572 ops/s
[info] # Warmup Iteration   3: 997479.166 ops/s
[info] # Warmup Iteration   4: 995626.027 ops/s
[info] # Warmup Iteration   5: 986749.913 ops/s
[info] Iteration   1: 1000081.733 ops/s
[info]                  ·gc.alloc.rate:                   991.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1563.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 997336.123 ops/s
[info]                  ·gc.alloc.rate:                   988.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1574.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 956892.693 ops/s
[info]                  ·gc.alloc.rate:                   948.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1649.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 992207.963 ops/s
[info]                  ·gc.alloc.rate:                   983.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1594.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 977090.401 ops/s
[info]                  ·gc.alloc.rate:                   968.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1626.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson":
[info]   984721.782 ±(99.9%) 68984.283 ops/s [Average]
[info]   (min, avg, max) = (956892.693, 984721.782, 1000081.733), stdev = 17914.999
[info]   CI (99.9%): [915737.499, 1053706.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   976.425 ±(99.9%) 68.446 MB/sec [Average]
[info]   (min, avg, max) = (948.808, 976.425, 991.651), stdev = 17.775
[info]   CI (99.9%): [907.979, 1044.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1002.273 ±(99.9%) 24.854 MB/sec [Average]
[info]   (min, avg, max) = (993.929, 1002.273, 1010.281), stdev = 6.454
[info]   CI (99.9%): [977.419, 1027.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1601.806 ±(99.9%) 138.399 B/op [Average]
[info]   (min, avg, max) = (1563.585, 1601.806, 1649.549), stdev = 35.942
[info]   CI (99.9%): [1463.406, 1740.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.060 ±(99.9%) 0.137 B/op [Average]
[info]   (min, avg, max) = (0.033, 0.060, 0.099), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 16.000), stdev = 4.438
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 90.16% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2736597.593 ops/s
[info] # Warmup Iteration   2: 3057939.936 ops/s
[info] # Warmup Iteration   3: 3095522.050 ops/s
[info] # Warmup Iteration   4: 3108564.611 ops/s
[info] # Warmup Iteration   5: 3079491.353 ops/s
[info] Iteration   1: 3078360.580 ops/s
[info]                  ·gc.alloc.rate:               516.576 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 166.549 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 3061781.998 ops/s
[info]                  ·gc.alloc.rate:                   513.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     335.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 3108056.313 ops/s
[info]                  ·gc.alloc.rate:                   521.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     330.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3094014.941 ops/s
[info]                  ·gc.alloc.rate:               519.196 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 166.716 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 3106429.858 ops/s
[info]                  ·gc.alloc.rate:                   521.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     332.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter":
[info]   3089728.738 ±(99.9%) 75639.777 ops/s [Average]
[info]   (min, avg, max) = (3061781.998, 3089728.738, 3108056.313), stdev = 19643.410
[info]   CI (99.9%): [3014088.961, 3165368.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   518.478 ±(99.9%) 12.692 MB/sec [Average]
[info]   (min, avg, max) = (513.785, 518.478, 521.557), stdev = 3.296
[info]   CI (99.9%): [505.786, 531.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   523.348 ±(99.9%) 690.640 MB/sec [Average]
[info]   (min, avg, max) = (325.891, 523.348, 656.763), stdev = 179.357
[info]   CI (99.9%): [≈ 0, 1213.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   266.411 ±(99.9%) 350.785 B/op [Average]
[info]   (min, avg, max) = (166.549, 266.411, 335.243), stdev = 91.098
[info]   CI (99.9%): [≈ 0, 617.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.075 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.043), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 9.000), stdev = 3.209
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 91.80% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 111745.807 ops/s
[info] # Warmup Iteration   2: 248509.253 ops/s
[info] # Warmup Iteration   3: 256403.878 ops/s
[info] # Warmup Iteration   4: 259488.137 ops/s
[info] # Warmup Iteration   5: 257973.817 ops/s
[info] Iteration   1: 257473.183 ops/s
[info]                  ·gc.alloc.rate:                   983.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6010.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 257374.673 ops/s
[info]                  ·gc.alloc.rate:                   982.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6036.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.509 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 259919.819 ops/s
[info]                  ·gc.alloc.rate:                   992.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6016.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 260229.476 ops/s
[info]                  ·gc.alloc.rate:                   993.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6037.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 258902.742 ops/s
[info]                  ·gc.alloc.rate:                   988.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6096.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay":
[info]   258779.979 ±(99.9%) 5129.436 ops/s [Average]
[info]   (min, avg, max) = (257374.673, 258779.979, 260229.476), stdev = 1332.098
[info]   CI (99.9%): [253650.542, 263909.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   988.217 ±(99.9%) 19.581 MB/sec [Average]
[info]   (min, avg, max) = (982.847, 988.217, 993.744), stdev = 5.085
[info]   CI (99.9%): [968.637, 1007.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6008.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6008.002, 6008.002, 6008.002), stdev = 0.001
[info]   CI (99.9%): [6008.001, 6008.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.405 ±(99.9%) 30.726 MB/sec [Average]
[info]   (min, avg, max) = (983.599, 993.405, 1003.275), stdev = 7.979
[info]   CI (99.9%): [962.679, 1024.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6039.524 ±(99.9%) 131.616 B/op [Average]
[info]   (min, avg, max) = (6010.222, 6039.524, 6096.678), stdev = 34.180
[info]   CI (99.9%): [5907.908, 6171.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.254 ±(99.9%) 0.602 B/op [Average]
[info]   (min, avg, max) = (0.126, 0.254, 0.509), stdev = 0.156
[info]   CI (99.9%): [≈ 0, 0.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.000, 11.000), stdev = 3.808
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce
[info] # Run progress: 93.44% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 353115.411 ops/s
[info] # Warmup Iteration   2: 610338.151 ops/s
[info] # Warmup Iteration   3: 619700.474 ops/s
[info] # Warmup Iteration   4: 624879.975 ops/s
[info] # Warmup Iteration   5: 625580.112 ops/s
[info] Iteration   1: 622334.928 ops/s
[info]                  ·gc.alloc.rate:                   1218.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2524.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 620829.133 ops/s
[info]                  ·gc.alloc.rate:                   1215.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3392.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 620244.921 ops/s
[info]                  ·gc.alloc.rate:                   1214.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3411.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 631096.503 ops/s
[info]                  ·gc.alloc.rate:               1235.489 MB/sec
[info]                  ·gc.alloc.rate.norm:          3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1012.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2523.487 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 630618.073 ops/s
[info]                  ·gc.alloc.rate:                   1234.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3374.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce":
[info]   625024.711 ±(99.9%) 20721.739 ops/s [Average]
[info]   (min, avg, max) = (620244.921, 625024.711, 631096.503), stdev = 5381.370
[info]   CI (99.9%): [604302.973, 645746.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1223.612 ±(99.9%) 40.564 MB/sec [Average]
[info]   (min, avg, max) = (1214.228, 1223.612, 1235.489), stdev = 10.534
[info]   CI (99.9%): [1183.048, 1264.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3080.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3080.001, 3080.001, 3080.001), stdev = 0.001
[info]   CI (99.9%): [3080.001, 3080.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1209.456 ±(99.9%) 717.688 MB/sec [Average]
[info]   (min, avg, max) = (998.599, 1209.456, 1352.806), stdev = 186.381
[info]   CI (99.9%): [491.768, 1927.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3045.368 ±(99.9%) 1833.420 B/op [Average]
[info]   (min, avg, max) = (2523.487, 3045.368, 3411.202), stdev = 476.133
[info]   CI (99.9%): [1211.948, 4878.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.063 ±(99.9%) 0.170 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.063, 0.106), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 10.000), stdev = 2.449
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson
[info] # Run progress: 95.08% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1129791.002 ops/s
[info] # Warmup Iteration   2: 1621447.792 ops/s
[info] # Warmup Iteration   3: 1630639.922 ops/s
[info] # Warmup Iteration   4: 1645258.550 ops/s
[info] # Warmup Iteration   5: 1612180.665 ops/s
[info] Iteration   1: 1641403.589 ops/s
[info]                  ·gc.alloc.rate:                   684.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     627.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1661885.240 ops/s
[info]                  ·gc.alloc.rate:                   692.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     622.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1666289.927 ops/s
[info]                  ·gc.alloc.rate:               694.778 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 623.552 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1634448.266 ops/s
[info]                  ·gc.alloc.rate:               681.515 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 638.249 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   5: 1650821.062 ops/s
[info]                  ·gc.alloc.rate:                   688.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     633.829 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson":
[info]   1650969.617 ±(99.9%) 51602.533 ops/s [Average]
[info]   (min, avg, max) = (1634448.266, 1650969.617, 1666289.927), stdev = 13401.014
[info]   CI (99.9%): [1599367.083, 1702572.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   688.402 ±(99.9%) 21.538 MB/sec [Average]
[info]   (min, avg, max) = (681.515, 688.402, 694.778), stdev = 5.593
[info]   CI (99.9%): [666.864, 709.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   660.152 ±(99.9%) 16.241 MB/sec [Average]
[info]   (min, avg, max) = (654.416, 660.152, 665.062), stdev = 4.218
[info]   CI (99.9%): [643.911, 676.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   629.115 ±(99.9%) 25.930 B/op [Average]
[info]   (min, avg, max) = (622.686, 629.115, 638.249), stdev = 6.734
[info]   CI (99.9%): [603.185, 655.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.042 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.020), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.800, 10.000), stdev = 4.764
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 96.72% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5120505.041 ops/s
[info] # Warmup Iteration   2: 5594172.104 ops/s
[info] # Warmup Iteration   3: 5682005.871 ops/s
[info] # Warmup Iteration   4: 5693460.220 ops/s
[info] # Warmup Iteration   5: 5537735.967 ops/s
[info] Iteration   1: 5577250.060 ops/s
[info]                  ·gc.alloc.rate:                   283.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5609067.874 ops/s
[info]                  ·gc.alloc.rate:                   285.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.093 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.587 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 5665202.688 ops/s
[info]                  ·gc.alloc.rate:                   288.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 5679044.794 ops/s
[info]                  ·gc.alloc.rate:                   288.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 5616158.602 ops/s
[info]                  ·gc.alloc.rate:                   285.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter":
[info]   5629344.804 ±(99.9%) 161712.937 ops/s [Average]
[info]   (min, avg, max) = (5577250.060, 5629344.804, 5679044.794), stdev = 41996.336
[info]   CI (99.9%): [5467631.867, 5791057.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   286.258 ±(99.9%) 8.261 MB/sec [Average]
[info]   (min, avg, max) = (283.600, 286.258, 288.804), stdev = 2.145
[info]   CI (99.9%): [277.997, 294.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   311.756 ±(99.9%) 120.225 MB/sec [Average]
[info]   (min, avg, max) = (255.905, 311.756, 325.901), stdev = 31.222
[info]   CI (99.9%): [191.530, 431.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   87.093 ±(99.9%) 32.140 B/op [Average]
[info]   (min, avg, max) = (72.188, 87.093, 91.309), stdev = 8.347
[info]   CI (99.9%): [54.954, 119.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.450 ±(99.9%) 3.538 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.450, 2.093), stdev = 0.919
[info]   CI (99.9%): [≈ 0, 3.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.126 ±(99.9%) 0.992 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.126, 0.587), stdev = 0.258
[info]   CI (99.9%): [≈ 0, 1.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 9.000), stdev = 3.347
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay
[info] # Run progress: 98.36% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 84420.437 ops/s
[info] # Warmup Iteration   2: 192190.494 ops/s
[info] # Warmup Iteration   3: 199274.229 ops/s
[info] # Warmup Iteration   4: 199204.151 ops/s
[info] # Warmup Iteration   5: 196271.984 ops/s
[info] Iteration   1: 196916.350 ops/s
[info]                  ·gc.alloc.rate:                   1073.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7893.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.499 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 195308.262 ops/s
[info]                  ·gc.alloc.rate:                   1064.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7990.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.671 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 196517.168 ops/s
[info]                  ·gc.alloc.rate:                   1071.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7986.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.500 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 195871.145 ops/s
[info]                  ·gc.alloc.rate:                   1067.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10735.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.335 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 196532.624 ops/s
[info]                  ·gc.alloc.rate:                   1071.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8057.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.333 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay":
[info]   196229.110 ±(99.9%) 2453.178 ops/s [Average]
[info]   (min, avg, max) = (195308.262, 196229.110, 196916.350), stdev = 637.083
[info]   CI (99.9%): [193775.931, 198682.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1069.659 ±(99.9%) 13.373 MB/sec [Average]
[info]   (min, avg, max) = (1064.649, 1069.659, 1073.396), stdev = 3.473
[info]   CI (99.9%): [1056.285, 1083.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8576.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8576.002, 8576.002, 8576.002), stdev = 0.001
[info]   CI (99.9%): [8576.002, 8576.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1064.115 ±(99.9%) 586.899 MB/sec [Average]
[info]   (min, avg, max) = (987.952, 1064.115, 1336.476), stdev = 152.416
[info]   CI (99.9%): [477.217, 1651.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8532.621 ±(99.9%) 4746.232 B/op [Average]
[info]   (min, avg, max) = (7893.338, 8532.621, 10735.040), stdev = 1232.581
[info]   CI (99.9%): [3786.388, 13278.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.468 ±(99.9%) 0.542 B/op [Average]
[info]   (min, avg, max) = (0.333, 0.468, 0.671), stdev = 0.141
[info]   CI (99.9%): [≈ 0, 1.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 8.400, 15.000), stdev = 5.320
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:16:23
[info] Benchmark                                                                     Mode  Cnt         Score        Error   Units
[info] CodecBenchmark.readAnyRefsCirce                                              thrpt    5   1267813.340 ±  62213.280   ops/s
[info] CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate                               thrpt    5      1979.188 ±     97.296  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                          thrpt    5      2456.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1964.095 ±    608.078  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2438.495 ±    811.170    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.050 ±      0.072  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.062 ±      0.090    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.count                                    thrpt    5        29.000               counts
[info] CodecBenchmark.readAnyRefsCirce:·gc.time                                     thrpt    5        50.000                   ms
[info] CodecBenchmark.readAnyRefsJackson                                            thrpt    5   1861330.968 ±  18648.247   ops/s
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                             thrpt    5      1306.207 ±     13.121  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                        thrpt    5      1104.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1342.083 ±     37.663  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1134.334 ±     37.070    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.025 ±      0.067  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.021 ±      0.057    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.count                                  thrpt    5        20.000               counts
[info] CodecBenchmark.readAnyRefsJackson:·gc.time                                   thrpt    5        37.000                   ms
[info] CodecBenchmark.readAnyRefsJsoniter                                           thrpt    5   6128268.773 ± 470931.490   ops/s
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                            thrpt    5       779.077 ±     59.955  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                       thrpt    5       200.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       792.653 ±    702.073  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       203.959 ±    190.329    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.046 ±      0.088  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.012 ±      0.022    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.count                                 thrpt    5        12.000               counts
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.time                                  thrpt    5        30.000                   ms
[info] CodecBenchmark.readAnyRefsPlay                                               thrpt    5    420046.856 ±  20109.990   ops/s
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                thrpt    5      1110.683 ±     53.100  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                           thrpt    5      4160.001 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1065.659 ±    575.756  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      3991.692 ±   2159.499    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±      0.105  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.172 ±      0.397    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.count                                     thrpt    5        16.000               counts
[info] CodecBenchmark.readAnyRefsPlay:·gc.time                                      thrpt    5        46.000                   ms
[info] CodecBenchmark.readArraysCirce                                               thrpt    5    611313.754 ±  11673.933   ops/s
[info] CodecBenchmark.readArraysCirce:·gc.alloc.rate                                thrpt    5      1992.560 ±     37.913  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.alloc.rate.norm                           thrpt    5      5128.001 ±      0.001    B/op
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                       thrpt    5      2035.652 ±     24.160  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5239.056 ±    155.686    B/op
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                   thrpt    5         0.042 ±      0.080  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.107 ±      0.206    B/op
[info] CodecBenchmark.readArraysCirce:·gc.count                                     thrpt    5        30.000               counts
[info] CodecBenchmark.readArraysCirce:·gc.time                                      thrpt    5        51.000                   ms
[info] CodecBenchmark.readArraysJackson                                             thrpt    5   1276269.497 ±  54072.977   ops/s
[info] CodecBenchmark.readArraysJackson:·gc.alloc.rate                              thrpt    5      1200.618 ±     50.910  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.alloc.rate.norm                         thrpt    5      1480.000 ±      0.001    B/op
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                     thrpt    5      1204.744 ±    705.631  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5      1483.267 ±    811.354    B/op
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                 thrpt    5         0.029 ±      0.044  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.036 ±      0.053    B/op
[info] CodecBenchmark.readArraysJackson:·gc.count                                   thrpt    5        18.000               counts
[info] CodecBenchmark.readArraysJackson:·gc.time                                    thrpt    5        40.000                   ms
[info] CodecBenchmark.readArraysJsoniter                                            thrpt    5   2479728.012 ±  36914.280   ops/s
[info] CodecBenchmark.readArraysJsoniter:·gc.alloc.rate                             thrpt    5      1134.863 ±     16.948  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                        thrpt    5       720.000 ±      0.001    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5      1135.206 ±    706.039  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5       719.961 ±    439.569    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5         0.062 ±      0.150  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.040 ±      0.095    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.count                                  thrpt    5        17.000               counts
[info] CodecBenchmark.readArraysJsoniter:·gc.time                                   thrpt    5        34.000                   ms
[info] CodecBenchmark.readArraysPlay                                                thrpt    5    220922.356 ±   3974.717   ops/s
[info] CodecBenchmark.readArraysPlay:·gc.alloc.rate                                 thrpt    5      1344.680 ±     24.206  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.alloc.rate.norm                            thrpt    5      9576.002 ±      0.001    B/op
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                        thrpt    5      1338.469 ±     40.967  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5      9531.967 ±    351.692    B/op
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                    thrpt    5         0.046 ±      0.088  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.326 ±      0.627    B/op
[info] CodecBenchmark.readArraysPlay:·gc.count                                      thrpt    5        20.000               counts
[info] CodecBenchmark.readArraysPlay:·gc.time                                       thrpt    5        32.000                   ms
[info] CodecBenchmark.readBitSetsJackson                                            thrpt    5   1622047.396 ±  23491.798   ops/s
[info] CodecBenchmark.readBitSetsJackson:·gc.alloc.rate                             thrpt    5      1047.537 ±     15.165  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                        thrpt    5      1016.000 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1063.231 ±    601.183  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1030.982 ±    573.427    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.033 ±      0.044  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.032 ±      0.043    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.count                                  thrpt    5        16.000               counts
[info] CodecBenchmark.readBitSetsJackson:·gc.time                                   thrpt    5        29.000                   ms
[info] CodecBenchmark.readBitSetsJsoniter                                           thrpt    5   5422210.885 ± 177423.486   ops/s
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                            thrpt    5       579.007 ±     18.951  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                       thrpt    5       168.000 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       590.103 ±    566.691  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       171.273 ±    165.157    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.029 ±      0.072  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.008 ±      0.021    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.count                                 thrpt    5         9.000               counts
[info] CodecBenchmark.readBitSetsJsoniter:·gc.time                                  thrpt    5        29.000                   ms
[info] CodecBenchmark.readBitSetsPlay                                               thrpt    5    252960.475 ±   8207.114   ops/s
[info] CodecBenchmark.readBitSetsPlay:·gc.alloc.rate                                thrpt    5      1148.676 ±     37.250  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                           thrpt    5      7144.002 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1132.707 ±    725.120  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      7045.107 ±   4516.518    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.037 ±      0.036  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.233 ±      0.225    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.count                                     thrpt    5        17.000               counts
[info] CodecBenchmark.readBitSetsPlay:·gc.time                                      thrpt    5        29.000                   ms
[info] CodecBenchmark.readExtractFieldsCirce                                        thrpt    5    549464.749 ±  24575.787   ops/s
[info] CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate                         thrpt    5      1824.499 ±     81.540  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                    thrpt    5      5224.001 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                thrpt    5      1830.590 ±    720.478  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm           thrpt    5      5243.261 ±   2133.986    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space            thrpt    5         0.067 ±      0.105  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.190 ±      0.295    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.count                              thrpt    5        27.000               counts
[info] CodecBenchmark.readExtractFieldsCirce:·gc.time                               thrpt    5        54.000                   ms
[info] CodecBenchmark.readExtractFieldsJackson                                      thrpt    5    684970.047 ±  18697.021   ops/s
[info] CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate                       thrpt    5       849.855 ±     23.189  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                  thrpt    5      1952.001 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space              thrpt    5       861.058 ±    705.787  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm         thrpt    5      1978.501 ±   1635.725    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space          thrpt    5         0.021 ±      0.080  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.048 ±      0.185    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.count                            thrpt    5        13.000               counts
[info] CodecBenchmark.readExtractFieldsJackson:·gc.time                             thrpt    5        41.000                   ms
[info] CodecBenchmark.readExtractFieldsJsoniter                                     thrpt    5   4417535.046 ±  47626.604   ops/s
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                      thrpt    5       202.164 ±      2.178  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                 thrpt    5        72.000 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space             thrpt    5       167.468 ±    598.767  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm        thrpt    5        59.764 ±    213.679    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space         thrpt    5         0.437 ±      3.743  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm    thrpt    5         0.156 ±      1.336    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.count                           thrpt    5         3.000               counts
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.time                            thrpt    5         8.000                   ms
[info] CodecBenchmark.readExtractFieldsPlay                                         thrpt    5    206826.183 ±   9350.490   ops/s
[info] CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate                          thrpt    5      1135.881 ±     51.272  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                     thrpt    5      8640.002 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                 thrpt    5      1198.506 ±    702.595  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm            thrpt    5      9122.238 ±   5510.031    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space             thrpt    5         0.050 ±      0.091  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.380 ±      0.690    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.count                               thrpt    5        18.000               counts
[info] CodecBenchmark.readExtractFieldsPlay:·gc.time                                thrpt    5        44.000                   ms
[info] CodecBenchmark.readIntAndLongMapsJsoniter                                    thrpt    5   3086526.467 ±  87272.037   ops/s
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                     thrpt    5      1459.655 ±     41.232  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                thrpt    5       744.000 ±      0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space            thrpt    5      1413.084 ±    582.764  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm       thrpt    5       720.658 ±    316.091    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space        thrpt    5         0.067 ±      0.183  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.034 ±      0.093    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                          thrpt    5        21.000               counts
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                           thrpt    5        37.000                   ms
[info] CodecBenchmark.readIntAndLongMapsPlay                                        thrpt    5    240160.388 ±  11214.906   ops/s
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                         thrpt    5      1290.803 ±     60.399  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                    thrpt    5      8456.002 ±      0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                thrpt    5      1270.868 ±    557.756  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm           thrpt    5      8320.168 ±   3447.453    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space            thrpt    5         0.046 ±      0.174  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.299 ±      1.132    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.count                              thrpt    5        19.000               counts
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.time                               thrpt    5        34.000                   ms
[info] CodecBenchmark.readIterablesCirce                                            thrpt    5    549000.978 ±  21562.240   ops/s
[info] CodecBenchmark.readIterablesCirce:·gc.alloc.rate                             thrpt    5      1923.445 ±     75.623  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm                        thrpt    5      5512.001 ±      0.001    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                    thrpt    5      1898.955 ±    710.225  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm               thrpt    5      5445.457 ±   2192.851    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                thrpt    5         0.058 ±      0.067  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.167 ±      0.191    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.count                                  thrpt    5        28.000               counts
[info] CodecBenchmark.readIterablesCirce:·gc.time                                   thrpt    5        53.000                   ms
[info] CodecBenchmark.readIterablesJackson                                          thrpt    5    563810.245 ±  11157.692   ops/s
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate                           thrpt    5       573.388 ±     11.368  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                      thrpt    5      1600.001 ±      0.001    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                  thrpt    5       527.262 ±    695.095  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm             thrpt    5      1471.333 ±   1940.195    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space              thrpt    5         0.046 ±      0.105  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.128 ±      0.293    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.count                                thrpt    5         8.000               counts
[info] CodecBenchmark.readIterablesJackson:·gc.time                                 thrpt    5        25.000                   ms
[info] CodecBenchmark.readIterablesJsoniter                                         thrpt    5   2906011.333 ±  45531.101   ops/s
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                          thrpt    5       724.076 ±     11.293  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                     thrpt    5       392.000 ±      0.001    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                 thrpt    5       724.799 ±    575.382  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm            thrpt    5       392.469 ±    313.640    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space             thrpt    5         0.042 ±      0.113  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.023 ±      0.061    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.count                               thrpt    5        11.000               counts
[info] CodecBenchmark.readIterablesJsoniter:·gc.time                                thrpt    5        24.000                   ms
[info] CodecBenchmark.readIterablesPlay                                             thrpt    5    169514.303 ±   3205.247   ops/s
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate                              thrpt    5      1158.488 ±     21.839  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                         thrpt    5     10752.003 ±      0.001    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                     thrpt    5      1132.693 ±    704.892  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                thrpt    5     10517.801 ±   6701.246    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                 thrpt    5         0.046 ±      0.067  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.426 ±      0.628    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.count                                   thrpt    5        17.000               counts
[info] CodecBenchmark.readIterablesPlay:·gc.time                                    thrpt    5        29.000                   ms
[info] CodecBenchmark.readMapsCirce                                                 thrpt    5    474828.486 ±  10047.341   ops/s
[info] CodecBenchmark.readMapsCirce:·gc.alloc.rate                                  thrpt    5      1687.732 ±     35.654  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.alloc.rate.norm                             thrpt    5      5592.001 ±      0.001    B/op
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                         thrpt    5      1692.216 ±     26.752  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5607.073 ±    196.216    B/op
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                     thrpt    5         0.033 ±      0.044  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.111 ±      0.147    B/op
[info] CodecBenchmark.readMapsCirce:·gc.count                                       thrpt    5        25.000               counts
[info] CodecBenchmark.readMapsCirce:·gc.time                                        thrpt    5        42.000                   ms
[info] CodecBenchmark.readMapsJackson                                               thrpt    5    861545.286 ±  14598.990   ops/s
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate                                thrpt    5      1016.387 ±     17.229  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1856.001 ±      0.001    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1004.229 ±     23.290  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1833.813 ±     43.065    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.054 ±      0.176  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.099 ±      0.321    B/op
[info] CodecBenchmark.readMapsJackson:·gc.count                                     thrpt    5        15.000               counts
[info] CodecBenchmark.readMapsJackson:·gc.time                                      thrpt    5        24.000                   ms
[info] CodecBenchmark.readMapsJsoniter                                              thrpt    5   3232626.251 ±  83213.588   ops/s
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate                               thrpt    5       805.460 ±     20.728  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       392.000 ±      0.001    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       792.832 ±    692.017  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       385.736 ±    333.870    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.054 ±      0.122  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.026 ±      0.060    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.count                                    thrpt    5        12.000               counts
[info] CodecBenchmark.readMapsJsoniter:·gc.time                                     thrpt    5        22.000                   ms
[info] CodecBenchmark.readMapsPlay                                                  thrpt    5    256071.537 ±   2744.238   ops/s
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate                                   thrpt    5      1337.291 ±     14.331  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                              thrpt    5      8216.002 ±      0.001    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1338.584 ±     40.376  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      8224.051 ±    291.898    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.050 ±      0.091  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.307 ±      0.560    B/op
[info] CodecBenchmark.readMapsPlay:·gc.count                                        thrpt    5        20.000               counts
[info] CodecBenchmark.readMapsPlay:·gc.time                                         thrpt    5        28.000                   ms
[info] CodecBenchmark.readMutableMapsJackson                                        thrpt    5    698227.020 ±  12913.510   ops/s
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                         thrpt    5       905.380 ±     16.827  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                    thrpt    5      2040.001 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                thrpt    5       932.582 ±    572.773  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5      2102.216 ±   1312.084    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.058 ±      0.143  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.132 ±      0.324    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.count                              thrpt    5        14.000               counts
[info] CodecBenchmark.readMutableMapsJackson:·gc.time                               thrpt    5        34.000                   ms
[info] CodecBenchmark.readMutableMapsJsoniter                                       thrpt    5   2503957.107 ±  49061.962   ops/s
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                        thrpt    5      1706.227 ±     33.463  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                   thrpt    5      1072.000 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space               thrpt    5      1688.371 ±     36.020  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5      1060.824 ±     42.036    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.054 ±      0.166  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.034 ±      0.104    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.count                             thrpt    5        25.000               counts
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.time                              thrpt    5        43.000                   ms
[info] CodecBenchmark.readMutableMapsPlay                                           thrpt    5    220423.034 ±   5031.592   ops/s
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                            thrpt    5      1161.276 ±     26.328  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                       thrpt    5      8288.002 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1200.128 ±    702.865  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8566.699 ±   5055.179    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.037 ±      0.105  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.268 ±      0.744    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.count                                 thrpt    5        18.000               counts
[info] CodecBenchmark.readMutableMapsPlay:·gc.time                                  thrpt    5        43.000                   ms
[info] CodecBenchmark.readPrimitivesJackson                                         thrpt    5   1021137.319 ±  35941.838   ops/s
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                          thrpt    5       742.569 ±     25.808  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                     thrpt    5      1144.000 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       790.233 ±    686.095  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5      1219.405 ±   1100.997    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.025 ±      0.088  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.038 ±      0.135    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.count                               thrpt    5        12.000               counts
[info] CodecBenchmark.readPrimitivesJackson:·gc.time                                thrpt    5        35.000                   ms
[info] CodecBenchmark.readPrimitivesJsoniter                                        thrpt    5   3115043.271 ±  12931.222   ops/s
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                         thrpt    5        95.041 ±      0.391  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                    thrpt    5        48.000 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5        51.182 ±    440.693  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5        25.895 ±    222.968    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.004 ±      0.036  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.002 ±      0.018    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.count                              thrpt    5         1.000               counts
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.time                               thrpt    5         2.000                   ms
[info] CodecBenchmark.readPrimitivesPlay                                            thrpt    5    169196.376 ±   3066.503   ops/s
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                             thrpt    5      1166.663 ±     21.193  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                        thrpt    5     10848.003 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1200.552 ±    703.203  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5     11161.778 ±   6497.324    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.067 ±      0.143  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.620 ±      1.336    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.count                                  thrpt    5        18.000               counts
[info] CodecBenchmark.readPrimitivesPlay:·gc.time                                   thrpt    5        42.000                   ms
[info] CodecBenchmark.writeAnyRefsCirce                                             thrpt    5   1313260.652 ±  36105.448   ops/s
[info] CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate                              thrpt    5      1469.155 ±     40.359  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                         thrpt    5      1760.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                     thrpt    5      1484.371 ±    701.805  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                thrpt    5      1778.111 ±    834.407    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                 thrpt    5         0.029 ±      0.108  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.035 ±      0.129    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.count                                   thrpt    5        22.000               counts
[info] CodecBenchmark.writeAnyRefsCirce:·gc.time                                    thrpt    5        46.000                   ms
[info] CodecBenchmark.writeAnyRefsJackson                                           thrpt    5   3930171.271 ± 152793.162   ops/s
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                            thrpt    5      1079.188 ±     41.984  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                       thrpt    5       432.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1070.132 ±    551.375  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       428.180 ±    211.405    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.033 ±      0.072  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.013 ±      0.029    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.count                                 thrpt    5        16.000               counts
[info] CodecBenchmark.writeAnyRefsJackson:·gc.time                                  thrpt    5        40.000                   ms
[info] CodecBenchmark.writeAnyRefsJsoniter                                          thrpt    5  13807219.220 ± 225535.405   ops/s
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                           thrpt    5       421.255 ±      6.867  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                      thrpt    5        48.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       456.689 ±    687.424  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5        52.020 ±     78.069    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.029 ±      0.122  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.003 ±      0.014    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.count                                thrpt    5         7.000               counts
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.time                                 thrpt    5        11.000                   ms
[info] CodecBenchmark.writeAnyRefsPlay                                              thrpt    5    949648.865 ± 110218.470   ops/s
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                               thrpt    5      1405.215 ±    163.182  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                          thrpt    5      2328.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1343.608 ±     34.893  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2227.837 ±    304.981    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.046 ±      0.088  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.076 ±      0.139    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.count                                    thrpt    5        20.000               counts
[info] CodecBenchmark.writeAnyRefsPlay:·gc.time                                     thrpt    5        36.000                   ms
[info] CodecBenchmark.writeArraysCirce                                              thrpt    5    713113.154 ±  13765.075   ops/s
[info] CodecBenchmark.writeArraysCirce:·gc.alloc.rate                               thrpt    5      1722.429 ±     33.290  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm                          thrpt    5      3800.001 ±      0.001    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1689.344 ±     34.118  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      3727.032 ±     59.295    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.037 ±      0.105  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.083 ±      0.231    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.count                                    thrpt    5        25.000               counts
[info] CodecBenchmark.writeArraysCirce:·gc.time                                     thrpt    5        47.000                   ms
[info] CodecBenchmark.writeArraysJackson                                            thrpt    5   2488859.390 ±  69507.577   ops/s
[info] CodecBenchmark.writeArraysJackson:·gc.alloc.rate                             thrpt    5      1442.781 ±     40.198  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm                        thrpt    5       912.000 ±      0.001    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1416.414 ±    572.581  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5       895.556 ±    372.195    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.029 ±      0.044  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.018 ±      0.028    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.count                                  thrpt    5        21.000               counts
[info] CodecBenchmark.writeArraysJackson:·gc.time                                   thrpt    5        30.000                   ms
[info] CodecBenchmark.writeArraysJsoniter                                           thrpt    5   3718098.130 ± 168403.646   ops/s
[info] CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate                            thrpt    5      1020.945 ±     46.206  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                       thrpt    5       432.000 ±      0.001    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1064.776 ±    576.177  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       450.621 ±    245.243    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.046 ±      0.105  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.019 ±      0.044    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.count                                 thrpt    5        16.000               counts
[info] CodecBenchmark.writeArraysJsoniter:·gc.time                                  thrpt    5        39.000                   ms
[info] CodecBenchmark.writeArraysPlay                                               thrpt    5    337487.214 ±   8247.453   ops/s
[info] CodecBenchmark.writeArraysPlay:·gc.alloc.rate                                thrpt    5      1204.715 ±     29.468  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm                           thrpt    5      5616.001 ±      0.001    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1267.694 ±    574.342  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5906.873 ±   2578.006    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.050 ±      0.134  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.233 ±      0.622    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.count                                     thrpt    5        19.000               counts
[info] CodecBenchmark.writeArraysPlay:·gc.time                                      thrpt    5        44.000                   ms
[info] CodecBenchmark.writeBitSetsJackson                                           thrpt    5   2693632.146 ±  84769.909   ops/s
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                            thrpt    5      1150.555 ±     36.169  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                       thrpt    5       672.000 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1139.958 ±    690.714  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       666.223 ±    416.005    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.029 ±      0.122  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.017 ±      0.072    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.count                                 thrpt    5        17.000               counts
[info] CodecBenchmark.writeBitSetsJackson:·gc.time                                  thrpt    5        27.000                   ms
[info] CodecBenchmark.writeBitSetsJsoniter                                          thrpt    5   4206015.132 ± 138074.142   ops/s
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                           thrpt    5       641.620 ±     21.053  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                      thrpt    5       240.000 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       656.010 ±     12.221  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5       245.399 ±     10.247    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.058 ±      0.088  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.022 ±      0.033    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.count                                thrpt    5        10.000               counts
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.time                                 thrpt    5        31.000                   ms
[info] CodecBenchmark.writeBitSetsPlay                                              thrpt    5    494679.447 ±  14106.744   ops/s
[info] CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate                               thrpt    5      1463.973 ±     41.705  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                          thrpt    5      4656.001 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1477.124 ±    694.840  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      4696.593 ±   2153.315    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.058 ±      0.105  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.185 ±      0.333    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.count                                    thrpt    5        22.000               counts
[info] CodecBenchmark.writeBitSetsPlay:·gc.time                                     thrpt    5        49.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsJackson                                    thrpt    5    958435.784 ±  24634.453   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                     thrpt    5      1184.289 ±     30.452  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                thrpt    5      1944.000 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space            thrpt    5      1140.420 ±    709.540  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm       thrpt    5      1872.935 ±   1193.247    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space        thrpt    5         0.025 ±      0.105  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.041 ±      0.173    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.count                          thrpt    5        17.000               counts
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.time                           thrpt    5        32.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsJsoniter                                   thrpt    5   3543597.392 ±  60130.967   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                    thrpt    5       414.443 ±      7.024  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm               thrpt    5       184.000 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space           thrpt    5       391.318 ±    560.597  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm      thrpt    5       173.629 ±    246.821    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space       thrpt    5         0.025 ±      0.067  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.011 ±      0.030    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                         thrpt    5         6.000               counts
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                          thrpt    5        21.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsPlay                                       thrpt    5    244977.653 ±   5637.020   ops/s
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                        thrpt    5       960.437 ±     22.154  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                   thrpt    5      6168.002 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space               thrpt    5       993.536 ±     30.019  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm          thrpt    5      6380.953 ±    328.712    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space           thrpt    5         0.042 ±      0.113  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.267 ±      0.723    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.count                             thrpt    5        15.000               counts
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.time                              thrpt    5        30.000                   ms
[info] CodecBenchmark.writeIterablesCirce                                           thrpt    5    569701.602 ±   8788.025   ops/s
[info] CodecBenchmark.writeIterablesCirce:·gc.alloc.rate                            thrpt    5      1460.036 ±     22.576  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                       thrpt    5      4032.001 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                   thrpt    5      1417.374 ±    586.017  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm              thrpt    5      3915.162 ±   1666.488    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space               thrpt    5         0.025 ±      0.132  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.069 ±      0.366    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.count                                 thrpt    5        21.000               counts
[info] CodecBenchmark.writeIterablesCirce:·gc.time                                  thrpt    5        36.000                   ms
[info] CodecBenchmark.writeIterablesJackson                                         thrpt    5   1249058.575 ±  32305.490   ops/s
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate                          thrpt    5       768.526 ±     19.823  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                     thrpt    5       968.000 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       728.599 ±    561.478  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5       918.169 ±    720.591    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.012 ±      0.072  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.016 ±      0.090    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.count                               thrpt    5        11.000               counts
[info] CodecBenchmark.writeIterablesJackson:·gc.time                                thrpt    5        24.000                   ms
[info] CodecBenchmark.writeIterablesJsoniter                                        thrpt    5   4238060.356 ±  95931.250   ops/s
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                         thrpt    5       581.851 ±     13.175  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                    thrpt    5       216.000 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       590.096 ±    562.387  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       219.080 ±    208.976    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.046 ±      0.119  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.017 ±      0.044    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.count                              thrpt    5         9.000               counts
[info] CodecBenchmark.writeIterablesJsoniter:·gc.time                               thrpt    5        16.000                   ms
[info] CodecBenchmark.writeIterablesPlay                                            thrpt    5    366053.558 ±   4478.875   ops/s
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate                             thrpt    5      1260.169 ±     15.492  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                        thrpt    5      5416.001 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1269.604 ±    555.544  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5      5455.462 ±   2347.357    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.046 ±      0.154  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.197 ±      0.660    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.count                                  thrpt    5        19.000               counts
[info] CodecBenchmark.writeIterablesPlay:·gc.time                                   thrpt    5        34.000                   ms
[info] CodecBenchmark.writeMapsCirce                                                thrpt    5    339149.046 ±   4136.958   ops/s
[info] CodecBenchmark.writeMapsCirce:·gc.alloc.rate                                 thrpt    5      1008.866 ±     12.248  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm                            thrpt    5      4680.001 ±      0.001    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                        thrpt    5       996.014 ±     33.222  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5      4620.351 ±    120.813    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                    thrpt    5         0.021 ±      0.080  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.097 ±      0.372    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.count                                      thrpt    5        15.000               counts
[info] CodecBenchmark.writeMapsCirce:·gc.time                                       thrpt    5        28.000                   ms
[info] CodecBenchmark.writeMapsJackson                                              thrpt    5   1026156.211 ±  21413.657   ops/s
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate                               thrpt    5      1064.451 ±     22.190  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                          thrpt    5      1632.000 ±      0.001    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                      thrpt    5      1071.179 ±    578.838  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                 thrpt    5      1642.141 ±    879.710    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                  thrpt    5         0.050 ±      0.134  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.077 ±      0.207    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.count                                    thrpt    5        16.000               counts
[info] CodecBenchmark.writeMapsJackson:·gc.time                                     thrpt    5        33.000                   ms
[info] CodecBenchmark.writeMapsJsoniter                                             thrpt    5   3976450.978 ± 107586.129   ops/s
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                              thrpt    5       586.386 ±     15.898  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                         thrpt    5       232.000 ±      0.001    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5       590.108 ±    566.681  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5       233.577 ±    225.555    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.050 ±      0.176  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.020 ±      0.070    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.count                                   thrpt    5         9.000               counts
[info] CodecBenchmark.writeMapsJsoniter:·gc.time                                    thrpt    5        12.000                   ms
[info] CodecBenchmark.writeMapsPlay                                                 thrpt    5    260180.517 ±   2156.506   ops/s
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate                                  thrpt    5       959.184 ±      7.952  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                             thrpt    5      5800.002 ±      0.001    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                         thrpt    5       926.828 ±    556.661  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5605.232 ±   3387.094    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.046 ±      0.154  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.277 ±      0.936    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.count                                       thrpt    5        14.000               counts
[info] CodecBenchmark.writeMapsPlay:·gc.time                                        thrpt    5        18.000                   ms
[info] CodecBenchmark.writeMutableMapsCirce                                         thrpt    5    335303.900 ±  15955.893   ops/s
[info] CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate                          thrpt    5       968.450 ±     46.094  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                     thrpt    5      4544.001 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                 thrpt    5       933.709 ±    574.487  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm            thrpt    5      4376.359 ±   2576.257    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space             thrpt    5         0.021 ±      0.057  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.097 ±      0.263    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.count                               thrpt    5        14.000               counts
[info] CodecBenchmark.writeMutableMapsCirce:·gc.time                                thrpt    5        35.000                   ms
[info] CodecBenchmark.writeMutableMapsJackson                                       thrpt    5    984721.782 ±  68984.283   ops/s
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                        thrpt    5       976.425 ±     68.446  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                   thrpt    5      1560.000 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space               thrpt    5      1002.273 ±     24.854  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm          thrpt    5      1601.806 ±    138.399    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space           thrpt    5         0.037 ±      0.088  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.060 ±      0.137    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.count                             thrpt    5        15.000               counts
[info] CodecBenchmark.writeMutableMapsJackson:·gc.time                              thrpt    5        44.000                   ms
[info] CodecBenchmark.writeMutableMapsJsoniter                                      thrpt    5   3089728.738 ±  75639.777   ops/s
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                       thrpt    5       518.478 ±     12.692  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                  thrpt    5       264.000 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space              thrpt    5       523.348 ±    690.640  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm         thrpt    5       266.411 ±    350.785    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space          thrpt    5         0.033 ±      0.146  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.017 ±      0.075    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.count                            thrpt    5         8.000               counts
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.time                             thrpt    5        17.000                   ms
[info] CodecBenchmark.writeMutableMapsPlay                                          thrpt    5    258779.979 ±   5129.436   ops/s
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                           thrpt    5       988.217 ±     19.581  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                      thrpt    5      6008.002 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                  thrpt    5       993.405 ±     30.726  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm             thrpt    5      6039.524 ±    131.616    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space              thrpt    5         0.042 ±      0.098  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.254 ±      0.602    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.count                                thrpt    5        15.000               counts
[info] CodecBenchmark.writeMutableMapsPlay:·gc.time                                 thrpt    5        30.000                   ms
[info] CodecBenchmark.writePrimitivesCirce                                          thrpt    5    625024.711 ±  20721.739   ops/s
[info] CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate                           thrpt    5      1223.612 ±     40.564  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                      thrpt    5      3080.001 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                  thrpt    5      1209.456 ±    717.688  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm             thrpt    5      3045.368 ±   1833.420    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space              thrpt    5         0.025 ±      0.067  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.063 ±      0.170    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.count                                thrpt    5        18.000               counts
[info] CodecBenchmark.writePrimitivesCirce:·gc.time                                 thrpt    5        35.000                   ms
[info] CodecBenchmark.writePrimitivesJackson                                        thrpt    5   1650969.617 ±  51602.533   ops/s
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                         thrpt    5       688.402 ±     21.538  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                    thrpt    5       656.000 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                thrpt    5       660.152 ±     16.241  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5       629.115 ±     25.930    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.012 ±      0.044  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.012 ±      0.042    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.count                              thrpt    5        10.000               counts
[info] CodecBenchmark.writePrimitivesJackson:·gc.time                               thrpt    5        24.000                   ms
[info] CodecBenchmark.writePrimitivesJsoniter                                       thrpt    5   5629344.804 ± 161712.937   ops/s
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                        thrpt    5       286.258 ±      8.261  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                   thrpt    5        80.000 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space               thrpt    5       311.756 ±    120.225  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5        87.093 ±     32.140    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.450 ±      3.538  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.126 ±      0.992    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.count                             thrpt    5         5.000               counts
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.time                              thrpt    5        16.000                   ms
[info] CodecBenchmark.writePrimitivesPlay                                           thrpt    5    196229.110 ±   2453.178   ops/s
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                            thrpt    5      1069.659 ±     13.373  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                       thrpt    5      8576.002 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1064.115 ±    586.899  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8532.621 ±   4746.232    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.058 ±      0.067  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.468 ±      0.542    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.count                                 thrpt    5        16.000               counts
[info] CodecBenchmark.writePrimitivesPlay:·gc.time                                  thrpt    5        42.000                   ms
[success] Total time: 1014 s, completed Oct 31, 2017 2:10:07 PM
