[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Dec 5, 2017 9:01:19 AM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 4 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:189:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] one warning found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Compiling 6 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/GoogleMapsAPI.scala:32:62: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("status");
[info]       private val r1: Array[String] = Array("distance", "duration", "status");
[info]       private val r2: Array[String] = Array("text", "value");
[info]       private def d1(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1749161762 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -854843732 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         _value = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value(text = _text, value = _value)
[info]           else
[info]             in.requiredKeyError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = null;
[info]           var _status: String = null;
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1882203379 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         _distance = d6(in, _distance);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -739937554 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         _duration = d6(in, _duration);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -270730887 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements(distance = _distance, duration = _duration, status = _status)
[info]           else
[info]             in.requiredKeyError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements]): Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1690673754 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       _elements = d4(in, _elements)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows]): Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: Seq[String] = Seq.empty[String];
[info]           var _origin_addresses: Seq[String] = Seq.empty[String];
[info]           var _rows: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows];
[info]           var _status: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -553105946 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       _destination_addresses = d1(in, _destination_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 14144516 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       _origin_addresses = d1(in, _origin_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case -11755678 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       _rows = d2(in, _rows)
[info]                     else
[info]                       in.skip()
[info]                     case -270730887 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e6(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeKey("value");
[info]             out.writeVal(x.value)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("distance");
[info]             e6(x.distance, out)
[info]           };
[info]           {
[info]             out.writeKey("duration");
[info]             e6(x.duration, out)
[info]           };
[info]           {
[info]             out.writeKey("status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.elements;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("elements");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e3(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.destination_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("destination_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.origin_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("origin_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.rows;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("rows");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeKey("status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val codec: JsonCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/GoogleMapsAPI.scala:27:18: local val v1 in value format is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/GoogleMapsAPI.scala:28:18: local val v2 in value format is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/GoogleMapsAPI.scala:29:18: local val v3 in value format is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:63:81: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "i");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.MissingReqFields(s = _s, i = _i)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeKey("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val missingReqFieldCodec: JsonCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:65:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.AnyRefs = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "bd");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1868115770 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         _bd = in.readBigDecimal(_bd);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 135249149 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeKey("bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           {
[info]             val v = x.os;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("os");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:67:52: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Arrays = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = e0(x, out);
[info]       private val v0: Array[Array[Int]] = new Array[Array[Int]](0);
[info]       private val v1: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private val v2: Array[Int] = new Array[Int](0);
[info]       private def d2(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               x.+=(d2(in, v2))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               x.+=(in.readBigInt(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = if (in.isNextToken('{'))
[info]         {
[info]           var _aa: Array[Array[Int]] = v0;
[info]           var _a: Array[BigInt] = v1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1396692260 => if (in.isCharBufEqualsTo(l, "aa"))
[info]                       _aa = d1(in, _aa)
[info]                     else
[info]                       in.skip()
[info]                     case 272946562 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       _a = d3(in, _a)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e2(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: Array[Array[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e2(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.aa;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 out.writeKey("aa");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.a;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 out.writeKey("a");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = make[Arrays](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:69:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.BitSets = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = BitSet.newBuilder;
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               BitSet.empty;
[info]             do 
[info]               x.add(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = if (in.isNextToken('{'))
[info]         {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -311899171 => if (in.isCharBufEqualsTo(l, "bs"))
[info]                       _bs = d1(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 395882128 => if (in.isCharBufEqualsTo(l, "mbs"))
[info]                       _mbs = d2(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.bs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("bs");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mbs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("mbs");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = make[BitSets](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:71:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Iterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Vector[String]): scala.collection.immutable.Vector[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.immutable.HashSet[Long]): scala.collection.immutable.HashSet[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = HashSet.newBuilder[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: List[scala.collection.immutable.HashSet[Long]]): List[scala.collection.immutable.HashSet[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[scala.collection.immutable.HashSet[Long]];
[info]             do 
[info]               x.+=(d4(in, HashSet.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.immutable.Vector[String] = Vector.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[scala.collection.immutable.HashSet[Long]] = List.empty[scala.collection.immutable.HashSet[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 753022030 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.Vector[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e4(x: scala.collection.immutable.HashSet[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: List[scala.collection.immutable.HashSet[Long]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e4(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = make[Iterables](CodecMakerConfig())
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:73:82: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableIterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableIterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.MutableIterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.MutableIterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MutableIterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[String]): scala.collection.mutable.ArrayBuffer[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               ArrayBuffer.empty[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.TreeSet[Int]): scala.collection.mutable.TreeSet[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               TreeSet.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.mutable.Set[Long]): scala.collection.mutable.Set[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Set.empty[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]]): scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = ResizableArray.newBuilder[scala.collection.mutable.Set[Long]];
[info]             do 
[info]               x.+=(d4(in, Set.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.MutableIterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.mutable.ArrayBuffer[String] = ArrayBuffer.empty[String];
[info]           var _s: scala.collection.mutable.TreeSet[Int] = TreeSet.empty[Int];
[info]           var _ls: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = ResizableArray.empty[scala.collection.mutable.Set[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 753022030 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableIterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.ArrayBuffer[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.TreeSet[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e4(x: scala.collection.mutable.Set[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e4(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.MutableIterables, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableIterablesCodec: JsonCodec[MutableIterables] = make[MutableIterables](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:75:46: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Maps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[String, Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[Long, Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), d3(in, HashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.HashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = make[Maps](CodecMakerConfig())
[info]                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:77:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.MutableMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               HashMap.empty[String, Double];
[info]             do 
[info]               x.update(in.readKeyAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               OpenHashMap.empty[Long, Double];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               x.update(in.readKeyAsInt(), d3(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.OpenHashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = make[MutableMaps](CodecMakerConfig())
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:79:76: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = LongMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               x.update(in.readKeyAsLong(), d3(in, LongMap.empty[Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.IntMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.LongMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = make[IntAndLongMaps](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:81:64: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Primitives = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var req0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 479329913 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readByte();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readShort();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -986815646 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         _bl = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1128364876 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         _ch = in.readChar();
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 977778859 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         _dbl = in.readDouble();
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2108804597 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         _f = in.readFloat();
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             out.writeKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeKey("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             out.writeKey("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             out.writeKey("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             out.writeKey("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             out.writeKey("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             out.writeKey("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:83:73: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.ExtractFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "l");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeKey("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:85:51: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.AdtBase = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AdtBase): com.github.plokhotnyuk.jsoniter_scala.AdtBase = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("a");
[info]       private val r1: Array[String] = Array("b");
[info]       private val r2: Array[String] = Array("l", "r");
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.A): com.github.plokhotnyuk.jsoniter_scala.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 272946562 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         _a = in.readInt();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -115772676 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.A(a = _a)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.B): com.github.plokhotnyuk.jsoniter_scala.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 479329913 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readString(_b);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -115772676 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.B(b = _b)
[info]           else
[info]             in.requiredKeyError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.C): com.github.plokhotnyuk.jsoniter_scala.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.AdtBase = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = d0(in, _l);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1283270383 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         _r = d0(in, _r);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -115772676 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.C(l = _l, r = _r)
[info]           else
[info]             in.requiredKeyError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AdtBase): com.github.plokhotnyuk.jsoniter_scala.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           {
[info]             in.scanToKey("type");
[info]             val l = in.readValueAsCharBuf();
[info]             (in.charBufToHashCode(l): @switch) match {
[info]               case 1042714897 => if (in.isCharBufEqualsTo(l, "A"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d1(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case 1249097774 => if (in.isCharBufEqualsTo(l, "B"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d2(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case -251352298 => if (in.isCharBufEqualsTo(l, "C"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d3(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case _ => in.discriminatorValueError("type")
[info]             }
[info]           }
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.A, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("type");
[info]             out.writeVal("A")
[info]           };
[info]           {
[info]             out.writeKey("a");
[info]             out.writeVal(x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.B, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("type");
[info]             out.writeVal("B")
[info]           };
[info]           {
[info]             out.writeKey("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.C, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("type");
[info]             out.writeVal("C")
[info]           };
[info]           {
[info]             out.writeKey("l");
[info]             e0(x.l, out)
[info]           };
[info]           {
[info]             out.writeKey("r");
[info]             e0(x.r, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.C)) => e3(x, out)
[info]         case null => out.writeNull()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val adtCodec: JsonCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:87:52: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[String] {
[info]       def nullValue: String = null;
[info]       def decode(in: JsonReader, default: String): String = in.readString(default);
[info]       def encode(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonCodec[String] = make[String](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/TwitterAPI.scala:284:54: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet];
[info]       def decode(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = d0(in, default);
[info]       def encode(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private val r4: Array[String] = Array("url", "description");
[info]       private val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 985531917 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1198843867 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1070335372 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]           else
[info]             in.requiredKeyError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -64069972 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1125392404 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         _expanded_url = in.readString(_expanded_url);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -758822041 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         _display_url = in.readString(_display_url);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1070335372 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]           else
[info]             in.requiredKeyError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1567327321 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       _hashtags = d3(in, _hashtags)
[info]                     else
[info]                       in.skip()
[info]                     case -2118257363 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       _symbols = d3(in, _symbols)
[info]                     else
[info]                       in.skip()
[info]                     case -560369018 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       _user_mentions = d4(in, _user_mentions)
[info]                     else
[info]                       in.skip()
[info]                     case -1327041850 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1327041850 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -64069972 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = d11(in, _url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -626201443 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = d11(in, _description);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities(url = _url, description = _description)
[info]           else
[info]             in.requiredKeyError(r4, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var req0 = -1;
[info]           var req1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1198843867 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 985531917 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1994874891 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         _location = in.readString(_location);
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -626201443 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = in.readString(_description);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -64069972 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1962218059 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d10(in, _entities);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -422319283 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         _protected = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1231204836 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         _followers_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1565337738 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         _friends_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -903425777 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         _listed_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -165119785 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1481771385 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         _favourites_count = in.readInt();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1617333980 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         _utc_offset = in.readInt();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1034472816 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         _time_zone = in.readString(_time_zone);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1096575944 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         _geo_enabled = in.readBoolean();
[info]                         req0.&=(-65537)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1766340764 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         _verified = in.readBoolean();
[info]                         req0.&=(-131073)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 656981833 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         _statuses_count = in.readInt();
[info]                         req0.&=(-262145)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1733553572 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-524289)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1692587979 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         _contributors_enabled = in.readBoolean();
[info]                         req0.&=(-1048577)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -761280539 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         _is_translator = in.readBoolean();
[info]                         req0.&=(-2097153)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1523152584 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         _is_translation_enabled = in.readBoolean();
[info]                         req0.&=(-4194305)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1042811670 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         _profile_background_color = in.readString(_profile_background_color);
[info]                         req0.&=(-8388609)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1322051899 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url);
[info]                         req0.&=(-16777217)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 430342393 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https);
[info]                         req0.&=(-33554433)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1547487212 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         _profile_background_tile = in.readBoolean();
[info]                         req0.&=(-67108865)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -738485249 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         _profile_image_url = in.readString(_profile_image_url);
[info]                         req0.&=(-134217729)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -869817957 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https);
[info]                         req0.&=(-268435457)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1479864213 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         _profile_banner_url = in.readString(_profile_banner_url);
[info]                         req0.&=(-536870913)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 892046337 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         _profile_link_color = in.readString(_profile_link_color);
[info]                         req0.&=(-1073741825)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1815398146 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color);
[info]                         req0.&=(2147483647)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1854913126 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color);
[info]                         req1.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1700955824 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         _profile_text_color = in.readString(_profile_text_color);
[info]                         req1.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2002464660 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         _profile_use_background_image = in.readBoolean();
[info]                         req1.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 196017265 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         _has_extended_profile = in.readBoolean();
[info]                         req1.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1725122937 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         _default_profile = in.readBoolean();
[info]                         req1.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1346866717 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         _default_profile_image = in.readBoolean();
[info]                         req1.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1251129302 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         _following = in.readBoolean();
[info]                         req1.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1343246339 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         _follow_request_sent = in.readBoolean();
[info]                         req1.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 929396071 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         _notifications = in.readBoolean();
[info]                         req1.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 356376530 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         _translator_type = in.readString(_translator_type);
[info]                         req1.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0).&&(req1.==(0)))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]           else
[info]             in.requiredKeyError(r3, req0, req1)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 32767;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -165119785 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1749161762 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -957169247 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1962218059 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1722056278 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -56041286 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -685957369 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1195124586 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1480131160 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -836182436 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1249433185 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d9(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -779037686 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1764808365 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -232934172 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 2116377836 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1834482941 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1363420571 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1279943733 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -941232733 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -41089286 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -724879728 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1733553572 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredKeyError(r5, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 65535;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -165119785 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1749161762 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -957169247 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1962218059 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1722056278 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -56041286 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -685957369 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1195124586 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1480131160 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -836182436 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1249433185 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d9(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -779037686 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1764808365 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -232934172 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 2116377836 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -350359215 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         _retweeted_status = d12(in, _retweeted_status);
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1834482941 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1363420571 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1279943733 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -941232733 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -41089286 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -724879728 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1733553572 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             out.writeKey("name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             out.writeKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e8(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             out.writeKey("expanded_url");
[info]             out.writeVal(x.expanded_url)
[info]           };
[info]           {
[info]             out.writeKey("display_url");
[info]             out.writeVal(x.display_url)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.hashtags;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("hashtags");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.symbols;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("symbols");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.user_mentions;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("user_mentions");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e9(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e12(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e11(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("url");
[info]             e12(x.url, out)
[info]           };
[info]           {
[info]             out.writeKey("description");
[info]             e12(x.description, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e10(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeKey("name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             out.writeKey("screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             out.writeKey("location");
[info]             out.writeVal(x.location)
[info]           };
[info]           {
[info]             out.writeKey("description");
[info]             out.writeVal(x.description)
[info]           };
[info]           {
[info]             out.writeKey("url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             out.writeKey("entities");
[info]             e11(x.entities, out)
[info]           };
[info]           {
[info]             out.writeKey("protected");
[info]             out.writeVal(x.`protected`)
[info]           };
[info]           {
[info]             out.writeKey("followers_count");
[info]             out.writeVal(x.followers_count)
[info]           };
[info]           {
[info]             out.writeKey("friends_count");
[info]             out.writeVal(x.friends_count)
[info]           };
[info]           {
[info]             out.writeKey("listed_count");
[info]             out.writeVal(x.listed_count)
[info]           };
[info]           {
[info]             out.writeKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeKey("favourites_count");
[info]             out.writeVal(x.favourites_count)
[info]           };
[info]           {
[info]             out.writeKey("utc_offset");
[info]             out.writeVal(x.utc_offset)
[info]           };
[info]           {
[info]             out.writeKey("time_zone");
[info]             out.writeVal(x.time_zone)
[info]           };
[info]           {
[info]             out.writeKey("geo_enabled");
[info]             out.writeVal(x.geo_enabled)
[info]           };
[info]           {
[info]             out.writeKey("verified");
[info]             out.writeVal(x.verified)
[info]           };
[info]           {
[info]             out.writeKey("statuses_count");
[info]             out.writeVal(x.statuses_count)
[info]           };
[info]           {
[info]             out.writeKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           {
[info]             out.writeKey("contributors_enabled");
[info]             out.writeVal(x.contributors_enabled)
[info]           };
[info]           {
[info]             out.writeKey("is_translator");
[info]             out.writeVal(x.is_translator)
[info]           };
[info]           {
[info]             out.writeKey("is_translation_enabled");
[info]             out.writeVal(x.is_translation_enabled)
[info]           };
[info]           {
[info]             out.writeKey("profile_background_color");
[info]             out.writeVal(x.profile_background_color)
[info]           };
[info]           {
[info]             out.writeKey("profile_background_image_url");
[info]             out.writeVal(x.profile_background_image_url)
[info]           };
[info]           {
[info]             out.writeKey("profile_background_image_url_https");
[info]             out.writeVal(x.profile_background_image_url_https)
[info]           };
[info]           {
[info]             out.writeKey("profile_background_tile");
[info]             out.writeVal(x.profile_background_tile)
[info]           };
[info]           {
[info]             out.writeKey("profile_image_url");
[info]             out.writeVal(x.profile_image_url)
[info]           };
[info]           {
[info]             out.writeKey("profile_image_url_https");
[info]             out.writeVal(x.profile_image_url_https)
[info]           };
[info]           {
[info]             out.writeKey("profile_banner_url");
[info]             out.writeVal(x.profile_banner_url)
[info]           };
[info]           {
[info]             out.writeKey("profile_link_color");
[info]             out.writeVal(x.profile_link_color)
[info]           };
[info]           {
[info]             out.writeKey("profile_sidebar_border_color");
[info]             out.writeVal(x.profile_sidebar_border_color)
[info]           };
[info]           {
[info]             out.writeKey("profile_sidebar_fill_color");
[info]             out.writeVal(x.profile_sidebar_fill_color)
[info]           };
[info]           {
[info]             out.writeKey("profile_text_color");
[info]             out.writeVal(x.profile_text_color)
[info]           };
[info]           {
[info]             out.writeKey("profile_use_background_image");
[info]             out.writeVal(x.profile_use_background_image)
[info]           };
[info]           {
[info]             out.writeKey("has_extended_profile");
[info]             out.writeVal(x.has_extended_profile)
[info]           };
[info]           {
[info]             out.writeKey("default_profile");
[info]             out.writeVal(x.default_profile)
[info]           };
[info]           {
[info]             out.writeKey("default_profile_image");
[info]             out.writeVal(x.default_profile_image)
[info]           };
[info]           {
[info]             out.writeKey("following");
[info]             out.writeVal(x.following)
[info]           };
[info]           {
[info]             out.writeKey("follow_request_sent");
[info]             out.writeVal(x.follow_request_sent)
[info]           };
[info]           {
[info]             out.writeKey("notifications");
[info]             out.writeVal(x.notifications)
[info]           };
[info]           {
[info]             out.writeKey("translator_type");
[info]             out.writeVal(x.translator_type)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e13(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeKey("truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             out.writeKey("entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             out.writeKey("source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeKey("user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeKey("is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             out.writeKey("retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             out.writeKey("favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             out.writeKey("favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             out.writeKey("retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             out.writeKey("possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             out.writeKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeKey("truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             out.writeKey("entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             out.writeKey("source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeKey("user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeKey("retweeted_status");
[info]             e13(x.retweeted_status, out)
[info]           };
[info]           {
[info]             out.writeKey("is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             out.writeKey("retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             out.writeKey("favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             out.writeKey("favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             out.writeKey("retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             out.writeKey("possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             out.writeKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val codec: JsonCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                      ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/TwitterAPI.scala:134:18: local val v1 in value format is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/TwitterAPI.scala:135:18: local val v2 in value format is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/TwitterAPI.scala:137:18: local val v4 in value format is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CustomPlayJsonFormats.scala:65:45: Reference to uninitialized value v14
[warn]   implicit val v13: OFormat[C] = Json.format[C]
[warn]                                             ^
[warn] 7 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 293 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 116 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecMakerBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce
[info] # Run progress: 0.00% complete, ETA 00:18:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 946448.982 ops/s
[info] # Warmup Iteration   2: 1389842.158 ops/s
[info] # Warmup Iteration   3: 1447216.384 ops/s
[info] # Warmup Iteration   4: 1459215.622 ops/s
[info] # Warmup Iteration   5: 1493055.786 ops/s
[info] Iteration   1: 1476429.069 ops/s
[info]                  ·gc.alloc.rate:                   2417.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              2576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2371.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2526.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1474574.269 ops/s
[info]                  ·gc.alloc.rate:                   2414.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              2576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2376.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2535.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1442942.421 ops/s
[info]                  ·gc.alloc.rate:                   2362.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              2576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2378.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2593.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1457792.347 ops/s
[info]                  ·gc.alloc.rate:                   2386.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              2576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2382.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2571.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1448534.096 ops/s
[info]                  ·gc.alloc.rate:                   2371.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              2576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2383.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2588.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce":
[info]   1460054.441 ±(99.9%) 58067.229 ops/s [Average]
[info]   (min, avg, max) = (1442942.421, 1460054.441, 1476429.069), stdev = 15079.875
[info]   CI (99.9%): [1401987.212, 1518121.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate":
[info]   2390.435 ±(99.9%) 95.323 MB/sec [Average]
[info]   (min, avg, max) = (2362.318, 2390.435, 2417.329), stdev = 24.755
[info]   CI (99.9%): [2295.112, 2485.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm":
[info]   2576.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2576.000, 2576.000, 2576.000), stdev = 0.001
[info]   CI (99.9%): [2576.000, 2576.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space":
[info]   2378.568 ±(99.9%) 19.112 MB/sec [Average]
[info]   (min, avg, max) = (2371.222, 2378.568, 2383.280), stdev = 4.963
[info]   CI (99.9%): [2359.456, 2397.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2563.464 ±(99.9%) 117.612 B/op [Average]
[info]   (min, avg, max) = (2526.866, 2563.464, 2593.885), stdev = 30.544
[info]   CI (99.9%): [2445.851, 2681.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.083, 0.104), stdev = 0.015
[info]   CI (99.9%): [0.027, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.090 ±(99.9%) 0.064 B/op [Average]
[info]   (min, avg, max) = (0.067, 0.090, 0.114), stdev = 0.017
[info]   CI (99.9%): [0.026, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 13.000), stdev = 2.280
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson
[info] # Run progress: 0.89% complete, ETA 00:30:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79409.240 ops/s
[info] # Warmup Iteration   2: 193862.242 ops/s
[info] # Warmup Iteration   3: 199820.258 ops/s
[info] # Warmup Iteration   4: 202505.338 ops/s
[info] # Warmup Iteration   5: 202682.367 ops/s
[info] Iteration   1: 199185.041 ops/s
[info]                  ·gc.alloc.rate:                   468.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5147.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 203355.729 ops/s
[info]                  ·gc.alloc.rate:               478.710 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2533.950 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 203266.081 ops/s
[info]                  ·gc.alloc.rate:               478.531 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2535.110 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 201498.151 ops/s
[info]                  ·gc.alloc.rate:                   474.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5135.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.325 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 200585.682 ops/s
[info]                  ·gc.alloc.rate:               472.209 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2589.857 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson":
[info]   201578.137 ±(99.9%) 6868.642 ops/s [Average]
[info]   (min, avg, max) = (199185.041, 201578.137, 203355.729), stdev = 1783.765
[info]   CI (99.9%): [194709.495, 208446.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate":
[info]   474.550 ±(99.9%) 16.144 MB/sec [Average]
[info]   (min, avg, max) = (468.924, 474.550, 478.710), stdev = 4.193
[info]   CI (99.9%): [458.406, 490.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm":
[info]   3704.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3704.002, 3704.002, 3704.002), stdev = 0.001
[info]   CI (99.9%): [3704.002, 3704.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space":
[info]   458.913 ±(99.9%) 688.255 MB/sec [Average]
[info]   (min, avg, max) = (327.491, 458.913, 657.708), stdev = 178.738
[info]   CI (99.9%): [≈ 0, 1147.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3588.393 ±(99.9%) 5460.192 B/op [Average]
[info]   (min, avg, max) = (2533.950, 3588.393, 5147.561), stdev = 1417.994
[info]   CI (99.9%): [≈ 0, 9048.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.098 ±(99.9%) 0.561 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.098, 0.325), stdev = 0.146
[info]   CI (99.9%): [≈ 0, 0.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 1.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter
[info] # Run progress: 1.79% complete, ETA 00:29:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 428274.935 ops/s
[info] # Warmup Iteration   2: 446349.144 ops/s
[info] # Warmup Iteration   3: 454285.900 ops/s
[info] # Warmup Iteration   4: 438073.855 ops/s
[info] # Warmup Iteration   5: 454552.970 ops/s
[info] Iteration   1: 458749.594 ops/s
[info]                  ·gc.alloc.rate:                   422.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2225.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 458814.566 ops/s
[info]                  ·gc.alloc.rate:               422.263 MB/sec
[info]                  ·gc.alloc.rate.norm:          1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1115.113 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 456944.517 ops/s
[info]                  ·gc.alloc.rate:                   420.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1119.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 451080.043 ops/s
[info]                  ·gc.alloc.rate:                   415.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1137.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 458786.049 ops/s
[info]                  ·gc.alloc.rate:                   422.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2239.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.214 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter":
[info]   456874.954 ±(99.9%) 12845.591 ops/s [Average]
[info]   (min, avg, max) = (451080.043, 456874.954, 458814.566), stdev = 3335.959
[info]   CI (99.9%): [444029.363, 469720.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate":
[info]   420.457 ±(99.9%) 11.736 MB/sec [Average]
[info]   (min, avg, max) = (415.165, 420.457, 422.263), stdev = 3.048
[info]   CI (99.9%): [408.720, 432.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm":
[info]   1448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1448.001, 1448.001, 1448.001), stdev = 0.001
[info]   CI (99.9%): [1448.001, 1448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space":
[info]   455.692 ±(99.9%) 686.404 MB/sec [Average]
[info]   (min, avg, max) = (325.170, 455.692, 653.011), stdev = 178.257
[info]   CI (99.9%): [≈ 0, 1142.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1567.581 ±(99.9%) 2338.295 B/op [Average]
[info]   (min, avg, max) = (1115.113, 1567.581, 2239.575), stdev = 607.248
[info]   CI (99.9%): [≈ 0, 3905.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.086 ±(99.9%) 0.301 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.086, 0.214), stdev = 0.078
[info]   CI (99.9%): [≈ 0, 0.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 1.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless
[info] # Run progress: 2.68% complete, ETA 00:29:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1604910.322 ops/s
[info] # Warmup Iteration   2: 1743248.184 ops/s
[info] # Warmup Iteration   3: 1748609.628 ops/s
[info] # Warmup Iteration   4: 1656790.538 ops/s
[info] # Warmup Iteration   5: 1743393.534 ops/s
[info] Iteration   1: 1733065.069 ops/s
[info]                  ·gc.alloc.rate:                   1075.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     898.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1741556.040 ops/s
[info]                  ·gc.alloc.rate:                   1080.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     899.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1749303.444 ops/s
[info]                  ·gc.alloc.rate:                   1085.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1199.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1741559.059 ops/s
[info]                  ·gc.alloc.rate:               1080.329 MB/sec
[info]                  ·gc.alloc.rate.norm:          976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 908.127 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1724698.062 ops/s
[info]                  ·gc.alloc.rate:                   1069.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     920.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless":
[info]   1738036.335 ±(99.9%) 36243.575 ops/s [Average]
[info]   (min, avg, max) = (1724698.062, 1738036.335, 1749303.444), stdev = 9412.341
[info]   CI (99.9%): [1701792.759, 1774279.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate":
[info]   1078.112 ±(99.9%) 22.324 MB/sec [Average]
[info]   (min, avg, max) = (1069.884, 1078.112, 1085.012), stdev = 5.798
[info]   CI (99.9%): [1055.788, 1100.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.000), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   1066.524 ±(99.9%) 576.162 MB/sec [Average]
[info]   (min, avg, max) = (989.870, 1066.524, 1333.850), stdev = 149.628
[info]   CI (99.9%): [490.362, 1642.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   965.153 ±(99.9%) 506.279 B/op [Average]
[info]   (min, avg, max) = (898.677, 965.153, 1199.838), stdev = 131.479
[info]   CI (99.9%): [458.874, 1471.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.082 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.056), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump
[info] # Run progress: 3.57% complete, ETA 00:29:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2968838.557 ops/s
[info] # Warmup Iteration   2: 3714274.075 ops/s
[info] # Warmup Iteration   3: 3653757.364 ops/s
[info] # Warmup Iteration   4: 3685116.857 ops/s
[info] # Warmup Iteration   5: 3575839.976 ops/s
[info] Iteration   1: 3678318.056 ops/s
[info]                  ·gc.alloc.rate:                   523.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.671 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     277.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3658159.901 ops/s
[info]                  ·gc.alloc.rate:               520.604 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139.858 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   3: 3648760.705 ops/s
[info]                  ·gc.alloc.rate:                   519.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     281.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3710527.935 ops/s
[info]                  ·gc.alloc.rate:                   528.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     277.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3684939.500 ops/s
[info]                  ·gc.alloc.rate:               524.628 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 140.120 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump":
[info]   3676141.219 ±(99.9%) 93087.177 ops/s [Average]
[info]   (min, avg, max) = (3648760.705, 3676141.219, 3710527.935), stdev = 24174.444
[info]   CI (99.9%): [3583054.043, 3769228.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   523.319 ±(99.9%) 13.383 MB/sec [Average]
[info]   (min, avg, max) = (519.466, 523.319, 528.246), stdev = 3.476
[info]   CI (99.9%): [509.936, 536.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   224.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (224.000, 224.000, 224.000), stdev = 0.001
[info]   CI (99.9%): [224.000, 224.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   521.773 ±(99.9%) 686.059 MB/sec [Average]
[info]   (min, avg, max) = (325.048, 521.773, 653.657), stdev = 178.167
[info]   CI (99.9%): [≈ 0, 1207.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   223.270 ±(99.9%) 292.806 B/op [Average]
[info]   (min, avg, max) = (139.858, 223.270, 281.287), stdev = 76.041
[info]   CI (99.9%): [≈ 0, 516.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.009), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 9.000), stdev = 2.950
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay
[info] # Run progress: 4.46% complete, ETA 00:28:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54098.411 ops/s
[info] # Warmup Iteration   2: 117814.092 ops/s
[info] # Warmup Iteration   3: 120801.774 ops/s
[info] # Warmup Iteration   4: 124801.866 ops/s
[info] # Warmup Iteration   5: 122134.364 ops/s
[info] Iteration   1: 121794.098 ops/s
[info]                  ·gc.alloc.rate:                   1016.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17156.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.345 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 122223.648 ops/s
[info]                  ·gc.alloc.rate:                   1019.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12887.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.536 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 124061.665 ops/s
[info]                  ·gc.alloc.rate:                   1035.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12748.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.528 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 122057.534 ops/s
[info]                  ·gc.alloc.rate:                   1018.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12991.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.074 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 121784.738 ops/s
[info]                  ·gc.alloc.rate:                   1016.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13063.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.538 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay":
[info]   122384.337 ±(99.9%) 3680.313 ops/s [Average]
[info]   (min, avg, max) = (121784.738, 122384.337, 124061.665), stdev = 955.766
[info]   CI (99.9%): [118704.023, 126064.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate":
[info]   1021.156 ±(99.9%) 30.633 MB/sec [Average]
[info]   (min, avg, max) = (1016.133, 1021.156, 1035.122), stdev = 7.955
[info]   CI (99.9%): [990.523, 1051.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm":
[info]   13128.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13128.003, 13128.004, 13128.004), stdev = 0.001
[info]   CI (99.9%): [13128.003, 13128.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space":
[info]   1070.695 ±(99.9%) 554.369 MB/sec [Average]
[info]   (min, avg, max) = (1001.139, 1070.695, 1328.149), stdev = 143.968
[info]   CI (99.9%): [516.326, 1625.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm":
[info]   13769.560 ±(99.9%) 7304.580 B/op [Average]
[info]   (min, avg, max) = (12748.143, 13769.560, 17156.325), stdev = 1896.976
[info]   CI (99.9%): [6464.980, 21074.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.804 ±(99.9%) 1.471 B/op [Average]
[info]   (min, avg, max) = (0.528, 0.804, 1.345), stdev = 0.382
[info]   CI (99.9%): [≈ 0, 2.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce
[info] # Run progress: 5.36% complete, ETA 00:28:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 379579.689 ops/s
[info] # Warmup Iteration   2: 562797.075 ops/s
[info] # Warmup Iteration   3: 571257.254 ops/s
[info] # Warmup Iteration   4: 571151.978 ops/s
[info] # Warmup Iteration   5: 575704.057 ops/s
[info] Iteration   1: 578471.013 ops/s
[info]                  ·gc.alloc.rate:                   1435.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              3904.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3641.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 585049.777 ops/s
[info]                  ·gc.alloc.rate:                   1451.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              3904.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3616.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.168 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 574390.579 ops/s
[info]                  ·gc.alloc.rate:                   1425.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              3904.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4623.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.171 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 581516.245 ops/s
[info]                  ·gc.alloc.rate:                   1442.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              3904.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3661.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 584491.650 ops/s
[info]                  ·gc.alloc.rate:                   1450.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              3904.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3650.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.224 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce":
[info]   580783.853 ±(99.9%) 17080.704 ops/s [Average]
[info]   (min, avg, max) = (574390.579, 580783.853, 585049.777), stdev = 4435.805
[info]   CI (99.9%): [563703.149, 597864.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate":
[info]   1441.147 ±(99.9%) 42.254 MB/sec [Average]
[info]   (min, avg, max) = (1425.284, 1441.147, 1451.684), stdev = 10.973
[info]   CI (99.9%): [1398.893, 1483.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm":
[info]   3904.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3904.001, 3904.001, 3904.001), stdev = 0.001
[info]   CI (99.9%): [3904.001, 3904.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space":
[info]   1416.166 ±(99.9%) 585.533 MB/sec [Average]
[info]   (min, avg, max) = (1338.821, 1416.166, 1687.904), stdev = 152.061
[info]   CI (99.9%): [830.633, 2001.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3838.510 ±(99.9%) 1690.638 B/op [Average]
[info]   (min, avg, max) = (3616.329, 3838.510, 4623.346), stdev = 439.053
[info]   CI (99.9%): [2147.872, 5529.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.135 ±(99.9%) 0.290 B/op [Average]
[info]   (min, avg, max) = (0.056, 0.135, 0.224), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson
[info] # Run progress: 6.25% complete, ETA 00:28:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 720489.962 ops/s
[info] # Warmup Iteration   2: 1116935.777 ops/s
[info] # Warmup Iteration   3: 1132562.337 ops/s
[info] # Warmup Iteration   4: 1137241.332 ops/s
[info] # Warmup Iteration   5: 1140596.954 ops/s
[info] Iteration   1: 1138169.251 ops/s
[info]                  ·gc.alloc.rate:                   914.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     914.680 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1126129.999 ops/s
[info]                  ·gc.alloc.rate:                   904.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1392.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1031270.239 ops/s
[info]                  ·gc.alloc.rate:                   828.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1528.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1132797.653 ops/s
[info]                  ·gc.alloc.rate:                   909.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     930.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1145603.206 ops/s
[info]                  ·gc.alloc.rate:                   920.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              1264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1382.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson":
[info]   1114794.070 ±(99.9%) 181883.981 ops/s [Average]
[info]   (min, avg, max) = (1031270.239, 1114794.070, 1145603.206), stdev = 47234.692
[info]   CI (99.9%): [932910.089, 1296678.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate":
[info]   895.601 ±(99.9%) 146.062 MB/sec [Average]
[info]   (min, avg, max) = (828.525, 895.601, 920.326), stdev = 37.932
[info]   CI (99.9%): [749.539, 1041.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm":
[info]   1264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1264.000, 1264.000, 1264.000), stdev = 0.001
[info]   CI (99.9%): [1264.000, 1264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space":
[info]   867.274 ±(99.9%) 708.925 MB/sec [Average]
[info]   (min, avg, max) = (661.710, 867.274, 1006.868), stdev = 184.106
[info]   CI (99.9%): [158.349, 1576.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1229.599 ±(99.9%) 1102.484 B/op [Average]
[info]   (min, avg, max) = (914.680, 1229.599, 1528.028), stdev = 286.312
[info]   CI (99.9%): [127.115, 2332.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.262 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.187), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.093 ±(99.9%) 0.360 B/op [Average]
[info]   (min, avg, max) = (0.029, 0.093, 0.259), stdev = 0.094
[info]   CI (99.9%): [≈ 0, 0.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter
[info] # Run progress: 7.14% complete, ETA 00:28:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2069642.464 ops/s
[info] # Warmup Iteration   2: 2755666.257 ops/s
[info] # Warmup Iteration   3: 2799307.780 ops/s
[info] # Warmup Iteration   4: 2780825.692 ops/s
[info] # Warmup Iteration   5: 2811979.719 ops/s
[info] Iteration   1: 2727683.063 ops/s
[info]                  ·gc.alloc.rate:                   180.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          169.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.405 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   2: 2797901.461 ops/s
[info]                  ·gc.alloc.rate:               184.935 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 143.892 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2814029.056 ops/s
[info]                  ·gc.alloc.rate:               185.986 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 143.071 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1771731.824 ops/s
[info]                  ·gc.alloc.rate:      117.101 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2793757.866 ops/s
[info]                  ·gc.alloc.rate:                   184.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     181.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter":
[info]   2581020.654 ±(99.9%) 1746687.903 ops/s [Average]
[info]   (min, avg, max) = (1771731.824, 2581020.654, 2814029.056), stdev = 453609.301
[info]   CI (99.9%): [834332.752, 4327708.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate":
[info]   170.595 ±(99.9%) 115.452 MB/sec [Average]
[info]   (min, avg, max) = (117.101, 170.595, 185.986), stdev = 29.983
[info]   CI (99.9%): [55.143, 286.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm":
[info]   104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (104.000, 104.000, 104.000), stdev = 0.001
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   200.784 ±(99.9%) 480.414 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 200.784, 322.823), stdev = 124.762
[info]   CI (99.9%): [≈ 0, 681.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   113.296 ±(99.9%) 269.535 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 113.296, 181.827), stdev = 69.997
[info]   CI (99.9%): [≈ 0, 382.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.491 ±(99.9%) 4.187 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.491, 2.436), stdev = 1.087
[info]   CI (99.9%): [≈ 0, 4.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.283 ±(99.9%) 2.415 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.283, 1.405), stdev = 0.627
[info]   CI (99.9%): [≈ 0, 2.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 5.800, 25.000), stdev = 10.756
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay
[info] # Run progress: 8.04% complete, ETA 00:27:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71468.476 ops/s
[info] # Warmup Iteration   2: 125815.509 ops/s
[info] # Warmup Iteration   3: 125417.055 ops/s
[info] # Warmup Iteration   4: 125840.051 ops/s
[info] # Warmup Iteration   5: 125014.916 ops/s
[info] Iteration   1: 126823.615 ops/s
[info]                  ·gc.alloc.rate:                   1055.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12371.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 127557.627 ops/s
[info]                  ·gc.alloc.rate:                   1061.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16479.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 126228.170 ops/s
[info]                  ·gc.alloc.rate:                   1049.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12537.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.519 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 127123.708 ops/s
[info]                  ·gc.alloc.rate:               1057.306 MB/sec
[info]                  ·gc.alloc.rate.norm:          13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1009.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12499.150 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 126101.684 ops/s
[info]                  ·gc.alloc.rate:                   1048.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12624.881 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.520 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay":
[info]   126766.961 ±(99.9%) 2348.988 ops/s [Average]
[info]   (min, avg, max) = (126101.684, 126766.961, 127557.627), stdev = 610.025
[info]   CI (99.9%): [124417.973, 129115.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate":
[info]   1054.444 ±(99.9%) 19.527 MB/sec [Average]
[info]   (min, avg, max) = (1048.918, 1054.444, 1061.047), stdev = 5.071
[info]   CI (99.9%): [1034.917, 1073.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm":
[info]   13088.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13088.003, 13088.003, 13088.004), stdev = 0.001
[info]   CI (99.9%): [13088.003, 13088.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space":
[info]   1072.110 ±(99.9%) 568.519 MB/sec [Average]
[info]   (min, avg, max) = (997.218, 1072.110, 1336.032), stdev = 147.643
[info]   CI (99.9%): [503.591, 1640.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   13302.470 ±(99.9%) 6848.759 B/op [Average]
[info]   (min, avg, max) = (12371.152, 13302.470, 16479.936), stdev = 1778.601
[info]   CI (99.9%): [6453.712, 20151.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.466 ±(99.9%) 1.477 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.466, 1.033), stdev = 0.384
[info]   CI (99.9%): [≈ 0, 1.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce
[info] # Run progress: 8.93% complete, ETA 00:27:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 738043.155 ops/s
[info] # Warmup Iteration   2: 1115119.891 ops/s
[info] # Warmup Iteration   3: 1163886.395 ops/s
[info] # Warmup Iteration   4: 1175761.480 ops/s
[info] # Warmup Iteration   5: 1160729.827 ops/s
[info] Iteration   1: 1143150.750 ops/s
[info]                  ·gc.alloc.rate:                   1801.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2782.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1167985.345 ops/s
[info]                  ·gc.alloc.rate:                   1841.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2278.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1164583.263 ops/s
[info]                  ·gc.alloc.rate:                   1835.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2290.263 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1171518.964 ops/s
[info]                  ·gc.alloc.rate:                   1846.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2736.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.168 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 1167008.045 ops/s
[info]                  ·gc.alloc.rate:                   1839.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2290.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.112 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce":
[info]   1162849.274 ±(99.9%) 43474.636 ops/s [Average]
[info]   (min, avg, max) = (1143150.750, 1162849.274, 1171518.964), stdev = 11290.225
[info]   CI (99.9%): [1119374.638, 1206323.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1832.851 ±(99.9%) 68.512 MB/sec [Average]
[info]   (min, avg, max) = (1801.786, 1832.851, 1846.432), stdev = 17.792
[info]   CI (99.9%): [1764.339, 1901.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2480.000, 2480.000, 2480.000), stdev = 0.001
[info]   CI (99.9%): [2480.000, 2480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1828.823 ±(99.9%) 705.235 MB/sec [Average]
[info]   (min, avg, max) = (1691.242, 1828.823, 2037.446), stdev = 183.147
[info]   CI (99.9%): [1123.588, 2534.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2475.567 ±(99.9%) 999.435 B/op [Average]
[info]   (min, avg, max) = (2278.229, 2475.567, 2782.024), stdev = 259.550
[info]   CI (99.9%): [1476.132, 3475.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.079, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.107 ±(99.9%) 0.209 B/op [Average]
[info]   (min, avg, max) = (0.028, 0.107, 0.168), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 15.000), stdev = 3.715
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson
[info] # Run progress: 9.82% complete, ETA 00:27:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1191684.245 ops/s
[info] # Warmup Iteration   2: 1789506.078 ops/s
[info] # Warmup Iteration   3: 1779739.466 ops/s
[info] # Warmup Iteration   4: 1822798.559 ops/s
[info] # Warmup Iteration   5: 1814418.544 ops/s
[info] Iteration   1: 1829255.865 ops/s
[info]                  ·gc.alloc.rate:                   1283.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1149.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1837223.733 ops/s
[info]                  ·gc.alloc.rate:                   1289.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     862.551 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1808023.734 ops/s
[info]                  ·gc.alloc.rate:                   1268.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1172.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1846900.411 ops/s
[info]                  ·gc.alloc.rate:                   1295.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1150.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1850062.626 ops/s
[info]                  ·gc.alloc.rate:                   1298.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1151.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson":
[info]   1834293.274 ±(99.9%) 64768.248 ops/s [Average]
[info]   (min, avg, max) = (1808023.734, 1834293.274, 1850062.626), stdev = 16820.108
[info]   CI (99.9%): [1769525.026, 1899061.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1287.070 ±(99.9%) 45.178 MB/sec [Average]
[info]   (min, avg, max) = (1268.701, 1287.070, 1298.044), stdev = 11.733
[info]   CI (99.9%): [1241.892, 1332.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1279.184 ±(99.9%) 585.869 MB/sec [Average]
[info]   (min, avg, max) = (1007.261, 1279.184, 1353.957), stdev = 152.148
[info]   CI (99.9%): [693.315, 1865.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1097.391 ±(99.9%) 506.780 B/op [Average]
[info]   (min, avg, max) = (862.551, 1097.391, 1172.183), stdev = 131.609
[info]   CI (99.9%): [590.611, 1604.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.054 ±(99.9%) 0.111 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.054, 0.091), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter
[info] # Run progress: 10.71% complete, ETA 00:27:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6443155.179 ops/s
[info] # Warmup Iteration   2: 6634832.635 ops/s
[info] # Warmup Iteration   3: 6685950.191 ops/s
[info] # Warmup Iteration   4: 6792435.874 ops/s
[info] # Warmup Iteration   5: 6786774.040 ops/s
[info] Iteration   1: 6843582.408 ops/s
[info]                  ·gc.alloc.rate:                   869.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     225.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 6872077.618 ops/s
[info]                  ·gc.alloc.rate:                   873.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6735192.127 ops/s
[info]                  ·gc.alloc.rate:                   856.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          945.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     220.783 B/op
[info]                  ·gc.churn.PS_Old_Gen:             0.204 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:        0.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   4: 6767665.903 ops/s
[info]                  ·gc.alloc.rate:                   860.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     231.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 6798741.268 ops/s
[info]                  ·gc.alloc.rate:                   864.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     154.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter":
[info]   6803451.865 ±(99.9%) 213373.725 ops/s [Average]
[info]   (min, avg, max) = (6735192.127, 6803451.865, 6872077.618), stdev = 55412.479
[info]   CI (99.9%): [6590078.141, 7016825.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   864.813 ±(99.9%) 27.120 MB/sec [Average]
[info]   (min, avg, max) = (856.095, 864.813, 873.547), stdev = 7.043
[info]   CI (99.9%): [837.693, 891.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   849.627 ±(99.9%) 662.273 MB/sec [Average]
[info]   (min, avg, max) = (657.702, 849.627, 996.531), stdev = 171.990
[info]   CI (99.9%): [187.353, 1511.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   196.627 ±(99.9%) 156.007 B/op [Average]
[info]   (min, avg, max) = (150.582, 196.627, 231.673), stdev = 40.515
[info]   CI (99.9%): [40.620, 352.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Old_Gen":
[info]   0.041 ±(99.9%) 0.351 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.204), stdev = 0.091
[info]   CI (99.9%): [≈ 0, 0.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Old_Gen.norm":
[info]   0.010 ±(99.9%) 0.082 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.048), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.028 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.013, 0.019), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.600, 21.000), stdev = 8.112
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay
[info] # Run progress: 11.61% complete, ETA 00:26:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 253102.387 ops/s
[info] # Warmup Iteration   2: 404779.606 ops/s
[info] # Warmup Iteration   3: 417110.048 ops/s
[info] # Warmup Iteration   4: 420647.292 ops/s
[info] # Warmup Iteration   5: 420743.419 ops/s
[info] Iteration   1: 414744.054 ops/s
[info]                  ·gc.alloc.rate:                   1096.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3787.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 419264.619 ops/s
[info]                  ·gc.alloc.rate:                   1108.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5021.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.234 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 414879.774 ops/s
[info]                  ·gc.alloc.rate:                   1097.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3823.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.237 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 416250.418 ops/s
[info]                  ·gc.alloc.rate:                   1100.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3818.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 413708.926 ops/s
[info]                  ·gc.alloc.rate:                   1093.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5136.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay":
[info]   415769.558 ±(99.9%) 8289.233 ops/s [Average]
[info]   (min, avg, max) = (413708.926, 415769.558, 419264.619), stdev = 2152.688
[info]   CI (99.9%): [407480.325, 424058.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1099.317 ±(99.9%) 21.879 MB/sec [Average]
[info]   (min, avg, max) = (1093.821, 1099.317, 1108.534), stdev = 5.682
[info]   CI (99.9%): [1077.438, 1121.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1141.115 ±(99.9%) 714.655 MB/sec [Average]
[info]   (min, avg, max) = (998.536, 1141.115, 1350.622), stdev = 185.594
[info]   CI (99.9%): [426.460, 1855.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4317.461 ±(99.9%) 2681.600 B/op [Average]
[info]   (min, avg, max) = (3787.823, 4317.461, 5136.662), stdev = 696.403
[info]   CI (99.9%): [1635.861, 6999.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.173 ±(99.9%) 0.331 B/op [Average]
[info]   (min, avg, max) = (0.079, 0.173, 0.237), stdev = 0.086
[info]   CI (99.9%): [≈ 0, 0.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce
[info] # Run progress: 12.50% complete, ETA 00:26:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 386062.702 ops/s
[info] # Warmup Iteration   2: 599020.485 ops/s
[info] # Warmup Iteration   3: 609781.227 ops/s
[info] # Warmup Iteration   4: 609891.013 ops/s
[info] # Warmup Iteration   5: 608402.719 ops/s
[info] Iteration   1: 611912.557 ops/s
[info]                  ·gc.alloc.rate:                   1988.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              5112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5206.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.214 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 620934.185 ops/s
[info]                  ·gc.alloc.rate:                   2017.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              5112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5149.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 606726.203 ops/s
[info]                  ·gc.alloc.rate:                   1971.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              5112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5280.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 605423.869 ops/s
[info]                  ·gc.alloc.rate:                   1967.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              5112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5299.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.271 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 610840.699 ops/s
[info]                  ·gc.alloc.rate:                   1984.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              5112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2040.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5255.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce":
[info]   611167.502 ±(99.9%) 23482.966 ops/s [Average]
[info]   (min, avg, max) = (605423.869, 611167.502, 620934.185), stdev = 6098.452
[info]   CI (99.9%): [587684.536, 634650.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   1985.731 ±(99.9%) 76.288 MB/sec [Average]
[info]   (min, avg, max) = (1967.043, 1985.731, 2017.419), stdev = 19.812
[info]   CI (99.9%): [1909.444, 2062.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5112.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5112.001, 5112.001, 5112.001), stdev = 0.001
[info]   CI (99.9%): [5112.001, 5112.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2034.588 ±(99.9%) 23.932 MB/sec [Average]
[info]   (min, avg, max) = (2025.055, 2034.588, 2040.464), stdev = 6.215
[info]   CI (99.9%): [2010.656, 2058.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5238.247 ±(99.9%) 233.814 B/op [Average]
[info]   (min, avg, max) = (5149.075, 5238.247, 5299.013), stdev = 60.721
[info]   CI (99.9%): [5004.433, 5472.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.161 ±(99.9%) 0.329 B/op [Average]
[info]   (min, avg, max) = (0.054, 0.161, 0.271), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.600, 12.000), stdev = 1.949
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson
[info] # Run progress: 13.39% complete, ETA 00:26:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 787291.464 ops/s
[info] # Warmup Iteration   2: 1186588.763 ops/s
[info] # Warmup Iteration   3: 1176668.521 ops/s
[info] # Warmup Iteration   4: 1190743.787 ops/s
[info] # Warmup Iteration   5: 1196843.688 ops/s
[info] Iteration   1: 1211362.965 ops/s
[info]                  ·gc.alloc.rate:                   1139.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1297.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1205817.677 ops/s
[info]                  ·gc.alloc.rate:                   1134.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1308.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1201871.479 ops/s
[info]                  ·gc.alloc.rate:                   1130.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1758.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1202694.528 ops/s
[info]                  ·gc.alloc.rate:                   1131.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1322.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1201563.575 ops/s
[info]                  ·gc.alloc.rate:                   1130.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1769.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson":
[info]   1204662.045 ±(99.9%) 15817.749 ops/s [Average]
[info]   (min, avg, max) = (1201563.575, 1204662.045, 1211362.965), stdev = 4107.819
[info]   CI (99.9%): [1188844.296, 1220479.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1133.158 ±(99.9%) 14.884 MB/sec [Average]
[info]   (min, avg, max) = (1130.246, 1133.158, 1139.457), stdev = 3.865
[info]   CI (99.9%): [1118.274, 1148.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1141.386 ±(99.9%) 723.664 MB/sec [Average]
[info]   (min, avg, max) = (999.213, 1141.386, 1351.036), stdev = 187.933
[info]   CI (99.9%): [417.722, 1865.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1491.208 ±(99.9%) 959.059 B/op [Average]
[info]   (min, avg, max) = (1297.842, 1491.208, 1769.113), stdev = 249.065
[info]   CI (99.9%): [532.149, 2450.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.054 ±(99.9%) 0.074 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.054, 0.082), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter
[info] # Run progress: 14.29% complete, ETA 00:25:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2466436.053 ops/s
[info] # Warmup Iteration   2: 2695368.228 ops/s
[info] # Warmup Iteration   3: 2838596.415 ops/s
[info] # Warmup Iteration   4: 2862790.285 ops/s
[info] # Warmup Iteration   5: 2867024.477 ops/s
[info] Iteration   1: 2857417.135 ops/s
[info]                  ·gc.alloc.rate:               1191.312 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 547.086 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 2852663.327 ops/s
[info]                  ·gc.alloc.rate:                   1189.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     734.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2837277.969 ops/s
[info]                  ·gc.alloc.rate:                   1183.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     556.680 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2851817.285 ops/s
[info]                  ·gc.alloc.rate:                   1189.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     741.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 2894392.887 ops/s
[info]                  ·gc.alloc.rate:                   1206.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     549.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter":
[info]   2858713.721 ±(99.9%) 82099.657 ops/s [Average]
[info]   (min, avg, max) = (2837277.969, 2858713.721, 2894392.887), stdev = 21321.020
[info]   CI (99.9%): [2776614.064, 2940813.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1191.914 ±(99.9%) 34.285 MB/sec [Average]
[info]   (min, avg, max) = (1183.014, 1191.914, 1206.839), stdev = 8.904
[info]   CI (99.9%): [1157.629, 1226.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1136.867 ±(99.9%) 706.993 MB/sec [Average]
[info]   (min, avg, max) = (993.521, 1136.867, 1343.981), stdev = 183.604
[info]   CI (99.9%): [429.875, 1843.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   625.886 ±(99.9%) 394.384 B/op [Average]
[info]   (min, avg, max) = (547.086, 625.886, 741.472), stdev = 102.420
[info]   CI (99.9%): [231.502, 1020.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.040 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.023), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 1.924
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay
[info] # Run progress: 15.18% complete, ETA 00:25:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 109976.964 ops/s
[info] # Warmup Iteration   2: 212213.784 ops/s
[info] # Warmup Iteration   3: 219483.457 ops/s
[info] # Warmup Iteration   4: 216360.685 ops/s
[info] # Warmup Iteration   5: 218149.615 ops/s
[info] Iteration   1: 215378.903 ops/s
[info]                  ·gc.alloc.rate:                   1319.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9774.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 216456.011 ops/s
[info]                  ·gc.alloc.rate:                   1326.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9769.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.605 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 215416.419 ops/s
[info]                  ·gc.alloc.rate:                   1319.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9850.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 220507.223 ops/s
[info]                  ·gc.alloc.rate:                   1351.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9651.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.446 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 215142.212 ops/s
[info]                  ·gc.alloc.rate:                   1318.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9911.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.457 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay":
[info]   216580.154 ±(99.9%) 8675.118 ops/s [Average]
[info]   (min, avg, max) = (215142.212, 216580.154, 220507.223), stdev = 2252.901
[info]   CI (99.9%): [207905.036, 225255.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1326.951 ±(99.9%) 53.194 MB/sec [Average]
[info]   (min, avg, max) = (1318.088, 1326.951, 1351.036), stdev = 13.814
[info]   CI (99.9%): [1273.757, 1380.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9640.002, 9640.002, 9640.002), stdev = 0.001
[info]   CI (99.9%): [9640.002, 9640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1347.697 ±(99.9%) 26.470 MB/sec [Average]
[info]   (min, avg, max) = (1338.043, 1347.697, 1355.196), stdev = 6.874
[info]   CI (99.9%): [1321.226, 1374.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9791.425 ±(99.9%) 375.982 B/op [Average]
[info]   (min, avg, max) = (9651.718, 9791.425, 9911.396), stdev = 97.641
[info]   CI (99.9%): [9415.443, 10167.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.423 ±(99.9%) 0.484 B/op [Average]
[info]   (min, avg, max) = (0.304, 0.423, 0.605), stdev = 0.126
[info]   CI (99.9%): [≈ 0, 0.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson
[info] # Run progress: 16.07% complete, ETA 00:25:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 998880.596 ops/s
[info] # Warmup Iteration   2: 1496274.448 ops/s
[info] # Warmup Iteration   3: 1529464.187 ops/s
[info] # Warmup Iteration   4: 1522041.531 ops/s
[info] # Warmup Iteration   5: 1531368.066 ops/s
[info] Iteration   1: 1529926.889 ops/s
[info]                  ·gc.alloc.rate:                   972.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     681.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.321 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1528036.780 ops/s
[info]                  ·gc.alloc.rate:                   971.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1028.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1540269.263 ops/s
[info]                  ·gc.alloc.rate:                   978.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1023.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1524371.169 ops/s
[info]                  ·gc.alloc.rate:                   968.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1037.514 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1543863.465 ops/s
[info]                  ·gc.alloc.rate:               981.217 MB/sec
[info]                  ·gc.alloc.rate.norm:          1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1027.142 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson":
[info]   1533293.513 ±(99.9%) 32156.946 ops/s [Average]
[info]   (min, avg, max) = (1524371.169, 1533293.513, 1543863.465), stdev = 8351.057
[info]   CI (99.9%): [1501136.567, 1565450.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   974.529 ±(99.9%) 20.396 MB/sec [Average]
[info]   (min, avg, max) = (968.801, 974.529, 981.217), stdev = 5.297
[info]   CI (99.9%): [954.133, 994.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1000.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1000.000, 1000.000, 1000.000), stdev = 0.001
[info]   CI (99.9%): [1000.000, 1000.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   935.282 ±(99.9%) 586.153 MB/sec [Average]
[info]   (min, avg, max) = (663.050, 935.282, 1007.848), stdev = 152.222
[info]   CI (99.9%): [349.129, 1521.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   959.595 ±(99.9%) 598.211 B/op [Average]
[info]   (min, avg, max) = (681.847, 959.595, 1037.514), stdev = 155.353
[info]   CI (99.9%): [361.384, 1557.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.498 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.312), stdev = 0.129
[info]   CI (99.9%): [≈ 0, 0.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.086 ±(99.9%) 0.512 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.086, 0.321), stdev = 0.133
[info]   CI (99.9%): [≈ 0, 0.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter
[info] # Run progress: 16.96% complete, ETA 00:25:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3584187.791 ops/s
[info] # Warmup Iteration   2: 3896171.488 ops/s
[info] # Warmup Iteration   3: 3933277.763 ops/s
[info] # Warmup Iteration   4: 3934643.442 ops/s
[info] # Warmup Iteration   5: 3840340.467 ops/s
[info] Iteration   1: 3898317.578 ops/s
[info]                  ·gc.alloc.rate:               515.391 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 131.379 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 3933092.661 ops/s
[info]                  ·gc.alloc.rate:                   519.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     260.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3934874.857 ops/s
[info]                  ·gc.alloc.rate:               520.201 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 130.690 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 3936826.696 ops/s
[info]                  ·gc.alloc.rate:               520.457 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 262.855 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 3962408.729 ops/s
[info]                  ·gc.alloc.rate:                   523.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter":
[info]   3933104.104 ±(99.9%) 87931.729 ops/s [Average]
[info]   (min, avg, max) = (3898317.578, 3933104.104, 3962408.729), stdev = 22835.591
[info]   CI (99.9%): [3845172.375, 4021035.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   519.955 ±(99.9%) 11.523 MB/sec [Average]
[info]   (min, avg, max) = (515.391, 519.955, 523.785), stdev = 2.992
[info]   CI (99.9%): [508.433, 531.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   458.518 ±(99.9%) 690.832 MB/sec [Average]
[info]   (min, avg, max) = (325.535, 458.518, 657.714), stdev = 179.407
[info]   CI (99.9%): [≈ 0, 1149.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   183.399 ±(99.9%) 275.994 B/op [Average]
[info]   (min, avg, max) = (130.690, 183.399, 262.855), stdev = 71.675
[info]   CI (99.9%): [≈ 0, 459.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.017), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay
[info] # Run progress: 17.86% complete, ETA 00:24:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123746.211 ops/s
[info] # Warmup Iteration   2: 253989.954 ops/s
[info] # Warmup Iteration   3: 261797.206 ops/s
[info] # Warmup Iteration   4: 264532.896 ops/s
[info] # Warmup Iteration   5: 266776.751 ops/s
[info] Iteration   1: 265128.555 ops/s
[info]                  ·gc.alloc.rate:                   1203.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7920.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 264376.837 ops/s
[info]                  ·gc.alloc.rate:                   1200.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5983.841 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 268721.326 ops/s
[info]                  ·gc.alloc.rate:                   1220.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7881.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.244 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 265191.882 ops/s
[info]                  ·gc.alloc.rate:                   1204.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6005.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 266474.672 ops/s
[info]                  ·gc.alloc.rate:                   1209.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7987.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay":
[info]   265978.654 ±(99.9%) 6578.795 ops/s [Average]
[info]   (min, avg, max) = (264376.837, 265978.654, 268721.326), stdev = 1708.492
[info]   CI (99.9%): [259399.859, 272557.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1207.694 ±(99.9%) 29.857 MB/sec [Average]
[info]   (min, avg, max) = (1200.410, 1207.694, 1220.130), stdev = 7.754
[info]   CI (99.9%): [1177.837, 1237.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7144.002, 7144.002, 7144.002), stdev = 0.001
[info]   CI (99.9%): [7144.001, 7144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1210.221 ±(99.9%) 708.417 MB/sec [Average]
[info]   (min, avg, max) = (1005.468, 1210.221, 1352.756), stdev = 183.974
[info]   CI (99.9%): [501.804, 1918.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7155.548 ±(99.9%) 4084.094 B/op [Average]
[info]   (min, avg, max) = (5983.841, 7155.548, 7987.067), stdev = 1060.626
[info]   CI (99.9%): [3071.454, 11239.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.148 ±(99.9%) 0.207 B/op [Average]
[info]   (min, avg, max) = (0.123, 0.148, 0.244), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.140
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce
[info] # Run progress: 18.75% complete, ETA 00:24:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 378690.458 ops/s
[info] # Warmup Iteration   2: 553405.200 ops/s
[info] # Warmup Iteration   3: 552969.496 ops/s
[info] # Warmup Iteration   4: 557949.126 ops/s
[info] # Warmup Iteration   5: 554826.671 ops/s
[info] Iteration   1: 563039.513 ops/s
[info]                  ·gc.alloc.rate:                   1869.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4711.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 549692.528 ops/s
[info]                  ·gc.alloc.rate:                   1824.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5810.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 561567.479 ops/s
[info]                  ·gc.alloc.rate:               1864.574 MB/sec
[info]                  ·gc.alloc.rate.norm:          5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1695.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4750.428 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 562302.671 ops/s
[info]                  ·gc.alloc.rate:                   1867.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5703.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 547258.634 ops/s
[info]                  ·gc.alloc.rate:                   1816.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4885.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce":
[info]   556772.165 ±(99.9%) 29419.632 ops/s [Average]
[info]   (min, avg, max) = (547258.634, 556772.165, 563039.513), stdev = 7640.185
[info]   CI (99.9%): [527352.533, 586191.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1848.609 ±(99.9%) 97.905 MB/sec [Average]
[info]   (min, avg, max) = (1816.994, 1848.609, 1869.425), stdev = 25.426
[info]   CI (99.9%): [1750.704, 1946.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1829.764 ±(99.9%) 718.777 MB/sec [Average]
[info]   (min, avg, max) = (1685.889, 1829.764, 2038.431), stdev = 186.664
[info]   CI (99.9%): [1110.987, 2548.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5172.102 ±(99.9%) 2075.955 B/op [Average]
[info]   (min, avg, max) = (4711.119, 5172.102, 5810.450), stdev = 539.119
[info]   CI (99.9%): [3096.147, 7248.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.141 ±(99.9%) 0.464 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.141, 0.291), stdev = 0.120
[info]   CI (99.9%): [≈ 0, 0.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 10.000), stdev = 1.304
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson
[info] # Run progress: 19.64% complete, ETA 00:24:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 444934.150 ops/s
[info] # Warmup Iteration   2: 696598.448 ops/s
[info] # Warmup Iteration   3: 702780.025 ops/s
[info] # Warmup Iteration   4: 700743.495 ops/s
[info] # Warmup Iteration   5: 705929.050 ops/s
[info] Iteration   1: 702340.648 ops/s
[info]                  ·gc.alloc.rate:                   871.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2222.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.280 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 707644.654 ops/s
[info]                  ·gc.alloc.rate:                   877.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1477.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 692586.627 ops/s
[info]                  ·gc.alloc.rate:                   859.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2271.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 701833.707 ops/s
[info]                  ·gc.alloc.rate:                   870.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2252.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 707313.765 ops/s
[info]                  ·gc.alloc.rate:               877.568 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1494.097 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson":
[info]   702343.880 ±(99.9%) 23443.295 ops/s [Average]
[info]   (min, avg, max) = (692586.627, 702343.880, 707644.654), stdev = 6088.149
[info]   CI (99.9%): [678900.585, 725787.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   871.378 ±(99.9%) 29.023 MB/sec [Average]
[info]   (min, avg, max) = (859.315, 871.378, 877.935), stdev = 7.537
[info]   CI (99.9%): [842.355, 900.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   866.477 ±(99.9%) 697.889 MB/sec [Average]
[info]   (min, avg, max) = (664.339, 866.477, 1004.573), stdev = 181.239
[info]   CI (99.9%): [168.589, 1564.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1943.320 ±(99.9%) 1610.562 B/op [Average]
[info]   (min, avg, max) = (1477.091, 1943.320, 2271.395), stdev = 418.258
[info]   CI (99.9%): [332.757, 3553.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.103 ±(99.9%) 0.410 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.103, 0.280), stdev = 0.106
[info]   CI (99.9%): [≈ 0, 0.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 5.000), stdev = 1.140
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 20.54% complete, ETA 00:24:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4440492.696 ops/s
[info] # Warmup Iteration   2: 4500575.229 ops/s
[info] # Warmup Iteration   3: 4565648.491 ops/s
[info] # Warmup Iteration   4: 4503683.618 ops/s
[info] # Warmup Iteration   5: 4587485.668 ops/s
[info] Iteration   1: 4625286.443 ops/s
[info]                  ·gc.alloc.rate:               211.652 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87.045 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 4606556.637 ops/s
[info]                  ·gc.alloc.rate:               210.790 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87.399 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 4642466.119 ops/s
[info]                  ·gc.alloc.rate:      212.438 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 4620996.840 ops/s
[info]                  ·gc.alloc.rate:                   211.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4629123.672 ops/s
[info]                  ·gc.alloc.rate:               211.806 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 109.509 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter":
[info]   4624885.942 ±(99.9%) 50142.345 ops/s [Average]
[info]   (min, avg, max) = (4606556.637, 4624885.942, 4642466.119), stdev = 13021.808
[info]   CI (99.9%): [4574743.597, 4675028.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   211.626 ±(99.9%) 2.299 MB/sec [Average]
[info]   (min, avg, max) = (210.790, 211.626, 212.438), stdev = 0.597
[info]   CI (99.9%): [209.326, 213.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   231.211 ±(99.9%) 513.798 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 231.211, 322.158), stdev = 133.432
[info]   CI (99.9%): [≈ 0, 745.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   78.731 ±(99.9%) 174.868 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 78.731, 109.701), stdev = 45.413
[info]   CI (99.9%): [≈ 0, 253.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay
[info] # Run progress: 21.43% complete, ETA 00:23:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103500.224 ops/s
[info] # Warmup Iteration   2: 196930.419 ops/s
[info] # Warmup Iteration   3: 200242.620 ops/s
[info] # Warmup Iteration   4: 200670.168 ops/s
[info] # Warmup Iteration   5: 199627.811 ops/s
[info] Iteration   1: 198550.733 ops/s
[info]                  ·gc.alloc.rate:                   1090.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.563 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7912.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.495 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 198146.181 ops/s
[info]                  ·gc.alloc.rate:                   1088.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7965.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.331 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 199313.687 ops/s
[info]                  ·gc.alloc.rate:                   1094.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10601.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.493 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 197763.858 ops/s
[info]                  ·gc.alloc.rate:               1086.054 MB/sec
[info]                  ·gc.alloc.rate.norm:          8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1010.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8042.357 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 200302.848 ops/s
[info]                  ·gc.alloc.rate:                   1099.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7955.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.327 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay":
[info]   198815.462 ±(99.9%) 3891.072 ops/s [Average]
[info]   (min, avg, max) = (197763.858, 198815.462, 200302.848), stdev = 1010.499
[info]   CI (99.9%): [194924.389, 202706.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1091.800 ±(99.9%) 21.313 MB/sec [Average]
[info]   (min, avg, max) = (1086.054, 1091.800, 1099.957), stdev = 5.535
[info]   CI (99.9%): [1070.486, 1113.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8640.002, 8640.002, 8640.002), stdev = 0.001
[info]   CI (99.9%): [8640.002, 8640.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1073.722 ±(99.9%) 580.154 MB/sec [Average]
[info]   (min, avg, max) = (998.563, 1073.722, 1343.039), stdev = 150.664
[info]   CI (99.9%): [493.568, 1653.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8495.718 ±(99.9%) 4537.300 B/op [Average]
[info]   (min, avg, max) = (7912.556, 8495.718, 10601.905), stdev = 1178.322
[info]   CI (99.9%): [3958.419, 13033.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.329 ±(99.9%) 0.777 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.329, 0.495), stdev = 0.202
[info]   CI (99.9%): [≈ 0, 1.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce
[info] # Run progress: 22.32% complete, ETA 00:23:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3041.098 ops/s
[info] # Warmup Iteration   2: 4839.902 ops/s
[info] # Warmup Iteration   3: 5027.908 ops/s
[info] # Warmup Iteration   4: 5023.596 ops/s
[info] # Warmup Iteration   5: 5020.693 ops/s
[info] Iteration   1: 5007.744 ops/s
[info]                  ·gc.alloc.rate:                   1250.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     418886.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.426 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 5024.928 ops/s
[info]                  ·gc.alloc.rate:                   1255.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     419451.263 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.910 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 4993.099 ops/s
[info]                  ·gc.alloc.rate:                   1247.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     424028.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.457 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5044.528 ops/s
[info]                  ·gc.alloc.rate:                   1259.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     315549.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.988 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 5031.654 ops/s
[info]                  ·gc.alloc.rate:                   1256.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     422930.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.043 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce":
[info]   5020.391 ±(99.9%) 77.847 ops/s [Average]
[info]   (min, avg, max) = (4993.099, 5020.391, 5044.528), stdev = 20.217
[info]   CI (99.9%): [4942.544, 5098.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1253.966 ±(99.9%) 19.329 MB/sec [Average]
[info]   (min, avg, max) = (1247.119, 1253.966, 1259.912), stdev = 5.020
[info]   CI (99.9%): [1234.637, 1273.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   392960.087 ±(99.9%) 0.010 B/op [Average]
[info]   (min, avg, max) = (392960.086, 392960.087, 392960.092), stdev = 0.003
[info]   CI (99.9%): [392960.077, 392960.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   1276.646 ±(99.9%) 570.933 MB/sec [Average]
[info]   (min, avg, max) = (1011.717, 1276.646, 1352.585), stdev = 148.270
[info]   CI (99.9%): [705.713, 1847.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   400169.211 ±(99.9%) 182347.110 B/op [Average]
[info]   (min, avg, max) = (315549.476, 400169.211, 424028.681), stdev = 47354.965
[info]   CI (99.9%): [217822.101, 582516.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.049 ±(99.9%) 0.081 MB/sec [Average]
[info]   (min, avg, max) = (0.033, 0.049, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   15.365 ±(99.9%) 25.142 B/op [Average]
[info]   (min, avg, max) = (10.426, 15.365, 26.043), stdev = 6.529
[info]   CI (99.9%): [≈ 0, 40.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson
[info] # Run progress: 23.21% complete, ETA 00:23:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6319.906 ops/s
[info] # Warmup Iteration   2: 10486.634 ops/s
[info] # Warmup Iteration   3: 10453.775 ops/s
[info] # Warmup Iteration   4: 10478.626 ops/s
[info] # Warmup Iteration   5: 10534.552 ops/s
[info] Iteration   1: 10492.429 ops/s
[info]                  ·gc.alloc.rate:               282.920 MB/sec
[info]                  ·gc.alloc.rate.norm:          42424.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 48461.917 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 10553.830 ops/s
[info]                  ·gc.alloc.rate:      284.600 MB/sec
[info]                  ·gc.alloc.rate.norm: 42424.041 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 10364.832 ops/s
[info]                  ·gc.alloc.rate:               279.493 MB/sec
[info]                  ·gc.alloc.rate.norm:          42424.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 49055.596 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 10523.260 ops/s
[info]                  ·gc.alloc.rate:               283.758 MB/sec
[info]                  ·gc.alloc.rate.norm:          42424.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 48663.251 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 10552.514 ops/s
[info]                  ·gc.alloc.rate:                   284.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              42424.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48529.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.105 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson":
[info]   10497.373 ±(99.9%) 301.296 ops/s [Average]
[info]   (min, avg, max) = (10364.832, 10497.373, 10553.830), stdev = 78.246
[info]   CI (99.9%): [10196.077, 10798.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   283.060 ±(99.9%) 8.115 MB/sec [Average]
[info]   (min, avg, max) = (279.493, 283.060, 284.600), stdev = 2.107
[info]   CI (99.9%): [274.945, 291.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   42424.042 ±(99.9%) 0.005 B/op [Average]
[info]   (min, avg, max) = (42424.041, 42424.042, 42424.044), stdev = 0.001
[info]   CI (99.9%): [42424.036, 42424.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   259.467 ±(99.9%) 558.540 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 259.467, 325.489), stdev = 145.051
[info]   CI (99.9%): [≈ 0, 818.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   38942.062 ±(99.9%) 83830.402 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 38942.062, 49055.596), stdev = 21770.489
[info]   CI (99.9%): [≈ 0, 122772.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.621 ±(99.9%) 5.346 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.621, 3.105), stdev = 1.388
[info]   CI (99.9%): [≈ 0, 5.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter
[info] # Run progress: 24.11% complete, ETA 00:22:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13216.546 ops/s
[info] # Warmup Iteration   2: 17782.103 ops/s
[info] # Warmup Iteration   3: 17693.098 ops/s
[info] # Warmup Iteration   4: 17513.624 ops/s
[info] # Warmup Iteration   5: 17834.059 ops/s
[info] Iteration   1: 17767.930 ops/s
[info]                  ·gc.alloc.rate:                   332.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28558.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.844 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 17844.474 ops/s
[info]                  ·gc.alloc.rate:                   334.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28611.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.672 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 17742.715 ops/s
[info]                  ·gc.alloc.rate:               332.085 MB/sec
[info]                  ·gc.alloc.rate.norm:          29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28777.487 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 17649.063 ops/s
[info]                  ·gc.alloc.rate:               330.344 MB/sec
[info]                  ·gc.alloc.rate.norm:          29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29077.609 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 17898.829 ops/s
[info]                  ·gc.alloc.rate:                   335.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28671.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.830 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter":
[info]   17780.602 ±(99.9%) 370.122 ops/s [Average]
[info]   (min, avg, max) = (17649.063, 17780.602, 17898.829), stdev = 96.119
[info]   CI (99.9%): [17410.481, 18150.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   332.801 ±(99.9%) 6.934 MB/sec [Average]
[info]   (min, avg, max) = (330.344, 332.801, 335.011), stdev = 1.801
[info]   CI (99.9%): [325.866, 339.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   29448.027 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (29448.024, 29448.027, 29448.035), stdev = 0.005
[info]   CI (99.9%): [29448.009, 29448.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   324.783 ±(99.9%) 5.860 MB/sec [Average]
[info]   (min, avg, max) = (322.500, 324.783, 326.189), stdev = 1.522
[info]   CI (99.9%): [318.923, 330.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   28739.284 ±(99.9%) 792.880 B/op [Average]
[info]   (min, avg, max) = (28558.369, 28739.284, 29077.609), stdev = 205.908
[info]   CI (99.9%): [27946.405, 29532.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   1.469 ±(99.9%) 5.915 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.469, 3.672), stdev = 1.536
[info]   CI (99.9%): [≈ 0, 7.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay
[info] # Run progress: 25.00% complete, ETA 00:22:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 954.345 ops/s
[info] # Warmup Iteration   2: 1927.880 ops/s
[info] # Warmup Iteration   3: 1931.956 ops/s
[info] # Warmup Iteration   4: 1901.887 ops/s
[info] # Warmup Iteration   5: 1906.351 ops/s
[info] Iteration   1: 1943.866 ops/s
[info]                  ·gc.alloc.rate:                   1180.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     808400.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 67.389 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1956.165 ops/s
[info]                  ·gc.alloc.rate:                   1187.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.221 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1075634.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.488 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1943.200 ops/s
[info]                  ·gc.alloc.rate:                   1179.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     815019.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.856 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1939.657 ops/s
[info]                  ·gc.alloc.rate:                   1177.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1092897.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.781 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1967.807 ops/s
[info]                  ·gc.alloc.rate:                   1194.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     809464.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.284 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay":
[info]   1950.139 ±(99.9%) 44.982 ops/s [Average]
[info]   (min, avg, max) = (1939.657, 1950.139, 1967.807), stdev = 11.682
[info]   CI (99.9%): [1905.157, 1995.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1184.007 ±(99.9%) 27.406 MB/sec [Average]
[info]   (min, avg, max) = (1177.584, 1184.007, 1194.768), stdev = 7.117
[info]   CI (99.9%): [1156.601, 1211.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   955216.231 ±(99.9%) 0.034 B/op [Average]
[info]   (min, avg, max) = (955216.221, 955216.231, 955216.239), stdev = 0.009
[info]   CI (99.9%): [955216.197, 955216.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1140.526 ±(99.9%) 709.823 MB/sec [Average]
[info]   (min, avg, max) = (998.889, 1140.526, 1347.317), stdev = 184.339
[info]   CI (99.9%): [430.703, 1850.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   920283.322 ±(99.9%) 576981.513 B/op [Average]
[info]   (min, avg, max) = (808400.880, 920283.322, 1092897.254), stdev = 149840.267
[info]   CI (99.9%): [343301.809, 1497264.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   36.960 ±(99.9%) 71.153 B/op [Average]
[info]   (min, avg, max) = (16.856, 36.960, 67.389), stdev = 18.478
[info]   CI (99.9%): [≈ 0, 108.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 25.89% complete, ETA 00:22:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3091731.041 ops/s
[info] # Warmup Iteration   2: 3477322.034 ops/s
[info] # Warmup Iteration   3: 3497083.367 ops/s
[info] # Warmup Iteration   4: 3514485.255 ops/s
[info] # Warmup Iteration   5: 3554564.737 ops/s
[info] Iteration   1: 3552669.006 ops/s
[info]                  ·gc.alloc.rate:                   1065.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     438.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 3546870.408 ops/s
[info]                  ·gc.alloc.rate:                   1064.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     441.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3525361.768 ops/s
[info]                  ·gc.alloc.rate:                   1057.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     446.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 3501394.969 ops/s
[info]                  ·gc.alloc.rate:                   1050.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     601.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3491373.485 ops/s
[info]                  ·gc.alloc.rate:                   1047.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     454.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter":
[info]   3523533.927 ±(99.9%) 104060.272 ops/s [Average]
[info]   (min, avg, max) = (3491373.485, 3523533.927, 3552669.006), stdev = 27024.122
[info]   CI (99.9%): [3419473.655, 3627594.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1056.999 ±(99.9%) 31.295 MB/sec [Average]
[info]   (min, avg, max) = (1047.337, 1056.999, 1065.806), stdev = 8.127
[info]   CI (99.9%): [1025.705, 1088.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   472.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (472.000, 472.000, 472.000), stdev = 0.001
[info]   CI (99.9%): [472.000, 472.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1066.382 ±(99.9%) 588.189 MB/sec [Average]
[info]   (min, avg, max) = (989.884, 1066.382, 1339.350), stdev = 152.751
[info]   CI (99.9%): [478.192, 1654.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   476.420 ±(99.9%) 271.039 B/op [Average]
[info]   (min, avg, max) = (438.377, 476.420, 601.855), stdev = 70.388
[info]   CI (99.9%): [205.381, 747.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.001 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.021, 0.021), stdev = 0.001
[info]   CI (99.9%): [0.021, 0.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.009, 0.009), stdev = 0.001
[info]   CI (99.9%): [0.009, 0.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 26.79% complete, ETA 00:22:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 140838.577 ops/s
[info] # Warmup Iteration   2: 237889.732 ops/s
[info] # Warmup Iteration   3: 244161.311 ops/s
[info] # Warmup Iteration   4: 243130.645 ops/s
[info] # Warmup Iteration   5: 245545.666 ops/s
[info] Iteration   1: 240291.459 ops/s
[info]                  ·gc.alloc.rate:                   1291.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8761.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 240640.455 ops/s
[info]                  ·gc.alloc.rate:                   1293.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8791.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.545 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 244533.664 ops/s
[info]                  ·gc.alloc.rate:                   1314.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8677.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.402 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 243555.882 ops/s
[info]                  ·gc.alloc.rate:                   1308.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6551.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 243211.829 ops/s
[info]                  ·gc.alloc.rate:                   1307.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8763.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay":
[info]   242446.658 ±(99.9%) 7224.118 ops/s [Average]
[info]   (min, avg, max) = (240291.459, 242446.658, 244533.664), stdev = 1876.081
[info]   CI (99.9%): [235222.540, 249670.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1302.953 ±(99.9%) 38.876 MB/sec [Average]
[info]   (min, avg, max) = (1291.322, 1302.953, 1314.162), stdev = 10.096
[info]   CI (99.9%): [1264.077, 1341.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8456.002, 8456.002, 8456.002), stdev = 0.001
[info]   CI (99.9%): [8456.002, 8456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1279.984 ±(99.9%) 572.666 MB/sec [Average]
[info]   (min, avg, max) = (1014.169, 1279.984, 1354.610), stdev = 148.719
[info]   CI (99.9%): [707.319, 1852.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8309.164 ±(99.9%) 3786.756 B/op [Average]
[info]   (min, avg, max) = (6551.636, 8309.164, 8791.537), stdev = 983.408
[info]   CI (99.9%): [4522.408, 12095.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.297 ±(99.9%) 0.681 B/op [Average]
[info]   (min, avg, max) = (0.135, 0.297, 0.545), stdev = 0.177
[info]   CI (99.9%): [≈ 0, 0.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 7.000), stdev = 1.140
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce
[info] # Run progress: 27.68% complete, ETA 00:21:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 296435.204 ops/s
[info] # Warmup Iteration   2: 465232.833 ops/s
[info] # Warmup Iteration   3: 471557.740 ops/s
[info] # Warmup Iteration   4: 470212.035 ops/s
[info] # Warmup Iteration   5: 477649.236 ops/s
[info] Iteration   1: 479527.303 ops/s
[info]                  ·gc.alloc.rate:                   1748.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1682.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5520.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 467919.790 ops/s
[info]                  ·gc.alloc.rate:                   1705.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5679.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.280 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 474338.140 ops/s
[info]                  ·gc.alloc.rate:                   1729.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.713 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5618.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 467816.391 ops/s
[info]                  ·gc.alloc.rate:                   1705.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5705.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 476171.102 ops/s
[info]                  ·gc.alloc.rate:                   1735.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5614.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce":
[info]   473154.545 ±(99.9%) 19916.718 ops/s [Average]
[info]   (min, avg, max) = (467816.391, 473154.545, 479527.303), stdev = 5172.309
[info]   CI (99.9%): [453237.827, 493071.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1724.948 ±(99.9%) 72.617 MB/sec [Average]
[info]   (min, avg, max) = (1705.494, 1724.948, 1748.253), stdev = 18.858
[info]   CI (99.9%): [1652.331, 1797.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5736.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5736.001, 5736.001, 5736.001), stdev = 0.001
[info]   CI (99.9%): [5736.001, 5736.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1692.225 ±(99.9%) 25.140 MB/sec [Average]
[info]   (min, avg, max) = (1682.589, 1692.225, 1699.130), stdev = 6.529
[info]   CI (99.9%): [1667.085, 1717.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5627.790 ±(99.9%) 276.014 B/op [Average]
[info]   (min, avg, max) = (5520.559, 5627.790, 5705.823), stdev = 71.680
[info]   CI (99.9%): [5351.776, 5903.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.180 ±(99.9%) 0.359 B/op [Average]
[info]   (min, avg, max) = (0.069, 0.180, 0.280), stdev = 0.093
[info]   CI (99.9%): [≈ 0, 0.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 9.000), stdev = 1.581
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson
[info] # Run progress: 28.57% complete, ETA 00:21:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 303692.595 ops/s
[info] # Warmup Iteration   2: 516525.396 ops/s
[info] # Warmup Iteration   3: 538785.645 ops/s
[info] # Warmup Iteration   4: 536758.739 ops/s
[info] # Warmup Iteration   5: 545030.883 ops/s
[info] Iteration   1: 544884.615 ops/s
[info]                  ·gc.alloc.rate:               634.469 MB/sec
[info]                  ·gc.alloc.rate.norm:          1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1887.541 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 542663.843 ops/s
[info]                  ·gc.alloc.rate:                   631.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1905.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 541387.436 ops/s
[info]                  ·gc.alloc.rate:                   630.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1917.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 543166.243 ops/s
[info]                  ·gc.alloc.rate:                   632.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1916.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.521 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.508 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 537574.883 ops/s
[info]                  ·gc.alloc.rate:               625.933 MB/sec
[info]                  ·gc.alloc.rate.norm:          1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1942.523 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson":
[info]   541935.404 ±(99.9%) 10555.584 ops/s [Average]
[info]   (min, avg, max) = (537574.883, 541935.404, 544884.615), stdev = 2741.252
[info]   CI (99.9%): [531379.820, 552490.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   631.023 ±(99.9%) 12.346 MB/sec [Average]
[info]   (min, avg, max) = (625.933, 631.023, 634.469), stdev = 3.206
[info]   CI (99.9%): [618.677, 643.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1832.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1832.001, 1832.001, 1832.001), stdev = 0.001
[info]   CI (99.9%): [1832.001, 1832.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   659.165 ±(99.9%) 15.112 MB/sec [Average]
[info]   (min, avg, max) = (653.704, 659.165, 663.695), stdev = 3.925
[info]   CI (99.9%): [644.053, 674.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1913.779 ±(99.9%) 77.286 B/op [Average]
[info]   (min, avg, max) = (1887.541, 1913.779, 1942.523), stdev = 20.071
[info]   CI (99.9%): [1836.493, 1991.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.117 ±(99.9%) 0.872 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.117, 0.521), stdev = 0.227
[info]   CI (99.9%): [≈ 0, 0.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.338 ±(99.9%) 2.526 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.338, 1.508), stdev = 0.656
[info]   CI (99.9%): [≈ 0, 2.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter
[info] # Run progress: 29.46% complete, ETA 00:21:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2579770.089 ops/s
[info] # Warmup Iteration   2: 2963775.070 ops/s
[info] # Warmup Iteration   3: 3013516.607 ops/s
[info] # Warmup Iteration   4: 2806653.732 ops/s
[info] # Warmup Iteration   5: 2916964.187 ops/s
[info] Iteration   1: 2917464.191 ops/s
[info]                  ·gc.alloc.rate:               1157.056 MB/sec
[info]                  ·gc.alloc.rate.norm:          624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 712.256 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 2977540.496 ops/s
[info]                  ·gc.alloc.rate:                   1180.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     526.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2940654.371 ops/s
[info]                  ·gc.alloc.rate:                   1166.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     714.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2967751.492 ops/s
[info]                  ·gc.alloc.rate:                   1176.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     533.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2962948.725 ops/s
[info]                  ·gc.alloc.rate:                   1175.101 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     715.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter":
[info]   2953271.855 ±(99.9%) 93008.363 ops/s [Average]
[info]   (min, avg, max) = (2917464.191, 2953271.855, 2977540.496), stdev = 24153.976
[info]   CI (99.9%): [2860263.492, 3046280.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   1171.256 ±(99.9%) 36.909 MB/sec [Average]
[info]   (min, avg, max) = (1157.056, 1171.256, 1180.901), stdev = 9.585
[info]   CI (99.9%): [1134.347, 1208.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   624.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (624.000, 624.000, 624.000), stdev = 0.001
[info]   CI (99.9%): [624.000, 624.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   1201.287 ±(99.9%) 703.218 MB/sec [Average]
[info]   (min, avg, max) = (997.207, 1201.287, 1346.690), stdev = 182.623
[info]   CI (99.9%): [498.069, 1904.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   640.480 ±(99.9%) 388.137 B/op [Average]
[info]   (min, avg, max) = (526.934, 640.480, 715.117), stdev = 100.798
[info]   CI (99.9%): [252.343, 1028.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.065 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.045), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 14.000), stdev = 4.393
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay
[info] # Run progress: 30.36% complete, ETA 00:21:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 66454.607 ops/s
[info] # Warmup Iteration   2: 151822.468 ops/s
[info] # Warmup Iteration   3: 153044.635 ops/s
[info] # Warmup Iteration   4: 156019.441 ops/s
[info] # Warmup Iteration   5: 156033.328 ops/s
[info] Iteration   1: 157246.423 ops/s
[info]                  ·gc.alloc.rate:                   1092.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              10928.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9980.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 158009.715 ops/s
[info]                  ·gc.alloc.rate:                   1097.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              10928.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13306.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 158686.287 ops/s
[info]                  ·gc.alloc.rate:                   1102.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              10928.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9973.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 158640.179 ops/s
[info]                  ·gc.alloc.rate:                   1101.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              10928.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10015.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.620 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 156639.469 ops/s
[info]                  ·gc.alloc.rate:                   1087.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              10928.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13557.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.464 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay":
[info]   157844.415 ±(99.9%) 3432.694 ops/s [Average]
[info]   (min, avg, max) = (156639.469, 157844.415, 158686.287), stdev = 891.460
[info]   CI (99.9%): [154411.721, 161277.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1096.263 ±(99.9%) 23.923 MB/sec [Average]
[info]   (min, avg, max) = (1087.874, 1096.263, 1102.158), stdev = 6.213
[info]   CI (99.9%): [1072.340, 1120.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10928.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10928.003, 10928.003, 10928.003), stdev = 0.001
[info]   CI (99.9%): [10928.002, 10928.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1139.788 ±(99.9%) 714.541 MB/sec [Average]
[info]   (min, avg, max) = (997.407, 1139.788, 1349.595), stdev = 185.564
[info]   CI (99.9%): [425.247, 1854.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11366.635 ±(99.9%) 7268.127 B/op [Average]
[info]   (min, avg, max) = (9973.130, 11366.635, 13557.066), stdev = 1887.510
[info]   CI (99.9%): [4098.508, 18634.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.146), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.708 ±(99.9%) 2.103 B/op [Average]
[info]   (min, avg, max) = (0.206, 0.708, 1.464), stdev = 0.546
[info]   CI (99.9%): [≈ 0, 2.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 9.000), stdev = 2.074
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce
[info] # Run progress: 31.25% complete, ETA 00:20:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 254365.727 ops/s
[info] # Warmup Iteration   2: 453108.232 ops/s
[info] # Warmup Iteration   3: 450649.317 ops/s
[info] # Warmup Iteration   4: 441699.234 ops/s
[info] # Warmup Iteration   5: 449016.687 ops/s
[info] Iteration   1: 452611.919 ops/s
[info]                  ·gc.alloc.rate:                   1617.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              5624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5835.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.217 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 453630.874 ops/s
[info]                  ·gc.alloc.rate:                   1621.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              5624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5849.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.217 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 457210.766 ops/s
[info]                  ·gc.alloc.rate:                   1634.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              5624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4657.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 450746.399 ops/s
[info]                  ·gc.alloc.rate:                   1611.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              5624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5917.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 451479.294 ops/s
[info]                  ·gc.alloc.rate:                   1613.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              5624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5916.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.218 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce":
[info]   453135.850 ±(99.9%) 9737.286 ops/s [Average]
[info]   (min, avg, max) = (450746.399, 453135.850, 457210.766), stdev = 2528.742
[info]   CI (99.9%): [443398.565, 462873.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1619.690 ±(99.9%) 34.877 MB/sec [Average]
[info]   (min, avg, max) = (1611.161, 1619.690, 1634.303), stdev = 9.058
[info]   CI (99.9%): [1584.812, 1654.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5624.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5624.001, 5624.001, 5624.001), stdev = 0.001
[info]   CI (99.9%): [5624.001, 5624.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1622.268 ±(99.9%) 579.558 MB/sec [Average]
[info]   (min, avg, max) = (1353.371, 1622.268, 1697.772), stdev = 150.509
[info]   CI (99.9%): [1042.710, 2201.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5635.222 ±(99.9%) 2110.155 B/op [Average]
[info]   (min, avg, max) = (4657.250, 5635.222, 5917.299), stdev = 548.000
[info]   CI (99.9%): [3525.068, 7745.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.159 ±(99.9%) 0.306 B/op [Average]
[info]   (min, avg, max) = (0.072, 0.159, 0.218), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 9.000), stdev = 1.414
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson
[info] # Run progress: 32.14% complete, ETA 00:20:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 291326.111 ops/s
[info] # Warmup Iteration   2: 901980.229 ops/s
[info] # Warmup Iteration   3: 914105.125 ops/s
[info] # Warmup Iteration   4: 907546.633 ops/s
[info] # Warmup Iteration   5: 901688.732 ops/s
[info] Iteration   1: 906319.547 ops/s
[info]                  ·gc.alloc.rate:                   1041.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              1808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1727.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.479 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.831 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 918083.775 ops/s
[info]                  ·gc.alloc.rate:                   1055.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              1808.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1710.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 908019.653 ops/s
[info]                  ·gc.alloc.rate:                   1043.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              1808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1736.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 906222.195 ops/s
[info]                  ·gc.alloc.rate:                   1041.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              1808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1744.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 912317.511 ops/s
[info]                  ·gc.alloc.rate:                   1048.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              1808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1738.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson":
[info]   910192.536 ±(99.9%) 19470.730 ops/s [Average]
[info]   (min, avg, max) = (906222.195, 910192.536, 918083.775), stdev = 5056.487
[info]   CI (99.9%): [890721.806, 929663.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1045.947 ±(99.9%) 22.358 MB/sec [Average]
[info]   (min, avg, max) = (1041.414, 1045.947, 1055.012), stdev = 5.806
[info]   CI (99.9%): [1023.589, 1068.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1808.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1808.000, 1808.000, 1808.001), stdev = 0.001
[info]   CI (99.9%): [1808.000, 1808.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1001.704 ±(99.9%) 20.127 MB/sec [Average]
[info]   (min, avg, max) = (995.241, 1001.704, 1008.220), stdev = 5.227
[info]   CI (99.9%): [981.578, 1021.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1731.567 ±(99.9%) 51.723 B/op [Average]
[info]   (min, avg, max) = (1710.154, 1731.567, 1744.671), stdev = 13.432
[info]   CI (99.9%): [1679.844, 1783.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.129 ±(99.9%) 0.759 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.129, 0.479), stdev = 0.197
[info]   CI (99.9%): [≈ 0, 0.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.224 ±(99.9%) 1.319 B/op [Average]
[info]   (min, avg, max) = (0.036, 0.224, 0.831), stdev = 0.343
[info]   CI (99.9%): [≈ 0, 1.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 7.000), stdev = 1.643
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter
[info] # Run progress: 33.04% complete, ETA 00:20:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3120800.121 ops/s
[info] # Warmup Iteration   2: 3447200.040 ops/s
[info] # Warmup Iteration   3: 3471355.645 ops/s
[info] # Warmup Iteration   4: 3361886.545 ops/s
[info] # Warmup Iteration   5: 3440002.833 ops/s
[info] Iteration   1: 3495431.937 ops/s
[info]                  ·gc.alloc.rate:                   870.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     294.846 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3455830.418 ops/s
[info]                  ·gc.alloc.rate:               860.943 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 449.447 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 3360227.995 ops/s
[info]                  ·gc.alloc.rate:                   837.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     465.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 3471213.735 ops/s
[info]                  ·gc.alloc.rate:               864.848 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 301.422 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 3445662.897 ops/s
[info]                  ·gc.alloc.rate:               858.437 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 457.161 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter":
[info]   3445673.397 ±(99.9%) 197590.036 ops/s [Average]
[info]   (min, avg, max) = (3360227.995, 3445673.397, 3495431.937), stdev = 51313.505
[info]   CI (99.9%): [3248083.360, 3643263.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   858.444 ±(99.9%) 49.197 MB/sec [Average]
[info]   (min, avg, max) = (837.172, 858.444, 870.821), stdev = 12.776
[info]   CI (99.9%): [809.247, 907.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   860.419 ±(99.9%) 704.879 MB/sec [Average]
[info]   (min, avg, max) = (654.996, 860.419, 1001.133), stdev = 183.055
[info]   CI (99.9%): [155.540, 1565.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   393.647 ±(99.9%) 336.559 B/op [Average]
[info]   (min, avg, max) = (294.846, 393.647, 465.359), stdev = 87.403
[info]   CI (99.9%): [57.088, 730.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.029), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 9.000), stdev = 2.702
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay
[info] # Run progress: 33.93% complete, ETA 00:20:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 142819.206 ops/s
[info] # Warmup Iteration   2: 239705.243 ops/s
[info] # Warmup Iteration   3: 251173.174 ops/s
[info] # Warmup Iteration   4: 246832.601 ops/s
[info] # Warmup Iteration   5: 245423.678 ops/s
[info] Iteration   1: 249720.671 ops/s
[info]                  ·gc.alloc.rate:                   1298.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6320.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 249506.280 ops/s
[info]                  ·gc.alloc.rate:                   1297.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8469.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 250841.157 ops/s
[info]                  ·gc.alloc.rate:                   1304.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8457.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.392 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 251901.321 ops/s
[info]                  ·gc.alloc.rate:                   1310.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8442.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 251235.164 ops/s
[info]                  ·gc.alloc.rate:                   1306.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.671 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8483.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.391 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay":
[info]   250640.919 ±(99.9%) 3906.124 ops/s [Average]
[info]   (min, avg, max) = (249506.280, 250640.919, 251901.321), stdev = 1014.408
[info]   CI (99.9%): [246734.794, 254547.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1303.676 ±(99.9%) 20.152 MB/sec [Average]
[info]   (min, avg, max) = (1297.809, 1303.676, 1310.147), stdev = 5.233
[info]   CI (99.9%): [1283.524, 1323.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8184.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8184.002, 8184.002, 8184.002), stdev = 0.001
[info]   CI (99.9%): [8184.002, 8184.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1280.138 ±(99.9%) 596.341 MB/sec [Average]
[info]   (min, avg, max) = (1003.209, 1280.138, 1354.671), stdev = 154.868
[info]   CI (99.9%): [683.797, 1876.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8034.698 ±(99.9%) 3689.828 B/op [Average]
[info]   (min, avg, max) = (6320.770, 8034.698, 8483.820), stdev = 958.237
[info]   CI (99.9%): [4344.871, 11724.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.010, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.340 ±(99.9%) 0.276 B/op [Average]
[info]   (min, avg, max) = (0.260, 0.340, 0.394), stdev = 0.072
[info]   CI (99.9%): [0.063, 0.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce
[info] # Run progress: 34.82% complete, ETA 00:19:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 307528.195 ops/s
[info] # Warmup Iteration   2: 501314.628 ops/s
[info] # Warmup Iteration   3: 506392.991 ops/s
[info] # Warmup Iteration   4: 501156.279 ops/s
[info] # Warmup Iteration   5: 511876.798 ops/s
[info] Iteration   1: 514198.231 ops/s
[info]                  ·gc.alloc.rate:                   1981.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6195.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 510461.509 ops/s
[info]                  ·gc.alloc.rate:                   1967.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6262.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.385 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 512308.870 ops/s
[info]                  ·gc.alloc.rate:                   1974.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5210.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 506743.455 ops/s
[info]                  ·gc.alloc.rate:                   1953.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6330.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 500452.186 ops/s
[info]                  ·gc.alloc.rate:                   1928.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6412.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce":
[info]   508832.850 ±(99.9%) 20925.306 ops/s [Average]
[info]   (min, avg, max) = (500452.186, 508832.850, 514198.231), stdev = 5434.235
[info]   CI (99.9%): [487907.545, 529758.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate":
[info]   1961.082 ±(99.9%) 80.850 MB/sec [Average]
[info]   (min, avg, max) = (1928.662, 1961.082, 1981.787), stdev = 20.997
[info]   CI (99.9%): [1880.232, 2041.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   6064.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6064.001, 6064.001, 6064.001), stdev = 0.001
[info]   CI (99.9%): [6064.001, 6064.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1966.332 ±(99.9%) 581.150 MB/sec [Average]
[info]   (min, avg, max) = (1696.568, 1966.332, 2039.423), stdev = 150.923
[info]   CI (99.9%): [1385.181, 2547.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   6082.365 ±(99.9%) 1902.258 B/op [Average]
[info]   (min, avg, max) = (5210.453, 6082.365, 6412.252), stdev = 494.010
[info]   CI (99.9%): [4180.107, 7984.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.083, 0.125), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.257 ±(99.9%) 0.490 B/op [Average]
[info]   (min, avg, max) = (0.128, 0.257, 0.385), stdev = 0.127
[info]   CI (99.9%): [≈ 0, 0.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 7.600, 9.000), stdev = 0.894
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter
[info] # Run progress: 35.71% complete, ETA 00:19:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1666352.911 ops/s
[info] # Warmup Iteration   2: 2046404.121 ops/s
[info] # Warmup Iteration   3: 2075679.620 ops/s
[info] # Warmup Iteration   4: 2109121.792 ops/s
[info] # Warmup Iteration   5: 2064630.592 ops/s
[info] Iteration   1: 2083512.589 ops/s
[info]                  ·gc.alloc.rate:                   1345.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1002.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2083511.521 ops/s
[info]                  ·gc.alloc.rate:                   1345.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1008.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2073024.073 ops/s
[info]                  ·gc.alloc.rate:                   1338.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1018.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2097130.395 ops/s
[info]                  ·gc.alloc.rate:                   1354.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1010.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2106327.697 ops/s
[info]                  ·gc.alloc.rate:                   1360.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1009.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter":
[info]   2088701.255 ±(99.9%) 50256.860 ops/s [Average]
[info]   (min, avg, max) = (2073024.073, 2088701.255, 2106327.697), stdev = 13051.547
[info]   CI (99.9%): [2038444.395, 2138958.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate":
[info]   1348.764 ±(99.9%) 32.486 MB/sec [Average]
[info]   (min, avg, max) = (1338.661, 1348.764, 1360.181), stdev = 8.436
[info]   CI (99.9%): [1316.279, 1381.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   1340.881 ±(99.9%) 36.974 MB/sec [Average]
[info]   (min, avg, max) = (1327.303, 1340.881, 1351.707), stdev = 9.602
[info]   CI (99.9%): [1303.906, 1377.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1010.070 ±(99.9%) 22.298 B/op [Average]
[info]   (min, avg, max) = (1002.352, 1010.070, 1018.577), stdev = 5.791
[info]   CI (99.9%): [987.772, 1032.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.050 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.034, 0.047), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay
[info] # Run progress: 36.61% complete, ETA 00:19:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64257.115 ops/s
[info] # Warmup Iteration   2: 157294.526 ops/s
[info] # Warmup Iteration   3: 162353.309 ops/s
[info] # Warmup Iteration   4: 160979.065 ops/s
[info] # Warmup Iteration   5: 160853.708 ops/s
[info] Iteration   1: 158854.799 ops/s
[info]                  ·gc.alloc.rate:                   1136.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13198.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.412 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 163242.783 ops/s
[info]                  ·gc.alloc.rate:                   1167.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9674.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.602 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 160738.700 ops/s
[info]                  ·gc.alloc.rate:                   1149.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9861.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 161549.243 ops/s
[info]                  ·gc.alloc.rate:                   1155.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13125.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.608 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 162754.465 ops/s
[info]                  ·gc.alloc.rate:               1164.320 MB/sec
[info]                  ·gc.alloc.rate.norm:          11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1013.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9794.689 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay":
[info]   161427.998 ±(99.9%) 6714.972 ops/s [Average]
[info]   (min, avg, max) = (158854.799, 161427.998, 163242.783), stdev = 1743.857
[info]   CI (99.9%): [154713.026, 168142.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate":
[info]   1154.826 ±(99.9%) 48.042 MB/sec [Average]
[info]   (min, avg, max) = (1136.410, 1154.826, 1167.815), stdev = 12.476
[info]   CI (99.9%): [1106.784, 1202.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   11256.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11256.003, 11256.003, 11256.003), stdev = 0.001
[info]   CI (99.9%): [11256.003, 11256.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1140.910 ±(99.9%) 700.466 MB/sec [Average]
[info]   (min, avg, max) = (1003.782, 1140.910, 1347.581), stdev = 181.909
[info]   CI (99.9%): [440.445, 1841.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11131.071 ±(99.9%) 7144.439 B/op [Average]
[info]   (min, avg, max) = (9674.964, 11131.071, 13198.683), stdev = 1855.388
[info]   CI (99.9%): [3986.632, 18275.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.365 ±(99.9%) 1.013 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.365, 0.608), stdev = 0.263
[info]   CI (99.9%): [≈ 0, 1.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson
[info] # Run progress: 37.50% complete, ETA 00:18:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 74393.037 ops/s
[info] # Warmup Iteration   2: 681867.381 ops/s
[info] # Warmup Iteration   3: 666931.172 ops/s
[info] # Warmup Iteration   4: 670084.858 ops/s
[info] # Warmup Iteration   5: 666428.378 ops/s
[info] Iteration   1: 669139.792 ops/s
[info]                  ·gc.alloc.rate:                   867.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1549.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 663878.719 ops/s
[info]                  ·gc.alloc.rate:                   860.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2352.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.521 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.234 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 663691.744 ops/s
[info]                  ·gc.alloc.rate:                   860.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2364.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 674128.349 ops/s
[info]                  ·gc.alloc.rate:               874.092 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1555.222 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 666315.461 ops/s
[info]                  ·gc.alloc.rate:                   863.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2367.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson":
[info]   667430.813 ±(99.9%) 16742.512 ops/s [Average]
[info]   (min, avg, max) = (663691.744, 667430.813, 674128.349), stdev = 4347.977
[info]   CI (99.9%): [650688.301, 684173.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   865.379 ±(99.9%) 21.726 MB/sec [Average]
[info]   (min, avg, max) = (860.550, 865.379, 874.092), stdev = 5.642
[info]   CI (99.9%): [843.653, 887.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   863.521 ±(99.9%) 706.152 MB/sec [Average]
[info]   (min, avg, max) = (659.005, 863.521, 1002.500), stdev = 183.385
[info]   CI (99.9%): [157.369, 1569.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2037.646 ±(99.9%) 1705.782 B/op [Average]
[info]   (min, avg, max) = (1549.623, 2037.646, 2367.157), stdev = 442.986
[info]   CI (99.9%): [331.864, 3743.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.133 ±(99.9%) 0.838 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.133, 0.521), stdev = 0.218
[info]   CI (99.9%): [≈ 0, 0.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.316 ±(99.9%) 1.987 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.316, 1.234), stdev = 0.516
[info]   CI (99.9%): [≈ 0, 2.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter
[info] # Run progress: 38.39% complete, ETA 00:18:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2068761.619 ops/s
[info] # Warmup Iteration   2: 2379576.215 ops/s
[info] # Warmup Iteration   3: 2383270.239 ops/s
[info] # Warmup Iteration   4: 2343605.260 ops/s
[info] # Warmup Iteration   5: 2415082.983 ops/s
[info] Iteration   1: 2442140.813 ops/s
[info]                  ·gc.alloc.rate:                   1154.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     850.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2455851.344 ops/s
[info]                  ·gc.alloc.rate:                   1161.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     638.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2395652.170 ops/s
[info]                  ·gc.alloc.rate:                   1132.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     877.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2422215.122 ops/s
[info]                  ·gc.alloc.rate:                   1145.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     653.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2400889.711 ops/s
[info]                  ·gc.alloc.rate:                   1135.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     882.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter":
[info]   2423349.832 ±(99.9%) 99715.216 ops/s [Average]
[info]   (min, avg, max) = (2395652.170, 2423349.832, 2455851.344), stdev = 25895.725
[info]   CI (99.9%): [2323634.616, 2523065.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1145.888 ±(99.9%) 47.224 MB/sec [Average]
[info]   (min, avg, max) = (1132.772, 1145.888, 1161.272), stdev = 12.264
[info]   CI (99.9%): [1098.663, 1193.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1200.998 ±(99.9%) 703.455 MB/sec [Average]
[info]   (min, avg, max) = (996.536, 1200.998, 1346.025), stdev = 182.685
[info]   CI (99.9%): [497.543, 1904.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   780.450 ±(99.9%) 475.568 B/op [Average]
[info]   (min, avg, max) = (638.458, 780.450, 882.111), stdev = 123.504
[info]   CI (99.9%): [304.882, 1256.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.024, 0.040), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay
[info] # Run progress: 39.29% complete, ETA 00:18:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 121438.630 ops/s
[info] # Warmup Iteration   2: 220693.539 ops/s
[info] # Warmup Iteration   3: 223934.084 ops/s
[info] # Warmup Iteration   4: 227603.521 ops/s
[info] # Warmup Iteration   5: 223599.165 ops/s
[info] Iteration   1: 222914.618 ops/s
[info]                  ·gc.alloc.rate:                   1179.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              8328.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9420.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.441 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 226458.063 ops/s
[info]                  ·gc.alloc.rate:                   1198.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              8328.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6983.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.289 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 227695.432 ops/s
[info]                  ·gc.alloc.rate:                   1205.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              8328.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9296.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.432 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 225791.084 ops/s
[info]                  ·gc.alloc.rate:                   1195.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              8328.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7050.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 224754.020 ops/s
[info]                  ·gc.alloc.rate:                   1189.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              8328.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9469.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay":
[info]   225522.643 ±(99.9%) 6958.023 ops/s [Average]
[info]   (min, avg, max) = (222914.618, 225522.643, 227695.432), stdev = 1806.976
[info]   CI (99.9%): [218564.620, 232480.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1193.738 ±(99.9%) 36.822 MB/sec [Average]
[info]   (min, avg, max) = (1179.931, 1193.738, 1205.230), stdev = 9.563
[info]   CI (99.9%): [1156.916, 1230.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8328.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8328.002, 8328.002, 8328.002), stdev = 0.001
[info]   CI (99.9%): [8328.002, 8328.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1209.968 ±(99.9%) 708.631 MB/sec [Average]
[info]   (min, avg, max) = (1005.199, 1209.968, 1352.733), stdev = 184.029
[info]   CI (99.9%): [501.336, 1918.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8444.077 ±(99.9%) 5022.590 B/op [Average]
[info]   (min, avg, max) = (6983.562, 8444.077, 9469.324), stdev = 1304.351
[info]   CI (99.9%): [3421.487, 13466.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.291 ±(99.9%) 0.560 B/op [Average]
[info]   (min, avg, max) = (0.145, 0.291, 0.441), stdev = 0.145
[info]   CI (99.9%): [≈ 0, 0.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.581
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce
[info] # Run progress: 40.18% complete, ETA 00:18:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 115514.500 ops/s
[info] # Warmup Iteration   2: 453633.420 ops/s
[info] # Warmup Iteration   3: 458578.556 ops/s
[info] # Warmup Iteration   4: 456321.272 ops/s
[info] # Warmup Iteration   5: 459130.503 ops/s
[info] Iteration   1: 458561.055 ops/s
[info]                  ·gc.alloc.rate:                   1357.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4576.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 463826.322 ops/s
[info]                  ·gc.alloc.rate:                   1372.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1677.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5691.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.212 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 457894.423 ops/s
[info]                  ·gc.alloc.rate:                   1354.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4629.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 454163.950 ops/s
[info]                  ·gc.alloc.rate:                   1344.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4683.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.289 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 460029.757 ops/s
[info]                  ·gc.alloc.rate:                   1361.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4633.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.285 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce":
[info]   458895.101 ±(99.9%) 13491.152 ops/s [Average]
[info]   (min, avg, max) = (454163.950, 458895.101, 463826.322), stdev = 3503.609
[info]   CI (99.9%): [445403.949, 472386.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1357.937 ±(99.9%) 39.682 MB/sec [Average]
[info]   (min, avg, max) = (1344.015, 1357.937, 1372.456), stdev = 10.305
[info]   CI (99.9%): [1318.255, 1397.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1413.104 ±(99.9%) 570.339 MB/sec [Average]
[info]   (min, avg, max) = (1333.976, 1413.104, 1677.680), stdev = 148.115
[info]   CI (99.9%): [842.765, 1983.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4842.983 ±(99.9%) 1832.185 B/op [Average]
[info]   (min, avg, max) = (4576.948, 4842.983, 5691.461), stdev = 475.813
[info]   CI (99.9%): [3010.798, 6675.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.243 ±(99.9%) 0.249 B/op [Average]
[info]   (min, avg, max) = (0.143, 0.243, 0.289), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 9.000), stdev = 1.871
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson
[info] # Run progress: 41.07% complete, ETA 00:17:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 624967.415 ops/s
[info] # Warmup Iteration   2: 985813.568 ops/s
[info] # Warmup Iteration   3: 984974.398 ops/s
[info] # Warmup Iteration   4: 1001899.909 ops/s
[info] # Warmup Iteration   5: 1006148.900 ops/s
[info] Iteration   1: 995023.076 ops/s
[info]                  ·gc.alloc.rate:                   753.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1562.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1005462.136 ops/s
[info]                  ·gc.alloc.rate:                   761.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1035.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1002860.995 ops/s
[info]                  ·gc.alloc.rate:                   759.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1042.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 992700.678 ops/s
[info]                  ·gc.alloc.rate:                   752.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1584.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1006363.380 ops/s
[info]                  ·gc.alloc.rate:               762.435 MB/sec
[info]                  ·gc.alloc.rate.norm:          1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1045.963 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson":
[info]   1000482.053 ±(99.9%) 24001.038 ops/s [Average]
[info]   (min, avg, max) = (992700.678, 1000482.053, 1006363.380), stdev = 6232.993
[info]   CI (99.9%): [976481.015, 1024483.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   757.986 ±(99.9%) 18.139 MB/sec [Average]
[info]   (min, avg, max) = (752.107, 757.986, 762.435), stdev = 4.711
[info]   CI (99.9%): [739.847, 776.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1192.000, 1192.000, 1192.000), stdev = 0.001
[info]   CI (99.9%): [1192.000, 1192.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   796.588 ±(99.9%) 693.949 MB/sec [Average]
[info]   (min, avg, max) = (661.703, 796.588, 999.934), stdev = 180.216
[info]   CI (99.9%): [102.639, 1490.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1254.115 ±(99.9%) 1122.974 B/op [Average]
[info]   (min, avg, max) = (1035.423, 1254.115, 1584.776), stdev = 291.633
[info]   CI (99.9%): [131.140, 2377.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.193 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.085 ±(99.9%) 0.303 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.085, 0.196), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 6.000), stdev = 1.643
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter
[info] # Run progress: 41.96% complete, ETA 00:17:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3297938.492 ops/s
[info] # Warmup Iteration   2: 3559517.438 ops/s
[info] # Warmup Iteration   3: 3595763.963 ops/s
[info] # Warmup Iteration   4: 3619618.625 ops/s
[info] # Warmup Iteration   5: 3633252.368 ops/s
[info] Iteration   1: 3643754.539 ops/s
[info]                  ·gc.alloc.rate:      111.165 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3630807.259 ops/s
[info]                  ·gc.alloc.rate:               110.768 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 110.884 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 3657959.884 ops/s
[info]                  ·gc.alloc.rate:                   111.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          63.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.426 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         25.000 ms
[info] Iteration   4: 3235575.778 ops/s
[info]                  ·gc.alloc.rate:      98.721 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3645890.306 ops/s
[info]                  ·gc.alloc.rate:               111.229 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 110.426 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter":
[info]   3562797.553 ±(99.9%) 705345.370 ops/s [Average]
[info]   (min, avg, max) = (3235575.778, 3562797.553, 3657959.884), stdev = 183175.953
[info]   CI (99.9%): [2857452.183, 4268142.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   108.696 ±(99.9%) 21.503 MB/sec [Average]
[info]   (min, avg, max) = (98.721, 108.696, 111.599), stdev = 5.584
[info]   CI (99.9%): [87.193, 130.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   115.150 ±(99.9%) 504.822 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 115.150, 255.886), stdev = 131.101
[info]   CI (99.9%): [≈ 0, 619.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   49.766 ±(99.9%) 218.363 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 49.766, 110.884), stdev = 56.708
[info]   CI (99.9%): [≈ 0, 268.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.485 ±(99.9%) 4.178 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.485, 2.426), stdev = 1.085
[info]   CI (99.9%): [≈ 0, 4.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.209 ±(99.9%) 1.797 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.209, 1.043), stdev = 0.467
[info]   CI (99.9%): [≈ 0, 2.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 0.837
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 5.800, 25.000), stdev = 10.803
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay
[info] # Run progress: 42.86% complete, ETA 00:17:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 94649.517 ops/s
[info] # Warmup Iteration   2: 161744.731 ops/s
[info] # Warmup Iteration   3: 164148.718 ops/s
[info] # Warmup Iteration   4: 162686.839 ops/s
[info] # Warmup Iteration   5: 165013.946 ops/s
[info] Iteration   1: 166063.327 ops/s
[info]                  ·gc.alloc.rate:                   1130.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12626.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.592 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 162311.882 ops/s
[info]                  ·gc.alloc.rate:                   1105.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9730.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 165049.211 ops/s
[info]                  ·gc.alloc.rate:                   1123.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9610.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.596 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 164237.563 ops/s
[info]                  ·gc.alloc.rate:                   1118.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12916.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.199 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 164919.893 ops/s
[info]                  ·gc.alloc.rate:                   1122.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1013.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9666.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.397 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay":
[info]   164516.375 ±(99.9%) 5369.311 ops/s [Average]
[info]   (min, avg, max) = (162311.882, 164516.375, 166063.327), stdev = 1394.393
[info]   CI (99.9%): [159147.064, 169885.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1120.062 ±(99.9%) 36.641 MB/sec [Average]
[info]   (min, avg, max) = (1105.027, 1120.062, 1130.616), stdev = 9.515
[info]   CI (99.9%): [1083.421, 1156.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10712.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10712.003, 10712.003, 10712.003), stdev = 0.001
[info]   CI (99.9%): [10712.003, 10712.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1141.246 ±(99.9%) 700.853 MB/sec [Average]
[info]   (min, avg, max) = (1003.821, 1141.246, 1348.296), stdev = 182.009
[info]   CI (99.9%): [440.394, 1842.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10910.349 ±(99.9%) 6557.295 B/op [Average]
[info]   (min, avg, max) = (9610.872, 10910.349, 12916.894), stdev = 1702.909
[info]   CI (99.9%): [4353.054, 17467.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.397 ±(99.9%) 0.757 B/op [Average]
[info]   (min, avg, max) = (0.199, 0.397, 0.596), stdev = 0.197
[info]   CI (99.9%): [≈ 0, 1.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce
[info] # Run progress: 43.75% complete, ETA 00:17:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 98360.064 ops/s
[info] # Warmup Iteration   2: 115685.823 ops/s
[info] # Warmup Iteration   3: 117386.250 ops/s
[info] # Warmup Iteration   4: 117214.327 ops/s
[info] # Warmup Iteration   5: 117050.328 ops/s
[info] Iteration   1: 117517.878 ops/s
[info]                  ·gc.alloc.rate:                   1068.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              14304.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17815.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 118058.355 ops/s
[info]                  ·gc.alloc.rate:                   1073.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              14304.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13369.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.555 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 114512.462 ops/s
[info]                  ·gc.alloc.rate:                   1040.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              14304.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13837.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.572 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 116469.291 ops/s
[info]                  ·gc.alloc.rate:                   1058.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              14304.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13641.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.563 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 116186.565 ops/s
[info]                  ·gc.alloc.rate:               1056.235 MB/sec
[info]                  ·gc.alloc.rate.norm:          14304.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1012.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13706.817 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce":
[info]   116548.910 ±(99.9%) 5273.442 ops/s [Average]
[info]   (min, avg, max) = (114512.462, 116548.910, 118058.355), stdev = 1369.496
[info]   CI (99.9%): [111275.468, 121822.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.alloc.rate":
[info]   1059.575 ±(99.9%) 48.131 MB/sec [Average]
[info]   (min, avg, max) = (1040.963, 1059.575, 1073.310), stdev = 12.500
[info]   CI (99.9%): [1011.444, 1107.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.alloc.rate.norm":
[info]   14304.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (14304.004, 14304.004, 14304.004), stdev = 0.001
[info]   CI (99.9%): [14304.003, 14304.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Eden_Space":
[info]   1072.606 ±(99.9%) 555.738 MB/sec [Average]
[info]   (min, avg, max) = (1003.223, 1072.606, 1330.710), stdev = 144.323
[info]   CI (99.9%): [516.868, 1628.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   14474.372 ±(99.9%) 7221.825 B/op [Average]
[info]   (min, avg, max) = (13369.959, 14474.372, 17815.417), stdev = 1875.485
[info]   CI (99.9%): [7252.547, 21696.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.394 ±(99.9%) 0.972 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.394, 0.572), stdev = 0.252
[info]   CI (99.9%): [≈ 0, 1.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson
[info] # Run progress: 44.64% complete, ETA 00:16:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 483173.196 ops/s
[info] # Warmup Iteration   2: 581313.469 ops/s
[info] # Warmup Iteration   3: 575135.180 ops/s
[info] # Warmup Iteration   4: 581126.854 ops/s
[info] # Warmup Iteration   5: 569831.233 ops/s
[info] Iteration   1: 581746.978 ops/s
[info]                  ·gc.alloc.rate:                   1245.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              3368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3611.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.225 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 587338.981 ops/s
[info]                  ·gc.alloc.rate:                   1257.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              3368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3594.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 587339.419 ops/s
[info]                  ·gc.alloc.rate:                   1257.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              3368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2706.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 587964.545 ops/s
[info]                  ·gc.alloc.rate:                   1258.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              3368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3612.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 587255.555 ops/s
[info]                  ·gc.alloc.rate:                   1257.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              3368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3626.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson":
[info]   586329.096 ±(99.9%) 9924.180 ops/s [Average]
[info]   (min, avg, max) = (581746.978, 586329.096, 587964.545), stdev = 2577.278
[info]   CI (99.9%): [576404.916, 596253.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.alloc.rate":
[info]   1255.086 ±(99.9%) 21.187 MB/sec [Average]
[info]   (min, avg, max) = (1245.302, 1255.086, 1258.568), stdev = 5.502
[info]   CI (99.9%): [1233.899, 1276.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.alloc.rate.norm":
[info]   3368.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3368.001, 3368.001, 3368.001), stdev = 0.001
[info]   CI (99.9%): [3368.001, 3368.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Eden_Space":
[info]   1278.226 ±(99.9%) 577.779 MB/sec [Average]
[info]   (min, avg, max) = (1010.113, 1278.226, 1353.662), stdev = 150.047
[info]   CI (99.9%): [700.446, 1856.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3430.398 ±(99.9%) 1559.698 B/op [Average]
[info]   (min, avg, max) = (2706.104, 3430.398, 3626.688), stdev = 405.049
[info]   CI (99.9%): [1870.700, 4990.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.123 ±(99.9%) 0.283 B/op [Average]
[info]   (min, avg, max) = (0.056, 0.123, 0.225), stdev = 0.073
[info]   CI (99.9%): [≈ 0, 0.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter
[info] # Run progress: 45.54% complete, ETA 00:16:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 695222.590 ops/s
[info] # Warmup Iteration   2: 738777.584 ops/s
[info] # Warmup Iteration   3: 713997.307 ops/s
[info] # Warmup Iteration   4: 739594.141 ops/s
[info] # Warmup Iteration   5: 739218.174 ops/s
[info] Iteration   1: 737586.388 ops/s
[info]                  ·gc.alloc.rate:                   1241.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2828.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 735487.075 ops/s
[info]                  ·gc.alloc.rate:                   1237.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2138.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 732146.899 ops/s
[info]                  ·gc.alloc.rate:                   1232.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2878.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 732506.900 ops/s
[info]                  ·gc.alloc.rate:                   1232.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2888.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 736322.412 ops/s
[info]                  ·gc.alloc.rate:                   1239.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2162.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter":
[info]   734809.935 ±(99.9%) 9203.468 ops/s [Average]
[info]   (min, avg, max) = (732146.899, 734809.935, 737586.388), stdev = 2390.111
[info]   CI (99.9%): [725606.467, 744013.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.alloc.rate":
[info]   1236.634 ±(99.9%) 15.372 MB/sec [Average]
[info]   (min, avg, max) = (1232.204, 1236.634, 1241.291), stdev = 3.992
[info]   CI (99.9%): [1221.263, 1252.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.alloc.rate.norm":
[info]   2648.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2648.001, 2648.001, 2648.001), stdev = 0.001
[info]   CI (99.9%): [2648.001, 2648.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   1204.307 ±(99.9%) 698.567 MB/sec [Average]
[info]   (min, avg, max) = (999.802, 1204.307, 1344.657), stdev = 181.416
[info]   CI (99.9%): [505.740, 1902.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   2579.248 ±(99.9%) 1510.017 B/op [Average]
[info]   (min, avg, max) = (2138.863, 2579.248, 2888.339), stdev = 392.147
[info]   CI (99.9%): [1069.231, 4089.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.001 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.021, 0.021), stdev = 0.001
[info]   CI (99.9%): [0.021, 0.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.045 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.044, 0.045, 0.045), stdev = 0.001
[info]   CI (99.9%): [0.044, 0.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 8.000), stdev = 1.643
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay
[info] # Run progress: 46.43% complete, ETA 00:16:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 183497.358 ops/s
[info] # Warmup Iteration   2: 218229.556 ops/s
[info] # Warmup Iteration   3: 217521.878 ops/s
[info] # Warmup Iteration   4: 218863.092 ops/s
[info] # Warmup Iteration   5: 214006.999 ops/s
[info] Iteration   1: 215678.540 ops/s
[info]                  ·gc.alloc.rate:                   2678.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              19536.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2716.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19813.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.456 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 217503.840 ops/s
[info]                  ·gc.alloc.rate:                   2700.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              19536.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2719.709 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19675.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.602 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 218026.538 ops/s
[info]                  ·gc.alloc.rate:                   2706.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              19536.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2723.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19656.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.601 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 214038.384 ops/s
[info]                  ·gc.alloc.rate:                   2657.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              19536.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2723.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20023.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.459 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 219393.876 ops/s
[info]                  ·gc.alloc.rate:                   2723.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              19536.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2723.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19535.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.299 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay":
[info]   216928.235 ±(99.9%) 8061.090 ops/s [Average]
[info]   (min, avg, max) = (214038.384, 216928.235, 219393.876), stdev = 2093.440
[info]   CI (99.9%): [208867.145, 224989.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.alloc.rate":
[info]   2693.403 ±(99.9%) 99.808 MB/sec [Average]
[info]   (min, avg, max) = (2657.560, 2693.403, 2723.985), stdev = 25.920
[info]   CI (99.9%): [2593.595, 2793.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.alloc.rate.norm":
[info]   19536.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (19536.002, 19536.002, 19536.002), stdev = 0.001
[info]   CI (99.9%): [19536.002, 19536.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Eden_Space":
[info]   2721.447 ±(99.9%) 13.337 MB/sec [Average]
[info]   (min, avg, max) = (2716.125, 2721.447, 2723.894), stdev = 3.464
[info]   CI (99.9%): [2708.109, 2734.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Eden_Space.norm":
[info]   19740.832 ±(99.9%) 717.753 B/op [Average]
[info]   (min, avg, max) = (19535.062, 19740.832, 20023.630), stdev = 186.398
[info]   CI (99.9%): [19023.079, 20458.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.483 ±(99.9%) 0.485 B/op [Average]
[info]   (min, avg, max) = (0.299, 0.483, 0.602), stdev = 0.126
[info]   CI (99.9%): [≈ 0, 0.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.count":
[info]   40.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (8.000, 8.000, 8.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 12.200, 15.000), stdev = 2.588
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce
[info] # Run progress: 47.32% complete, ETA 00:15:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3237.458 ops/s
[info] # Warmup Iteration   2: 5824.981 ops/s
[info] # Warmup Iteration   3: 7242.416 ops/s
[info] # Warmup Iteration   4: 7889.707 ops/s
[info] # Warmup Iteration   5: 7851.127 ops/s
[info] Iteration   1: 8054.991 ops/s
[info]                  ·gc.alloc.rate:                   1141.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              223056.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     194110.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.269 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.587 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 8044.427 ops/s
[info]                  ·gc.alloc.rate:                   1140.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              223056.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     260449.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.290 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 8065.570 ops/s
[info]                  ·gc.alloc.rate:                   1143.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              223056.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     195754.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.124 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 8017.999 ops/s
[info]                  ·gc.alloc.rate:               1136.863 MB/sec
[info]                  ·gc.alloc.rate.norm:          223070.082 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 197621.275 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 8018.949 ops/s
[info]                  ·gc.alloc.rate:                   1136.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              223096.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     264301.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.040 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.886 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce":
[info]   8040.387 ±(99.9%) 82.241 ops/s [Average]
[info]   (min, avg, max) = (8017.999, 8040.387, 8065.570), stdev = 21.358
[info]   CI (99.9%): [7958.147, 8122.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate":
[info]   1139.968 ±(99.9%) 11.385 MB/sec [Average]
[info]   (min, avg, max) = (1136.863, 1139.968, 1143.450), stdev = 2.957
[info]   CI (99.9%): [1128.583, 1151.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm":
[info]   223066.860 ±(99.9%) 67.053 B/op [Average]
[info]   (min, avg, max) = (223056.054, 223066.860, 223096.054), stdev = 17.413
[info]   CI (99.9%): [222999.807, 223133.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   1136.641 ±(99.9%) 713.203 MB/sec [Average]
[info]   (min, avg, max) = (993.787, 1136.641, 1346.998), stdev = 185.216
[info]   CI (99.9%): [423.439, 1849.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   222447.641 ±(99.9%) 140531.531 B/op [Average]
[info]   (min, avg, max) = (194110.848, 222447.641, 264301.295), stdev = 36495.592
[info]   CI (99.9%): [81916.110, 362979.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.087 ±(99.9%) 0.409 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.087, 0.269), stdev = 0.106
[info]   CI (99.9%): [≈ 0, 0.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   16.978 ±(99.9%) 79.798 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16.978, 52.587), stdev = 20.723
[info]   CI (99.9%): [≈ 0, 96.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson
[info] # Run progress: 48.21% complete, ETA 00:15:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3971.293 ops/s
[info] # Warmup Iteration   2: 11131.216 ops/s
[info] # Warmup Iteration   3: 11811.349 ops/s
[info] # Warmup Iteration   4: 11705.474 ops/s
[info] # Warmup Iteration   5: 11722.141 ops/s
[info] Iteration   1: 11729.598 ops/s
[info]                  ·gc.alloc.rate:               185.481 MB/sec
[info]                  ·gc.alloc.rate.norm:          24880.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34320.933 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 11760.302 ops/s
[info]                  ·gc.alloc.rate:      185.987 MB/sec
[info]                  ·gc.alloc.rate.norm: 24880.037 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 11776.186 ops/s
[info]                  ·gc.alloc.rate:               186.232 MB/sec
[info]                  ·gc.alloc.rate.norm:          24880.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34183.987 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 11776.113 ops/s
[info]                  ·gc.alloc.rate:      186.223 MB/sec
[info]                  ·gc.alloc.rate.norm: 24880.037 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 11731.714 ops/s
[info]                  ·gc.alloc.rate:               185.530 MB/sec
[info]                  ·gc.alloc.rate.norm:          24880.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 43340.665 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson":
[info]   11754.783 ±(99.9%) 88.439 ops/s [Average]
[info]   (min, avg, max) = (11729.598, 11754.783, 11776.186), stdev = 22.967
[info]   CI (99.9%): [11666.343, 11843.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate":
[info]   185.890 ±(99.9%) 1.408 MB/sec [Average]
[info]   (min, avg, max) = (185.481, 185.890, 186.232), stdev = 0.366
[info]   CI (99.9%): [184.483, 187.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   24880.040 ±(99.9%) 0.028 B/op [Average]
[info]   (min, avg, max) = (24880.037, 24880.040, 24880.053), stdev = 0.007
[info]   CI (99.9%): [24880.012, 24880.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   166.985 ±(99.9%) 596.441 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 166.985, 323.190), stdev = 154.894
[info]   CI (99.9%): [≈ 0, 763.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   22369.117 ±(99.9%) 79918.203 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22369.117, 43340.665), stdev = 20754.504
[info]   CI (99.9%): [≈ 0, 102287.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter
[info] # Run progress: 49.11% complete, ETA 00:15:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8096.374 ops/s
[info] # Warmup Iteration   2: 20251.477 ops/s
[info] # Warmup Iteration   3: 23172.141 ops/s
[info] # Warmup Iteration   4: 23086.259 ops/s
[info] # Warmup Iteration   5: 23021.639 ops/s
[info] Iteration   1: 23079.349 ops/s
[info]                  ·gc.alloc.rate:               247.124 MB/sec
[info]                  ·gc.alloc.rate.norm:          16846.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17443.711 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 23460.933 ops/s
[info]                  ·gc.alloc.rate:      251.206 MB/sec
[info]                  ·gc.alloc.rate.norm: 16848.018 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 23156.117 ops/s
[info]                  ·gc.alloc.rate:               247.953 MB/sec
[info]                  ·gc.alloc.rate.norm:          16848.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22004.747 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 23255.213 ops/s
[info]                  ·gc.alloc.rate:                   249.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              16848.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21910.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.409 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 23339.094 ops/s
[info]                  ·gc.alloc.rate:               249.890 MB/sec
[info]                  ·gc.alloc.rate.norm:          16848.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21988.517 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter":
[info]   23258.141 ±(99.9%) 577.796 ops/s [Average]
[info]   (min, avg, max) = (23079.349, 23258.141, 23460.933), stdev = 150.052
[info]   CI (99.9%): [22680.345, 23835.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate":
[info]   249.037 ±(99.9%) 6.170 MB/sec [Average]
[info]   (min, avg, max) = (247.124, 249.037, 251.206), stdev = 1.602
[info]   CI (99.9%): [242.867, 255.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   16847.737 ±(99.9%) 2.428 B/op [Average]
[info]   (min, avg, max) = (16846.609, 16847.737, 16848.019), stdev = 0.630
[info]   CI (99.9%): [16845.309, 16850.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   245.938 ±(99.9%) 541.670 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 245.938, 326.135), stdev = 140.670
[info]   CI (99.9%): [≈ 0, 787.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   16669.423 ±(99.9%) 36666.782 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16669.423, 22004.747), stdev = 9522.247
[info]   CI (99.9%): [≈ 0, 53336.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.282 ±(99.9%) 2.426 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.282, 1.409), stdev = 0.630
[info]   CI (99.9%): [≈ 0, 2.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay
[info] # Run progress: 50.00% complete, ETA 00:15:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1419.060 ops/s
[info] # Warmup Iteration   2: 3572.928 ops/s
[info] # Warmup Iteration   3: 3698.629 ops/s
[info] # Warmup Iteration   4: 3750.298 ops/s
[info] # Warmup Iteration   5: 3743.458 ops/s
[info] Iteration   1: 3714.601 ops/s
[info]                  ·gc.alloc.rate:                   1089.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              461416.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     562664.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88.181 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3754.358 ops/s
[info]                  ·gc.alloc.rate:                   1101.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              461416.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     419709.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.453 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3751.735 ops/s
[info]                  ·gc.alloc.rate:                   1100.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              461416.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     421330.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.462 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 3698.398 ops/s
[info]                  ·gc.alloc.rate:                   1084.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              461416.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     428782.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.856 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3712.767 ops/s
[info]                  ·gc.alloc.rate:                   1088.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              461416.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     571296.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.823 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay":
[info]   3726.372 ±(99.9%) 96.894 ops/s [Average]
[info]   (min, avg, max) = (3698.398, 3726.372, 3754.358), stdev = 25.163
[info]   CI (99.9%): [3629.477, 3823.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate":
[info]   1092.903 ±(99.9%) 28.276 MB/sec [Average]
[info]   (min, avg, max) = (1084.740, 1092.903, 1101.100), stdev = 7.343
[info]   CI (99.9%): [1064.626, 1121.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   461416.118 ±(99.9%) 0.016 B/op [Average]
[info]   (min, avg, max) = (461416.115, 461416.118, 461416.125), stdev = 0.004
[info]   CI (99.9%): [461416.102, 461416.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1138.212 ±(99.9%) 704.215 MB/sec [Average]
[info]   (min, avg, max) = (1001.574, 1138.212, 1348.187), stdev = 182.882
[info]   CI (99.9%): [433.997, 1842.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   480756.573 ±(99.9%) 303601.847 B/op [Average]
[info]   (min, avg, max) = (419709.648, 480756.573, 571296.052), stdev = 78844.435
[info]   CI (99.9%): [177154.726, 784358.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.307 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.208), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   28.155 ±(99.9%) 130.271 B/op [Average]
[info]   (min, avg, max) = (8.823, 28.155, 88.181), stdev = 33.831
[info]   CI (99.9%): [≈ 0, 158.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.342
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce
[info] # Run progress: 50.89% complete, ETA 00:14:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 254535.988 ops/s
[info] # Warmup Iteration   2: 408218.841 ops/s
[info] # Warmup Iteration   3: 416435.802 ops/s
[info] # Warmup Iteration   4: 409279.291 ops/s
[info] # Warmup Iteration   5: 413275.550 ops/s
[info] Iteration   1: 415854.160 ops/s
[info]                  ·gc.alloc.rate:                   1471.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1675.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6339.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.315 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 415340.773 ops/s
[info]                  ·gc.alloc.rate:                   1469.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5100.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 415014.745 ops/s
[info]                  ·gc.alloc.rate:                   1468.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5121.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.237 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 412419.639 ops/s
[info]                  ·gc.alloc.rate:                   1459.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6457.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 412029.857 ops/s
[info]                  ·gc.alloc.rate:                   1458.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5180.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce":
[info]   414131.835 ±(99.9%) 6822.650 ops/s [Average]
[info]   (min, avg, max) = (412029.857, 414131.835, 415854.160), stdev = 1771.820
[info]   CI (99.9%): [407309.185, 420954.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate":
[info]   1465.564 ±(99.9%) 24.143 MB/sec [Average]
[info]   (min, avg, max) = (1458.133, 1465.564, 1471.681), stdev = 6.270
[info]   CI (99.9%): [1441.422, 1489.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm":
[info]   5568.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5568.001, 5568.001, 5568.001), stdev = 0.001
[info]   CI (99.9%): [5568.001, 5568.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space":
[info]   1484.459 ±(99.9%) 702.531 MB/sec [Average]
[info]   (min, avg, max) = (1346.300, 1484.459, 1692.782), stdev = 182.445
[info]   CI (99.9%): [781.928, 2186.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5639.947 ±(99.9%) 2674.210 B/op [Average]
[info]   (min, avg, max) = (5100.039, 5639.947, 6457.957), stdev = 694.484
[info]   CI (99.9%): [2965.737, 8314.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.174 ±(99.9%) 0.395 B/op [Average]
[info]   (min, avg, max) = (0.079, 0.174, 0.315), stdev = 0.103
[info]   CI (99.9%): [≈ 0, 0.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson
[info] # Run progress: 51.79% complete, ETA 00:14:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1049420.608 ops/s
[info] # Warmup Iteration   2: 1592093.646 ops/s
[info] # Warmup Iteration   3: 1607873.661 ops/s
[info] # Warmup Iteration   4: 1609216.627 ops/s
[info] # Warmup Iteration   5: 1610851.258 ops/s
[info] Iteration   1: 1592952.821 ops/s
[info]                  ·gc.alloc.rate:                   664.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     648.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1580866.998 ops/s
[info]                  ·gc.alloc.rate:                   659.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     655.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1607535.780 ops/s
[info]                  ·gc.alloc.rate:                   670.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     647.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1614351.914 ops/s
[info]                  ·gc.alloc.rate:               673.074 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 647.490 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1604295.279 ops/s
[info]                  ·gc.alloc.rate:                   668.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     653.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson":
[info]   1600000.559 ±(99.9%) 50828.110 ops/s [Average]
[info]   (min, avg, max) = (1580866.998, 1600000.559, 1614351.914), stdev = 13199.899
[info]   CI (99.9%): [1549172.448, 1650828.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate":
[info]   667.099 ±(99.9%) 21.178 MB/sec [Average]
[info]   (min, avg, max) = (659.123, 667.099, 673.074), stdev = 5.500
[info]   CI (99.9%): [645.921, 688.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space":
[info]   661.552 ±(99.9%) 15.386 MB/sec [Average]
[info]   (min, avg, max) = (656.378, 661.552, 666.327), stdev = 3.996
[info]   CI (99.9%): [646.165, 676.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   650.563 ±(99.9%) 14.933 B/op [Average]
[info]   (min, avg, max) = (647.490, 650.563, 655.883), stdev = 3.878
[info]   CI (99.9%): [635.630, 665.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.250 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.167), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.057 ±(99.9%) 0.244 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.057, 0.163), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter
[info] # Run progress: 52.68% complete, ETA 00:14:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5164591.441 ops/s
[info] # Warmup Iteration   2: 7435568.441 ops/s
[info] # Warmup Iteration   3: 7360016.793 ops/s
[info] # Warmup Iteration   4: 7285637.008 ops/s
[info] # Warmup Iteration   5: 7353426.603 ops/s
[info] Iteration   1: 7522335.994 ops/s
[info]                  ·gc.alloc.rate:               382.488 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 67.876 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 7466702.557 ops/s
[info]                  ·gc.alloc.rate:               379.704 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 68.380 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 7318201.906 ops/s
[info]                  ·gc.alloc.rate:               372.086 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 69.769 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 7556762.378 ops/s
[info]                  ·gc.alloc.rate:                   384.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 7499909.738 ops/s
[info]                  ·gc.alloc.rate:                   381.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     136.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter":
[info]   7472782.514 ±(99.9%) 355930.443 ops/s [Average]
[info]   (min, avg, max) = (7318201.906, 7472782.514, 7556762.378), stdev = 92434.006
[info]   CI (99.9%): [7116852.072, 7828712.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate":
[info]   379.969 ±(99.9%) 18.122 MB/sec [Average]
[info]   (min, avg, max) = (372.086, 379.969, 384.231), stdev = 4.706
[info]   CI (99.9%): [361.847, 398.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   390.028 ±(99.9%) 562.570 MB/sec [Average]
[info]   (min, avg, max) = (324.502, 390.028, 651.375), stdev = 146.098
[info]   CI (99.9%): [≈ 0, 952.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   82.077 ±(99.9%) 117.516 B/op [Average]
[info]   (min, avg, max) = (67.707, 82.077, 136.651), stdev = 30.519
[info]   CI (99.9%): [≈ 0, 199.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.013), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay
[info] # Run progress: 53.57% complete, ETA 00:14:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 143127.580 ops/s
[info] # Warmup Iteration   2: 228830.036 ops/s
[info] # Warmup Iteration   3: 227855.013 ops/s
[info] # Warmup Iteration   4: 231380.292 ops/s
[info] # Warmup Iteration   5: 224401.678 ops/s
[info] Iteration   1: 234705.470 ops/s
[info]                  ·gc.alloc.rate:                   726.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              4872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4417.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 235050.508 ops/s
[info]                  ·gc.alloc.rate:               727.788 MB/sec
[info]                  ·gc.alloc.rate.norm:          4872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4429.133 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 232469.536 ops/s
[info]                  ·gc.alloc.rate:                   719.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              4872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.380 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4496.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.987 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 236177.763 ops/s
[info]                  ·gc.alloc.rate:               731.715 MB/sec
[info]                  ·gc.alloc.rate.norm:          4872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      999.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6655.578 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 236619.247 ops/s
[info]                  ·gc.alloc.rate:                   732.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              4872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4448.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.277 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay":
[info]   235004.505 ±(99.9%) 6239.211 ops/s [Average]
[info]   (min, avg, max) = (232469.536, 235004.505, 236619.247), stdev = 1620.303
[info]   CI (99.9%): [228765.293, 241243.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate":
[info]   727.735 ±(99.9%) 19.466 MB/sec [Average]
[info]   (min, avg, max) = (719.860, 727.735, 732.569), stdev = 5.055
[info]   CI (99.9%): [708.269, 747.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm":
[info]   4872.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4872.002, 4872.002, 4872.002), stdev = 0.001
[info]   CI (99.9%): [4872.002, 4872.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space":
[info]   730.692 ±(99.9%) 578.990 MB/sec [Average]
[info]   (min, avg, max) = (658.947, 730.692, 999.587), stdev = 150.362
[info]   CI (99.9%): [151.702, 1309.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4889.478 ±(99.9%) 3803.436 B/op [Average]
[info]   (min, avg, max) = (4417.511, 4889.478, 6655.578), stdev = 987.740
[info]   CI (99.9%): [1086.042, 8692.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.230 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.146), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.309 ±(99.9%) 1.555 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.309, 0.987), stdev = 0.404
[info]   CI (99.9%): [≈ 0, 1.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 7.000), stdev = 2.049
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce
[info] # Run progress: 54.46% complete, ETA 00:13:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1037602.485 ops/s
[info] # Warmup Iteration   2: 1351746.148 ops/s
[info] # Warmup Iteration   3: 1415709.246 ops/s
[info] # Warmup Iteration   4: 1417202.071 ops/s
[info] # Warmup Iteration   5: 1427860.441 ops/s
[info] Iteration   1: 1436668.024 ops/s
[info]                  ·gc.alloc.rate:                   1556.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              1704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1471.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1414347.304 ops/s
[info]                  ·gc.alloc.rate:                   1531.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              1704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1876.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1420894.504 ops/s
[info]                  ·gc.alloc.rate:                   1538.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              1704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1497.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1439271.909 ops/s
[info]                  ·gc.alloc.rate:                   1558.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              1704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1852.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1422926.438 ops/s
[info]                  ·gc.alloc.rate:                   1540.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              1704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1357.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1501.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce":
[info]   1426821.636 ±(99.9%) 41197.980 ops/s [Average]
[info]   (min, avg, max) = (1414347.304, 1426821.636, 1439271.909), stdev = 10698.985
[info]   CI (99.9%): [1385623.656, 1468019.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1545.311 ±(99.9%) 44.814 MB/sec [Average]
[info]   (min, avg, max) = (1531.777, 1545.311, 1558.807), stdev = 11.638
[info]   CI (99.9%): [1500.497, 1590.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1704.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1704.000, 1704.000, 1704.000), stdev = 0.001
[info]   CI (99.9%): [1704.000, 1704.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1487.063 ±(99.9%) 715.687 MB/sec [Average]
[info]   (min, avg, max) = (1343.531, 1487.063, 1694.576), stdev = 185.862
[info]   CI (99.9%): [771.377, 2202.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1639.854 ±(99.9%) 790.889 B/op [Average]
[info]   (min, avg, max) = (1471.225, 1639.854, 1876.173), stdev = 205.391
[info]   CI (99.9%): [848.965, 2430.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.088 B/op [Average]
[info]   (min, avg, max) = (0.023, 0.046, 0.069), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 11.000), stdev = 2.608
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson
[info] # Run progress: 55.36% complete, ETA 00:13:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2718959.175 ops/s
[info] # Warmup Iteration   2: 4297102.246 ops/s
[info] # Warmup Iteration   3: 4481876.696 ops/s
[info] # Warmup Iteration   4: 4443077.306 ops/s
[info] # Warmup Iteration   5: 4449144.188 ops/s
[info] Iteration   1: 4438451.654 ops/s
[info]                  ·gc.alloc.rate:                   1218.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     354.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4433880.382 ops/s
[info]                  ·gc.alloc.rate:                   1217.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     475.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 4469511.380 ops/s
[info]                  ·gc.alloc.rate:                   1227.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     473.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 4431932.732 ops/s
[info]                  ·gc.alloc.rate:                   1216.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     359.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4452693.667 ops/s
[info]                  ·gc.alloc.rate:                   1222.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     477.627 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson":
[info]   4445293.963 ±(99.9%) 60788.010 ops/s [Average]
[info]   (min, avg, max) = (4431932.732, 4445293.963, 4469511.380), stdev = 15786.453
[info]   CI (99.9%): [4384505.953, 4506081.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1220.555 ±(99.9%) 16.677 MB/sec [Average]
[info]   (min, avg, max) = (1216.822, 1220.555, 1227.158), stdev = 4.331
[info]   CI (99.9%): [1203.878, 1237.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1209.242 ±(99.9%) 716.460 MB/sec [Average]
[info]   (min, avg, max) = (999.268, 1209.242, 1351.774), stdev = 186.062
[info]   CI (99.9%): [492.782, 1925.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   427.890 ±(99.9%) 250.355 B/op [Average]
[info]   (min, avg, max) = (354.209, 427.890, 477.627), stdev = 65.017
[info]   CI (99.9%): [177.534, 678.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.025 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.018, 0.022), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.304
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 56.25% complete, ETA 00:13:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13409363.336 ops/s
[info] # Warmup Iteration   2: 14846988.754 ops/s
[info] # Warmup Iteration   3: 14930712.020 ops/s
[info] # Warmup Iteration   4: 15281907.984 ops/s
[info] # Warmup Iteration   5: 14997025.127 ops/s
[info] Iteration   1: 15173810.813 ops/s
[info]                  ·gc.alloc.rate:               462.925 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.648 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 14985232.400 ops/s
[info]                  ·gc.alloc.rate:                   457.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 15224992.229 ops/s
[info]                  ·gc.alloc.rate:               464.494 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.709 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 15254346.066 ops/s
[info]                  ·gc.alloc.rate:                   465.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 15195601.516 ops/s
[info]                  ·gc.alloc.rate:               463.568 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 67.685 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter":
[info]   15166796.605 ±(99.9%) 407950.788 ops/s [Average]
[info]   (min, avg, max) = (14985232.400, 15166796.605, 15254346.066), stdev = 105943.524
[info]   CI (99.9%): [14758845.817, 15574747.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   462.703 ±(99.9%) 12.413 MB/sec [Average]
[info]   (min, avg, max) = (457.175, 462.703, 465.351), stdev = 3.224
[info]   CI (99.9%): [450.289, 475.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   456.180 ±(99.9%) 688.406 MB/sec [Average]
[info]   (min, avg, max) = (324.514, 456.180, 653.679), stdev = 178.777
[info]   CI (99.9%): [≈ 0, 1144.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   47.393 ±(99.9%) 72.382 B/op [Average]
[info]   (min, avg, max) = (33.643, 47.393, 68.282), stdev = 18.797
[info]   CI (99.9%): [≈ 0, 119.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.013), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 4.000), stdev = 1.414
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc
[info] # Run progress: 57.14% complete, ETA 00:12:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15296706.038 ops/s
[info] # Warmup Iteration   2: 16173512.098 ops/s
[info] # Warmup Iteration   3: 16469892.668 ops/s
[info] # Warmup Iteration   4: 16573797.454 ops/s
[info] # Warmup Iteration   5: 16563737.938 ops/s
[info] Iteration   1: 16514505.535 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 16511531.115 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 16527839.614 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 16481024.445 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 16500653.974 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc":
[info]   16507110.937 ±(99.9%) 67416.340 ops/s [Average]
[info]   (min, avg, max) = (16481024.445, 16507110.937, 16527839.614), stdev = 17507.809
[info]   CI (99.9%): [16439694.597, 16574527.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay
[info] # Run progress: 58.04% complete, ETA 00:12:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 490377.899 ops/s
[info] # Warmup Iteration   2: 708898.664 ops/s
[info] # Warmup Iteration   3: 712663.391 ops/s
[info] # Warmup Iteration   4: 719587.041 ops/s
[info] # Warmup Iteration   5: 721628.093 ops/s
[info] Iteration   1: 722447.378 ops/s
[info]                  ·gc.alloc.rate:                   1083.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1313.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2861.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 725093.446 ops/s
[info]                  ·gc.alloc.rate:               1087.546 MB/sec
[info]                  ·gc.alloc.rate.norm:          2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2155.130 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 731727.098 ops/s
[info]                  ·gc.alloc.rate:                   1097.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2148.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 722920.363 ops/s
[info]                  ·gc.alloc.rate:                   1084.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2183.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 712267.576 ops/s
[info]                  ·gc.alloc.rate:                   1068.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2967.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay":
[info]   722891.172 ±(99.9%) 26953.283 ops/s [Average]
[info]   (min, avg, max) = (712267.576, 722891.172, 731727.098), stdev = 6999.682
[info]   CI (99.9%): [695937.889, 749844.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1084.289 ±(99.9%) 40.539 MB/sec [Average]
[info]   (min, avg, max) = (1068.319, 1084.289, 1097.604), stdev = 10.528
[info]   CI (99.9%): [1043.750, 1124.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2360.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2360.001, 2360.001, 2360.001), stdev = 0.001
[info]   CI (99.9%): [2360.001, 2360.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1130.577 ±(99.9%) 697.596 MB/sec [Average]
[info]   (min, avg, max) = (993.136, 1130.577, 1343.340), stdev = 181.163
[info]   CI (99.9%): [432.981, 1828.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2463.242 ±(99.9%) 1593.938 B/op [Average]
[info]   (min, avg, max) = (2148.492, 2463.242, 2967.543), stdev = 413.941
[info]   CI (99.9%): [869.304, 4057.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.091 ±(99.9%) 0.275 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.091, 0.179), stdev = 0.071
[info]   CI (99.9%): [≈ 0, 0.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce
[info] # Run progress: 58.93% complete, ETA 00:12:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 437276.214 ops/s
[info] # Warmup Iteration   2: 724412.888 ops/s
[info] # Warmup Iteration   3: 731087.586 ops/s
[info] # Warmup Iteration   4: 732520.982 ops/s
[info] # Warmup Iteration   5: 728717.351 ops/s
[info] Iteration   1: 724915.743 ops/s
[info]                  ·gc.alloc.rate:                   1739.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3653.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 734662.658 ops/s
[info]                  ·gc.alloc.rate:                   1763.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4342.583 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 726794.811 ops/s
[info]                  ·gc.alloc.rate:                   1744.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3668.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 736537.418 ops/s
[info]                  ·gc.alloc.rate:                   1767.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3627.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 718572.807 ops/s
[info]                  ·gc.alloc.rate:                   1724.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3720.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.274 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce":
[info]   728296.688 ±(99.9%) 28340.548 ops/s [Average]
[info]   (min, avg, max) = (718572.807, 728296.688, 736537.418), stdev = 7359.950
[info]   CI (99.9%): [699956.139, 756637.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1747.804 ±(99.9%) 67.985 MB/sec [Average]
[info]   (min, avg, max) = (1724.434, 1747.804, 1767.502), stdev = 17.656
[info]   CI (99.9%): [1679.819, 1815.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3776.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3776.001, 3776.001, 3776.001), stdev = 0.001
[info]   CI (99.9%): [3776.001, 3776.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1760.420 ±(99.9%) 575.788 MB/sec [Average]
[info]   (min, avg, max) = (1683.189, 1760.420, 2027.674), stdev = 149.530
[info]   CI (99.9%): [1184.631, 2336.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3802.291 ±(99.9%) 1170.372 B/op [Average]
[info]   (min, avg, max) = (3627.044, 3802.291, 4342.583), stdev = 303.942
[info]   CI (99.9%): [2631.920, 4972.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.145 ±(99.9%) 0.316 B/op [Average]
[info]   (min, avg, max) = (0.044, 0.145, 0.274), stdev = 0.082
[info]   CI (99.9%): [≈ 0, 0.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 9.000), stdev = 1.304
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson
[info] # Run progress: 59.82% complete, ETA 00:12:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1511844.585 ops/s
[info] # Warmup Iteration   2: 2475351.037 ops/s
[info] # Warmup Iteration   3: 2460457.615 ops/s
[info] # Warmup Iteration   4: 2460795.854 ops/s
[info] # Warmup Iteration   5: 2470165.580 ops/s
[info] Iteration   1: 2478105.224 ops/s
[info]                  ·gc.alloc.rate:                   1436.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     850.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2467915.080 ops/s
[info]                  ·gc.alloc.rate:                   1430.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     857.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2471614.820 ops/s
[info]                  ·gc.alloc.rate:                   1432.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1688.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1074.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2496719.810 ops/s
[info]                  ·gc.alloc.rate:                   1447.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     853.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2512331.303 ops/s
[info]                  ·gc.alloc.rate:               1456.197 MB/sec
[info]                  ·gc.alloc.rate.norm:          912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1356.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 849.361 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson":
[info]   2485337.247 ±(99.9%) 72100.181 ops/s [Average]
[info]   (min, avg, max) = (2467915.080, 2485337.247, 2512331.303), stdev = 18724.188
[info]   CI (99.9%): [2413237.066, 2557437.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1440.637 ±(99.9%) 41.703 MB/sec [Average]
[info]   (min, avg, max) = (1430.603, 1440.637, 1456.197), stdev = 10.830
[info]   CI (99.9%): [1398.934, 1482.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1416.797 ±(99.9%) 584.707 MB/sec [Average]
[info]   (min, avg, max) = (1340.026, 1416.797, 1688.177), stdev = 151.847
[info]   CI (99.9%): [832.090, 2001.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   897.167 ±(99.9%) 382.281 B/op [Average]
[info]   (min, avg, max) = (849.361, 897.167, 1074.668), stdev = 99.277
[info]   CI (99.9%): [514.886, 1279.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.040), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter
[info] # Run progress: 60.71% complete, ETA 00:11:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4079412.898 ops/s
[info] # Warmup Iteration   2: 4529267.576 ops/s
[info] # Warmup Iteration   3: 4558958.954 ops/s
[info] # Warmup Iteration   4: 4535030.882 ops/s
[info] # Warmup Iteration   5: 4573530.598 ops/s
[info] Iteration   1: 4544484.266 ops/s
[info]                  ·gc.alloc.rate:                   1247.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     459.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 4561401.896 ops/s
[info]                  ·gc.alloc.rate:                   1252.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     460.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4514473.348 ops/s
[info]                  ·gc.alloc.rate:               1239.455 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 350.683 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 4536994.474 ops/s
[info]                  ·gc.alloc.rate:                   1245.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     466.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4558101.223 ops/s
[info]                  ·gc.alloc.rate:                   1251.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     466.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter":
[info]   4543091.041 ±(99.9%) 72517.822 ops/s [Average]
[info]   (min, avg, max) = (4514473.348, 4543091.041, 4561401.896), stdev = 18832.648
[info]   CI (99.9%): [4470573.219, 4615608.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1247.368 ±(99.9%) 20.048 MB/sec [Average]
[info]   (min, avg, max) = (1239.455, 1247.368, 1252.345), stdev = 5.206
[info]   CI (99.9%): [1227.320, 1267.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1273.110 ±(99.9%) 575.736 MB/sec [Average]
[info]   (min, avg, max) = (1006.148, 1273.110, 1350.815), stdev = 149.517
[info]   CI (99.9%): [697.374, 1848.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   440.774 ±(99.9%) 194.328 B/op [Average]
[info]   (min, avg, max) = (350.683, 440.774, 466.785), stdev = 50.466
[info]   CI (99.9%): [246.445, 635.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.036), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay
[info] # Run progress: 61.61% complete, ETA 00:11:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 180175.832 ops/s
[info] # Warmup Iteration   2: 334456.257 ops/s
[info] # Warmup Iteration   3: 334854.238 ops/s
[info] # Warmup Iteration   4: 339339.066 ops/s
[info] # Warmup Iteration   5: 341759.624 ops/s
[info] Iteration   1: 341296.963 ops/s
[info]                  ·gc.alloc.rate:                   1218.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6153.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 334416.114 ops/s
[info]                  ·gc.alloc.rate:                   1193.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6310.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.392 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 334099.247 ops/s
[info]                  ·gc.alloc.rate:                   1192.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4757.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 336543.356 ops/s
[info]                  ·gc.alloc.rate:                   1201.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6311.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 339173.854 ops/s
[info]                  ·gc.alloc.rate:               1210.628 MB/sec
[info]                  ·gc.alloc.rate.norm:          5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1014.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4707.901 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay":
[info]   337105.907 ±(99.9%) 11935.881 ops/s [Average]
[info]   (min, avg, max) = (334099.247, 337105.907, 341296.963), stdev = 3099.710
[info]   CI (99.9%): [325170.026, 349041.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1203.218 ±(99.9%) 42.525 MB/sec [Average]
[info]   (min, avg, max) = (1192.503, 1203.218, 1218.136), stdev = 11.044
[info]   CI (99.9%): [1160.692, 1245.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1210.185 ±(99.9%) 695.174 MB/sec [Average]
[info]   (min, avg, max) = (1010.163, 1210.185, 1349.963), stdev = 180.534
[info]   CI (99.9%): [515.011, 1905.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5648.119 ±(99.9%) 3228.478 B/op [Average]
[info]   (min, avg, max) = (4707.901, 5648.119, 6311.731), stdev = 838.426
[info]   CI (99.9%): [2419.641, 8876.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.214 ±(99.9%) 0.559 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.214, 0.392), stdev = 0.145
[info]   CI (99.9%): [≈ 0, 0.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.304
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson
[info] # Run progress: 62.50% complete, ETA 00:11:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1381600.231 ops/s
[info] # Warmup Iteration   2: 1933694.563 ops/s
[info] # Warmup Iteration   3: 1970345.376 ops/s
[info] # Warmup Iteration   4: 1969296.643 ops/s
[info] # Warmup Iteration   5: 1923614.269 ops/s
[info] Iteration   1: 1976742.057 ops/s
[info]                  ·gc.alloc.rate:                   1045.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     793.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1952521.012 ops/s
[info]                  ·gc.alloc.rate:                   1032.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     806.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1973292.725 ops/s
[info]                  ·gc.alloc.rate:               1043.562 MB/sec
[info]                  ·gc.alloc.rate.norm:          832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1004.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 800.960 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1946188.863 ops/s
[info]                  ·gc.alloc.rate:               1029.140 MB/sec
[info]                  ·gc.alloc.rate.norm:          832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 815.079 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1948865.019 ops/s
[info]                  ·gc.alloc.rate:                   1030.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     815.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson":
[info]   1959521.935 ±(99.9%) 55351.613 ops/s [Average]
[info]   (min, avg, max) = (1946188.863, 1959521.935, 1976742.057), stdev = 14374.638
[info]   CI (99.9%): [1904170.323, 2014873.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1036.255 ±(99.9%) 29.402 MB/sec [Average]
[info]   (min, avg, max) = (1029.140, 1036.255, 1045.402), stdev = 7.636
[info]   CI (99.9%): [1006.853, 1065.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   832.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (832.000, 832.000, 832.000), stdev = 0.001
[info]   CI (99.9%): [832.000, 832.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1004.190 ±(99.9%) 20.908 MB/sec [Average]
[info]   (min, avg, max) = (996.648, 1004.190, 1010.201), stdev = 5.430
[info]   CI (99.9%): [983.282, 1025.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   806.309 ±(99.9%) 36.658 B/op [Average]
[info]   (min, avg, max) = (793.198, 806.309, 815.522), stdev = 9.520
[info]   CI (99.9%): [769.651, 842.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.084 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.050), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter
[info] # Run progress: 63.39% complete, ETA 00:11:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3985597.863 ops/s
[info] # Warmup Iteration   2: 4307367.293 ops/s
[info] # Warmup Iteration   3: 4284547.766 ops/s
[info] # Warmup Iteration   4: 4372086.454 ops/s
[info] # Warmup Iteration   5: 4362002.160 ops/s
[info] Iteration   1: 4397762.437 ops/s
[info]                  ·gc.alloc.rate:                   670.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     233.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4415240.656 ops/s
[info]                  ·gc.alloc.rate:                   673.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     232.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4402600.071 ops/s
[info]                  ·gc.alloc.rate:                   671.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     234.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4421679.957 ops/s
[info]                  ·gc.alloc.rate:                   674.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     234.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4381142.930 ops/s
[info]                  ·gc.alloc.rate:               668.231 MB/sec
[info]                  ·gc.alloc.rate.norm:          240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 237.627 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter":
[info]   4403685.210 ±(99.9%) 60937.289 ops/s [Average]
[info]   (min, avg, max) = (4381142.930, 4403685.210, 4421679.957), stdev = 15825.220
[info]   CI (99.9%): [4342747.922, 4464622.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   671.702 ±(99.9%) 9.388 MB/sec [Average]
[info]   (min, avg, max) = (668.231, 671.702, 674.485), stdev = 2.438
[info]   CI (99.9%): [662.314, 681.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   656.437 ±(99.9%) 15.486 MB/sec [Average]
[info]   (min, avg, max) = (651.619, 656.437, 661.622), stdev = 4.022
[info]   CI (99.9%): [640.951, 671.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   234.550 ±(99.9%) 7.223 B/op [Average]
[info]   (min, avg, max) = (232.931, 234.550, 237.627), stdev = 1.876
[info]   CI (99.9%): [227.326, 241.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.020 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.015), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay
[info] # Run progress: 64.29% complete, ETA 00:10:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 271474.450 ops/s
[info] # Warmup Iteration   2: 497235.671 ops/s
[info] # Warmup Iteration   3: 496999.722 ops/s
[info] # Warmup Iteration   4: 490634.998 ops/s
[info] # Warmup Iteration   5: 499728.020 ops/s
[info] Iteration   1: 504354.932 ops/s
[info]                  ·gc.alloc.rate:                   1487.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4184.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.325 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 504360.036 ops/s
[info]                  ·gc.alloc.rate:                   1487.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1684.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5255.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.195 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 506919.284 ops/s
[info]                  ·gc.alloc.rate:                   1494.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4195.471 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.323 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 499968.633 ops/s
[info]                  ·gc.alloc.rate:                   1474.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5330.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 497175.561 ops/s
[info]                  ·gc.alloc.rate:                   1466.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              4640.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4292.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay":
[info]   502555.689 ±(99.9%) 15058.498 ops/s [Average]
[info]   (min, avg, max) = (497175.561, 502555.689, 506919.284), stdev = 3910.644
[info]   CI (99.9%): [487497.191, 517614.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1482.025 ±(99.9%) 44.296 MB/sec [Average]
[info]   (min, avg, max) = (1466.162, 1482.025, 1494.798), stdev = 11.504
[info]   CI (99.9%): [1437.729, 1526.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4640.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4640.001, 4640.001, 4640.001), stdev = 0.001
[info]   CI (99.9%): [4640.001, 4640.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1485.578 ±(99.9%) 716.432 MB/sec [Average]
[info]   (min, avg, max) = (1341.343, 1485.578, 1693.816), stdev = 186.055
[info]   CI (99.9%): [769.146, 2202.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4651.744 ±(99.9%) 2262.533 B/op [Average]
[info]   (min, avg, max) = (4184.401, 4651.744, 5330.374), stdev = 587.573
[info]   CI (99.9%): [2389.211, 6914.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.221 ±(99.9%) 0.375 B/op [Average]
[info]   (min, avg, max) = (0.131, 0.221, 0.325), stdev = 0.097
[info]   CI (99.9%): [≈ 0, 0.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce
[info] # Run progress: 65.18% complete, ETA 00:10:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3693.833 ops/s
[info] # Warmup Iteration   2: 5254.673 ops/s
[info] # Warmup Iteration   3: 5279.188 ops/s
[info] # Warmup Iteration   4: 5355.015 ops/s
[info] # Warmup Iteration   5: 5395.689 ops/s
[info] Iteration   1: 5391.994 ops/s
[info]                  ·gc.alloc.rate:                   1494.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              436192.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     391490.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.915 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 5343.177 ops/s
[info]                  ·gc.alloc.rate:                   1481.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              436192.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     495842.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.392 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 5381.763 ops/s
[info]                  ·gc.alloc.rate:                   1492.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              436192.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     395236.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.262 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5321.771 ops/s
[info]                  ·gc.alloc.rate:                   1475.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              436192.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     400479.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.468 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 5356.431 ops/s
[info]                  ·gc.alloc.rate:               1485.047 MB/sec
[info]                  ·gc.alloc.rate.norm:          436192.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1696.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 498161.666 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce":
[info]   5359.027 ±(99.9%) 109.755 ops/s [Average]
[info]   (min, avg, max) = (5321.771, 5359.027, 5391.994), stdev = 28.503
[info]   CI (99.9%): [5249.273, 5468.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1485.775 ±(99.9%) 30.411 MB/sec [Average]
[info]   (min, avg, max) = (1475.465, 1485.775, 1494.954), stdev = 7.898
[info]   CI (99.9%): [1455.364, 1516.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   436192.082 ±(99.9%) 0.010 B/op [Average]
[info]   (min, avg, max) = (436192.080, 436192.082, 436192.087), stdev = 0.003
[info]   CI (99.9%): [436192.071, 436192.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   1485.668 ±(99.9%) 718.662 MB/sec [Average]
[info]   (min, avg, max) = (1341.749, 1485.668, 1696.027), stdev = 186.634
[info]   CI (99.9%): [767.006, 2204.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   436242.224 ±(99.9%) 213955.598 B/op [Average]
[info]   (min, avg, max) = (391490.409, 436242.224, 498161.666), stdev = 55563.589
[info]   CI (99.9%): [222286.626, 650197.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   13.607 ±(99.9%) 30.674 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.607, 18.468), stdev = 7.966
[info]   CI (99.9%): [≈ 0, 44.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson
[info] # Run progress: 66.07% complete, ETA 00:10:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20275.607 ops/s
[info] # Warmup Iteration   2: 30105.707 ops/s
[info] # Warmup Iteration   3: 29640.410 ops/s
[info] # Warmup Iteration   4: 29624.581 ops/s
[info] # Warmup Iteration   5: 29931.878 ops/s
[info] Iteration   1: 29723.064 ops/s
[info]                  ·gc.alloc.rate:                   430.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17231.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.102 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 29796.862 ops/s
[info]                  ·gc.alloc.rate:                   431.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34478.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.199 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 29907.507 ops/s
[info]                  ·gc.alloc.rate:               433.550 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.905 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17229.135 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 30026.781 ops/s
[info]                  ·gc.alloc.rate:               435.309 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.930 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17231.270 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 29581.974 ops/s
[info]                  ·gc.alloc.rate:               428.834 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35051.770 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson":
[info]   29807.238 ±(99.9%) 656.278 ops/s [Average]
[info]   (min, avg, max) = (29581.974, 29807.238, 30026.781), stdev = 170.433
[info]   CI (99.9%): [29150.960, 30463.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   432.104 ±(99.9%) 9.544 MB/sec [Average]
[info]   (min, avg, max) = (428.834, 432.104, 435.309), stdev = 2.478
[info]   CI (99.9%): [422.561, 441.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   22807.875 ±(99.9%) 0.393 B/op [Average]
[info]   (min, avg, max) = (22807.711, 22807.875, 22807.977), stdev = 0.102
[info]   CI (99.9%): [22807.481, 22808.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   458.786 ±(99.9%) 693.345 MB/sec [Average]
[info]   (min, avg, max) = (325.526, 458.786, 659.045), stdev = 180.059
[info]   CI (99.9%): [≈ 0, 1152.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   24244.407 ±(99.9%) 36990.498 B/op [Average]
[info]   (min, avg, max) = (17229.135, 24244.407, 35051.770), stdev = 9606.315
[info]   CI (99.9%): [≈ 0, 61234.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.660 ±(99.9%) 3.788 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.660, 2.199), stdev = 0.984
[info]   CI (99.9%): [≈ 0, 4.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter
[info] # Run progress: 66.96% complete, ETA 00:10:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28303.898 ops/s
[info] # Warmup Iteration   2: 32769.442 ops/s
[info] # Warmup Iteration   3: 32112.394 ops/s
[info] # Warmup Iteration   4: 31928.725 ops/s
[info] # Warmup Iteration   5: 32334.758 ops/s
[info] Iteration   1: 32003.501 ops/s
[info]                  ·gc.alloc.rate:               246.205 MB/sec
[info]                  ·gc.alloc.rate.norm:          12104.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12578.588 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 31746.160 ops/s
[info]                  ·gc.alloc.rate:               244.238 MB/sec
[info]                  ·gc.alloc.rate.norm:          12104.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15983.585 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 31862.894 ops/s
[info]                  ·gc.alloc.rate:                   245.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              12104.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15925.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 32251.819 ops/s
[info]                  ·gc.alloc.rate:                   248.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              12104.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15831.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.032 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 32277.600 ops/s
[info]                  ·gc.alloc.rate:      248.312 MB/sec
[info]                  ·gc.alloc.rate.norm: 12104.013 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter":
[info]   32028.395 ±(99.9%) 902.416 ops/s [Average]
[info]   (min, avg, max) = (31746.160, 32028.395, 32277.600), stdev = 234.355
[info]   CI (99.9%): [31125.979, 32930.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   246.406 ±(99.9%) 6.930 MB/sec [Average]
[info]   (min, avg, max) = (244.238, 246.406, 248.312), stdev = 1.800
[info]   CI (99.9%): [239.475, 253.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   12104.014 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (12104.013, 12104.014, 12104.014), stdev = 0.001
[info]   CI (99.9%): [12104.012, 12104.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   245.093 ±(99.9%) 539.408 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 245.093, 324.543), stdev = 140.083
[info]   CI (99.9%): [≈ 0, 784.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   12063.888 ±(99.9%) 26557.957 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12063.888, 15983.585), stdev = 6897.017
[info]   CI (99.9%): [≈ 0, 38621.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.612 ±(99.9%) 3.504 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.612, 2.032), stdev = 0.910
[info]   CI (99.9%): [≈ 0, 4.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc
[info] # Run progress: 67.86% complete, ETA 00:09:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36107.312 ops/s
[info] # Warmup Iteration   2: 41622.399 ops/s
[info] # Warmup Iteration   3: 41935.017 ops/s
[info] # Warmup Iteration   4: 42047.936 ops/s
[info] # Warmup Iteration   5: 42096.762 ops/s
[info] Iteration   1: 40887.035 ops/s
[info]                  ·gc.alloc.rate:                   0.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              24.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          56.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2166.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      8.983 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 345.686 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         32.000 ms
[info] Iteration   2: 42241.806 ops/s
[info]                  ·gc.alloc.rate:      0.645 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 42266.495 ops/s
[info]                  ·gc.alloc.rate:      0.645 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 41552.402 ops/s
[info]                  ·gc.alloc.rate:      0.634 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 42024.449 ops/s
[info]                  ·gc.alloc.rate:      0.641 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.011 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc":
[info]   41794.438 ±(99.9%) 2243.510 ops/s [Average]
[info]   (min, avg, max) = (40887.035, 41794.438, 42266.495), stdev = 582.632
[info]   CI (99.9%): [39550.927, 44037.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   0.638 ±(99.9%) 0.034 MB/sec [Average]
[info]   (min, avg, max) = (0.624, 0.638, 0.645), stdev = 0.009
[info]   CI (99.9%): [0.604, 0.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   24.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (24.010, 24.010, 24.011), stdev = 0.001
[info]   CI (99.9%): [24.009, 24.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.churn.PS_Eden_Space":
[info]   11.259 ±(99.9%) 96.942 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 11.259, 56.294), stdev = 25.176
[info]   CI (99.9%): [≈ 0, 108.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   433.249 ±(99.9%) 3730.406 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 433.249, 2166.246), stdev = 968.775
[info]   CI (99.9%): [≈ 0, 4163.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.churn.PS_Survivor_Space":
[info]   1.797 ±(99.9%) 15.470 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.797, 8.983), stdev = 4.017
[info]   CI (99.9%): [≈ 0, 17.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   69.137 ±(99.9%) 595.293 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 69.137, 345.686), stdev = 154.596
[info]   CI (99.9%): [≈ 0, 664.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 6.400, 32.000), stdev = 14.311
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay
[info] # Run progress: 68.75% complete, ETA 00:09:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2597.386 ops/s
[info] # Warmup Iteration   2: 4110.894 ops/s
[info] # Warmup Iteration   3: 4168.697 ops/s
[info] # Warmup Iteration   4: 4165.495 ops/s
[info] # Warmup Iteration   5: 4178.230 ops/s
[info] Iteration   1: 4221.965 ops/s
[info]                  ·gc.alloc.rate:               1262.282 MB/sec
[info]                  ·gc.alloc.rate.norm:          470367.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1335.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 497595.620 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 4243.012 ops/s
[info]                  ·gc.alloc.rate:                   1268.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              470369.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     497604.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.163 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 4235.103 ops/s
[info]                  ·gc.alloc.rate:               1266.227 MB/sec
[info]                  ·gc.alloc.rate.norm:          470367.212 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 500400.468 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 4213.065 ops/s
[info]                  ·gc.alloc.rate:               1259.556 MB/sec
[info]                  ·gc.alloc.rate.norm:          470368.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1012.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 378223.901 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 4210.327 ops/s
[info]                  ·gc.alloc.rate:                   1258.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              470368.745 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     505616.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.780 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay":
[info]   4224.694 ±(99.9%) 54.217 ops/s [Average]
[info]   (min, avg, max) = (4210.327, 4224.694, 4243.012), stdev = 14.080
[info]   CI (99.9%): [4170.478, 4278.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1263.081 ±(99.9%) 16.241 MB/sec [Average]
[info]   (min, avg, max) = (1258.796, 1263.081, 1268.544), stdev = 4.218
[info]   CI (99.9%): [1246.840, 1279.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   470368.184 ±(99.9%) 2.817 B/op [Average]
[info]   (min, avg, max) = (470367.212, 470368.184, 470369.054), stdev = 0.732
[info]   CI (99.9%): [470365.366, 470371.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1278.072 ±(99.9%) 571.547 MB/sec [Average]
[info]   (min, avg, max) = (1012.812, 1278.072, 1353.126), stdev = 148.429
[info]   CI (99.9%): [706.524, 1849.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   475888.185 ±(99.9%) 210607.253 B/op [Average]
[info]   (min, avg, max) = (378223.901, 475888.185, 505616.775), stdev = 54694.035
[info]   CI (99.9%): [265280.932, 686495.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   6.189 ±(99.9%) 38.773 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.189, 23.163), stdev = 10.069
[info]   CI (99.9%): [≈ 0, 44.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 69.64% complete, ETA 00:09:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 212342.451 ops/s
[info] # Warmup Iteration   2: 631700.473 ops/s
[info] # Warmup Iteration   3: 623015.876 ops/s
[info] # Warmup Iteration   4: 626984.130 ops/s
[info] # Warmup Iteration   5: 628001.645 ops/s
[info] Iteration   1: 617529.334 ops/s
[info]                  ·gc.alloc.rate:                   1384.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4245.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 636606.812 ops/s
[info]                  ·gc.alloc.rate:                   1427.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3310.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 630440.837 ops/s
[info]                  ·gc.alloc.rate:                   1413.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3355.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 620637.805 ops/s
[info]                  ·gc.alloc.rate:                   1391.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3419.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 623453.195 ops/s
[info]                  ·gc.alloc.rate:                   1398.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3413.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson":
[info]   625733.597 ±(99.9%) 29756.172 ops/s [Average]
[info]   (min, avg, max) = (617529.334, 625733.597, 636606.812), stdev = 7727.583
[info]   CI (99.9%): [595977.425, 655489.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1403.074 ±(99.9%) 66.850 MB/sec [Average]
[info]   (min, avg, max) = (1384.569, 1403.074, 1427.501), stdev = 17.361
[info]   CI (99.9%): [1336.224, 1469.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   3528.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3528.001, 3528.001, 3528.001), stdev = 0.001
[info]   CI (99.9%): [3528.001, 3528.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1410.357 ±(99.9%) 550.534 MB/sec [Average]
[info]   (min, avg, max) = (1339.378, 1410.357, 1665.958), stdev = 142.972
[info]   CI (99.9%): [859.823, 1960.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3548.963 ±(99.9%) 1508.232 B/op [Average]
[info]   (min, avg, max) = (3310.211, 3548.963, 4245.003), stdev = 391.683
[info]   CI (99.9%): [2040.731, 5057.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.105 ±(99.9%) 0.201 B/op [Average]
[info]   (min, avg, max) = (0.053, 0.105, 0.159), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 11.000), stdev = 2.702
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 70.54% complete, ETA 00:08:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2144277.314 ops/s
[info] # Warmup Iteration   2: 2350673.068 ops/s
[info] # Warmup Iteration   3: 2422316.855 ops/s
[info] # Warmup Iteration   4: 2414102.438 ops/s
[info] # Warmup Iteration   5: 2420216.114 ops/s
[info] Iteration   1: 2312775.946 ops/s
[info]                  ·gc.alloc.rate:                   341.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          322.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     219.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2411906.408 ops/s
[info]                  ·gc.alloc.rate:               355.648 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 211.911 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2154439.234 ops/s
[info]                  ·gc.alloc.rate:                   317.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     237.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2429964.840 ops/s
[info]                  ·gc.alloc.rate:               358.297 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 211.629 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2401444.692 ops/s
[info]                  ·gc.alloc.rate:               354.080 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 214.148 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter":
[info]   2342106.224 ±(99.9%) 439848.304 ops/s [Average]
[info]   (min, avg, max) = (2154439.234, 2342106.224, 2429964.840), stdev = 114227.208
[info]   CI (99.9%): [1902257.920, 2781954.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   345.350 ±(99.9%) 64.823 MB/sec [Average]
[info]   (min, avg, max) = (317.690, 345.350, 358.297), stdev = 16.834
[info]   CI (99.9%): [280.526, 410.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   232.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (232.000, 232.000, 232.000), stdev = 0.001
[info]   CI (99.9%): [232.000, 232.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.242 ±(99.9%) 6.431 MB/sec [Average]
[info]   (min, avg, max) = (322.839, 325.242, 326.836), stdev = 1.670
[info]   CI (99.9%): [318.811, 331.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   218.907 ±(99.9%) 41.326 B/op [Average]
[info]   (min, avg, max) = (211.629, 218.907, 237.228), stdev = 10.732
[info]   CI (99.9%): [177.582, 260.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.031 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.015), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 71.43% complete, ETA 00:08:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 104974.421 ops/s
[info] # Warmup Iteration   2: 247472.526 ops/s
[info] # Warmup Iteration   3: 251778.281 ops/s
[info] # Warmup Iteration   4: 251150.172 ops/s
[info] # Warmup Iteration   5: 250089.720 ops/s
[info] Iteration   1: 248923.227 ops/s
[info]                  ·gc.alloc.rate:                   975.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6289.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 248937.801 ops/s
[info]                  ·gc.alloc.rate:                   975.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6323.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 252033.951 ops/s
[info]                  ·gc.alloc.rate:               987.938 MB/sec
[info]                  ·gc.alloc.rate.norm:          6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6267.004 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 250316.741 ops/s
[info]                  ·gc.alloc.rate:               981.247 MB/sec
[info]                  ·gc.alloc.rate.norm:          6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6337.211 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 250367.613 ops/s
[info]                  ·gc.alloc.rate:                   981.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6352.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay":
[info]   250115.867 ±(99.9%) 4943.620 ops/s [Average]
[info]   (min, avg, max) = (248923.227, 250115.867, 252033.951), stdev = 1283.842
[info]   CI (99.9%): [245172.247, 255059.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   980.456 ±(99.9%) 19.239 MB/sec [Average]
[info]   (min, avg, max) = (975.815, 980.456, 987.938), stdev = 4.996
[info]   CI (99.9%): [961.217, 999.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.001, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1003.659 ±(99.9%) 23.829 MB/sec [Average]
[info]   (min, avg, max) = (995.085, 1003.659, 1010.705), stdev = 6.188
[info]   CI (99.9%): [979.830, 1027.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6314.017 ±(99.9%) 134.658 B/op [Average]
[info]   (min, avg, max) = (6267.004, 6314.017, 6352.240), stdev = 34.970
[info]   CI (99.9%): [6179.360, 6448.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.158 ±(99.9%) 0.554 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.158, 0.263), stdev = 0.144
[info]   CI (99.9%): [≈ 0, 0.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce
[info] # Run progress: 72.32% complete, ETA 00:08:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 364491.929 ops/s
[info] # Warmup Iteration   2: 602045.075 ops/s
[info] # Warmup Iteration   3: 608626.272 ops/s
[info] # Warmup Iteration   4: 605184.417 ops/s
[info] # Warmup Iteration   5: 613725.306 ops/s
[info] Iteration   1: 610818.061 ops/s
[info]                  ·gc.alloc.rate:                   1602.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              4128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4327.817 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 611041.635 ops/s
[info]                  ·gc.alloc.rate:                   1603.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              4128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4337.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.321 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 616712.419 ops/s
[info]                  ·gc.alloc.rate:                   1618.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              4128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.380 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3452.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 615966.246 ops/s
[info]                  ·gc.alloc.rate:                   1616.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              4128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4329.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 614454.842 ops/s
[info]                  ·gc.alloc.rate:                   1612.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              4128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4347.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.213 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce":
[info]   613798.640 ±(99.9%) 10563.712 ops/s [Average]
[info]   (min, avg, max) = (610818.061, 613798.640, 616712.419), stdev = 2743.362
[info]   CI (99.9%): [603234.929, 624362.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1610.519 ±(99.9%) 27.232 MB/sec [Average]
[info]   (min, avg, max) = (1602.453, 1610.519, 1618.029), stdev = 7.072
[info]   CI (99.9%): [1583.287, 1637.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4128.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4128.001, 4128.001, 4128.001), stdev = 0.001
[info]   CI (99.9%): [4128.001, 4128.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1622.326 ±(99.9%) 579.598 MB/sec [Average]
[info]   (min, avg, max) = (1353.380, 1622.326, 1697.901), stdev = 150.520
[info]   CI (99.9%): [1042.728, 2201.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4159.082 ±(99.9%) 1520.585 B/op [Average]
[info]   (min, avg, max) = (3452.814, 4159.082, 4347.398), stdev = 394.891
[info]   CI (99.9%): [2638.498, 5679.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.125), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.182 ±(99.9%) 0.345 B/op [Average]
[info]   (min, avg, max) = (0.106, 0.182, 0.321), stdev = 0.090
[info]   CI (99.9%): [≈ 0, 0.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.000, 9.000), stdev = 1.225
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson
[info] # Run progress: 73.21% complete, ETA 00:08:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 631691.116 ops/s
[info] # Warmup Iteration   2: 1063675.543 ops/s
[info] # Warmup Iteration   3: 1067174.025 ops/s
[info] # Warmup Iteration   4: 1067219.262 ops/s
[info] # Warmup Iteration   5: 1090458.108 ops/s
[info] Iteration   1: 1077604.646 ops/s
[info]                  ·gc.alloc.rate:                   728.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     960.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1081501.250 ops/s
[info]                  ·gc.alloc.rate:                   731.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     960.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1077448.400 ops/s
[info]                  ·gc.alloc.rate:                   728.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1453.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.669 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1076359.741 ops/s
[info]                  ·gc.alloc.rate:                   727.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     972.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1076806.005 ops/s
[info]                  ·gc.alloc.rate:               728.104 MB/sec
[info]                  ·gc.alloc.rate.norm:          1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 974.041 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson":
[info]   1077944.009 ±(99.9%) 7896.102 ops/s [Average]
[info]   (min, avg, max) = (1076359.741, 1077944.009, 1081501.250), stdev = 2050.593
[info]   CI (99.9%): [1070047.907, 1085840.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   728.976 ±(99.9%) 5.387 MB/sec [Average]
[info]   (min, avg, max) = (727.903, 728.976, 731.384), stdev = 1.399
[info]   CI (99.9%): [723.589, 734.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   1064.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1064.000, 1064.000, 1064.000), stdev = 0.001
[info]   CI (99.9%): [1064.000, 1064.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   729.002 ±(99.9%) 573.284 MB/sec [Average]
[info]   (min, avg, max) = (657.782, 729.002, 995.252), stdev = 148.880
[info]   CI (99.9%): [155.718, 1302.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1064.086 ±(99.9%) 838.082 B/op [Average]
[info]   (min, avg, max) = (960.295, 1064.086, 1453.261), stdev = 217.647
[info]   CI (99.9%): [226.003, 1902.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.104 ±(99.9%) 0.763 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.104, 0.458), stdev = 0.198
[info]   CI (99.9%): [≈ 0, 0.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.152 ±(99.9%) 1.114 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.152, 0.669), stdev = 0.289
[info]   CI (99.9%): [≈ 0, 1.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.140
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter
[info] # Run progress: 74.11% complete, ETA 00:07:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3947675.721 ops/s
[info] # Warmup Iteration   2: 4574258.632 ops/s
[info] # Warmup Iteration   3: 4587004.004 ops/s
[info] # Warmup Iteration   4: 4567501.115 ops/s
[info] # Warmup Iteration   5: 4589938.041 ops/s
[info] Iteration   1: 4589318.195 ops/s
[info]                  ·gc.alloc.rate:               513.330 MB/sec
[info]                  ·gc.alloc.rate.norm:          176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 111.369 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 4565561.420 ops/s
[info]                  ·gc.alloc.rate:               510.688 MB/sec
[info]                  ·gc.alloc.rate.norm:          176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 225.274 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 4581278.578 ops/s
[info]                  ·gc.alloc.rate:               512.468 MB/sec
[info]                  ·gc.alloc.rate.norm:          176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 112.708 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 4593211.018 ops/s
[info]                  ·gc.alloc.rate:                   513.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     225.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4587622.643 ops/s
[info]                  ·gc.alloc.rate:               513.178 MB/sec
[info]                  ·gc.alloc.rate.norm:          176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 226.476 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter":
[info]   4583398.371 ±(99.9%) 41821.040 ops/s [Average]
[info]   (min, avg, max) = (4565561.420, 4583398.371, 4593211.018), stdev = 10860.791
[info]   CI (99.9%): [4541577.330, 4625219.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   512.694 ±(99.9%) 4.697 MB/sec [Average]
[info]   (min, avg, max) = (510.688, 512.694, 513.807), stdev = 1.220
[info]   CI (99.9%): [507.997, 517.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   176.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (176.000, 176.000, 176.000), stdev = 0.001
[info]   CI (99.9%): [176.000, 176.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   524.944 ±(99.9%) 697.632 MB/sec [Average]
[info]   (min, avg, max) = (324.823, 524.944, 660.355), stdev = 181.173
[info]   CI (99.9%): [≈ 0, 1222.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   180.223 ±(99.9%) 239.694 B/op [Average]
[info]   (min, avg, max) = (111.369, 180.223, 226.476), stdev = 62.248
[info]   CI (99.9%): [≈ 0, 419.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.012 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.007), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay
[info] # Run progress: 75.00% complete, ETA 00:07:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 199632.018 ops/s
[info] # Warmup Iteration   2: 355741.070 ops/s
[info] # Warmup Iteration   3: 359583.842 ops/s
[info] # Warmup Iteration   4: 352822.733 ops/s
[info] # Warmup Iteration   5: 353551.835 ops/s
[info] Iteration   1: 361464.951 ops/s
[info]                  ·gc.alloc.rate:                   1266.377 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5819.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.272 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 360153.397 ops/s
[info]                  ·gc.alloc.rate:                   1261.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5868.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.273 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 360120.795 ops/s
[info]                  ·gc.alloc.rate:                   1261.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4416.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 359118.620 ops/s
[info]                  ·gc.alloc.rate:               1258.081 MB/sec
[info]                  ·gc.alloc.rate.norm:          5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5917.808 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 357001.036 ops/s
[info]                  ·gc.alloc.rate:                   1250.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5967.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.367 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay":
[info]   359571.760 ±(99.9%) 6396.554 ops/s [Average]
[info]   (min, avg, max) = (357001.036, 359571.760, 361464.951), stdev = 1661.165
[info]   CI (99.9%): [353175.206, 365968.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1259.688 ±(99.9%) 22.620 MB/sec [Average]
[info]   (min, avg, max) = (1250.596, 1259.688, 1266.377), stdev = 5.874
[info]   CI (99.9%): [1237.068, 1282.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5512.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5512.001, 5512.001, 5512.001), stdev = 0.001
[info]   CI (99.9%): [5512.001, 5512.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1279.182 ±(99.9%) 577.987 MB/sec [Average]
[info]   (min, avg, max) = (1010.926, 1279.182, 1353.850), stdev = 150.101
[info]   CI (99.9%): [701.196, 1857.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5597.965 ±(99.9%) 2551.818 B/op [Average]
[info]   (min, avg, max) = (4416.571, 5597.965, 5967.095), stdev = 662.699
[info]   CI (99.9%): [3046.147, 8149.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.219 ±(99.9%) 0.534 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.219, 0.367), stdev = 0.139
[info]   CI (99.9%): [≈ 0, 0.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 7.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce
[info] # Run progress: 75.89% complete, ETA 00:07:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 151167.699 ops/s
[info] # Warmup Iteration   2: 328407.215 ops/s
[info] # Warmup Iteration   3: 341423.775 ops/s
[info] # Warmup Iteration   4: 339055.803 ops/s
[info] # Warmup Iteration   5: 339879.078 ops/s
[info] Iteration   1: 339335.800 ops/s
[info]                  ·gc.alloc.rate:                   1009.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4605.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.483 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 335877.670 ops/s
[info]                  ·gc.alloc.rate:                   999.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4680.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.195 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 342003.238 ops/s
[info]                  ·gc.alloc.rate:                   1017.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4612.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 330548.664 ops/s
[info]                  ·gc.alloc.rate:               983.318 MB/sec
[info]                  ·gc.alloc.rate.norm:          4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4794.094 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 342890.863 ops/s
[info]                  ·gc.alloc.rate:                   1019.970 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4633.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.287 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce":
[info]   338131.247 ±(99.9%) 19413.450 ops/s [Average]
[info]   (min, avg, max) = (330548.664, 338131.247, 342890.863), stdev = 5041.611
[info]   CI (99.9%): [318717.797, 357544.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1005.801 ±(99.9%) 57.663 MB/sec [Average]
[info]   (min, avg, max) = (983.318, 1005.801, 1019.970), stdev = 14.975
[info]   CI (99.9%): [948.138, 1063.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4680.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4680.001, 4680.001, 4680.001), stdev = 0.001
[info]   CI (99.9%): [4680.001, 4680.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1002.429 ±(99.9%) 25.497 MB/sec [Average]
[info]   (min, avg, max) = (993.207, 1002.429, 1009.908), stdev = 6.621
[info]   CI (99.9%): [976.932, 1027.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4665.158 ±(99.9%) 299.768 B/op [Average]
[info]   (min, avg, max) = (4605.143, 4665.158, 4794.094), stdev = 77.849
[info]   CI (99.9%): [4365.391, 4964.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.231 ±(99.9%) 0.674 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.231, 0.483), stdev = 0.175
[info]   CI (99.9%): [≈ 0, 0.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.140
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson
[info] # Run progress: 76.79% complete, ETA 00:07:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127785.513 ops/s
[info] # Warmup Iteration   2: 812500.670 ops/s
[info] # Warmup Iteration   3: 810625.662 ops/s
[info] # Warmup Iteration   4: 802921.403 ops/s
[info] # Warmup Iteration   5: 812601.691 ops/s
[info] Iteration   1: 814479.437 ops/s
[info]                  ·gc.alloc.rate:                   1242.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2567.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.241 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 792470.521 ops/s
[info]                  ·gc.alloc.rate:                   1208.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2651.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 818313.135 ops/s
[info]                  ·gc.alloc.rate:                   1248.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1934.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 800196.546 ops/s
[info]                  ·gc.alloc.rate:                   1220.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2645.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 811436.447 ops/s
[info]                  ·gc.alloc.rate:               1237.738 MB/sec
[info]                  ·gc.alloc.rate.norm:          2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2617.645 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson":
[info]   807379.218 ±(99.9%) 41306.336 ops/s [Average]
[info]   (min, avg, max) = (792470.521, 807379.218, 818313.135), stdev = 10727.124
[info]   CI (99.9%): [766072.881, 848685.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1231.534 ±(99.9%) 62.979 MB/sec [Average]
[info]   (min, avg, max) = (1208.832, 1231.534, 1248.260), stdev = 16.356
[info]   CI (99.9%): [1168.555, 1294.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   2400.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2400.001, 2400.001, 2400.001), stdev = 0.001
[info]   CI (99.9%): [2400.000, 2400.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1273.152 ±(99.9%) 576.146 MB/sec [Average]
[info]   (min, avg, max) = (1005.900, 1273.152, 1349.982), stdev = 149.623
[info]   CI (99.9%): [697.006, 1849.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2483.225 ±(99.9%) 1189.097 B/op [Average]
[info]   (min, avg, max) = (1934.020, 2483.225, 2651.671), stdev = 308.805
[info]   CI (99.9%): [1294.128, 3672.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.097 ±(99.9%) 0.339 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.097, 0.241), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter
[info] # Run progress: 77.68% complete, ETA 00:06:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2228978.403 ops/s
[info] # Warmup Iteration   2: 2496178.597 ops/s
[info] # Warmup Iteration   3: 2473604.915 ops/s
[info] # Warmup Iteration   4: 2477755.872 ops/s
[info] # Warmup Iteration   5: 2476779.877 ops/s
[info] Iteration   1: 2468429.528 ops/s
[info]                  ·gc.alloc.rate:                   414.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2482980.482 ops/s
[info]                  ·gc.alloc.rate:               416.627 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.853 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 205.846 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2473630.659 ops/s
[info]                  ·gc.alloc.rate:                   415.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2492236.068 ops/s
[info]                  ·gc.alloc.rate:               418.156 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 413.526 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 2491791.388 ops/s
[info]                  ·gc.alloc.rate:                   418.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter":
[info]   2481813.625 ±(99.9%) 41097.377 ops/s [Average]
[info]   (min, avg, max) = (2468429.528, 2481813.625, 2492236.068), stdev = 10672.858
[info]   CI (99.9%): [2440716.248, 2522911.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   416.424 ±(99.9%) 6.910 MB/sec [Average]
[info]   (min, avg, max) = (414.176, 416.424, 418.156), stdev = 1.795
[info]   CI (99.9%): [409.514, 423.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   391.940 ±(99.9%) 566.269 MB/sec [Average]
[info]   (min, avg, max) = (324.844, 391.940, 654.993), stdev = 147.058
[info]   CI (99.9%): [≈ 0, 958.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   248.307 ±(99.9%) 355.658 B/op [Average]
[info]   (min, avg, max) = (205.846, 248.307, 413.526), stdev = 92.363
[info]   CI (99.9%): [≈ 0, 603.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.051 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.026), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 6.000), stdev = 2.049
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay
[info] # Run progress: 78.57% complete, ETA 00:06:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 121688.635 ops/s
[info] # Warmup Iteration   2: 258206.941 ops/s
[info] # Warmup Iteration   3: 263620.563 ops/s
[info] # Warmup Iteration   4: 263671.907 ops/s
[info] # Warmup Iteration   5: 259782.682 ops/s
[info] Iteration   1: 263700.131 ops/s
[info]                  ·gc.alloc.rate:                   946.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              5648.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3955.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.373 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 265072.445 ops/s
[info]                  ·gc.alloc.rate:                   951.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              5648.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5927.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 264247.034 ops/s
[info]                  ·gc.alloc.rate:               948.498 MB/sec
[info]                  ·gc.alloc.rate.norm:          5648.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5973.012 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 262026.692 ops/s
[info]                  ·gc.alloc.rate:                   940.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              5648.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6043.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.375 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 261957.149 ops/s
[info]                  ·gc.alloc.rate:               940.307 MB/sec
[info]                  ·gc.alloc.rate.norm:          5648.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1010.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6067.379 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay":
[info]   263400.690 ±(99.9%) 5298.103 ops/s [Average]
[info]   (min, avg, max) = (261957.149, 263400.690, 265072.445), stdev = 1375.900
[info]   CI (99.9%): [258102.588, 268698.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   945.498 ±(99.9%) 18.973 MB/sec [Average]
[info]   (min, avg, max) = (940.307, 945.498, 951.513), stdev = 4.927
[info]   CI (99.9%): [926.525, 964.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5648.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5648.002, 5648.002, 5648.002), stdev = 0.001
[info]   CI (99.9%): [5648.001, 5648.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   936.252 ±(99.9%) 588.488 MB/sec [Average]
[info]   (min, avg, max) = (662.972, 936.252, 1010.127), stdev = 152.828
[info]   CI (99.9%): [347.764, 1524.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5593.459 ±(99.9%) 3531.595 B/op [Average]
[info]   (min, avg, max) = (3955.870, 5593.459, 6067.379), stdev = 917.144
[info]   CI (99.9%): [2061.864, 9125.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.174 ±(99.9%) 0.728 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.174, 0.375), stdev = 0.189
[info]   CI (99.9%): [≈ 0, 0.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce
[info] # Run progress: 79.46% complete, ETA 00:06:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 365651.374 ops/s
[info] # Warmup Iteration   2: 576018.743 ops/s
[info] # Warmup Iteration   3: 578050.883 ops/s
[info] # Warmup Iteration   4: 582266.386 ops/s
[info] # Warmup Iteration   5: 590066.173 ops/s
[info] Iteration   1: 578484.954 ops/s
[info]                  ·gc.alloc.rate:                   1467.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              3992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4560.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 573805.417 ops/s
[info]                  ·gc.alloc.rate:                   1455.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              3992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3693.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.171 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 579671.863 ops/s
[info]                  ·gc.alloc.rate:                   1470.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              3992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4584.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 583378.978 ops/s
[info]                  ·gc.alloc.rate:                   1480.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              3992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3653.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.112 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 586859.568 ops/s
[info]                  ·gc.alloc.rate:                   1489.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              3992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3637.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce":
[info]   580440.156 ±(99.9%) 19086.766 ops/s [Average]
[info]   (min, avg, max) = (573805.417, 580440.156, 586859.568), stdev = 4956.772
[info]   CI (99.9%): [561353.390, 599526.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate":
[info]   1472.711 ±(99.9%) 48.543 MB/sec [Average]
[info]   (min, avg, max) = (1455.844, 1472.711, 1489.004), stdev = 12.606
[info]   CI (99.9%): [1424.168, 1521.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   3992.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3992.001, 3992.001, 3992.001), stdev = 0.001
[info]   CI (99.9%): [3992.001, 3992.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1484.912 ±(99.9%) 696.641 MB/sec [Average]
[info]   (min, avg, max) = (1347.038, 1484.912, 1689.113), stdev = 180.916
[info]   CI (99.9%): [788.271, 2181.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4026.069 ±(99.9%) 1923.921 B/op [Average]
[info]   (min, avg, max) = (3637.384, 4026.069, 4584.977), stdev = 499.636
[info]   CI (99.9%): [2102.147, 5949.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.113 ±(99.9%) 0.157 B/op [Average]
[info]   (min, avg, max) = (0.056, 0.113, 0.171), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 9.000), stdev = 2.191
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson
[info] # Run progress: 80.36% complete, ETA 00:05:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 622323.062 ops/s
[info] # Warmup Iteration   2: 1095300.155 ops/s
[info] # Warmup Iteration   3: 1086576.226 ops/s
[info] # Warmup Iteration   4: 1094382.856 ops/s
[info] # Warmup Iteration   5: 1090696.898 ops/s
[info] Iteration   1: 1092823.510 ops/s
[info]                  ·gc.alloc.rate:               627.872 MB/sec
[info]                  ·gc.alloc.rate.norm:          904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 471.528 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 1097890.389 ops/s
[info]                  ·gc.alloc.rate:               630.763 MB/sec
[info]                  ·gc.alloc.rate.norm:          904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 942.551 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 1086343.193 ops/s
[info]                  ·gc.alloc.rate:                   624.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     956.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1100222.134 ops/s
[info]                  ·gc.alloc.rate:                   632.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     948.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.804 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1080843.818 ops/s
[info]                  ·gc.alloc.rate:               621.011 MB/sec
[info]                  ·gc.alloc.rate.norm:          904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 967.071 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson":
[info]   1091624.609 ±(99.9%) 30969.186 ops/s [Average]
[info]   (min, avg, max) = (1080843.818, 1091624.609, 1100222.134), stdev = 8042.599
[info]   CI (99.9%): [1060655.423, 1122593.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate":
[info]   627.180 ±(99.9%) 17.749 MB/sec [Average]
[info]   (min, avg, max) = (621.011, 627.180, 632.116), stdev = 4.609
[info]   CI (99.9%): [609.431, 644.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm":
[info]   904.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (904.000, 904.000, 904.000), stdev = 0.001
[info]   CI (99.9%): [904.000, 904.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   594.568 ±(99.9%) 574.971 MB/sec [Average]
[info]   (min, avg, max) = (327.499, 594.568, 664.339), stdev = 149.318
[info]   CI (99.9%): [19.597, 1169.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   857.152 ±(99.9%) 830.845 B/op [Average]
[info]   (min, avg, max) = (471.528, 857.152, 967.071), stdev = 215.768
[info]   CI (99.9%): [26.307, 1687.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.121 ±(99.9%) 0.953 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.121, 0.562), stdev = 0.247
[info]   CI (99.9%): [≈ 0, 1.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.173 ±(99.9%) 1.362 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.173, 0.804), stdev = 0.354
[info]   CI (99.9%): [≈ 0, 1.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 4.000), stdev = 1.140
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter
[info] # Run progress: 81.25% complete, ETA 00:05:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3140342.372 ops/s
[info] # Warmup Iteration   2: 3378586.082 ops/s
[info] # Warmup Iteration   3: 3324753.624 ops/s
[info] # Warmup Iteration   4: 3198591.056 ops/s
[info] # Warmup Iteration   5: 3409440.473 ops/s
[info] Iteration   1: 3376406.147 ops/s
[info]                  ·gc.alloc.rate:                   257.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          42.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.426 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.131 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         28.000 ms
[info] Iteration   2: 3442540.613 ops/s
[info]                  ·gc.alloc.rate:               262.557 MB/sec
[info]                  ·gc.alloc.rate.norm:          120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 148.161 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3459398.057 ops/s
[info]                  ·gc.alloc.rate:               263.838 MB/sec
[info]                  ·gc.alloc.rate.norm:          120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 147.441 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 3457450.591 ops/s
[info]                  ·gc.alloc.rate:               263.674 MB/sec
[info]                  ·gc.alloc.rate.norm:          120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 147.675 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 3473340.676 ops/s
[info]                  ·gc.alloc.rate:               264.917 MB/sec
[info]                  ·gc.alloc.rate.norm:          120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 147.002 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter":
[info]   3441827.217 ±(99.9%) 146960.819 ops/s [Average]
[info]   (min, avg, max) = (3376406.147, 3441827.217, 3473340.676), stdev = 38165.258
[info]   CI (99.9%): [3294866.397, 3588788.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate":
[info]   262.497 ±(99.9%) 11.231 MB/sec [Average]
[info]   (min, avg, max) = (257.499, 262.497, 264.917), stdev = 2.917
[info]   CI (99.9%): [251.266, 273.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (120.000, 120.000, 120.000), stdev = 0.001
[info]   CI (99.9%): [120.000, 120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   267.969 ±(99.9%) 485.358 MB/sec [Average]
[info]   (min, avg, max) = (42.491, 267.969, 324.527), stdev = 126.046
[info]   CI (99.9%): [≈ 0, 753.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   122.016 ±(99.9%) 220.030 B/op [Average]
[info]   (min, avg, max) = (19.802, 122.016, 148.161), stdev = 57.141
[info]   CI (99.9%): [≈ 0, 342.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.485 ±(99.9%) 4.178 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.485, 2.426), stdev = 1.085
[info]   CI (99.9%): [≈ 0, 4.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.226 ±(99.9%) 1.947 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.226, 1.131), stdev = 0.506
[info]   CI (99.9%): [≈ 0, 2.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 6.400, 28.000), stdev = 12.075
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay
[info] # Run progress: 82.14% complete, ETA 00:05:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 209581.022 ops/s
[info] # Warmup Iteration   2: 379593.489 ops/s
[info] # Warmup Iteration   3: 381877.206 ops/s
[info] # Warmup Iteration   4: 378236.981 ops/s
[info] # Warmup Iteration   5: 382377.447 ops/s
[info] Iteration   1: 382888.776 ops/s
[info]                  ·gc.alloc.rate:                   1317.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.687 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5501.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.428 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 380982.441 ops/s
[info]                  ·gc.alloc.rate:                   1311.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5553.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.344 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 380781.026 ops/s
[info]                  ·gc.alloc.rate:                   1310.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5575.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 380677.142 ops/s
[info]                  ·gc.alloc.rate:                   1310.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4191.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 383909.149 ops/s
[info]                  ·gc.alloc.rate:                   1321.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5551.951 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay":
[info]   381847.707 ±(99.9%) 5642.896 ops/s [Average]
[info]   (min, avg, max) = (380677.142, 381847.707, 383909.149), stdev = 1465.442
[info]   CI (99.9%): [376204.811, 387490.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate":
[info]   1314.386 ±(99.9%) 19.350 MB/sec [Average]
[info]   (min, avg, max) = (1310.322, 1314.386, 1321.451), stdev = 5.025
[info]   CI (99.9%): [1295.036, 1333.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   5416.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5416.001, 5416.001, 5416.001), stdev = 0.001
[info]   CI (99.9%): [5416.001, 5416.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1280.292 ±(99.9%) 573.444 MB/sec [Average]
[info]   (min, avg, max) = (1014.100, 1280.292, 1354.622), stdev = 148.922
[info]   CI (99.9%): [706.848, 1853.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5274.713 ±(99.9%) 2333.804 B/op [Average]
[info]   (min, avg, max) = (4191.616, 5274.713, 5575.496), stdev = 606.082
[info]   CI (99.9%): [2940.909, 7608.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.257 ±(99.9%) 0.522 B/op [Average]
[info]   (min, avg, max) = (0.085, 0.257, 0.428), stdev = 0.135
[info]   CI (99.9%): [≈ 0, 0.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce
[info] # Run progress: 83.04% complete, ETA 00:05:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 148830.757 ops/s
[info] # Warmup Iteration   2: 323639.412 ops/s
[info] # Warmup Iteration   3: 335860.501 ops/s
[info] # Warmup Iteration   4: 331947.746 ops/s
[info] # Warmup Iteration   5: 339220.695 ops/s
[info] Iteration   1: 332759.189 ops/s
[info]                  ·gc.alloc.rate:                   976.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.228 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4696.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 333564.677 ops/s
[info]                  ·gc.alloc.rate:                   978.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4714.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 339724.971 ops/s
[info]                  ·gc.alloc.rate:                   996.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4647.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 334668.311 ops/s
[info]                  ·gc.alloc.rate:                   981.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4735.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.294 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 338903.399 ops/s
[info]                  ·gc.alloc.rate:                   994.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4688.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce":
[info]   335924.109 ±(99.9%) 12250.161 ops/s [Average]
[info]   (min, avg, max) = (332759.189, 335924.109, 339724.971), stdev = 3181.328
[info]   CI (99.9%): [323673.949, 348174.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   985.569 ±(99.9%) 35.985 MB/sec [Average]
[info]   (min, avg, max) = (976.261, 985.569, 996.734), stdev = 9.345
[info]   CI (99.9%): [949.584, 1021.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4616.001, 4616.001, 4616.001), stdev = 0.001
[info]   CI (99.9%): [4616.001, 4616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1002.701 ±(99.9%) 25.340 MB/sec [Average]
[info]   (min, avg, max) = (993.228, 1002.701, 1009.912), stdev = 6.581
[info]   CI (99.9%): [977.361, 1028.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4696.420 ±(99.9%) 125.834 B/op [Average]
[info]   (min, avg, max) = (4647.651, 4696.420, 4735.084), stdev = 32.679
[info]   CI (99.9%): [4570.586, 4822.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.254 ±(99.9%) 0.436 B/op [Average]
[info]   (min, avg, max) = (0.096, 0.254, 0.394), stdev = 0.113
[info]   CI (99.9%): [≈ 0, 0.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 8.000), stdev = 1.517
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson
[info] # Run progress: 83.93% complete, ETA 00:04:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 84453.984 ops/s
[info] # Warmup Iteration   2: 443616.151 ops/s
[info] # Warmup Iteration   3: 658879.347 ops/s
[info] # Warmup Iteration   4: 659102.221 ops/s
[info] # Warmup Iteration   5: 660521.762 ops/s
[info] Iteration   1: 660061.424 ops/s
[info]                  ·gc.alloc.rate:               983.361 MB/sec
[info]                  ·gc.alloc.rate.norm:          2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2357.962 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 656959.449 ops/s
[info]                  ·gc.alloc.rate:                   978.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2383.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 652503.394 ops/s
[info]                  ·gc.alloc.rate:                   972.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2406.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 661999.201 ops/s
[info]                  ·gc.alloc.rate:                   986.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2381.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 661177.879 ops/s
[info]                  ·gc.alloc.rate:               985.017 MB/sec
[info]                  ·gc.alloc.rate.norm:          2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2392.880 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson":
[info]   658540.270 ±(99.9%) 14935.580 ops/s [Average]
[info]   (min, avg, max) = (652503.394, 658540.270, 661999.201), stdev = 3878.723
[info]   CI (99.9%): [643604.689, 673475.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   981.101 ±(99.9%) 22.231 MB/sec [Average]
[info]   (min, avg, max) = (972.121, 981.101, 986.265), stdev = 5.773
[info]   CI (99.9%): [958.870, 1003.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2344.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2344.001, 2344.001, 2344.001), stdev = 0.001
[info]   CI (99.9%): [2344.001, 2344.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   998.022 ±(99.9%) 24.379 MB/sec [Average]
[info]   (min, avg, max) = (989.218, 998.022, 1005.557), stdev = 6.331
[info]   CI (99.9%): [973.643, 1022.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2384.473 ±(99.9%) 68.152 B/op [Average]
[info]   (min, avg, max) = (2357.962, 2384.473, 2406.200), stdev = 17.699
[info]   CI (99.9%): [2316.321, 2452.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.104 ±(99.9%) 0.765 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.104, 0.458), stdev = 0.199
[info]   CI (99.9%): [≈ 0, 0.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.249 ±(99.9%) 1.832 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.249, 1.097), stdev = 0.476
[info]   CI (99.9%): [≈ 0, 2.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.581
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 84.82% complete, ETA 00:04:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1814728.616 ops/s
[info] # Warmup Iteration   2: 2138140.066 ops/s
[info] # Warmup Iteration   3: 2151854.290 ops/s
[info] # Warmup Iteration   4: 2131289.266 ops/s
[info] # Warmup Iteration   5: 2143049.064 ops/s
[info] Iteration   1: 2139877.992 ops/s
[info]                  ·gc.alloc.rate:                   402.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     238.846 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2128713.044 ops/s
[info]                  ·gc.alloc.rate:               400.482 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 240.101 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2153671.898 ops/s
[info]                  ·gc.alloc.rate:               405.143 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 477.576 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 2157903.478 ops/s
[info]                  ·gc.alloc.rate:               405.936 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 239.290 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2157854.482 ops/s
[info]                  ·gc.alloc.rate:                   405.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     239.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter":
[info]   2147604.179 ±(99.9%) 49631.888 ops/s [Average]
[info]   (min, avg, max) = (2128713.044, 2147604.179, 2157903.478), stdev = 12889.244
[info]   CI (99.9%): [2097972.291, 2197236.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   404.012 ±(99.9%) 9.267 MB/sec [Average]
[info]   (min, avg, max) = (400.482, 404.012, 405.936), stdev = 2.407
[info]   CI (99.9%): [394.745, 413.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (296.000, 296.000, 296.000), stdev = 0.001
[info]   CI (99.9%): [296.000, 296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   391.936 ±(99.9%) 563.437 MB/sec [Average]
[info]   (min, avg, max) = (324.843, 391.936, 653.670), stdev = 146.323
[info]   CI (99.9%): [≈ 0, 955.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   287.021 ±(99.9%) 410.188 B/op [Average]
[info]   (min, avg, max) = (238.846, 287.021, 477.576), stdev = 106.525
[info]   CI (99.9%): [≈ 0, 697.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.128 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.077), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay
[info] # Run progress: 85.71% complete, ETA 00:04:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 113361.147 ops/s
[info] # Warmup Iteration   2: 248910.640 ops/s
[info] # Warmup Iteration   3: 255370.943 ops/s
[info] # Warmup Iteration   4: 251216.157 ops/s
[info] # Warmup Iteration   5: 253137.602 ops/s
[info] Iteration   1: 253880.588 ops/s
[info]                  ·gc.alloc.rate:                   984.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6167.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.645 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 253705.396 ops/s
[info]                  ·gc.alloc.rate:                   984.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6200.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 253402.237 ops/s
[info]                  ·gc.alloc.rate:               983.071 MB/sec
[info]                  ·gc.alloc.rate.norm:          6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6232.954 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 253002.613 ops/s
[info]                  ·gc.alloc.rate:                   981.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6265.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 254408.935 ops/s
[info]                  ·gc.alloc.rate:               987.016 MB/sec
[info]                  ·gc.alloc.rate.norm:          6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1010.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6247.607 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay":
[info]   253679.954 ±(99.9%) 2026.837 ops/s [Average]
[info]   (min, avg, max) = (253002.613, 253679.954, 254408.935), stdev = 526.363
[info]   CI (99.9%): [251653.117, 255706.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   984.146 ±(99.9%) 8.027 MB/sec [Average]
[info]   (min, avg, max) = (981.438, 984.146, 987.016), stdev = 2.084
[info]   CI (99.9%): [976.120, 992.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6104.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6104.002, 6104.002, 6104.002), stdev = 0.001
[info]   CI (99.9%): [6104.002, 6104.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1003.316 ±(99.9%) 22.981 MB/sec [Average]
[info]   (min, avg, max) = (995.227, 1003.316, 1010.237), stdev = 5.968
[info]   CI (99.9%): [980.335, 1026.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6222.921 ±(99.9%) 150.068 B/op [Average]
[info]   (min, avg, max) = (6167.705, 6222.921, 6265.623), stdev = 38.972
[info]   CI (99.9%): [6072.853, 6372.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.207 ±(99.9%) 1.031 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.207, 0.645), stdev = 0.268
[info]   CI (99.9%): [≈ 0, 1.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce
[info] # Run progress: 86.61% complete, ETA 00:04:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 383912.581 ops/s
[info] # Warmup Iteration   2: 626915.607 ops/s
[info] # Warmup Iteration   3: 634492.678 ops/s
[info] # Warmup Iteration   4: 621072.724 ops/s
[info] # Warmup Iteration   5: 632558.302 ops/s
[info] Iteration   1: 636050.900 ops/s
[info]                  ·gc.alloc.rate:                   1222.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2474.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 632372.273 ops/s
[info]                  ·gc.alloc.rate:                   1215.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3335.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 634416.176 ops/s
[info]                  ·gc.alloc.rate:                   1219.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3338.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 632043.215 ops/s
[info]                  ·gc.alloc.rate:                   1214.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2521.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 635163.047 ops/s
[info]                  ·gc.alloc.rate:                   1220.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3350.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce":
[info]   634009.122 ±(99.9%) 6727.659 ops/s [Average]
[info]   (min, avg, max) = (632043.215, 634009.122, 636050.900), stdev = 1747.152
[info]   CI (99.9%): [627281.464, 640736.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1218.551 ±(99.9%) 13.105 MB/sec [Average]
[info]   (min, avg, max) = (1214.692, 1218.551, 1222.576), stdev = 3.403
[info]   CI (99.9%): [1205.446, 1231.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3024.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3024.001, 3024.001, 3024.001), stdev = 0.001
[info]   CI (99.9%): [3024.001, 3024.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1210.561 ±(99.9%) 716.978 MB/sec [Average]
[info]   (min, avg, max) = (1000.612, 1210.561, 1352.735), stdev = 186.197
[info]   CI (99.9%): [493.583, 1927.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3004.220 ±(99.9%) 1780.099 B/op [Average]
[info]   (min, avg, max) = (2474.981, 3004.220, 3350.832), stdev = 462.286
[info]   CI (99.9%): [1224.122, 4784.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.114 ±(99.9%) 0.258 B/op [Average]
[info]   (min, avg, max) = (0.052, 0.114, 0.206), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 9.000), stdev = 2.793
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson
[info] # Run progress: 87.50% complete, ETA 00:03:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1050386.013 ops/s
[info] # Warmup Iteration   2: 1635676.885 ops/s
[info] # Warmup Iteration   3: 1635398.229 ops/s
[info] # Warmup Iteration   4: 1632979.945 ops/s
[info] # Warmup Iteration   5: 1642130.425 ops/s
[info] Iteration   1: 1637609.308 ops/s
[info]                  ·gc.alloc.rate:               724.413 MB/sec
[info]                  ·gc.alloc.rate.norm:          696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 632.545 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1623392.051 ops/s
[info]                  ·gc.alloc.rate:                   718.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     641.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1623367.019 ops/s
[info]                  ·gc.alloc.rate:                   718.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     965.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1647073.076 ops/s
[info]                  ·gc.alloc.rate:               728.576 MB/sec
[info]                  ·gc.alloc.rate.norm:          696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 636.823 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1627844.183 ops/s
[info]                  ·gc.alloc.rate:               720.098 MB/sec
[info]                  ·gc.alloc.rate.norm:          696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 646.319 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson":
[info]   1631857.128 ±(99.9%) 39666.112 ops/s [Average]
[info]   (min, avg, max) = (1623367.019, 1631857.128, 1647073.076), stdev = 10301.163
[info]   CI (99.9%): [1592191.015, 1671523.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   721.870 ±(99.9%) 17.493 MB/sec [Average]
[info]   (min, avg, max) = (718.119, 721.870, 728.576), stdev = 4.543
[info]   CI (99.9%): [704.376, 739.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   696.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (696.000, 696.000, 696.000), stdev = 0.001
[info]   CI (99.9%): [696.000, 696.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   730.254 ±(99.9%) 572.029 MB/sec [Average]
[info]   (min, avg, max) = (658.367, 730.254, 995.896), stdev = 148.554
[info]   CI (99.9%): [158.225, 1302.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   704.436 ±(99.9%) 561.644 B/op [Average]
[info]   (min, avg, max) = (632.545, 704.436, 965.192), stdev = 145.857
[info]   CI (99.9%): [142.792, 1266.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.168 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.101), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 6.000), stdev = 1.673
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter
[info] # Run progress: 88.39% complete, ETA 00:03:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3520625.203 ops/s
[info] # Warmup Iteration   2: 4191798.410 ops/s
[info] # Warmup Iteration   3: 4232482.615 ops/s
[info] # Warmup Iteration   4: 4150715.260 ops/s
[info] # Warmup Iteration   5: 4294166.254 ops/s
[info] Iteration   1: 4293483.223 ops/s
[info]                  ·gc.alloc.rate:               349.265 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 118.802 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 4286248.951 ops/s
[info]                  ·gc.alloc.rate:               348.694 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119.121 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 4292936.440 ops/s
[info]                  ·gc.alloc.rate:               349.225 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 118.938 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 4286913.068 ops/s
[info]                  ·gc.alloc.rate:                   348.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4293398.974 ops/s
[info]                  ·gc.alloc.rate:               349.292 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119.046 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter":
[info]   4290596.131 ±(99.9%) 14165.346 ops/s [Average]
[info]   (min, avg, max) = (4286248.951, 4290596.131, 4293483.223), stdev = 3678.695
[info]   CI (99.9%): [4276430.785, 4304761.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   349.041 ±(99.9%) 1.163 MB/sec [Average]
[info]   (min, avg, max) = (348.694, 349.041, 349.292), stdev = 0.302
[info]   CI (99.9%): [347.878, 350.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   324.571 ±(99.9%) 1.088 MB/sec [Average]
[info]   (min, avg, max) = (324.166, 324.571, 324.858), stdev = 0.283
[info]   CI (99.9%): [323.483, 325.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   119.027 ±(99.9%) 0.631 B/op [Average]
[info]   (min, avg, max) = (118.802, 119.027, 119.226), stdev = 0.164
[info]   CI (99.9%): [118.396, 119.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc
[info] # Run progress: 89.29% complete, ETA 00:03:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3627539.192 ops/s
[info] # Warmup Iteration   2: 4332313.647 ops/s
[info] # Warmup Iteration   3: 4282754.031 ops/s
[info] # Warmup Iteration   4: 4207616.157 ops/s
[info] # Warmup Iteration   5: 4459600.088 ops/s
[info] Iteration   1: 4418622.449 ops/s
[info]                  ·gc.alloc.rate:               134.804 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 91.114 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 4463209.466 ops/s
[info]                  ·gc.alloc.rate:      136.164 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 4420455.482 ops/s
[info]                  ·gc.alloc.rate:               134.857 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 91.078 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 4450748.243 ops/s
[info]                  ·gc.alloc.rate:      135.787 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4450309.404 ops/s
[info]                  ·gc.alloc.rate:               135.769 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 90.465 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc":
[info]   4440669.009 ±(99.9%) 76946.374 ops/s [Average]
[info]   (min, avg, max) = (4418622.449, 4440669.009, 4463209.466), stdev = 19982.729
[info]   CI (99.9%): [4363722.634, 4517615.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate":
[info]   135.476 ±(99.9%) 2.351 MB/sec [Average]
[info]   (min, avg, max) = (134.804, 135.476, 136.164), stdev = 0.610
[info]   CI (99.9%): [133.125, 137.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space":
[info]   153.530 ±(99.9%) 539.681 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.530, 255.887), stdev = 140.154
[info]   CI (99.9%): [≈ 0, 693.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   54.531 ±(99.9%) 191.688 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 54.531, 91.114), stdev = 49.781
[info]   CI (99.9%): [≈ 0, 246.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 0.837
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay
[info] # Run progress: 90.18% complete, ETA 00:02:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106449.979 ops/s
[info] # Warmup Iteration   2: 207937.857 ops/s
[info] # Warmup Iteration   3: 208759.240 ops/s
[info] # Warmup Iteration   4: 211747.702 ops/s
[info] # Warmup Iteration   5: 208512.477 ops/s
[info] Iteration   1: 210770.726 ops/s
[info]                  ·gc.alloc.rate:                   1097.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7453.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.622 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 212644.350 ops/s
[info]                  ·gc.alloc.rate:                   1107.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7422.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 212188.194 ops/s
[info]                  ·gc.alloc.rate:                   1104.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9958.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.463 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 212310.579 ops/s
[info]                  ·gc.alloc.rate:                   1105.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7491.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.463 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 210392.514 ops/s
[info]                  ·gc.alloc.rate:               1095.423 MB/sec
[info]                  ·gc.alloc.rate.norm:          8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1012.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7574.652 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay":
[info]   211661.273 ±(99.9%) 3883.479 ops/s [Average]
[info]   (min, avg, max) = (210392.514, 211661.273, 212644.350), stdev = 1008.527
[info]   CI (99.9%): [207777.794, 215544.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1102.031 ±(99.9%) 20.227 MB/sec [Average]
[info]   (min, avg, max) = (1095.423, 1102.031, 1107.148), stdev = 5.253
[info]   CI (99.9%): [1081.804, 1122.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8192.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8192.002, 8192.002, 8192.002), stdev = 0.001
[info]   CI (99.9%): [8192.002, 8192.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1073.653 ±(99.9%) 579.947 MB/sec [Average]
[info]   (min, avg, max) = (998.518, 1073.653, 1342.871), stdev = 150.610
[info]   CI (99.9%): [493.706, 1653.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7979.988 ±(99.9%) 4263.770 B/op [Average]
[info]   (min, avg, max) = (7422.007, 7979.988, 9958.135), stdev = 1107.288
[info]   CI (99.9%): [3716.218, 12243.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.340 ±(99.9%) 0.981 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.340, 0.622), stdev = 0.255
[info]   CI (99.9%): [≈ 0, 1.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 1.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce
[info] # Run progress: 91.07% complete, ETA 00:02:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108051.791 ops/s
[info] # Warmup Iteration   2: 122811.570 ops/s
[info] # Warmup Iteration   3: 124008.193 ops/s
[info] # Warmup Iteration   4: 124952.034 ops/s
[info] # Warmup Iteration   5: 122710.549 ops/s
[info] Iteration   1: 124883.053 ops/s
[info]                  ·gc.alloc.rate:               1055.395 MB/sec
[info]                  ·gc.alloc.rate.norm:          13296.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      997.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12567.901 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 124459.253 ops/s
[info]                  ·gc.alloc.rate:                   1051.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              13296.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16915.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 124213.573 ops/s
[info]                  ·gc.alloc.rate:                   1049.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              13296.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12757.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.791 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 125546.124 ops/s
[info]                  ·gc.alloc.rate:                   1060.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              13296.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12656.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 125807.744 ops/s
[info]                  ·gc.alloc.rate:                   1063.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              13296.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12666.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.521 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce":
[info]   124981.949 ±(99.9%) 2635.388 ops/s [Average]
[info]   (min, avg, max) = (124213.573, 124981.949, 125807.744), stdev = 684.402
[info]   CI (99.9%): [122346.562, 127617.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.alloc.rate":
[info]   1056.218 ±(99.9%) 22.211 MB/sec [Average]
[info]   (min, avg, max) = (1049.746, 1056.218, 1063.160), stdev = 5.768
[info]   CI (99.9%): [1034.006, 1078.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.alloc.rate.norm":
[info]   13296.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13296.003, 13296.004, 13296.004), stdev = 0.001
[info]   CI (99.9%): [13296.003, 13296.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Eden_Space":
[info]   1073.151 ±(99.9%) 570.751 MB/sec [Average]
[info]   (min, avg, max) = (997.601, 1073.151, 1338.101), stdev = 148.222
[info]   CI (99.9%): [502.400, 1643.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   13512.824 ±(99.9%) 7328.528 B/op [Average]
[info]   (min, avg, max) = (12567.901, 13512.824, 16915.234), stdev = 1903.195
[info]   CI (99.9%): [6184.296, 20841.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.525 ±(99.9%) 1.605 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.525, 1.053), stdev = 0.417
[info]   CI (99.9%): [≈ 0, 2.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 6.000), stdev = 1.304
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson
[info] # Run progress: 91.96% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 543731.715 ops/s
[info] # Warmup Iteration   2: 587121.491 ops/s
[info] # Warmup Iteration   3: 573992.383 ops/s
[info] # Warmup Iteration   4: 589883.244 ops/s
[info] # Warmup Iteration   5: 595300.813 ops/s
[info] Iteration   1: 589319.546 ops/s
[info]                  ·gc.alloc.rate:                   623.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1734.454 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 580992.728 ops/s
[info]                  ·gc.alloc.rate:                   614.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1766.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 584643.950 ops/s
[info]                  ·gc.alloc.rate:                   618.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1762.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.112 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 587884.040 ops/s
[info]                  ·gc.alloc.rate:               621.767 MB/sec
[info]                  ·gc.alloc.rate.norm:          1664.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1760.158 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 588773.640 ops/s
[info]                  ·gc.alloc.rate:                   622.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1764.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson":
[info]   586322.781 ±(99.9%) 13429.419 ops/s [Average]
[info]   (min, avg, max) = (580992.728, 586322.781, 589319.546), stdev = 3487.577
[info]   CI (99.9%): [572893.362, 599752.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.alloc.rate":
[info]   620.087 ±(99.9%) 14.135 MB/sec [Average]
[info]   (min, avg, max) = (614.485, 620.087, 623.236), stdev = 3.671
[info]   CI (99.9%): [605.951, 634.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.alloc.rate.norm":
[info]   1664.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1664.001, 1664.001, 1664.001), stdev = 0.001
[info]   CI (99.9%): [1664.001, 1664.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Eden_Space":
[info]   655.007 ±(99.9%) 16.262 MB/sec [Average]
[info]   (min, avg, max) = (649.623, 655.007, 660.330), stdev = 4.223
[info]   CI (99.9%): [638.745, 671.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1757.745 ±(99.9%) 50.988 B/op [Average]
[info]   (min, avg, max) = (1734.454, 1757.745, 1766.674), stdev = 13.241
[info]   CI (99.9%): [1706.757, 1808.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.067 ±(99.9%) 0.180 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.112), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.304
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter
[info] # Run progress: 92.86% complete, ETA 00:02:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 611099.439 ops/s
[info] # Warmup Iteration   2: 627403.884 ops/s
[info] # Warmup Iteration   3: 612543.366 ops/s
[info] # Warmup Iteration   4: 636663.832 ops/s
[info] # Warmup Iteration   5: 637307.149 ops/s
[info] Iteration   1: 632226.620 ops/s
[info]                  ·gc.alloc.rate:                   533.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1618.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 637220.722 ops/s
[info]                  ·gc.alloc.rate:               537.810 MB/sec
[info]                  ·gc.alloc.rate.norm:          1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 805.372 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 633605.678 ops/s
[info]                  ·gc.alloc.rate:                   534.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1621.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 636620.756 ops/s
[info]                  ·gc.alloc.rate:                   537.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1618.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 641915.615 ops/s
[info]                  ·gc.alloc.rate:               541.723 MB/sec
[info]                  ·gc.alloc.rate.norm:          1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 804.411 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter":
[info]   636317.878 ±(99.9%) 14450.942 ops/s [Average]
[info]   (min, avg, max) = (632226.620, 636317.878, 641915.615), stdev = 3752.864
[info]   CI (99.9%): [621866.936, 650768.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.alloc.rate":
[info]   537.044 ±(99.9%) 12.105 MB/sec [Average]
[info]   (min, avg, max) = (533.591, 537.044, 541.723), stdev = 3.144
[info]   CI (99.9%): [524.939, 549.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.alloc.rate.norm":
[info]   1328.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1328.001, 1328.001, 1328.001), stdev = 0.001
[info]   CI (99.9%): [1328.001, 1328.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.524 ±(99.9%) 686.811 MB/sec [Average]
[info]   (min, avg, max) = (326.157, 522.524, 654.995), stdev = 178.363
[info]   CI (99.9%): [≈ 0, 1209.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1293.749 ±(99.9%) 1718.411 B/op [Average]
[info]   (min, avg, max) = (804.411, 1293.749, 1621.559), stdev = 446.266
[info]   CI (99.9%): [≈ 0, 3012.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.124 ±(99.9%) 0.458 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.124, 0.259), stdev = 0.119
[info]   CI (99.9%): [≈ 0, 0.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniterPrealloc
[info] # Run progress: 93.75% complete, ETA 00:01:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 696882.859 ops/s
[info] # Warmup Iteration   2: 717839.388 ops/s
[info] # Warmup Iteration   3: 721002.146 ops/s
[info] # Warmup Iteration   4: 723196.428 ops/s
[info] # Warmup Iteration   5: 725268.967 ops/s
[info] Iteration   1: 718586.495 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 715167.090 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 725576.713 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 725072.091 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 724644.091 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniterPrealloc":
[info]   721809.296 ±(99.9%) 17997.453 ops/s [Average]
[info]   (min, avg, max) = (715167.090, 721809.296, 725576.713), stdev = 4673.881
[info]   CI (99.9%): [703811.843, 739806.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay
[info] # Run progress: 94.64% complete, ETA 00:01:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 523709.225 ops/s
[info] # Warmup Iteration   2: 594319.937 ops/s
[info] # Warmup Iteration   3: 592167.268 ops/s
[info] # Warmup Iteration   4: 598576.540 ops/s
[info] # Warmup Iteration   5: 591213.668 ops/s
[info] Iteration   1: 600484.472 ops/s
[info]                  ·gc.alloc.rate:                   641.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1716.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 593614.270 ops/s
[info]                  ·gc.alloc.rate:                   633.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1743.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 594993.749 ops/s
[info]                  ·gc.alloc.rate:               635.257 MB/sec
[info]                  ·gc.alloc.rate.norm:          1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1746.220 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 595162.783 ops/s
[info]                  ·gc.alloc.rate:                   635.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1752.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 599753.949 ops/s
[info]                  ·gc.alloc.rate:               640.404 MB/sec
[info]                  ·gc.alloc.rate.norm:          1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1745.450 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay":
[info]   596801.845 ±(99.9%) 11929.702 ops/s [Average]
[info]   (min, avg, max) = (593614.270, 596801.845, 600484.472), stdev = 3098.106
[info]   CI (99.9%): [584872.143, 608731.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.alloc.rate":
[info]   637.246 ±(99.9%) 12.748 MB/sec [Average]
[info]   (min, avg, max) = (633.866, 637.246, 641.184), stdev = 3.311
[info]   CI (99.9%): [624.498, 649.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.alloc.rate.norm":
[info]   1680.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1680.001, 1680.001, 1680.001), stdev = 0.001
[info]   CI (99.9%): [1680.001, 1680.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Eden_Space":
[info]   660.293 ±(99.9%) 15.823 MB/sec [Average]
[info]   (min, avg, max) = (655.040, 660.293, 665.353), stdev = 4.109
[info]   CI (99.9%): [644.470, 676.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Eden_Space.norm":
[info]   1740.799 ±(99.9%) 54.501 B/op [Average]
[info]   (min, avg, max) = (1716.304, 1740.799, 1752.821), stdev = 14.154
[info]   CI (99.9%): [1686.298, 1795.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.055 ±(99.9%) 0.260 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.055, 0.165), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce
[info] # Run progress: 95.54% complete, ETA 00:01:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3432.376 ops/s
[info] # Warmup Iteration   2: 6731.930 ops/s
[info] # Warmup Iteration   3: 7624.248 ops/s
[info] # Warmup Iteration   4: 7535.901 ops/s
[info] # Warmup Iteration   5: 7213.302 ops/s
[info] Iteration   1: 7660.416 ops/s
[info]                  ·gc.alloc.rate:                   975.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              200288.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     203296.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47.044 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 7594.310 ops/s
[info]                  ·gc.alloc.rate:                   966.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              200288.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     206167.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.314 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 7488.649 ops/s
[info]                  ·gc.alloc.rate:               953.326 MB/sec
[info]                  ·gc.alloc.rate.norm:          200288.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1000.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 210205.189 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 7472.906 ops/s
[info]                  ·gc.alloc.rate:                   951.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              200324.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211353.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.455 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 7538.676 ops/s
[info]                  ·gc.alloc.rate:               960.756 MB/sec
[info]                  ·gc.alloc.rate.norm:          200496.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 210201.940 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce":
[info]   7550.992 ±(99.9%) 298.181 ops/s [Average]
[info]   (min, avg, max) = (7472.906, 7550.992, 7660.416), stdev = 77.437
[info]   CI (99.9%): [7252.811, 7849.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate":
[info]   961.496 ±(99.9%) 37.633 MB/sec [Average]
[info]   (min, avg, max) = (951.500, 961.496, 975.200), stdev = 9.773
[info]   CI (99.9%): [923.863, 999.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm":
[info]   200337.010 ±(99.9%) 347.804 B/op [Average]
[info]   (min, avg, max) = (200288.056, 200337.010, 200496.057), stdev = 90.324
[info]   CI (99.9%): [199989.205, 200684.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   999.321 ±(99.9%) 26.759 MB/sec [Average]
[info]   (min, avg, max) = (989.849, 999.321, 1007.266), stdev = 6.949
[info]   CI (99.9%): [972.562, 1026.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   208244.990 ±(99.9%) 13077.536 B/op [Average]
[info]   (min, avg, max) = (203296.743, 208244.990, 211353.586), stdev = 3396.195
[info]   CI (99.9%): [195167.454, 221322.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.379 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.229), stdev = 0.098
[info]   CI (99.9%): [≈ 0, 0.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   11.162 ±(99.9%) 77.697 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.162, 47.044), stdev = 20.178
[info]   CI (99.9%): [≈ 0, 88.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson
[info] # Run progress: 96.43% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16974.740 ops/s
[info] # Warmup Iteration   2: 35510.004 ops/s
[info] # Warmup Iteration   3: 35384.899 ops/s
[info] # Warmup Iteration   4: 35842.801 ops/s
[info] # Warmup Iteration   5: 35826.266 ops/s
[info] Iteration   1: 36087.682 ops/s
[info]                  ·gc.alloc.rate:                   461.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              20099.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14191.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.908 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 35899.631 ops/s
[info]                  ·gc.alloc.rate:               458.639 MB/sec
[info]                  ·gc.alloc.rate.norm:          20100.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28590.094 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 35993.773 ops/s
[info]                  ·gc.alloc.rate:               459.859 MB/sec
[info]                  ·gc.alloc.rate.norm:          20099.896 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14286.848 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 35639.819 ops/s
[info]                  ·gc.alloc.rate:                   455.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28975.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.839 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 35977.035 ops/s
[info]                  ·gc.alloc.rate:               459.606 MB/sec
[info]                  ·gc.alloc.rate.norm:          20100.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14410.161 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson":
[info]   35919.588 ±(99.9%) 654.972 ops/s [Average]
[info]   (min, avg, max) = (35639.819, 35919.588, 36087.682), stdev = 170.094
[info]   CI (99.9%): [35264.616, 36574.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate":
[info]   458.884 ±(99.9%) 8.400 MB/sec [Average]
[info]   (min, avg, max) = (455.290, 458.884, 461.025), stdev = 2.182
[info]   CI (99.9%): [450.483, 467.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   20100.011 ±(99.9%) 0.385 B/op [Average]
[info]   (min, avg, max) = (20099.896, 20100.011, 20100.126), stdev = 0.100
[info]   CI (99.9%): [20099.626, 20100.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   458.114 ±(99.9%) 689.839 MB/sec [Average]
[info]   (min, avg, max) = (325.507, 458.114, 656.339), stdev = 179.149
[info]   CI (99.9%): [≈ 0, 1147.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   20090.916 ±(99.9%) 30559.930 B/op [Average]
[info]   (min, avg, max) = (14191.538, 20090.916, 28975.939), stdev = 7936.317
[info]   CI (99.9%): [≈ 0, 50650.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.549 ±(99.9%) 3.161 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.549, 1.839), stdev = 0.821
[info]   CI (99.9%): [≈ 0, 3.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 1.095
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter
[info] # Run progress: 97.32% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18822.993 ops/s
[info] # Warmup Iteration   2: 47141.437 ops/s
[info] # Warmup Iteration   3: 47238.372 ops/s
[info] # Warmup Iteration   4: 47604.168 ops/s
[info] # Warmup Iteration   5: 47590.390 ops/s
[info] Iteration   1: 47629.289 ops/s
[info]                  ·gc.alloc.rate:                   310.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              10264.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10697.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.344 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 47183.857 ops/s
[info]                  ·gc.alloc.rate:               307.783 MB/sec
[info]                  ·gc.alloc.rate.norm:          10264.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10798.151 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 47643.222 ops/s
[info]                  ·gc.alloc.rate:                   310.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              10264.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10760.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.063 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 47804.978 ops/s
[info]                  ·gc.alloc.rate:               311.879 MB/sec
[info]                  ·gc.alloc.rate.norm:          10264.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10724.596 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 46773.189 ops/s
[info]                  ·gc.alloc.rate:               305.119 MB/sec
[info]                  ·gc.alloc.rate.norm:          10264.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11017.232 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter":
[info]   47406.907 ±(99.9%) 1628.132 ops/s [Average]
[info]   (min, avg, max) = (46773.189, 47406.907, 47804.978), stdev = 422.821
[info]   CI (99.9%): [45778.776, 49035.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate":
[info]   309.258 ±(99.9%) 10.660 MB/sec [Average]
[info]   (min, avg, max) = (305.119, 309.258, 311.879), stdev = 2.768
[info]   CI (99.9%): [298.598, 319.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   10264.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10264.009, 10264.009, 10264.010), stdev = 0.001
[info]   CI (99.9%): [10264.008, 10264.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.370 ±(99.9%) 6.046 MB/sec [Average]
[info]   (min, avg, max) = (323.800, 325.370, 327.510), stdev = 1.570
[info]   CI (99.9%): [319.324, 331.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   10799.619 ±(99.9%) 490.615 B/op [Average]
[info]   (min, avg, max) = (10697.509, 10799.619, 11017.232), stdev = 127.411
[info]   CI (99.9%): [10309.004, 11290.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.015 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.481 ±(99.9%) 3.453 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.481, 2.063), stdev = 0.897
[info]   CI (99.9%): [≈ 0, 3.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc
[info] # Run progress: 98.21% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20857.521 ops/s
[info] # Warmup Iteration   2: 34857.849 ops/s
[info] # Warmup Iteration   3: 49473.215 ops/s
[info] # Warmup Iteration   4: 49857.236 ops/s
[info] # Warmup Iteration   5: 49763.384 ops/s
[info] Iteration   1: 49987.685 ops/s
[info]                  ·gc.alloc.rate:      5.338 MB/sec
[info]                  ·gc.alloc.rate.norm: 168.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 49974.122 ops/s
[info]                  ·gc.alloc.rate:      5.337 MB/sec
[info]                  ·gc.alloc.rate.norm: 168.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 50060.781 ops/s
[info]                  ·gc.alloc.rate:      5.346 MB/sec
[info]                  ·gc.alloc.rate.norm: 168.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 49841.201 ops/s
[info]                  ·gc.alloc.rate:      5.322 MB/sec
[info]                  ·gc.alloc.rate.norm: 168.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 49937.546 ops/s
[info]                  ·gc.alloc.rate:      5.333 MB/sec
[info]                  ·gc.alloc.rate.norm: 168.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc":
[info]   49960.267 ±(99.9%) 308.891 ops/s [Average]
[info]   (min, avg, max) = (49841.201, 49960.267, 50060.781), stdev = 80.218
[info]   CI (99.9%): [49651.376, 50269.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   5.335 ±(99.9%) 0.033 MB/sec [Average]
[info]   (min, avg, max) = (5.322, 5.335, 5.346), stdev = 0.009
[info]   CI (99.9%): [5.302, 5.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   168.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.009, 168.009, 168.009), stdev = 0.001
[info]   CI (99.9%): [168.009, 168.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay
[info] # Run progress: 99.11% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2200.796 ops/s
[info] # Warmup Iteration   2: 4432.886 ops/s
[info] # Warmup Iteration   3: 4654.682 ops/s
[info] # Warmup Iteration   4: 4716.247 ops/s
[info] # Warmup Iteration   5: 4696.718 ops/s
[info] Iteration   1: 4698.076 ops/s
[info]                  ·gc.alloc.rate:                   1197.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              400893.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     334611.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.973 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4717.064 ops/s
[info]                  ·gc.alloc.rate:                   1201.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              400894.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     446167.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.945 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 4684.102 ops/s
[info]                  ·gc.alloc.rate:                   1193.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              400893.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     451212.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.983 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 4704.426 ops/s
[info]                  ·gc.alloc.rate:                   1198.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              400893.686 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     338013.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.963 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4641.069 ops/s
[info]                  ·gc.alloc.rate:               1182.503 MB/sec
[info]                  ·gc.alloc.rate.norm:          400894.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 457876.681 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay":
[info]   4688.947 ±(99.9%) 112.747 ops/s [Average]
[info]   (min, avg, max) = (4641.069, 4688.947, 4717.064), stdev = 29.280
[info]   CI (99.9%): [4576.200, 4801.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate":
[info]   1194.728 ±(99.9%) 28.756 MB/sec [Average]
[info]   (min, avg, max) = (1182.503, 1194.728, 1201.892), stdev = 7.468
[info]   CI (99.9%): [1165.973, 1223.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   400893.826 ±(99.9%) 2.188 B/op [Average]
[info]   (min, avg, max) = (400893.211, 400893.826, 400894.621), stdev = 0.568
[info]   CI (99.9%): [400891.639, 400896.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1208.266 ±(99.9%) 715.252 MB/sec [Average]
[info]   (min, avg, max) = (999.172, 1208.266, 1350.580), stdev = 185.749
[info]   CI (99.9%): [493.014, 1923.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   405576.134 ±(99.9%) 244040.577 B/op [Average]
[info]   (min, avg, max) = (334611.558, 405576.134, 457876.681), stdev = 63376.563
[info]   CI (99.9%): [161535.557, 649616.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8.373 ±(99.9%) 29.521 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.373, 20.983), stdev = 7.666
[info]   CI (99.9%): [≈ 0, 37.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 9.000), stdev = 2.074
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:30:16
[info] Benchmark                                                                                         Mode  Cnt         Score         Error   Units
[info] JsonCodecMakerBenchmark.missingReqFieldCirce                                                     thrpt    5   1460054.441 ±   58067.229   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate                                      thrpt    5      2390.435 ±      95.323  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm                                 thrpt    5      2576.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space                             thrpt    5      2378.568 ±      19.112  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2563.464 ±     117.612    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.083 ±       0.057  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.090 ±       0.064    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count                                           thrpt    5        35.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time                                            thrpt    5        51.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldJackson                                                   thrpt    5    201578.137 ±    6868.642   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate                                    thrpt    5       474.550 ±      16.144  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm                               thrpt    5      3704.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space                           thrpt    5       458.913 ±     688.255  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      3588.393 ±    5460.192    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.012 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.098 ±       0.561    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count                                         thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time                                          thrpt    5        10.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter                                                  thrpt    5    456874.954 ±   12845.591   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate                                   thrpt    5       420.457 ±      11.736  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm                              thrpt    5      1448.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       455.692 ±     686.404  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1567.581 ±    2338.295    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.025 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.086 ±       0.301    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count                                        thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time                                         thrpt    5        10.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless                                         thrpt    5   1738036.335 ±   36243.575   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate                          thrpt    5      1078.112 ±      22.324  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm                     thrpt    5       976.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space                 thrpt    5      1066.524 ±     576.162  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm            thrpt    5       965.153 ±     506.279    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space             thrpt    5         0.029 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.026 ±       0.082    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count                               thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time                                thrpt    5        18.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump                                   thrpt    5   3676141.219 ±   93087.177   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate                    thrpt    5       523.319 ±      13.383  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm               thrpt    5       224.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space           thrpt    5       521.773 ±     686.059  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm      thrpt    5       223.270 ±     292.806    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space       thrpt    5         0.012 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.005 ±       0.019    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count                         thrpt    5         8.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time                          thrpt    5        21.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldPlay                                                      thrpt    5    122384.337 ±    3680.313   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate                                       thrpt    5      1021.156 ±      30.633  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm                                  thrpt    5     13128.004 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1070.695 ±     554.369  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5     13769.560 ±    7304.580    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.062 ±       0.113  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.804 ±       1.471    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count                                            thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time                                             thrpt    5        22.000                    ms
[info] JsonCodecMakerBenchmark.readAdtCirce                                                             thrpt    5    580783.853 ±   17080.704   ops/s
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate                                              thrpt    5      1441.147 ±      42.254  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm                                         thrpt    5      3904.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space                                     thrpt    5      1416.166 ±     585.533  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm                                thrpt    5      3838.510 ±    1690.638    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.050 ±       0.108  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.135 ±       0.290    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.count                                                   thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.time                                                    thrpt    5        29.000                    ms
[info] JsonCodecMakerBenchmark.readAdtJackson                                                           thrpt    5   1114794.070 ±  181883.981   ops/s
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate                                            thrpt    5       895.601 ±     146.062  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm                                       thrpt    5      1264.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space                                   thrpt    5       867.274 ±     708.925  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm                              thrpt    5      1229.599 ±    1102.484    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space                               thrpt    5         0.067 ±       0.262  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.093 ±       0.360    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.count                                                 thrpt    5        13.000                counts
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.time                                                  thrpt    5        17.000                    ms
[info] JsonCodecMakerBenchmark.readAdtJsoniter                                                          thrpt    5   2581020.654 ± 1746687.903   ops/s
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate                                           thrpt    5       170.595 ±     115.452  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm                                      thrpt    5       104.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space                                  thrpt    5       200.784 ±     480.414  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm                             thrpt    5       113.296 ±     269.535    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space                              thrpt    5         0.491 ±       4.187  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.283 ±       2.415    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count                                                thrpt    5         5.000                counts
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time                                                 thrpt    5        29.000                    ms
[info] JsonCodecMakerBenchmark.readAdtPlay                                                              thrpt    5    126766.961 ±    2348.988   ops/s
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate                                               thrpt    5      1054.444 ±      19.527  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm                                          thrpt    5     13088.003 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space                                      thrpt    5      1072.110 ±     568.519  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm                                 thrpt    5     13302.470 ±    6848.759    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space                                  thrpt    5         0.037 ±       0.119  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm                             thrpt    5         0.466 ±       1.477    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.count                                                    thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.time                                                     thrpt    5        20.000                    ms
[info] JsonCodecMakerBenchmark.readAnyRefsCirce                                                         thrpt    5   1162849.274 ±   43474.636   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate                                          thrpt    5      1832.851 ±      68.512  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                                     thrpt    5      2480.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1828.823 ±     705.235  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2475.567 ±     999.435    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.079 ±       0.154  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.107 ±       0.209    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count                                               thrpt    5        27.000                counts
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time                                                thrpt    5        42.000                    ms
[info] JsonCodecMakerBenchmark.readAnyRefsJackson                                                       thrpt    5   1834293.274 ±   64768.248   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate                                        thrpt    5      1287.070 ±      45.178  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                                   thrpt    5      1104.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1279.184 ±     585.869  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1097.391 ±     506.780    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.062 ±       0.127  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.054 ±       0.111    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count                                             thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time                                              thrpt    5        24.000                    ms
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter                                                      thrpt    5   6803451.865 ±  213373.725   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                                       thrpt    5       864.813 ±      27.120  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       200.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       849.627 ±     662.273  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       196.627 ±     156.007    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Old_Gen                                 thrpt    5         0.041 ±       0.351  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Old_Gen.norm                            thrpt    5         0.010 ±       0.082    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.054 ±       0.122  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.013 ±       0.028    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count                                            thrpt    5        14.000                counts
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time                                             thrpt    5        33.000                    ms
[info] JsonCodecMakerBenchmark.readAnyRefsPlay                                                          thrpt    5    415769.558 ±    8289.233   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate                                           thrpt    5      1099.317 ±      21.879  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                                      thrpt    5      4160.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1141.115 ±     714.655  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      4317.461 ±    2681.600    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.046 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.173 ±       0.331    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count                                                thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time                                                 thrpt    5        22.000                    ms
[info] JsonCodecMakerBenchmark.readArraysCirce                                                          thrpt    5    611167.502 ±   23482.966   ops/s
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate                                           thrpt    5      1985.731 ±      76.288  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm                                      thrpt    5      5112.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                                  thrpt    5      2034.588 ±      23.932  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5238.247 ±     233.814    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                              thrpt    5         0.062 ±       0.127  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.161 ±       0.329    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.count                                                thrpt    5        30.000                counts
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.time                                                 thrpt    5        43.000                    ms
[info] JsonCodecMakerBenchmark.readArraysJackson                                                        thrpt    5   1204662.045 ±   15817.749   ops/s
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate                                         thrpt    5      1133.158 ±      14.884  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm                                    thrpt    5      1480.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                                thrpt    5      1141.386 ±     723.664  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1491.208 ±     959.059    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                            thrpt    5         0.042 ±       0.057  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.054 ±       0.074    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.count                                              thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.time                                               thrpt    5        21.000                    ms
[info] JsonCodecMakerBenchmark.readArraysJsoniter                                                       thrpt    5   2858713.721 ±   82099.657   ops/s
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate                                        thrpt    5      1191.914 ±      34.285  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                                   thrpt    5       656.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5      1136.867 ±     706.993  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5       625.886 ±     394.384    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5         0.029 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.016 ±       0.040    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count                                             thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time                                              thrpt    5        26.000                    ms
[info] JsonCodecMakerBenchmark.readArraysPlay                                                           thrpt    5    216580.154 ±    8675.118   ops/s
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate                                            thrpt    5      1326.951 ±      53.194  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm                                       thrpt    5      9640.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                                   thrpt    5      1347.697 ±      26.470  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5      9791.425 ±     375.982    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                               thrpt    5         0.058 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.423 ±       0.484    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.count                                                 thrpt    5        20.000                counts
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.time                                                  thrpt    5        29.000                    ms
[info] JsonCodecMakerBenchmark.readBitSetsJackson                                                       thrpt    5   1533293.513 ±   32156.946   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate                                        thrpt    5       974.529 ±      20.396  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                                   thrpt    5      1000.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                               thrpt    5       935.282 ±     586.153  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5       959.595 ±     598.211    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.083 ±       0.498  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.086 ±       0.512    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count                                             thrpt    5        14.000                counts
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time                                              thrpt    5        20.000                    ms
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter                                                      thrpt    5   3933104.104 ±   87931.729   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate                                       thrpt    5       519.955 ±      11.523  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       208.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       458.518 ±     690.832  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       183.399 ±     275.994    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.012 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.005 ±       0.029    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count                                            thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time                                             thrpt    5         8.000                    ms
[info] JsonCodecMakerBenchmark.readBitSetsPlay                                                          thrpt    5    265978.654 ±    6578.795   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate                                           thrpt    5      1207.694 ±      29.857  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                                      thrpt    5      7144.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1210.221 ±     708.417  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      7155.548 ±    4084.094    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.025 ±       0.036  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.148 ±       0.207    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count                                                thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time                                                 thrpt    5        23.000                    ms
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce                                                   thrpt    5    556772.165 ±   29419.632   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate                                    thrpt    5      1848.609 ±      97.905  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                               thrpt    5      5224.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                           thrpt    5      1829.764 ±     718.777  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5      5172.102 ±    2075.955    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.050 ±       0.166  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.141 ±       0.464    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count                                         thrpt    5        27.000                counts
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time                                          thrpt    5        41.000                    ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson                                                 thrpt    5    702343.880 ±   23443.295   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate                                  thrpt    5       871.378 ±      29.023  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                             thrpt    5      1952.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space                         thrpt    5       866.477 ±     697.889  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5      1943.320 ±    1610.562    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.046 ±       0.183  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.103 ±       0.410    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count                                       thrpt    5        13.000                counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time                                        thrpt    5        18.000                    ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter                                                thrpt    5   4624885.942 ±   50142.345   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                                 thrpt    5       211.626 ±       2.299  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                            thrpt    5        72.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       231.211 ±     513.798  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5        78.731 ±     174.868    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.008 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.003 ±       0.024    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count                                      thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time                                       thrpt    5         8.000                    ms
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay                                                    thrpt    5    198815.462 ±    3891.072   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate                                     thrpt    5      1091.800 ±      21.313  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                                thrpt    5      8640.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1073.722 ±     580.154  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5      8495.718 ±    4537.300    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.042 ±       0.098  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.329 ±       0.777    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count                                          thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time                                           thrpt    5        20.000                    ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce                                                   thrpt    5      5020.391 ±      77.847   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate                                    thrpt    5      1253.966 ±      19.329  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm                               thrpt    5    392960.087 ±       0.010    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                           thrpt    5      1276.646 ±     570.933  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5    400169.211 ±  182347.110    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.049 ±       0.081  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        15.365 ±      25.142    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count                                         thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time                                          thrpt    5        25.000                    ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson                                                 thrpt    5     10497.373 ±     301.296   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate                                  thrpt    5       283.060 ±       8.115  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm                             thrpt    5     42424.042 ±       0.005    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                         thrpt    5       259.467 ±     558.540  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5     38942.062 ±   83830.402    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.004 ±       0.036  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.621 ±       5.346    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count                                       thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time                                        thrpt    5         7.000                    ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter                                                thrpt    5     17780.602 ±     370.122   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate                                 thrpt    5       332.801 ±       6.934  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                            thrpt    5     29448.027 ±       0.018    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       324.783 ±       5.860  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5     28739.284 ±     792.880    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.017 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5         1.469 ±       5.915    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count                                      thrpt    5         5.000                counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time                                       thrpt    5         6.000                    ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay                                                    thrpt    5      1950.139 ±      44.982   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate                                     thrpt    5      1184.007 ±      27.406  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm                                thrpt    5    955216.231 ±       0.034    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1140.526 ±     709.823  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5    920283.322 ±  576981.513    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.046 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5        36.960 ±      71.153    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count                                          thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time                                           thrpt    5        21.000                    ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter                                               thrpt    5   3523533.927 ±  104060.272   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                                thrpt    5      1056.999 ±      31.295  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                           thrpt    5       472.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5      1066.382 ±     588.189  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5       476.420 ±     271.039    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.021 ±       0.001  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.009 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count                                     thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time                                      thrpt    5        21.000                    ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay                                                   thrpt    5    242446.658 ±    7224.118   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                                    thrpt    5      1302.953 ±      38.876  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                               thrpt    5      8456.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1279.984 ±     572.666  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5      8309.164 ±    3786.756    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.046 ±       0.105  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.297 ±       0.681    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count                                         thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time                                          thrpt    5        27.000                    ms
[info] JsonCodecMakerBenchmark.readIterablesCirce                                                       thrpt    5    473154.545 ±   19916.718   ops/s
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate                                        thrpt    5      1724.948 ±      72.617  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm                                   thrpt    5      5736.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                               thrpt    5      1692.225 ±      25.140  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5627.790 ±     276.014    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                           thrpt    5         0.054 ±       0.108  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.180 ±       0.359    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.count                                             thrpt    5        25.000                counts
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.time                                              thrpt    5        35.000                    ms
[info] JsonCodecMakerBenchmark.readIterablesJackson                                                     thrpt    5    541935.404 ±   10555.584   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate                                      thrpt    5       631.023 ±      12.346  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm                                 thrpt    5      1832.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                             thrpt    5       659.165 ±      15.112  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5      1913.779 ±      77.286    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space                         thrpt    5         0.117 ±       0.872  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.338 ±       2.526    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.count                                           thrpt    5        10.000                counts
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.time                                            thrpt    5        17.000                    ms
[info] JsonCodecMakerBenchmark.readIterablesJsoniter                                                    thrpt    5   2953271.855 ±   93008.363   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate                                     thrpt    5      1171.256 ±      36.909  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                                thrpt    5       624.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5      1201.287 ±     703.218  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5       640.480 ±     388.137    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5         0.033 ±       0.122  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.018 ±       0.065    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count                                          thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time                                           thrpt    5        33.000                    ms
[info] JsonCodecMakerBenchmark.readIterablesPlay                                                        thrpt    5    157844.415 ±    3432.694   ops/s
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate                                         thrpt    5      1096.263 ±      23.923  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm                                    thrpt    5     10928.003 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                                thrpt    5      1139.788 ±     714.541  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5     11366.635 ±    7268.127    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                            thrpt    5         0.071 ±       0.209  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.708 ±       2.103    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.count                                              thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.time                                               thrpt    5        28.000                    ms
[info] JsonCodecMakerBenchmark.readMapsCirce                                                            thrpt    5    453135.850 ±    9737.286   ops/s
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate                                             thrpt    5      1619.690 ±      34.877  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm                                        thrpt    5      5624.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1622.268 ±     579.558  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5635.222 ±    2110.155    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.046 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.159 ±       0.306    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.count                                                  thrpt    5        24.000                counts
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.time                                                   thrpt    5        35.000                    ms
[info] JsonCodecMakerBenchmark.readMapsJackson                                                          thrpt    5    910192.536 ±   19470.730   ops/s
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate                                           thrpt    5      1045.947 ±      22.358  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm                                      thrpt    5      1808.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                                  thrpt    5      1001.704 ±      20.127  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5      1731.567 ±      51.723    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.129 ±       0.759  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.224 ±       1.319    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.count                                                thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.time                                                 thrpt    5        24.000                    ms
[info] JsonCodecMakerBenchmark.readMapsJsoniter                                                         thrpt    5   3445673.397 ±  197590.036   ops/s
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate                                          thrpt    5       858.444 ±      49.197  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                                     thrpt    5       392.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       860.419 ±     704.879  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5       393.647 ±     336.559    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.017 ±       0.105  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.008 ±       0.049    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count                                               thrpt    5        13.000                counts
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time                                                thrpt    5        23.000                    ms
[info] JsonCodecMakerBenchmark.readMapsPlay                                                             thrpt    5    250640.919 ±    3906.124   ops/s
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate                                              thrpt    5      1303.676 ±      20.152  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm                                         thrpt    5      8184.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                                     thrpt    5      1280.138 ±     596.341  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      8034.698 ±    3689.828    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.054 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.340 ±       0.276    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.count                                                   thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.time                                                    thrpt    5        24.000                    ms
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce                                                thrpt    5    508832.850 ±   20925.306   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate                                 thrpt    5      1961.082 ±      80.850  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm                            thrpt    5      6064.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space                        thrpt    5      1966.332 ±     581.150  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5      6082.365 ±    1902.258    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space                    thrpt    5         0.083 ±       0.160  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.257 ±       0.490    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count                                      thrpt    5        29.000                counts
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time                                       thrpt    5        38.000                    ms
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter                                             thrpt    5   2088701.255 ±   50256.860   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate                              thrpt    5      1348.764 ±      32.486  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm                         thrpt    5      1016.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5      1340.881 ±      36.974  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5      1010.070 ±      22.298    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.046 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.034 ±       0.050    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count                                   thrpt    5        20.000                counts
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time                                    thrpt    5        24.000                    ms
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay                                                 thrpt    5    161427.998 ±    6714.972   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate                                  thrpt    5      1154.826 ±      48.042  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm                             thrpt    5     11256.003 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space                         thrpt    5      1140.910 ±     700.466  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5     11131.071 ±    7144.439    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.037 ±       0.105  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.365 ±       1.013    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count                                       thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time                                        thrpt    5        21.000                    ms
[info] JsonCodecMakerBenchmark.readMutableMapsJackson                                                   thrpt    5    667430.813 ±   16742.512   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate                                    thrpt    5       865.379 ±      21.726  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                               thrpt    5      2040.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                           thrpt    5       863.521 ±     706.152  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      2037.646 ±    1705.782    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.133 ±       0.838  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.316 ±       1.987    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count                                         thrpt    5        13.000                counts
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time                                          thrpt    5        21.000                    ms
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter                                                  thrpt    5   2423349.832 ±   99715.216   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                                   thrpt    5      1145.888 ±      47.224  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                              thrpt    5       744.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5      1200.998 ±     703.455  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       780.450 ±     475.568    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.037 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.024 ±       0.043    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count                                        thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time                                         thrpt    5        19.000                    ms
[info] JsonCodecMakerBenchmark.readMutableMapsPlay                                                      thrpt    5    225522.643 ±    6958.023   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate                                       thrpt    5      1193.738 ±      36.822  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                                  thrpt    5      8328.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1209.968 ±     708.631  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8444.077 ±    5022.590    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.042 ±       0.080  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.291 ±       0.560    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count                                            thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time                                             thrpt    5        25.000                    ms
[info] JsonCodecMakerBenchmark.readPrimitivesCirce                                                      thrpt    5    458895.101 ±   13491.152   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate                                       thrpt    5      1357.937 ±      39.682  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                                  thrpt    5      4656.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1413.104 ±     570.339  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      4842.983 ±    1832.185    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.071 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.243 ±       0.249    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count                                            thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time                                             thrpt    5        30.000                    ms
[info] JsonCodecMakerBenchmark.readPrimitivesJackson                                                    thrpt    5   1000482.053 ±   24001.038   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate                                     thrpt    5       757.986 ±      18.139  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                                thrpt    5      1192.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       796.588 ±     693.949  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1254.115 ±    1122.974    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.054 ±       0.193  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.085 ±       0.303    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count                                          thrpt    5        12.000                counts
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time                                           thrpt    5        19.000                    ms
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter                                                   thrpt    5   3562797.553 ±  705345.370   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                                    thrpt    5       108.696 ±      21.503  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                               thrpt    5        48.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       115.150 ±     504.822  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5        49.766 ±     218.363    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.485 ±       4.178  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.209 ±       1.797    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count                                         thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time                                          thrpt    5        29.000                    ms
[info] JsonCodecMakerBenchmark.readPrimitivesPlay                                                       thrpt    5    164516.375 ±    5369.311   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate                                        thrpt    5      1120.062 ±      36.641  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                                   thrpt    5     10712.003 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1141.246 ±     700.853  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5     10910.349 ±    6557.295    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.042 ±       0.080  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.397 ±       0.757    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count                                             thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time                                              thrpt    5        23.000                    ms
[info] JsonCodecMakerBenchmark.readStringCirce                                                          thrpt    5    116548.910 ±    5273.442   ops/s
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.alloc.rate                                           thrpt    5      1059.575 ±      48.131  MB/sec
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.alloc.rate.norm                                      thrpt    5     14304.004 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Eden_Space                                  thrpt    5      1072.606 ±     555.738  MB/sec
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5     14474.372 ±    7221.825    B/op
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Survivor_Space                              thrpt    5         0.029 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.394 ±       0.972    B/op
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.count                                                thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.time                                                 thrpt    5        20.000                    ms
[info] JsonCodecMakerBenchmark.readStringJackson                                                        thrpt    5    586329.096 ±    9924.180   ops/s
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.alloc.rate                                         thrpt    5      1255.086 ±      21.187  MB/sec
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.alloc.rate.norm                                    thrpt    5      3368.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Eden_Space                                thrpt    5      1278.226 ±     577.779  MB/sec
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5      3430.398 ±    1559.698    B/op
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Survivor_Space                            thrpt    5         0.046 ±       0.105  MB/sec
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.123 ±       0.283    B/op
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.count                                              thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.time                                               thrpt    5        21.000                    ms
[info] JsonCodecMakerBenchmark.readStringJsoniter                                                       thrpt    5    734809.935 ±    9203.468   ops/s
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.alloc.rate                                        thrpt    5      1236.634 ±      15.372  MB/sec
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.alloc.rate.norm                                   thrpt    5      2648.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5      1204.307 ±     698.567  MB/sec
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5      2579.248 ±    1510.017    B/op
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5         0.021 ±       0.001  MB/sec
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.045 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.count                                             thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.time                                              thrpt    5        34.000                    ms
[info] JsonCodecMakerBenchmark.readStringPlay                                                           thrpt    5    216928.235 ±    8061.090   ops/s
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.alloc.rate                                            thrpt    5      2693.403 ±      99.808  MB/sec
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.alloc.rate.norm                                       thrpt    5     19536.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Eden_Space                                   thrpt    5      2721.447 ±      13.337  MB/sec
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5     19740.832 ±     717.753    B/op
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Survivor_Space                               thrpt    5         0.067 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.483 ±       0.485    B/op
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.count                                                 thrpt    5        40.000                counts
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.time                                                  thrpt    5        61.000                    ms
[info] JsonCodecMakerBenchmark.readTwitterAPICirce                                                      thrpt    5      8040.387 ±      82.241   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate                                       thrpt    5      1139.968 ±      11.385  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm                                  thrpt    5    223066.860 ±      67.053    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space                              thrpt    5      1136.641 ±     713.203  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5    222447.641 ±  140531.531    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.087 ±       0.409  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5        16.978 ±      79.798    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count                                            thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time                                             thrpt    5        24.000                    ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson                                                    thrpt    5     11754.783 ±      88.439   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate                                     thrpt    5       185.890 ±       1.408  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm                                thrpt    5     24880.040 ±       0.028    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space                            thrpt    5       166.985 ±     596.441  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5     22369.117 ±   79918.203    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count                                          thrpt    5         3.000                counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time                                           thrpt    5         7.000                    ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter                                                   thrpt    5     23258.141 ±     577.796   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate                                    thrpt    5       249.037 ±       6.170  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm                               thrpt    5     16847.737 ±       2.428    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       245.938 ±     541.670  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5     16669.423 ±   36666.782    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.004 ±       0.036  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.282 ±       2.426    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count                                         thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time                                          thrpt    5         6.000                    ms
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay                                                       thrpt    5      3726.372 ±      96.894   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate                                        thrpt    5      1092.903 ±      28.276  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm                                   thrpt    5    461416.118 ±       0.016    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1138.212 ±     704.215  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5    480756.573 ±  303601.847    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.067 ±       0.307  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5        28.155 ±     130.271    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count                                             thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time                                              thrpt    5        23.000                    ms
[info] JsonCodecMakerBenchmark.writeAdtCirce                                                            thrpt    5    414131.835 ±    6822.650   ops/s
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate                                             thrpt    5      1465.564 ±      24.143  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm                                        thrpt    5      5568.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1484.459 ±     702.531  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5639.947 ±    2674.210    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.046 ±       0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.174 ±       0.395    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.count                                                  thrpt    5        22.000                counts
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.time                                                   thrpt    5        27.000                    ms
[info] JsonCodecMakerBenchmark.writeAdtJackson                                                          thrpt    5   1600000.559 ±   50828.110   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate                                           thrpt    5       667.099 ±      21.178  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm                                      thrpt    5       656.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space                                  thrpt    5       661.552 ±      15.386  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5       650.563 ±      14.933    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.058 ±       0.250  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.057 ±       0.244    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.count                                                thrpt    5        10.000                counts
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.time                                                 thrpt    5        15.000                    ms
[info] JsonCodecMakerBenchmark.writeAdtJsoniter                                                         thrpt    5   7472782.514 ±  355930.443   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate                                          thrpt    5       379.969 ±      18.122  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm                                     thrpt    5        80.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       390.028 ±     562.570  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5        82.077 ±     117.516    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.017 ±       0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.003 ±       0.022    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count                                               thrpt    5         6.000                counts
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time                                                thrpt    5         6.000                    ms
[info] JsonCodecMakerBenchmark.writeAdtPlay                                                             thrpt    5    235004.505 ±    6239.211   ops/s
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate                                              thrpt    5       727.735 ±      19.466  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm                                         thrpt    5      4872.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space                                     thrpt    5       730.692 ±     578.990  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      4889.478 ±    3803.436    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.046 ±       0.230  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.309 ±       1.555    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.count                                                   thrpt    5        11.000                counts
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.time                                                    thrpt    5        19.000                    ms
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce                                                        thrpt    5   1426821.636 ±   41197.980   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate                                         thrpt    5      1545.311 ±      44.814  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                                    thrpt    5      1704.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                                thrpt    5      1487.063 ±     715.687  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1639.854 ±     790.889    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                            thrpt    5         0.042 ±       0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.046 ±       0.088    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count                                              thrpt    5        22.000                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time                                               thrpt    5        38.000                    ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson                                                      thrpt    5   4445293.963 ±   60788.010   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate                                       thrpt    5      1220.555 ±      16.677  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1209.242 ±     716.460  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       427.890 ±     250.355    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.050 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.018 ±       0.025    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count                                            thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time                                             thrpt    5        24.000                    ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter                                                     thrpt    5  15166796.605 ±  407950.788   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                                      thrpt    5       462.703 ±      12.413  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                                 thrpt    5        48.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       456.180 ±     688.406  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5        47.393 ±      72.382    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.029 ±       0.209  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.003 ±       0.022    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count                                           thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time                                            thrpt    5        10.000                    ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc                                             thrpt    5  16507110.937 ±   67416.340   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate                              thrpt    5        ≈ 10⁻⁴                MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm                         thrpt    5        ≈ 10⁻⁵                  B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count                                   thrpt    5           ≈ 0                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay                                                         thrpt    5    722891.172 ±   26953.283   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate                                          thrpt    5      1084.289 ±      40.539  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                                     thrpt    5      2360.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1130.577 ±     697.596  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2463.242 ±    1593.938    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.042 ±       0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.091 ±       0.275    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count                                               thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time                                                thrpt    5        21.000                    ms
[info] JsonCodecMakerBenchmark.writeArraysCirce                                                         thrpt    5    728296.688 ±   28340.548   ops/s
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate                                          thrpt    5      1747.804 ±      67.985  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm                                     thrpt    5      3776.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1760.420 ±     575.788  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      3802.291 ±    1170.372    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.067 ±       0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.145 ±       0.316    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.count                                               thrpt    5        26.000                counts
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.time                                                thrpt    5        34.000                    ms
[info] JsonCodecMakerBenchmark.writeArraysJackson                                                       thrpt    5   2485337.247 ±   72100.181   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate                                        thrpt    5      1440.637 ±      41.703  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm                                   thrpt    5       912.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1416.797 ±     584.707  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5       897.167 ±     382.281    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.033 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.021 ±       0.058    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.count                                             thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.time                                              thrpt    5        27.000                    ms
[info] JsonCodecMakerBenchmark.writeArraysJsoniter                                                      thrpt    5   4543091.041 ±   72517.822   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate                                       thrpt    5      1247.368 ±      20.048  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5      1273.110 ±     575.736  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       440.774 ±     194.328    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±       0.154  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.016 ±       0.053    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count                                            thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time                                             thrpt    5        23.000                    ms
[info] JsonCodecMakerBenchmark.writeArraysPlay                                                          thrpt    5    337105.907 ±   11935.881   ops/s
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate                                           thrpt    5      1203.218 ±      42.525  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm                                      thrpt    5      5616.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1210.185 ±     695.174  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5648.119 ±    3228.478    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.046 ±       0.119  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.214 ±       0.559    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.count                                                thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.time                                                 thrpt    5        24.000                    ms
[info] JsonCodecMakerBenchmark.writeBitSetsJackson                                                      thrpt    5   1959521.935 ±   55351.613   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate                                       thrpt    5      1036.255 ±      29.402  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                                  thrpt    5       832.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1004.190 ±      20.908  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       806.309 ±      36.658    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.025 ±       0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.020 ±       0.084    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count                                            thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time                                             thrpt    5        20.000                    ms
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter                                                     thrpt    5   4403685.210 ±   60937.289   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                                      thrpt    5       671.702 ±       9.388  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                                 thrpt    5       240.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       656.437 ±      15.486  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5       234.550 ±       7.223    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.021 ±       0.057  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.007 ±       0.020    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count                                           thrpt    5        10.000                counts
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time                                            thrpt    5        12.000                    ms
[info] JsonCodecMakerBenchmark.writeBitSetsPlay                                                         thrpt    5    502555.689 ±   15058.498   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate                                          thrpt    5      1482.025 ±      44.296  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                                     thrpt    5      4640.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1485.578 ±     716.432  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      4651.744 ±    2262.533    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.071 ±       0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.221 ±       0.375    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count                                               thrpt    5        22.000                counts
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time                                                thrpt    5        27.000                    ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce                                                  thrpt    5      5359.027 ±     109.755   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate                                   thrpt    5      1485.775 ±      30.411  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm                              thrpt    5    436192.082 ±       0.010    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                          thrpt    5      1485.668 ±     718.662  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5    436242.224 ±  213955.598    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                      thrpt    5         0.046 ±       0.104  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5        13.607 ±      30.674    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count                                        thrpt    5        22.000                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time                                         thrpt    5        27.000                    ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson                                                thrpt    5     29807.238 ±     656.278   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate                                 thrpt    5       432.104 ±       9.544  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm                            thrpt    5     22807.875 ±       0.393    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                        thrpt    5       458.786 ±     693.345  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5     24244.407 ±   36990.498    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                    thrpt    5         0.012 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.660 ±       3.788    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count                                      thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time                                       thrpt    5        11.000                    ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter                                               thrpt    5     32028.395 ±     902.416   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate                                thrpt    5       246.406 ±       6.930  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                           thrpt    5     12104.014 ±       0.002    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       245.093 ±     539.408  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5     12063.888 ±   26557.957    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.012 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.612 ±       3.504    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count                                     thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time                                      thrpt    5         6.000                    ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc                                       thrpt    5     41794.438 ±    2243.510   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate                        thrpt    5         0.638 ±       0.034  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm                   thrpt    5        24.010 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.churn.PS_Eden_Space               thrpt    5        11.259 ±      96.942  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm          thrpt    5       433.249 ±    3730.406    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.churn.PS_Survivor_Space           thrpt    5         1.797 ±      15.470  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.churn.PS_Survivor_Space.norm      thrpt    5        69.137 ±     595.293    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count                             thrpt    5         2.000                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.time                              thrpt    5        32.000                    ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay                                                   thrpt    5      4224.694 ±      54.217   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate                                    thrpt    5      1263.081 ±      16.241  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm                               thrpt    5    470368.184 ±       2.817    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1278.072 ±     571.547  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5    475888.185 ±  210607.253    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.017 ±       0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         6.189 ±      38.773    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count                                         thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time                                          thrpt    5        26.000                    ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson                                               thrpt    5    625733.597 ±   29756.172   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                                thrpt    5      1403.074 ±      66.850  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                           thrpt    5      3528.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1410.357 ±     550.534  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      3548.963 ±    1508.232    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.042 ±       0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.105 ±       0.201    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count                                     thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time                                      thrpt    5        32.000                    ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter                                              thrpt    5   2342106.224 ±  439848.304   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                               thrpt    5       345.350 ±      64.823  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       232.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       325.242 ±       6.431  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       218.907 ±      41.326    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.008 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.006 ±       0.031    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count                                    thrpt    5         5.000                counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time                                     thrpt    5         5.000                    ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay                                                  thrpt    5    250115.867 ±    4943.620   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                                   thrpt    5       980.456 ±      19.239  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                              thrpt    5      6168.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1003.659 ±      23.829  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      6314.017 ±     134.658    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.025 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.158 ±       0.554    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count                                        thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time                                         thrpt    5        20.000                    ms
[info] JsonCodecMakerBenchmark.writeIterablesCirce                                                      thrpt    5    613798.640 ±   10563.712   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate                                       thrpt    5      1610.519 ±      27.232  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                                  thrpt    5      4128.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1622.326 ±     579.598  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      4159.082 ±    1520.585    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.071 ±       0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.182 ±       0.345    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count                                            thrpt    5        24.000                counts
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time                                             thrpt    5        35.000                    ms
[info] JsonCodecMakerBenchmark.writeIterablesJackson                                                    thrpt    5   1077944.009 ±    7896.102   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate                                     thrpt    5       728.976 ±       5.387  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                                thrpt    5      1064.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       729.002 ±     573.284  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1064.086 ±     838.082    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.104 ±       0.763  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.152 ±       1.114    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count                                          thrpt    5        11.000                counts
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time                                           thrpt    5        22.000                    ms
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter                                                   thrpt    5   4583398.371 ±   41821.040   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate                                    thrpt    5       512.694 ±       4.697  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                               thrpt    5       176.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       524.944 ±     697.632  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5       180.223 ±     239.694    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.004 ±       0.036  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.001 ±       0.012    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count                                         thrpt    5         8.000                counts
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time                                          thrpt    5        11.000                    ms
[info] JsonCodecMakerBenchmark.writeIterablesPlay                                                       thrpt    5    359571.760 ±    6396.554   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate                                        thrpt    5      1259.688 ±      22.620  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                                   thrpt    5      5512.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1279.182 ±     577.987  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5597.965 ±    2551.818    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.050 ±       0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.219 ±       0.534    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count                                             thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time                                              thrpt    5        25.000                    ms
[info] JsonCodecMakerBenchmark.writeMapsCirce                                                           thrpt    5    338131.247 ±   19413.450   ops/s
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate                                            thrpt    5      1005.801 ±      57.663  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm                                       thrpt    5      4680.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                                   thrpt    5      1002.429 ±      25.497  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                              thrpt    5      4665.158 ±     299.768    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                               thrpt    5         0.050 ±       0.146  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.231 ±       0.674    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.count                                                 thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.time                                                  thrpt    5        22.000                    ms
[info] JsonCodecMakerBenchmark.writeMapsJackson                                                         thrpt    5    807379.218 ±   41306.336   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate                                          thrpt    5      1231.534 ±      62.979  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm                                     thrpt    5      2400.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                                 thrpt    5      1273.152 ±     576.146  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2483.225 ±    1189.097    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                             thrpt    5         0.050 ±       0.176  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.097 ±       0.339    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.count                                               thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.time                                                thrpt    5        25.000                    ms
[info] JsonCodecMakerBenchmark.writeMapsJsoniter                                                        thrpt    5   2481813.625 ±   41097.377   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate                                         thrpt    5       416.424 ±       6.910  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                                    thrpt    5       264.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                                thrpt    5       391.940 ±     566.269  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                           thrpt    5       248.307 ±     355.658    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                            thrpt    5         0.021 ±       0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.013 ±       0.051    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count                                              thrpt    5         6.000                counts
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time                                               thrpt    5        14.000                    ms
[info] JsonCodecMakerBenchmark.writeMapsPlay                                                            thrpt    5    263400.690 ±    5298.103   ops/s
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate                                             thrpt    5       945.498 ±      18.973  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm                                        thrpt    5      5648.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                                    thrpt    5       936.252 ±     588.488  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5593.459 ±    3531.595    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                                thrpt    5         0.029 ±       0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.174 ±       0.728    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.count                                                  thrpt    5        14.000                counts
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.time                                                   thrpt    5        18.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce                                               thrpt    5    580440.156 ±   19086.766   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate                                thrpt    5      1472.711 ±      48.543  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm                           thrpt    5      3992.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space                       thrpt    5      1484.912 ±     696.641  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5      4026.069 ±    1923.921    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space                   thrpt    5         0.042 ±       0.057  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.113 ±       0.157    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count                                     thrpt    5        22.000                counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time                                      thrpt    5        33.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson                                             thrpt    5   1091624.609 ±   30969.186   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate                              thrpt    5       627.180 ±      17.749  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm                         thrpt    5       904.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space                     thrpt    5       594.568 ±     574.971  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5       857.152 ±     830.845    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space                 thrpt    5         0.121 ±       0.953  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.173 ±       1.362    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count                                   thrpt    5         9.000                counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time                                    thrpt    5        13.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter                                            thrpt    5   3441827.217 ±  146960.819   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate                             thrpt    5       262.497 ±      11.231  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm                        thrpt    5       120.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5       267.969 ±     485.358  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5       122.016 ±     220.030    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5         0.485 ±       4.178  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.226 ±       1.947    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count                                  thrpt    5         6.000                counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time                                   thrpt    5        32.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay                                                thrpt    5    381847.707 ±    5642.896   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate                                 thrpt    5      1314.386 ±      19.350  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm                            thrpt    5      5416.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space                        thrpt    5      1280.292 ±     573.444  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5      5274.713 ±    2333.804    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space                    thrpt    5         0.062 ±       0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.257 ±       0.522    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count                                      thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time                                       thrpt    5        32.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce                                                    thrpt    5    335924.109 ±   12250.161   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate                                     thrpt    5       985.569 ±      35.985  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                                thrpt    5      4616.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                            thrpt    5      1002.701 ±      25.340  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5      4696.420 ±     125.834    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space                        thrpt    5         0.054 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.254 ±       0.436    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count                                          thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time                                           thrpt    5        28.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson                                                  thrpt    5    658540.270 ±   14935.580   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate                                   thrpt    5       981.101 ±      22.231  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                              thrpt    5      2344.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space                          thrpt    5       998.022 ±      24.379  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5      2384.473 ±      68.152    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space                      thrpt    5         0.104 ±       0.765  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.249 ±       1.832    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count                                        thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time                                         thrpt    5        25.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter                                                 thrpt    5   2147604.179 ±   49631.888   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                                  thrpt    5       404.012 ±       9.267  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                             thrpt    5       296.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5       391.936 ±     563.437  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5       287.021 ±     410.188    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5         0.025 ±       0.174  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.018 ±       0.128    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count                                       thrpt    5         6.000                counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time                                        thrpt    5         7.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay                                                     thrpt    5    253679.954 ±    2026.837   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate                                      thrpt    5       984.146 ±       8.027  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                                 thrpt    5      6104.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                             thrpt    5      1003.316 ±      22.981  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5      6222.921 ±     150.068    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space                         thrpt    5         0.033 ±       0.166  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.207 ±       1.031    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count                                           thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time                                            thrpt    5        19.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesCirce                                                     thrpt    5    634009.122 ±    6727.659   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate                                      thrpt    5      1218.551 ±      13.105  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                                 thrpt    5      3024.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                             thrpt    5      1210.561 ±     716.978  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      3004.220 ±    1780.099    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.046 ±       0.105  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.114 ±       0.258    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count                                           thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time                                            thrpt    5        28.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesJackson                                                   thrpt    5   1631857.128 ±   39666.112   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate                                    thrpt    5       721.870 ±      17.493  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                               thrpt    5       696.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                           thrpt    5       730.254 ±     572.029  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5       704.436 ±     561.644    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.025 ±       0.174  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.024 ±       0.168    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count                                         thrpt    5        11.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time                                          thrpt    5        17.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter                                                  thrpt    5   4290596.131 ±   14165.346   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                                   thrpt    5       349.041 ±       1.163  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                              thrpt    5       128.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       324.571 ±       1.088  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       119.027 ±       0.631    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.017 ±       0.143  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.006 ±       0.053    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count                                        thrpt    5         5.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time                                         thrpt    5         6.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc                                          thrpt    5   4440669.009 ±   76946.374   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate                           thrpt    5       135.476 ±       2.351  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5        48.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space                  thrpt    5       153.530 ±     539.681  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm             thrpt    5        54.531 ±     191.688    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count                                thrpt    5         3.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time                                 thrpt    5         4.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesPlay                                                      thrpt    5    211661.273 ±    3883.479   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate                                       thrpt    5      1102.031 ±      20.227  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                                  thrpt    5      8192.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1073.653 ±     579.947  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      7979.988 ±    4263.770    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±       0.132  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.340 ±       0.981    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count                                            thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time                                             thrpt    5        20.000                    ms
[info] JsonCodecMakerBenchmark.writeStringCirce                                                         thrpt    5    124981.949 ±    2635.388   ops/s
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.alloc.rate                                          thrpt    5      1056.218 ±      22.211  MB/sec
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.alloc.rate.norm                                     thrpt    5     13296.004 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1073.151 ±     570.751  MB/sec
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5     13512.824 ±    7328.528    B/op
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.042 ±       0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.525 ±       1.605    B/op
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.count                                               thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.time                                                thrpt    5        19.000                    ms
[info] JsonCodecMakerBenchmark.writeStringJackson                                                       thrpt    5    586322.781 ±   13429.419   ops/s
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.alloc.rate                                        thrpt    5       620.087 ±      14.135  MB/sec
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.alloc.rate.norm                                   thrpt    5      1664.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Eden_Space                               thrpt    5       655.007 ±      16.262  MB/sec
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1757.745 ±      50.988    B/op
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.025 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.067 ±       0.180    B/op
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.count                                             thrpt    5        10.000                counts
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.time                                              thrpt    5        16.000                    ms
[info] JsonCodecMakerBenchmark.writeStringJsoniter                                                      thrpt    5    636317.878 ±   14450.942   ops/s
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.alloc.rate                                       thrpt    5       537.044 ±      12.105  MB/sec
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.alloc.rate.norm                                  thrpt    5      1328.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       522.524 ±     686.811  MB/sec
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5      1293.749 ±    1718.411    B/op
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.050 ±       0.185  MB/sec
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.124 ±       0.458    B/op
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.count                                            thrpt    5         8.000                counts
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.time                                             thrpt    5         9.000                    ms
[info] JsonCodecMakerBenchmark.writeStringJsoniterPrealloc                                              thrpt    5    721809.296 ±   17997.453   ops/s
[info] JsonCodecMakerBenchmark.writeStringJsoniterPrealloc:·gc.alloc.rate                               thrpt    5        ≈ 10⁻⁴                MB/sec
[info] JsonCodecMakerBenchmark.writeStringJsoniterPrealloc:·gc.alloc.rate.norm                          thrpt    5         0.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeStringJsoniterPrealloc:·gc.count                                    thrpt    5           ≈ 0                counts
[info] JsonCodecMakerBenchmark.writeStringPlay                                                          thrpt    5    596801.845 ±   11929.702   ops/s
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.alloc.rate                                           thrpt    5       637.246 ±      12.748  MB/sec
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.alloc.rate.norm                                      thrpt    5      1680.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Eden_Space                                  thrpt    5       660.293 ±      15.823  MB/sec
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      1740.799 ±      54.501    B/op
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.021 ±       0.098  MB/sec
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.055 ±       0.260    B/op
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.count                                                thrpt    5        10.000                counts
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.time                                                 thrpt    5        12.000                    ms
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce                                                     thrpt    5      7550.992 ±     298.181   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate                                      thrpt    5       961.496 ±      37.633  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm                                 thrpt    5    200337.010 ±     347.804    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space                             thrpt    5       999.321 ±      26.759  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5    208244.990 ±   13077.536    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.054 ±       0.379  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5        11.162 ±      77.697    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count                                           thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time                                            thrpt    5        22.000                    ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson                                                   thrpt    5     35919.588 ±     654.972   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate                                    thrpt    5       458.884 ±       8.400  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm                               thrpt    5     20100.011 ±       0.385    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space                           thrpt    5       458.114 ±     689.839  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5     20090.916 ±   30559.930    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.012 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.549 ±       3.161    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count                                         thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time                                          thrpt    5        14.000                    ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter                                                  thrpt    5     47406.907 ±    1628.132   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate                                   thrpt    5       309.258 ±      10.660  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm                              thrpt    5     10264.009 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       325.370 ±       6.046  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5     10799.619 ±     490.615    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.015 ±       0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.481 ±       3.453    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count                                        thrpt    5         5.000                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time                                         thrpt    5         8.000                    ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc                                          thrpt    5     49960.267 ±     308.891   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate                           thrpt    5         5.335 ±       0.033  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5       168.009 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count                                thrpt    5           ≈ 0                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay                                                      thrpt    5      4688.947 ±     112.747   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate                                       thrpt    5      1194.728 ±      28.756  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm                                  thrpt    5    400893.826 ±       2.188    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1208.266 ±     715.252  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5    405576.134 ±  244040.577    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.025 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         8.373 ±      29.521    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count                                            thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time                                             thrpt    5        27.000                    ms
[success] Total time: 1871 s, completed Dec 5, 2017 9:32:30 AM
