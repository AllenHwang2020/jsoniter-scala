[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt,release.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Dec 20, 2017 4:39:49 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}core...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 4 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:334:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:342:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] two warnings found
[info] Done compiling.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.2-SNAPSHOT.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.2-SNAPSHOT.jar ...
[info] Compiling 7 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:12:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "bd");
[info]       private def d1(in: JsonReader, default: Option[String]): Option[String] = {
[info]         val x = in.readString(null);
[info]         if (x.eq(null))
[info]           None
[info]         else
[info]           Some(x)
[info]       };
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         _bd = in.readBigDecimal(_bd);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       _os = d1(in, _os)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           {
[info]             val v = x.os;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("os");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:13:52: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Arrays] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays): com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays, out: JsonWriter): Unit = e0(x, out);
[info]       private val v0: Array[Array[Int]] = new Array[Array[Int]](0);
[info]       private val v1: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private val v2: Array[Int] = new Array[Int](0);
[info]       private def d2(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               x.+=(d2(in, v2))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               x.+=(in.readBigInt(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays): com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = if (in.isNextToken('{'))
[info]         {
[info]           var _aa: Array[Array[Int]] = v0;
[info]           var _a: Array[BigInt] = v1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3104 => if (in.isCharBufEqualsTo(l, "aa"))
[info]                       _aa = d1(in, _aa)
[info]                     else
[info]                       in.skip()
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       _a = d3(in, _a)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Arrays(aa = _aa, a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e2(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: Array[Array[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e2(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.aa;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("aa");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.a;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("a");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = make[Arrays](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:14:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.BitSets] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets): com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = BitSet.newBuilder;
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               BitSet.empty;
[info]             do 
[info]               x.add(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets): com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = if (in.isNextToken('{'))
[info]         {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3153 => if (in.isCharBufEqualsTo(l, "bs"))
[info]                       _bs = d1(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 107902 => if (in.isCharBufEqualsTo(l, "mbs"))
[info]                       _mbs = d2(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.bs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("bs");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mbs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mbs");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = make[BitSets](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:15:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Iterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables): com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Vector[String]): scala.collection.immutable.Vector[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.immutable.HashSet[Long]): scala.collection.immutable.HashSet[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = HashSet.newBuilder[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: List[scala.collection.immutable.HashSet[Long]]): List[scala.collection.immutable.HashSet[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[scala.collection.immutable.HashSet[Long]];
[info]             do 
[info]               x.+=(d4(in, HashSet.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables): com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.immutable.Vector[String] = Vector.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[scala.collection.immutable.HashSet[Long]] = List.empty[scala.collection.immutable.HashSet[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 3463 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.Vector[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e4(x: scala.collection.immutable.HashSet[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: List[scala.collection.immutable.HashSet[Long]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e4(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = make[Iterables](CodecMakerConfig())
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:16:46: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Maps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Maps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Maps): com.github.plokhotnyuk.jsoniter_scala.macros.Maps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Maps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[String, Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[Long, Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), d3(in, HashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Maps): com.github.plokhotnyuk.jsoniter_scala.macros.Maps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Maps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.HashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Maps, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = make[Maps](CodecMakerConfig())
[info]                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:81: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "i");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val missingReqFieldCodec: JsonCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:82: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[String]): scala.collection.mutable.ArrayBuffer[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               ArrayBuffer.empty[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.TreeSet[Int]): scala.collection.mutable.TreeSet[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               TreeSet.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.mutable.Set[Long]): scala.collection.mutable.Set[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Set.empty[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]]): scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = ResizableArray.newBuilder[scala.collection.mutable.Set[Long]];
[info]             do 
[info]               x.+=(d4(in, Set.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.mutable.ArrayBuffer[String] = ArrayBuffer.empty[String];
[info]           var _s: scala.collection.mutable.TreeSet[Int] = TreeSet.empty[Int];
[info]           var _ls: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = ResizableArray.empty[scala.collection.mutable.Set[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 3463 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.ArrayBuffer[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.TreeSet[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e4(x: scala.collection.mutable.Set[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e4(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableIterablesCodec: JsonCodec[MutableIterables] = make[MutableIterables](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               HashMap.empty[String, Double];
[info]             do 
[info]               x.update(in.readKeyAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               OpenHashMap.empty[Long, Double];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               x.update(in.readKeyAsInt(), d3(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.OpenHashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = make[MutableMaps](CodecMakerConfig())
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:76: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = LongMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               x.update(in.readKeyAsLong(), d3(in, LongMap.empty[Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.IntMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.LongMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = make[IntAndLongMaps](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:64: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var req0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readByte();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readShort();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         _bl = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         _ch = in.readChar();
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         _dbl = in.readDouble();
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         _f = in.readFloat();
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:73: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "l");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:51: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("a");
[info]       private val r1: Array[String] = Array("b");
[info]       private val r2: Array[String] = Array("l", "r");
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         _a = in.readInt();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readString(_b);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]           else
[info]             in.requiredKeyError(r1, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = d0(in, _l);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         _r = d0(in, _r);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]           else
[info]             in.requiredKeyError(r2, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           {
[info]             in.scanToKey("type");
[info]             val l = in.readStringAsCharBuf();
[info]             (in.charBufToHashCode(l): @switch) match {
[info]               case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d1(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d2(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d3(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case _ => in.discriminatorValueError("type")
[info]             }
[info]           }
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("A")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("a");
[info]             out.writeVal(x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("B")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("C")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             e0(x.l, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("r");
[info]             e0(x.r, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]         case null => out.writeNull()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val adtCodec: JsonCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:52: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[String] {
[info]       def nullValue: String = null;
[info]       def decode(in: JsonReader, default: String): String = in.readString(default);
[info]       def encode(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonCodec[String] = make[String](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:75: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("status");
[info]       private val r1: Array[String] = Array("distance", "duration", "status");
[info]       private val r2: Array[String] = Array("text", "value");
[info]       private def d1(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         _value = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]           else
[info]             in.requiredKeyError(r2, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         _distance = d6(in, _distance);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         _duration = d6(in, _duration);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]           else
[info]             in.requiredKeyError(r1, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       _elements = d4(in, _elements)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: Seq[String] = Seq.empty[String];
[info]           var _origin_addresses: Seq[String] = Seq.empty[String];
[info]           var _rows: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       _destination_addresses = d1(in, _destination_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       _origin_addresses = d1(in, _origin_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       _rows = d2(in, _rows)
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("value");
[info]             out.writeVal(x.value)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("distance");
[info]             e6(x.distance, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("duration");
[info]             e6(x.duration, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.elements;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("elements");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e3(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.destination_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("destination_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.origin_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("origin_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.rows;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("rows");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val googleMapsAPICodec: JsonCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:64: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decode(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encode(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private val r4: Array[String] = Array("url", "description");
[info]       private val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]           else
[info]             in.requiredKeyError(r1, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         _expanded_url = in.readString(_expanded_url);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         _display_url = in.readString(_display_url);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]           else
[info]             in.requiredKeyError(r2, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       _hashtags = d3(in, _hashtags)
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       _symbols = d3(in, _symbols)
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       _user_mentions = d4(in, _user_mentions)
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d9(in: JsonReader, default: Option[String]): Option[String] = {
[info]         val x = in.readString(null);
[info]         if (x.eq(null))
[info]           None
[info]         else
[info]           Some(x)
[info]       };
[info]       private def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = d12(in, _url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = d12(in, _description);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]           else
[info]             in.requiredKeyError(r4, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var req0 = -1;
[info]           var req1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         _location = in.readString(_location);
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = in.readString(_description);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d11(in, _entities);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         _protected = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         _followers_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         _friends_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         _listed_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         _favourites_count = in.readInt();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         _utc_offset = in.readInt();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         _time_zone = in.readString(_time_zone);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         _geo_enabled = in.readBoolean();
[info]                         req0.&=(-65537)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         _verified = in.readBoolean();
[info]                         req0.&=(-131073)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         _statuses_count = in.readInt();
[info]                         req0.&=(-262145)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-524289)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         _contributors_enabled = in.readBoolean();
[info]                         req0.&=(-1048577)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         _is_translator = in.readBoolean();
[info]                         req0.&=(-2097153)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         _is_translation_enabled = in.readBoolean();
[info]                         req0.&=(-4194305)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         _profile_background_color = in.readString(_profile_background_color);
[info]                         req0.&=(-8388609)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url);
[info]                         req0.&=(-16777217)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https);
[info]                         req0.&=(-33554433)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         _profile_background_tile = in.readBoolean();
[info]                         req0.&=(-67108865)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         _profile_image_url = in.readString(_profile_image_url);
[info]                         req0.&=(-134217729)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https);
[info]                         req0.&=(-268435457)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         _profile_banner_url = in.readString(_profile_banner_url);
[info]                         req0.&=(-536870913)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         _profile_link_color = in.readString(_profile_link_color);
[info]                         req0.&=(-1073741825)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color);
[info]                         req0.&=(2147483647)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color);
[info]                         req1.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         _profile_text_color = in.readString(_profile_text_color);
[info]                         req1.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         _profile_use_background_image = in.readBoolean();
[info]                         req1.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         _has_extended_profile = in.readBoolean();
[info]                         req1.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         _default_profile = in.readBoolean();
[info]                         req1.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         _default_profile_image = in.readBoolean();
[info]                         req1.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         _following = in.readBoolean();
[info]                         req1.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         _follow_request_sent = in.readBoolean();
[info]                         req1.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         _notifications = in.readBoolean();
[info]                         req1.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         _translator_type = in.readString(_translator_type);
[info]                         req1.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0).&&(req1.==(0)))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]           else
[info]             in.requiredKeyError(r3, Array(req0, req1))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 32767;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d10(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = d9(in, _geo)
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = d9(in, _coordinates)
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = d9(in, _place)
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = d9(in, _contributors)
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredKeyError(r5, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 65535;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d10(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = d9(in, _geo)
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = d9(in, _coordinates)
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = d9(in, _place)
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = d9(in, _contributors)
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         _retweeted_status = d13(in, _retweeted_status);
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("expanded_url");
[info]             out.writeVal(x.expanded_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("display_url");
[info]             out.writeVal(x.display_url)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.hashtags;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("hashtags");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.symbols;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("symbols");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.user_mentions;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("user_mentions");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e9(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             e12(x.url, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("description");
[info]             e12(x.description, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("location");
[info]             out.writeVal(x.location)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("description");
[info]             out.writeVal(x.description)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e11(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("protected");
[info]             out.writeVal(x.`protected`)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("followers_count");
[info]             out.writeVal(x.followers_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("friends_count");
[info]             out.writeVal(x.friends_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("listed_count");
[info]             out.writeVal(x.listed_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favourites_count");
[info]             out.writeVal(x.favourites_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("utc_offset");
[info]             out.writeVal(x.utc_offset)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("time_zone");
[info]             out.writeVal(x.time_zone)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("geo_enabled");
[info]             out.writeVal(x.geo_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("verified");
[info]             out.writeVal(x.verified)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("statuses_count");
[info]             out.writeVal(x.statuses_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("contributors_enabled");
[info]             out.writeVal(x.contributors_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_translator");
[info]             out.writeVal(x.is_translator)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]             out.writeVal(x.is_translation_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_color");
[info]             out.writeVal(x.profile_background_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]             out.writeVal(x.profile_background_image_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]             out.writeVal(x.profile_background_image_url_https)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_tile");
[info]             out.writeVal(x.profile_background_tile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_image_url");
[info]             out.writeVal(x.profile_image_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]             out.writeVal(x.profile_image_url_https)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_banner_url");
[info]             out.writeVal(x.profile_banner_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_link_color");
[info]             out.writeVal(x.profile_link_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]             out.writeVal(x.profile_sidebar_border_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]             out.writeVal(x.profile_sidebar_fill_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_text_color");
[info]             out.writeVal(x.profile_text_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]             out.writeVal(x.profile_use_background_image)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("has_extended_profile");
[info]             out.writeVal(x.has_extended_profile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("default_profile");
[info]             out.writeVal(x.default_profile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("default_profile_image");
[info]             out.writeVal(x.default_profile_image)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("following");
[info]             out.writeVal(x.following)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("follow_request_sent");
[info]             out.writeVal(x.follow_request_sent)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("notifications");
[info]             out.writeVal(x.notifications)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("translator_type");
[info]             out.writeVal(x.translator_type)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted_status");
[info]             e13(x.retweeted_status, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val twitterAPICodec: JsonCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:14:18: local val v1 in value arraysFormat is never used
[warn]     implicit val v1: Format[Array[BigInt]] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:20:18: local val v1 in value bitSetsFormat is never used
[warn]     implicit val v1: Reads[BitSet] = Reads[BitSet](js => JsSuccess(BitSet(js.as[Array[Int]]: _*)))
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:21:18: local val v2 in value bitSetsFormat is never used
[warn]     implicit val v2: Reads[mutable.BitSet] =
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:28:18: local val v1 in value mapsFormat is never used
[warn]     implicit val v1: OFormat[HashMap[String, Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:31:18: local val v2 in value mapsFormat is never used
[warn]     implicit val v2: OFormat[Map[Int, HashMap[Long, Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:18: local val v1 in value mutableMapsFormat is never used
[warn]     implicit val v1: OFormat[mutable.HashMap[String, Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:46:18: local val v2 in value mutableMapsFormat is never used
[warn]     implicit val v2: OFormat[mutable.Map[Int, mutable.OpenHashMap[Long, Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:63:18: local val v1 in value intAndLongMapsFormat is never used
[warn]     implicit val v1: OFormat[IntMap[Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:68:18: local val v2 in value intAndLongMapsFormat is never used
[warn]     implicit val v2: OFormat[mutable.LongMap[LongMap[Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:80:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:87:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:88:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:89:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:94:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:95:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:96:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:108:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:109:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:111:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] 19 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.2-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 295 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 123 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.2-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.2-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecMakerBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce
[info] # Run progress: 0.00% complete, ETA 00:19:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 732753.975 ops/s
[info] # Warmup Iteration   2: 1290388.088 ops/s
[info] # Warmup Iteration   3: 1321794.905 ops/s
[info] # Warmup Iteration   4: 1420056.788 ops/s
[info] # Warmup Iteration   5: 1488375.828 ops/s
[info] Iteration   1: 1461555.452 ops/s
[info]                  ·gc.alloc.rate:                   2333.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              2512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2363.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2544.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1452689.857 ops/s
[info]                  ·gc.alloc.rate:                   2319.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              2512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2372.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2569.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1479744.478 ops/s
[info]                  ·gc.alloc.rate:                   2362.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              2512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2378.115 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2528.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1463403.289 ops/s
[info]                  ·gc.alloc.rate:                   2336.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              2512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2381.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2560.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1488352.474 ops/s
[info]                  ·gc.alloc.rate:                   2376.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              2512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2383.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2519.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce":
[info]   1469149.110 ±(99.9%) 55887.958 ops/s [Average]
[info]   (min, avg, max) = (1452689.857, 1469149.110, 1488352.474), stdev = 14513.925
[info]   CI (99.9%): [1413261.152, 1525037.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate":
[info]   2345.592 ±(99.9%) 89.173 MB/sec [Average]
[info]   (min, avg, max) = (2319.359, 2345.592, 2376.235), stdev = 23.158
[info]   CI (99.9%): [2256.419, 2434.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm":
[info]   2512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2512.000, 2512.000, 2512.000), stdev = 0.001
[info]   CI (99.9%): [2512.000, 2512.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space":
[info]   2375.833 ±(99.9%) 31.204 MB/sec [Average]
[info]   (min, avg, max) = (2363.235, 2375.833, 2383.462), stdev = 8.104
[info]   CI (99.9%): [2344.629, 2407.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2544.544 ±(99.9%) 81.143 B/op [Average]
[info]   (min, avg, max) = (2519.640, 2544.544, 2569.965), stdev = 21.073
[info]   CI (99.9%): [2463.401, 2625.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.076 ±(99.9%) 0.101 B/op [Average]
[info]   (min, avg, max) = (0.044, 0.076, 0.113), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 8.000), stdev = 0.837
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson
[info] # Run progress: 0.84% complete, ETA 00:31:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36974.258 ops/s
[info] # Warmup Iteration   2: 167745.183 ops/s
[info] # Warmup Iteration   3: 173015.507 ops/s
[info] # Warmup Iteration   4: 186006.542 ops/s
[info] # Warmup Iteration   5: 198243.389 ops/s
[info] Iteration   1: 198202.559 ops/s
[info]                  ·gc.alloc.rate:                   469.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              3728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2573.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.661 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 199479.134 ops/s
[info]                  ·gc.alloc.rate:               472.631 MB/sec
[info]                  ·gc.alloc.rate.norm:          3728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2559.566 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 198202.571 ops/s
[info]                  ·gc.alloc.rate:                   469.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              3728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5154.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.661 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 198893.070 ops/s
[info]                  ·gc.alloc.rate:               471.287 MB/sec
[info]                  ·gc.alloc.rate.norm:          3728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2569.742 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 196273.094 ops/s
[info]                  ·gc.alloc.rate:               465.016 MB/sec
[info]                  ·gc.alloc.rate.norm:          3728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5218.816 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson":
[info]   198210.086 ±(99.9%) 4648.367 ops/s [Average]
[info]   (min, avg, max) = (196273.094, 198210.086, 199479.134), stdev = 1207.166
[info]   CI (99.9%): [193561.719, 202858.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate":
[info]   469.648 ±(99.9%) 11.067 MB/sec [Average]
[info]   (min, avg, max) = (465.016, 469.648, 472.631), stdev = 2.874
[info]   CI (99.9%): [458.581, 480.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm":
[info]   3728.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3728.002, 3728.002, 3728.002), stdev = 0.001
[info]   CI (99.9%): [3728.002, 3728.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space":
[info]   454.785 ±(99.9%) 686.887 MB/sec [Average]
[info]   (min, avg, max) = (324.180, 454.785, 650.974), stdev = 178.382
[info]   CI (99.9%): [≈ 0, 1141.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3615.237 ±(99.9%) 5524.846 B/op [Average]
[info]   (min, avg, max) = (2559.566, 3615.237, 5218.816), stdev = 1434.785
[info]   CI (99.9%): [≈ 0, 9140.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.264 ±(99.9%) 1.395 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.264, 0.661), stdev = 0.362
[info]   CI (99.9%): [≈ 0, 1.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter
[info] # Run progress: 1.68% complete, ETA 00:31:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 426033.058 ops/s
[info] # Warmup Iteration   2: 440728.520 ops/s
[info] # Warmup Iteration   3: 452036.929 ops/s
[info] # Warmup Iteration   4: 431472.868 ops/s
[info] # Warmup Iteration   5: 402146.771 ops/s
[info] Iteration   1: 404965.411 ops/s
[info]                  ·gc.alloc.rate:                   366.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              1424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1287.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 443615.996 ops/s
[info]                  ·gc.alloc.rate:               401.515 MB/sec
[info]                  ·gc.alloc.rate.norm:          1424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1174.580 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 444311.114 ops/s
[info]                  ·gc.alloc.rate:               402.133 MB/sec
[info]                  ·gc.alloc.rate.norm:          1424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1172.772 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 447245.550 ops/s
[info]                  ·gc.alloc.rate:                   404.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              1424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2330.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.293 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 452672.391 ops/s
[info]                  ·gc.alloc.rate:               409.711 MB/sec
[info]                  ·gc.alloc.rate.norm:          1424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1152.279 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter":
[info]   438562.093 ±(99.9%) 73612.619 ops/s [Average]
[info]   (min, avg, max) = (404965.411, 438562.093, 452672.391), stdev = 19116.963
[info]   CI (99.9%): [364949.474, 512174.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate":
[info]   396.928 ±(99.9%) 66.673 MB/sec [Average]
[info]   (min, avg, max) = (366.499, 396.928, 409.711), stdev = 17.315
[info]   CI (99.9%): [330.256, 463.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm":
[info]   1424.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1424.001, 1424.001, 1424.001), stdev = 0.001
[info]   CI (99.9%): [1424.001, 1424.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space":
[info]   397.549 ±(99.9%) 569.997 MB/sec [Average]
[info]   (min, avg, max) = (331.187, 397.549, 662.347), stdev = 148.026
[info]   CI (99.9%): [≈ 0, 967.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1423.541 ±(99.9%) 1962.183 B/op [Average]
[info]   (min, avg, max) = (1152.279, 1423.541, 2330.091), stdev = 509.573
[info]   CI (99.9%): [≈ 0, 3385.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.107 ±(99.9%) 0.569 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.107, 0.293), stdev = 0.148
[info]   CI (99.9%): [≈ 0, 0.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless
[info] # Run progress: 2.52% complete, ETA 00:30:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1589169.575 ops/s
[info] # Warmup Iteration   2: 1694578.289 ops/s
[info] # Warmup Iteration   3: 1712032.611 ops/s
[info] # Warmup Iteration   4: 1704337.442 ops/s
[info] # Warmup Iteration   5: 1707039.355 ops/s
[info] Iteration   1: 1713960.895 ops/s
[info]                  ·gc.alloc.rate:                   1045.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              960.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     917.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1769572.092 ops/s
[info]                  ·gc.alloc.rate:                   1079.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              960.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     891.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1760133.936 ops/s
[info]                  ·gc.alloc.rate:                   1073.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              960.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     899.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1759315.608 ops/s
[info]                  ·gc.alloc.rate:                   1073.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              960.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     902.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1772675.264 ops/s
[info]                  ·gc.alloc.rate:                   1081.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              960.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     897.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless":
[info]   1755131.559 ±(99.9%) 91404.428 ops/s [Average]
[info]   (min, avg, max) = (1713960.895, 1755131.559, 1772675.264), stdev = 23737.440
[info]   CI (99.9%): [1663727.131, 1846535.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate":
[info]   1070.929 ±(99.9%) 55.650 MB/sec [Average]
[info]   (min, avg, max) = (1045.870, 1070.929, 1081.639), stdev = 14.452
[info]   CI (99.9%): [1015.279, 1126.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm":
[info]   960.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (960.000, 960.000, 960.000), stdev = 0.001
[info]   CI (99.9%): [960.000, 960.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   1005.887 ±(99.9%) 17.459 MB/sec [Average]
[info]   (min, avg, max) = (999.928, 1005.887, 1011.241), stdev = 4.534
[info]   CI (99.9%): [988.428, 1023.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   901.797 ±(99.9%) 37.520 B/op [Average]
[info]   (min, avg, max) = (891.955, 901.797, 917.831), stdev = 9.744
[info]   CI (99.9%): [864.276, 939.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.045 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (0.037, 0.045, 0.057), stdev = 0.011
[info]   CI (99.9%): [0.004, 0.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump
[info] # Run progress: 3.36% complete, ETA 00:30:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2525090.321 ops/s
[info] # Warmup Iteration   2: 2570302.576 ops/s
[info] # Warmup Iteration   3: 2648409.103 ops/s
[info] # Warmup Iteration   4: 2636939.884 ops/s
[info] # Warmup Iteration   5: 2615562.429 ops/s
[info] Iteration   1: 2632691.643 ops/s
[info]                  ·gc.alloc.rate:                   307.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.792 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.071 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2664506.180 ops/s
[info]                  ·gc.alloc.rate:      311.613 MB/sec
[info]                  ·gc.alloc.rate.norm: 184.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2656433.662 ops/s
[info]                  ·gc.alloc.rate:               310.667 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 196.353 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 2654885.274 ops/s
[info]                  ·gc.alloc.rate:                   310.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2641382.658 ops/s
[info]                  ·gc.alloc.rate:                   308.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     197.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump":
[info]   2649979.883 ±(99.9%) 49068.256 ops/s [Average]
[info]   (min, avg, max) = (2632691.643, 2649979.883, 2664506.180), stdev = 12742.870
[info]   CI (99.9%): [2600911.628, 2699048.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   309.908 ±(99.9%) 5.736 MB/sec [Average]
[info]   (min, avg, max) = (307.880, 309.908, 311.613), stdev = 1.490
[info]   CI (99.9%): [304.171, 315.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   184.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (184.000, 184.000, 184.000), stdev = 0.001
[info]   CI (99.9%): [184.000, 184.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   265.078 ±(99.9%) 570.601 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 265.078, 331.523), stdev = 148.183
[info]   CI (99.9%): [≈ 0, 835.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   157.603 ±(99.9%) 339.264 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 157.603, 198.118), stdev = 88.106
[info]   CI (99.9%): [≈ 0, 496.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.371 ±(99.9%) 3.059 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.371, 1.792), stdev = 0.794
[info]   CI (99.9%): [≈ 0, 3.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.222 ±(99.9%) 1.828 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.222, 1.071), stdev = 0.475
[info]   CI (99.9%): [≈ 0, 2.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay
[info] # Run progress: 4.20% complete, ETA 00:30:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12289.409 ops/s
[info] # Warmup Iteration   2: 107435.489 ops/s
[info] # Warmup Iteration   3: 115414.811 ops/s
[info] # Warmup Iteration   4: 121567.351 ops/s
[info] # Warmup Iteration   5: 118662.843 ops/s
[info] Iteration   1: 118163.374 ops/s
[info]                  ·gc.alloc.rate:                   984.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              13112.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13224.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.386 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 118502.083 ops/s
[info]                  ·gc.alloc.rate:                   987.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              13112.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13239.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.276 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 119298.094 ops/s
[info]                  ·gc.alloc.rate:                   994.111 MB/sec
[info]                  ·gc.alloc.rate.norm:              13112.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13221.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.549 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 118576.902 ops/s
[info]                  ·gc.alloc.rate:                   988.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              13112.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13346.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.553 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 118901.998 ops/s
[info]                  ·gc.alloc.rate:               990.895 MB/sec
[info]                  ·gc.alloc.rate.norm:          13112.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1009.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13354.202 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay":
[info]   118688.490 ±(99.9%) 1656.392 ops/s [Average]
[info]   (min, avg, max) = (118163.374, 118688.490, 119298.094), stdev = 430.160
[info]   CI (99.9%): [117032.099, 120344.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate":
[info]   989.095 ±(99.9%) 13.682 MB/sec [Average]
[info]   (min, avg, max) = (984.750, 989.095, 994.111), stdev = 3.553
[info]   CI (99.9%): [975.413, 1002.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm":
[info]   13112.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13112.004, 13112.004, 13112.004), stdev = 0.001
[info]   CI (99.9%): [13112.003, 13112.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space":
[info]   1001.578 ±(99.9%) 24.795 MB/sec [Average]
[info]   (min, avg, max) = (993.235, 1001.578, 1009.198), stdev = 6.439
[info]   CI (99.9%): [976.783, 1026.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm":
[info]   13277.472 ±(99.9%) 258.516 B/op [Average]
[info]   (min, avg, max) = (13221.332, 13277.472, 13354.202), stdev = 67.136
[info]   CI (99.9%): [13018.955, 13535.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.553 ±(99.9%) 1.998 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.553, 1.386), stdev = 0.519
[info]   CI (99.9%): [≈ 0, 2.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 1.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce
[info] # Run progress: 5.04% complete, ETA 00:30:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 368435.137 ops/s
[info] # Warmup Iteration   2: 579657.427 ops/s
[info] # Warmup Iteration   3: 576833.859 ops/s
[info] # Warmup Iteration   4: 574325.283 ops/s
[info] # Warmup Iteration   5: 581826.380 ops/s
[info] Iteration   1: 574646.390 ops/s
[info]                  ·gc.alloc.rate:                   1513.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4575.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.171 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 583880.441 ops/s
[info]                  ·gc.alloc.rate:                   1537.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4526.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.224 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 584908.266 ops/s
[info]                  ·gc.alloc.rate:                   1540.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3631.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.168 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 587157.865 ops/s
[info]                  ·gc.alloc.rate:                   1546.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4534.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 581384.267 ops/s
[info]                  ·gc.alloc.rate:               1531.228 MB/sec
[info]                  ·gc.alloc.rate.norm:          4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1356.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3670.700 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce":
[info]   582395.446 ±(99.9%) 18494.164 ops/s [Average]
[info]   (min, avg, max) = (574646.390, 582395.446, 587157.865), stdev = 4802.876
[info]   CI (99.9%): [563901.282, 600889.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate":
[info]   1533.927 ±(99.9%) 48.486 MB/sec [Average]
[info]   (min, avg, max) = (1513.611, 1533.927, 1546.398), stdev = 12.592
[info]   CI (99.9%): [1485.440, 1582.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm":
[info]   4144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4144.001, 4144.001, 4144.001), stdev = 0.001
[info]   CI (99.9%): [4144.001, 4144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space":
[info]   1549.903 ±(99.9%) 692.371 MB/sec [Average]
[info]   (min, avg, max) = (1349.893, 1549.903, 1692.036), stdev = 179.807
[info]   CI (99.9%): [857.532, 2242.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4187.738 ±(99.9%) 1888.627 B/op [Average]
[info]   (min, avg, max) = (3631.410, 4187.738, 4575.549), stdev = 490.471
[info]   CI (99.9%): [2299.110, 6076.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.146 ±(99.9%) 0.328 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.146, 0.224), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson
[info] # Run progress: 5.88% complete, ETA 00:29:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 536524.742 ops/s
[info] # Warmup Iteration   2: 1224024.764 ops/s
[info] # Warmup Iteration   3: 1256615.652 ops/s
[info] # Warmup Iteration   4: 1283730.548 ops/s
[info] # Warmup Iteration   5: 1265641.776 ops/s
[info] Iteration   1: 1265250.444 ops/s
[info]                  ·gc.alloc.rate:                   900.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1216.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1272502.696 ops/s
[info]                  ·gc.alloc.rate:                   905.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1216.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1273267.892 ops/s
[info]                  ·gc.alloc.rate:                   906.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1222.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1268465.934 ops/s
[info]                  ·gc.alloc.rate:                   902.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     822.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1256081.121 ops/s
[info]                  ·gc.alloc.rate:                   894.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1251.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson":
[info]   1267113.617 ±(99.9%) 26812.030 ops/s [Average]
[info]   (min, avg, max) = (1256081.121, 1267113.617, 1273267.892), stdev = 6962.999
[info]   CI (99.9%): [1240301.587, 1293925.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate":
[info]   901.972 ±(99.9%) 19.204 MB/sec [Average]
[info]   (min, avg, max) = (894.048, 901.972, 906.346), stdev = 4.987
[info]   CI (99.9%): [882.769, 921.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space":
[info]   922.732 ±(99.9%) 559.819 MB/sec [Average]
[info]   (min, avg, max) = (663.019, 922.732, 999.099), stdev = 145.383
[info]   CI (99.9%): [362.913, 1482.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1145.924 ±(99.9%) 698.745 B/op [Average]
[info]   (min, avg, max) = (822.353, 1145.924, 1251.602), stdev = 181.462
[info]   CI (99.9%): [447.179, 1844.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.067 ±(99.9%) 0.113 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.067, 0.103), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter
[info] # Run progress: 6.72% complete, ETA 00:29:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1542690.241 ops/s
[info] # Warmup Iteration   2: 2529902.518 ops/s
[info] # Warmup Iteration   3: 2551284.490 ops/s
[info] # Warmup Iteration   4: 2538102.295 ops/s
[info] # Warmup Iteration   5: 2535362.528 ops/s
[info] Iteration   1: 2547647.954 ops/s
[info]                  ·gc.alloc.rate:      168.404 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2507247.217 ops/s
[info]                  ·gc.alloc.rate:               165.727 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 160.571 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 2520894.087 ops/s
[info]                  ·gc.alloc.rate:               166.631 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 159.704 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 2490539.707 ops/s
[info]                  ·gc.alloc.rate:      164.626 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2517122.730 ops/s
[info]                  ·gc.alloc.rate:                   166.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     159.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter":
[info]   2516690.339 ±(99.9%) 80524.978 ops/s [Average]
[info]   (min, avg, max) = (2490539.707, 2516690.339, 2547647.954), stdev = 20912.081
[info]   CI (99.9%): [2436165.361, 2597215.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate":
[info]   166.351 ±(99.9%) 5.327 MB/sec [Average]
[info]   (min, avg, max) = (164.626, 166.351, 168.404), stdev = 1.383
[info]   CI (99.9%): [161.024, 171.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm":
[info]   104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (104.000, 104.000, 104.000), stdev = 0.001
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   153.522 ±(99.9%) 539.651 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.522, 255.880), stdev = 140.146
[info]   CI (99.9%): [≈ 0, 693.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   96.043 ±(99.9%) 337.608 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 96.043, 160.571), stdev = 87.676
[info]   CI (99.9%): [≈ 0, 433.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.001 ±(99.9%) 0.011 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.007 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 4.000), stdev = 1.673
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay
[info] # Run progress: 7.56% complete, ETA 00:29:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22835.019 ops/s
[info] # Warmup Iteration   2: 126480.482 ops/s
[info] # Warmup Iteration   3: 128019.707 ops/s
[info] # Warmup Iteration   4: 130983.078 ops/s
[info] # Warmup Iteration   5: 131189.120 ops/s
[info] Iteration   1: 130494.615 ops/s
[info]                  ·gc.alloc.rate:                   1085.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16004.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.632 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 131719.062 ops/s
[info]                  ·gc.alloc.rate:                   1095.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11950.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.249 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 130641.189 ops/s
[info]                  ·gc.alloc.rate:               1086.673 MB/sec
[info]                  ·gc.alloc.rate.norm:          13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12106.053 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 130424.999 ops/s
[info]                  ·gc.alloc.rate:               1084.966 MB/sec
[info]                  ·gc.alloc.rate.norm:          13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12157.135 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 130955.337 ops/s
[info]                  ·gc.alloc.rate:                   1089.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16196.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.250 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay":
[info]   130847.041 ±(99.9%) 2034.700 ops/s [Average]
[info]   (min, avg, max) = (130424.999, 130847.041, 131719.062), stdev = 528.405
[info]   CI (99.9%): [128812.341, 132881.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate":
[info]   1088.427 ±(99.9%) 16.896 MB/sec [Average]
[info]   (min, avg, max) = (1084.966, 1088.427, 1095.685), stdev = 4.388
[info]   CI (99.9%): [1071.531, 1105.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm":
[info]   13088.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13088.003, 13088.003, 13088.004), stdev = 0.001
[info]   CI (99.9%): [13088.003, 13088.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space":
[info]   1137.765 ±(99.9%) 703.413 MB/sec [Average]
[info]   (min, avg, max) = (1000.491, 1137.765, 1347.989), stdev = 182.674
[info]   CI (99.9%): [434.351, 1841.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   13682.942 ±(99.9%) 8506.404 B/op [Average]
[info]   (min, avg, max) = (11950.911, 13682.942, 16196.110), stdev = 2209.086
[info]   CI (99.9%): [5176.538, 22189.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   0.035 ±(99.9%) 0.219 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.135), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.426 ±(99.9%) 2.640 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.426, 1.632), stdev = 0.686
[info]   CI (99.9%): [≈ 0, 3.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce
[info] # Run progress: 8.40% complete, ETA 00:28:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 733178.550 ops/s
[info] # Warmup Iteration   2: 1175296.340 ops/s
[info] # Warmup Iteration   3: 1210513.584 ops/s
[info] # Warmup Iteration   4: 1207520.780 ops/s
[info] # Warmup Iteration   5: 1231541.698 ops/s
[info] Iteration   1: 1217206.059 ops/s
[info]                  ·gc.alloc.rate:                   1900.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2609.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1220748.042 ops/s
[info]                  ·gc.alloc.rate:                   1905.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2613.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1224608.741 ops/s
[info]                  ·gc.alloc.rate:                   1911.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2177.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1203145.575 ops/s
[info]                  ·gc.alloc.rate:                   1878.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2664.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1196632.105 ops/s
[info]                  ·gc.alloc.rate:                   1867.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.553 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2234.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce":
[info]   1212468.104 ±(99.9%) 46211.299 ops/s [Average]
[info]   (min, avg, max) = (1196632.105, 1212468.104, 1224608.741), stdev = 12000.928
[info]   CI (99.9%): [1166256.805, 1258679.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1892.659 ±(99.9%) 72.130 MB/sec [Average]
[info]   (min, avg, max) = (1867.959, 1892.659, 1911.656), stdev = 18.732
[info]   CI (99.9%): [1820.529, 1964.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2456.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2456.000, 2456.000, 2456.000), stdev = 0.001
[info]   CI (99.9%): [2456.000, 2456.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1895.630 ±(99.9%) 698.525 MB/sec [Average]
[info]   (min, avg, max) = (1694.559, 1895.630, 2037.665), stdev = 181.405
[info]   CI (99.9%): [1197.105, 2594.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2459.825 ±(99.9%) 900.165 B/op [Average]
[info]   (min, avg, max) = (2177.085, 2459.825, 2664.667), stdev = 233.770
[info]   CI (99.9%): [1559.660, 3359.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.179 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.146), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.081 ±(99.9%) 0.230 B/op [Average]
[info]   (min, avg, max) = (0.054, 0.081, 0.188), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 7.000), stdev = 1.140
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson
[info] # Run progress: 9.24% complete, ETA 00:28:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 915158.603 ops/s
[info] # Warmup Iteration   2: 1887551.621 ops/s
[info] # Warmup Iteration   3: 1909765.731 ops/s
[info] # Warmup Iteration   4: 1906577.012 ops/s
[info] # Warmup Iteration   5: 1938865.811 ops/s
[info] Iteration   1: 1934049.201 ops/s
[info]                  ·gc.alloc.rate:                   1357.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1654.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1345.734 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1962552.601 ops/s
[info]                  ·gc.alloc.rate:                   1377.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1068.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1931504.436 ops/s
[info]                  ·gc.alloc.rate:                   1355.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1092.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1957797.470 ops/s
[info]                  ·gc.alloc.rate:                   1373.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1081.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1968440.327 ops/s
[info]                  ·gc.alloc.rate:                   1381.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1079.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson":
[info]   1950868.807 ±(99.9%) 65323.587 ops/s [Average]
[info]   (min, avg, max) = (1931504.436, 1950868.807, 1968440.327), stdev = 16964.328
[info]   CI (99.9%): [1885545.220, 2016192.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1368.955 ±(99.9%) 45.940 MB/sec [Average]
[info]   (min, avg, max) = (1355.365, 1368.955, 1381.289), stdev = 11.931
[info]   CI (99.9%): [1323.015, 1414.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1405.098 ±(99.9%) 536.855 MB/sec [Average]
[info]   (min, avg, max) = (1333.481, 1405.098, 1654.232), stdev = 139.420
[info]   CI (99.9%): [868.243, 1941.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1133.645 ±(99.9%) 457.632 B/op [Average]
[info]   (min, avg, max) = (1068.982, 1133.645, 1345.734), stdev = 118.845
[info]   CI (99.9%): [676.014, 1591.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.146), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.064 ±(99.9%) 0.124 B/op [Average]
[info]   (min, avg, max) = (0.033, 0.064, 0.117), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter
[info] # Run progress: 10.08% complete, ETA 00:28:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5589884.267 ops/s
[info] # Warmup Iteration   2: 5736533.196 ops/s
[info] # Warmup Iteration   3: 6049257.889 ops/s
[info] # Warmup Iteration   4: 6054700.954 ops/s
[info] # Warmup Iteration   5: 6070313.941 ops/s
[info] Iteration   1: 5988400.344 ops/s
[info]                  ·gc.alloc.rate:                   761.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     261.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6032550.826 ops/s
[info]                  ·gc.alloc.rate:               766.821 MB/sec
[info]                  ·gc.alloc.rate.norm:          200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 173.447 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 5949488.062 ops/s
[info]                  ·gc.alloc.rate:                   756.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     176.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 6000154.709 ops/s
[info]                  ·gc.alloc.rate:               762.696 MB/sec
[info]                  ·gc.alloc.rate.norm:          200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 262.703 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 6051888.884 ops/s
[info]                  ·gc.alloc.rate:                   769.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter":
[info]   6004496.565 ±(99.9%) 153265.169 ops/s [Average]
[info]   (min, avg, max) = (5949488.062, 6004496.565, 6051888.884), stdev = 39802.478
[info]   CI (99.9%): [5851231.397, 6157761.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   763.257 ±(99.9%) 19.419 MB/sec [Average]
[info]   (min, avg, max) = (756.288, 763.257, 769.257), stdev = 5.043
[info]   CI (99.9%): [743.838, 782.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   799.607 ±(99.9%) 699.243 MB/sec [Average]
[info]   (min, avg, max) = (665.015, 799.607, 1001.813), stdev = 181.591
[info]   CI (99.9%): [100.364, 1498.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   209.589 ±(99.9%) 184.592 B/op [Average]
[info]   (min, avg, max) = (173.447, 209.589, 262.703), stdev = 47.938
[info]   CI (99.9%): [24.997, 394.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.038 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.022), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay
[info] # Run progress: 10.92% complete, ETA 00:28:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 101668.565 ops/s
[info] # Warmup Iteration   2: 446731.402 ops/s
[info] # Warmup Iteration   3: 450342.772 ops/s
[info] # Warmup Iteration   4: 448183.547 ops/s
[info] # Warmup Iteration   5: 439906.517 ops/s
[info] Iteration   1: 451046.073 ops/s
[info]                  ·gc.alloc.rate:                   1139.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4639.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.436 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 452757.562 ops/s
[info]                  ·gc.alloc.rate:               1144.145 MB/sec
[info]                  ·gc.alloc.rate.norm:          3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3486.245 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 447999.417 ops/s
[info]                  ·gc.alloc.rate:                   1132.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4713.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 447106.318 ops/s
[info]                  ·gc.alloc.rate:                   1129.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3553.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 448833.982 ops/s
[info]                  ·gc.alloc.rate:                   1134.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3550.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay":
[info]   449548.670 ±(99.9%) 8909.739 ops/s [Average]
[info]   (min, avg, max) = (447106.318, 449548.670, 452757.562), stdev = 2313.831
[info]   CI (99.9%): [440638.931, 458458.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1136.020 ±(99.9%) 22.527 MB/sec [Average]
[info]   (min, avg, max) = (1129.856, 1136.020, 1144.145), stdev = 5.850
[info]   CI (99.9%): [1113.493, 1158.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   3976.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3976.001, 3976.001, 3976.001), stdev = 0.001
[info]   CI (99.9%): [3976.001, 3976.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1139.597 ±(99.9%) 690.795 MB/sec [Average]
[info]   (min, avg, max) = (1003.212, 1139.597, 1342.036), stdev = 179.397
[info]   CI (99.9%): [448.802, 1830.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   3988.699 ±(99.9%) 2421.876 B/op [Average]
[info]   (min, avg, max) = (3486.245, 3988.699, 4713.343), stdev = 628.953
[info]   CI (99.9%): [1566.824, 6410.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.175 ±(99.9%) 0.612 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.175, 0.436), stdev = 0.159
[info]   CI (99.9%): [≈ 0, 0.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce
[info] # Run progress: 11.76% complete, ETA 00:27:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 379701.965 ops/s
[info] # Warmup Iteration   2: 628329.617 ops/s
[info] # Warmup Iteration   3: 641734.549 ops/s
[info] # Warmup Iteration   4: 638741.097 ops/s
[info] # Warmup Iteration   5: 641054.106 ops/s
[info] Iteration   1: 640024.845 ops/s
[info]                  ·gc.alloc.rate:                   2092.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4974.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 644598.823 ops/s
[info]                  ·gc.alloc.rate:                   2107.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4959.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 646376.857 ops/s
[info]                  ·gc.alloc.rate:                   2113.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2376.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5783.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.253 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 632526.367 ops/s
[info]                  ·gc.alloc.rate:                   2068.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5072.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 643250.210 ops/s
[info]                  ·gc.alloc.rate:                   2103.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2042.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4996.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce":
[info]   641355.421 ±(99.9%) 21006.960 ops/s [Average]
[info]   (min, avg, max) = (632526.367, 641355.421, 646376.857), stdev = 5455.441
[info]   CI (99.9%): [620348.460, 662362.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2096.920 ±(99.9%) 68.641 MB/sec [Average]
[info]   (min, avg, max) = (2068.027, 2096.920, 2113.209), stdev = 17.826
[info]   CI (99.9%): [2028.280, 2165.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5144.001, 5144.001, 5144.001), stdev = 0.001
[info]   CI (99.9%): [5144.001, 5144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2102.772 ±(99.9%) 588.993 MB/sec [Average]
[info]   (min, avg, max) = (2023.793, 2102.772, 2376.082), stdev = 152.960
[info]   CI (99.9%): [1513.779, 2691.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5157.373 ±(99.9%) 1359.026 B/op [Average]
[info]   (min, avg, max) = (4959.233, 5157.373, 5783.891), stdev = 352.935
[info]   CI (99.9%): [3798.346, 6516.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.173 ±(99.9%) 0.294 B/op [Average]
[info]   (min, avg, max) = (0.102, 0.173, 0.254), stdev = 0.076
[info]   CI (99.9%): [≈ 0, 0.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 8.000), stdev = 1.140
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson
[info] # Run progress: 12.61% complete, ETA 00:27:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 547900.587 ops/s
[info] # Warmup Iteration   2: 1230304.819 ops/s
[info] # Warmup Iteration   3: 1228264.373 ops/s
[info] # Warmup Iteration   4: 1234684.044 ops/s
[info] # Warmup Iteration   5: 1215105.169 ops/s
[info] Iteration   1: 1238358.482 ops/s
[info]                  ·gc.alloc.rate:                   1164.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1254.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1223084.588 ops/s
[info]                  ·gc.alloc.rate:                   1150.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1703.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1232788.585 ops/s
[info]                  ·gc.alloc.rate:                   1159.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1275.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1225113.883 ops/s
[info]                  ·gc.alloc.rate:                   1152.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1719.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1228405.974 ops/s
[info]                  ·gc.alloc.rate:                   1155.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1290.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson":
[info]   1229550.302 ±(99.9%) 23648.351 ops/s [Average]
[info]   (min, avg, max) = (1223084.588, 1229550.302, 1238358.482), stdev = 6141.402
[info]   CI (99.9%): [1205901.951, 1253198.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1156.589 ±(99.9%) 22.174 MB/sec [Average]
[info]   (min, avg, max) = (1150.503, 1156.589, 1164.843), stdev = 5.759
[info]   CI (99.9%): [1134.415, 1178.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1131.531 ±(99.9%) 704.004 MB/sec [Average]
[info]   (min, avg, max) = (987.163, 1131.531, 1339.078), stdev = 182.828
[info]   CI (99.9%): [427.527, 1835.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1448.736 ±(99.9%) 925.114 B/op [Average]
[info]   (min, avg, max) = (1254.247, 1448.736, 1719.660), stdev = 240.249
[info]   CI (99.9%): [523.622, 2373.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.125), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.080 ±(99.9%) 0.179 B/op [Average]
[info]   (min, avg, max) = (0.053, 0.080, 0.161), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter
[info] # Run progress: 13.45% complete, ETA 00:27:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1780596.692 ops/s
[info] # Warmup Iteration   2: 2251308.800 ops/s
[info] # Warmup Iteration   3: 2276622.768 ops/s
[info] # Warmup Iteration   4: 2263687.606 ops/s
[info] # Warmup Iteration   5: 2267486.179 ops/s
[info] Iteration   1: 2281072.100 ops/s
[info]                  ·gc.alloc.rate:                   950.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     688.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2299744.337 ops/s
[info]                  ·gc.alloc.rate:                   958.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     456.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2262463.845 ops/s
[info]                  ·gc.alloc.rate:                   943.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     697.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2255912.584 ops/s
[info]                  ·gc.alloc.rate:                   940.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     701.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2250182.101 ops/s
[info]                  ·gc.alloc.rate:                   938.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     705.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter":
[info]   2269874.994 ±(99.9%) 78330.958 ops/s [Average]
[info]   (min, avg, max) = (2250182.101, 2269874.994, 2299744.337), stdev = 20342.301
[info]   CI (99.9%): [2191544.035, 2348205.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   946.352 ±(99.9%) 32.729 MB/sec [Average]
[info]   (min, avg, max) = (938.125, 946.352, 958.858), stdev = 8.500
[info]   CI (99.9%): [913.623, 979.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   936.484 ±(99.9%) 580.268 MB/sec [Average]
[info]   (min, avg, max) = (667.023, 936.484, 1009.117), stdev = 150.694
[info]   CI (99.9%): [356.215, 1516.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   649.825 ±(99.9%) 417.243 B/op [Average]
[info]   (min, avg, max) = (456.342, 649.825, 705.643), stdev = 108.357
[info]   CI (99.9%): [232.583, 1067.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.047 B/op [Average]
[info]   (min, avg, max) = (0.029, 0.040, 0.058), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay
[info] # Run progress: 14.29% complete, ETA 00:27:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32513.313 ops/s
[info] # Warmup Iteration   2: 230810.474 ops/s
[info] # Warmup Iteration   3: 228699.394 ops/s
[info] # Warmup Iteration   4: 238757.048 ops/s
[info] # Warmup Iteration   5: 239029.938 ops/s
[info] Iteration   1: 237480.059 ops/s
[info]                  ·gc.alloc.rate:                   1403.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              9296.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8847.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.276 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 235504.593 ops/s
[info]                  ·gc.alloc.rate:                   1391.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              9296.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11212.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 237278.452 ops/s
[info]                  ·gc.alloc.rate:                   1401.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              9296.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8938.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.414 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 237219.124 ops/s
[info]                  ·gc.alloc.rate:                   1401.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              9296.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8967.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.552 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 239059.928 ops/s
[info]                  ·gc.alloc.rate:                   1412.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              9296.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8915.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.274 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay":
[info]   237308.431 ±(99.9%) 4855.440 ops/s [Average]
[info]   (min, avg, max) = (235504.593, 237308.431, 239059.928), stdev = 1260.942
[info]   CI (99.9%): [232452.991, 242163.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1402.123 ±(99.9%) 28.717 MB/sec [Average]
[info]   (min, avg, max) = (1391.438, 1402.123, 1412.462), stdev = 7.458
[info]   CI (99.9%): [1373.405, 1430.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9296.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9296.002, 9296.002, 9296.002), stdev = 0.001
[info]   CI (99.9%): [9296.002, 9296.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1413.703 ±(99.9%) 570.165 MB/sec [Average]
[info]   (min, avg, max) = (1335.413, 1413.703, 1678.247), stdev = 148.070
[info]   CI (99.9%): [843.538, 1983.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9376.292 ±(99.9%) 3955.505 B/op [Average]
[info]   (min, avg, max) = (8847.066, 9376.292, 11212.134), stdev = 1027.232
[info]   CI (99.9%): [5420.787, 13331.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.331 ±(99.9%) 0.606 B/op [Average]
[info]   (min, avg, max) = (0.139, 0.331, 0.552), stdev = 0.157
[info]   CI (99.9%): [≈ 0, 0.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce
[info] # Run progress: 15.13% complete, ETA 00:26:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 251846.166 ops/s
[info] # Warmup Iteration   2: 283823.966 ops/s
[info] # Warmup Iteration   3: 288962.135 ops/s
[info] # Warmup Iteration   4: 286918.311 ops/s
[info] # Warmup Iteration   5: 281887.104 ops/s
[info] Iteration   1: 282770.083 ops/s
[info]                  ·gc.alloc.rate:                   1102.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              6136.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7400.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.463 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 285235.454 ops/s
[info]                  ·gc.alloc.rate:                   1112.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              6136.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5526.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.345 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 286692.161 ops/s
[info]                  ·gc.alloc.rate:                   1118.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              6136.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5518.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.343 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 289230.508 ops/s
[info]                  ·gc.alloc.rate:                   1127.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              6136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7320.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.227 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 289200.331 ops/s
[info]                  ·gc.alloc.rate:                   1127.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              6136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5504.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.227 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce":
[info]   286625.708 ±(99.9%) 10583.446 ops/s [Average]
[info]   (min, avg, max) = (282770.083, 286625.708, 289230.508), stdev = 2748.487
[info]   CI (99.9%): [276042.261, 297209.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate":
[info]   1117.882 ±(99.9%) 41.096 MB/sec [Average]
[info]   (min, avg, max) = (1102.939, 1117.882, 1127.996), stdev = 10.672
[info]   CI (99.9%): [1076.786, 1158.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate.norm":
[info]   6136.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6136.001, 6136.002, 6136.002), stdev = 0.001
[info]   CI (99.9%): [6136.001, 6136.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   1139.068 ±(99.9%) 699.685 MB/sec [Average]
[info]   (min, avg, max) = (1001.911, 1139.068, 1345.735), stdev = 181.706
[info]   CI (99.9%): [439.383, 1838.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   6254.095 ±(99.9%) 3890.800 B/op [Average]
[info]   (min, avg, max) = (5504.988, 6254.095, 7400.553), stdev = 1010.428
[info]   CI (99.9%): [2363.296, 10144.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.321 ±(99.9%) 0.381 B/op [Average]
[info]   (min, avg, max) = (0.227, 0.321, 0.463), stdev = 0.099
[info]   CI (99.9%): [≈ 0, 0.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 5.000), stdev = 1.140
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson
[info] # Run progress: 15.97% complete, ETA 00:26:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 458100.805 ops/s
[info] # Warmup Iteration   2: 734159.186 ops/s
[info] # Warmup Iteration   3: 731968.680 ops/s
[info] # Warmup Iteration   4: 740503.418 ops/s
[info] # Warmup Iteration   5: 747062.035 ops/s
[info] Iteration   1: 747207.316 ops/s
[info]                  ·gc.alloc.rate:                   1565.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              3296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1667.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3511.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 748168.098 ops/s
[info]                  ·gc.alloc.rate:                   1567.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              3296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2822.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.219 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 734868.224 ops/s
[info]                  ·gc.alloc.rate:                   1539.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              3296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3608.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 744878.103 ops/s
[info]                  ·gc.alloc.rate:                   1560.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              3296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2857.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 740116.100 ops/s
[info]                  ·gc.alloc.rate:                   1550.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              3296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3602.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson":
[info]   743047.568 ±(99.9%) 21298.045 ops/s [Average]
[info]   (min, avg, max) = (734868.224, 743047.568, 748168.098), stdev = 5531.035
[info]   CI (99.9%): [721749.523, 764345.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate":
[info]   1556.520 ±(99.9%) 44.575 MB/sec [Average]
[info]   (min, avg, max) = (1539.376, 1556.520, 1567.262), stdev = 11.576
[info]   CI (99.9%): [1511.945, 1601.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate.norm":
[info]   3296.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3296.001, 3296.001, 3296.001), stdev = 0.001
[info]   CI (99.9%): [3296.001, 3296.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   1548.339 ±(99.9%) 707.877 MB/sec [Average]
[info]   (min, avg, max) = (1341.963, 1548.339, 1694.510), stdev = 183.833
[info]   CI (99.9%): [840.461, 2256.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3280.234 ±(99.9%) 1556.411 B/op [Average]
[info]   (min, avg, max) = (2822.188, 3280.234, 3608.124), stdev = 404.195
[info]   CI (99.9%): [1723.823, 4836.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.132 ±(99.9%) 0.205 B/op [Average]
[info]   (min, avg, max) = (0.088, 0.132, 0.219), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter
[info] # Run progress: 16.81% complete, ETA 00:26:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 788931.451 ops/s
[info] # Warmup Iteration   2: 788012.752 ops/s
[info] # Warmup Iteration   3: 797981.003 ops/s
[info] # Warmup Iteration   4: 810980.131 ops/s
[info] # Warmup Iteration   5: 807655.084 ops/s
[info] Iteration   1: 811753.568 ops/s
[info]                  ·gc.alloc.rate:                   1366.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2596.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 804059.396 ops/s
[info]                  ·gc.alloc.rate:                   1353.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2631.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 795280.335 ops/s
[info]                  ·gc.alloc.rate:                   1338.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2668.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 800818.274 ops/s
[info]                  ·gc.alloc.rate:                   1347.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2657.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 809715.536 ops/s
[info]                  ·gc.alloc.rate:                   1362.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2633.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter":
[info]   804325.422 ±(99.9%) 25716.936 ops/s [Average]
[info]   (min, avg, max) = (795280.335, 804325.422, 811753.568), stdev = 6678.607
[info]   CI (99.9%): [778608.486, 830042.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate":
[info]   1353.682 ±(99.9%) 43.282 MB/sec [Average]
[info]   (min, avg, max) = (1338.435, 1353.682, 1366.204), stdev = 11.240
[info]   CI (99.9%): [1310.401, 1396.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   2648.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2648.001, 2648.001, 2648.001), stdev = 0.001
[info]   CI (99.9%): [2648.000, 2648.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   1348.199 ±(99.9%) 24.420 MB/sec [Average]
[info]   (min, avg, max) = (1339.386, 1348.199, 1355.305), stdev = 6.342
[info]   CI (99.9%): [1323.779, 1372.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   2637.444 ±(99.9%) 108.261 B/op [Average]
[info]   (min, avg, max) = (2596.022, 2637.444, 2668.929), stdev = 28.115
[info]   CI (99.9%): [2529.184, 2745.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.098 ±(99.9%) 0.180 B/op [Average]
[info]   (min, avg, max) = (0.040, 0.098, 0.163), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson
[info] # Run progress: 17.65% complete, ETA 00:25:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 849764.764 ops/s
[info] # Warmup Iteration   2: 1722602.552 ops/s
[info] # Warmup Iteration   3: 1736017.047 ops/s
[info] # Warmup Iteration   4: 1712808.770 ops/s
[info] # Warmup Iteration   5: 1735989.685 ops/s
[info] Iteration   1: 1732375.104 ops/s
[info]                  ·gc.alloc.rate:                   1101.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1192.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1757557.534 ops/s
[info]                  ·gc.alloc.rate:                   1117.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     887.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1757228.255 ops/s
[info]                  ·gc.alloc.rate:                   1116.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     892.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1704790.077 ops/s
[info]                  ·gc.alloc.rate:                   1083.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1233.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1724555.848 ops/s
[info]                  ·gc.alloc.rate:                   1096.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     918.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson":
[info]   1735301.364 ±(99.9%) 86769.744 ops/s [Average]
[info]   (min, avg, max) = (1704790.077, 1735301.364, 1757557.534), stdev = 22533.827
[info]   CI (99.9%): [1648531.620, 1822071.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1102.902 ±(99.9%) 55.074 MB/sec [Average]
[info]   (min, avg, max) = (1083.551, 1102.902, 1117.057), stdev = 14.303
[info]   CI (99.9%): [1047.828, 1157.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1000.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1000.000, 1000.000, 1000.000), stdev = 0.001
[info]   CI (99.9%): [1000.000, 1000.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1128.747 ±(99.9%) 688.827 MB/sec [Average]
[info]   (min, avg, max) = (991.890, 1128.747, 1336.087), stdev = 178.886
[info]   CI (99.9%): [439.920, 1817.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1024.773 ±(99.9%) 664.262 B/op [Average]
[info]   (min, avg, max) = (887.950, 1024.773, 1233.064), stdev = 172.507
[info]   CI (99.9%): [360.510, 1689.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.057 ±(99.9%) 0.114 B/op [Average]
[info]   (min, avg, max) = (0.019, 0.057, 0.093), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter
[info] # Run progress: 18.49% complete, ETA 00:25:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1679305.052 ops/s
[info] # Warmup Iteration   2: 3588543.557 ops/s
[info] # Warmup Iteration   3: 3623986.434 ops/s
[info] # Warmup Iteration   4: 3645056.461 ops/s
[info] # Warmup Iteration   5: 3635594.815 ops/s
[info] Iteration   1: 3681230.592 ops/s
[info]                  ·gc.alloc.rate:               486.638 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 141.261 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 3660976.463 ops/s
[info]                  ·gc.alloc.rate:               483.959 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 142.040 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3683923.619 ops/s
[info]                  ·gc.alloc.rate:                   486.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     282.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3703377.336 ops/s
[info]                  ·gc.alloc.rate:               489.536 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 140.701 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 3663132.899 ops/s
[info]                  ·gc.alloc.rate:                   484.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     284.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter":
[info]   3678528.182 ±(99.9%) 66666.529 ops/s [Average]
[info]   (min, avg, max) = (3660976.463, 3678528.182, 3703377.336), stdev = 17313.086
[info]   CI (99.9%): [3611861.653, 3745194.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   486.265 ±(99.9%) 8.784 MB/sec [Average]
[info]   (min, avg, max) = (483.959, 486.265, 489.536), stdev = 2.281
[info]   CI (99.9%): [477.481, 495.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   463.346 ±(99.9%) 699.360 MB/sec [Average]
[info]   (min, avg, max) = (330.489, 463.346, 662.978), stdev = 181.622
[info]   CI (99.9%): [≈ 0, 1162.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   198.278 ±(99.9%) 300.268 B/op [Average]
[info]   (min, avg, max) = (140.701, 198.278, 284.784), stdev = 77.979
[info]   CI (99.9%): [≈ 0, 498.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.061 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.036), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay
[info] # Run progress: 19.33% complete, ETA 00:25:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39636.329 ops/s
[info] # Warmup Iteration   2: 280038.970 ops/s
[info] # Warmup Iteration   3: 285312.400 ops/s
[info] # Warmup Iteration   4: 282688.599 ops/s
[info] # Warmup Iteration   5: 284547.019 ops/s
[info] Iteration   1: 279617.759 ops/s
[info]                  ·gc.alloc.rate:                   1269.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7502.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.351 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 286802.204 ops/s
[info]                  ·gc.alloc.rate:                   1302.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7354.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.343 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 286835.606 ops/s
[info]                  ·gc.alloc.rate:                   1302.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7383.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 287668.324 ops/s
[info]                  ·gc.alloc.rate:                   1306.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5539.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.342 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 285298.220 ops/s
[info]                  ·gc.alloc.rate:                   1295.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7460.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.230 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay":
[info]   285244.423 ±(99.9%) 12550.985 ops/s [Average]
[info]   (min, avg, max) = (279617.759, 285244.423, 287668.324), stdev = 3259.451
[info]   CI (99.9%): [272693.438, 297795.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1295.152 ±(99.9%) 57.011 MB/sec [Average]
[info]   (min, avg, max) = (1269.588, 1295.152, 1306.159), stdev = 14.806
[info]   CI (99.9%): [1238.140, 1352.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7144.002, 7144.002, 7144.002), stdev = 0.001
[info]   CI (99.9%): [7144.001, 7144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1277.118 ±(99.9%) 569.500 MB/sec [Average]
[info]   (min, avg, max) = (1012.859, 1277.118, 1352.744), stdev = 147.897
[info]   CI (99.9%): [707.618, 1846.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7048.158 ±(99.9%) 3254.737 B/op [Average]
[info]   (min, avg, max) = (5539.806, 7048.158, 7502.389), stdev = 845.245
[info]   CI (99.9%): [3793.421, 10302.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.276 ±(99.9%) 0.398 B/op [Average]
[info]   (min, avg, max) = (0.114, 0.276, 0.351), stdev = 0.103
[info]   CI (99.9%): [≈ 0, 0.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce
[info] # Run progress: 20.17% complete, ETA 00:25:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 354214.899 ops/s
[info] # Warmup Iteration   2: 551848.838 ops/s
[info] # Warmup Iteration   3: 557974.293 ops/s
[info] # Warmup Iteration   4: 566023.115 ops/s
[info] # Warmup Iteration   5: 571379.018 ops/s
[info] Iteration   1: 567962.353 ops/s
[info]                  ·gc.alloc.rate:                   1885.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5592.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 574257.676 ops/s
[info]                  ·gc.alloc.rate:                   1906.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4628.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.342 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 573945.017 ops/s
[info]                  ·gc.alloc.rate:                   1905.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5573.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.171 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 565762.590 ops/s
[info]                  ·gc.alloc.rate:                   1878.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5666.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.232 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 565315.770 ops/s
[info]                  ·gc.alloc.rate:                   1877.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4729.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.232 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce":
[info]   569448.681 ±(99.9%) 16808.939 ops/s [Average]
[info]   (min, avg, max) = (565315.770, 569448.681, 574257.676), stdev = 4365.228
[info]   CI (99.9%): [552639.742, 586257.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1890.729 ±(99.9%) 55.727 MB/sec [Average]
[info]   (min, avg, max) = (1877.030, 1890.729, 1906.763), stdev = 14.472
[info]   CI (99.9%): [1835.002, 1946.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1895.598 ±(99.9%) 708.299 MB/sec [Average]
[info]   (min, avg, max) = (1689.312, 1895.598, 2037.778), stdev = 183.943
[info]   CI (99.9%): [1187.299, 2603.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5237.962 ±(99.9%) 1975.181 B/op [Average]
[info]   (min, avg, max) = (4628.245, 5237.962, 5666.947), stdev = 512.948
[info]   CI (99.9%): [3262.781, 7213.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.125), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.218 ±(99.9%) 0.325 B/op [Average]
[info]   (min, avg, max) = (0.115, 0.218, 0.342), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 7.000), stdev = 0.837
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson
[info] # Run progress: 21.01% complete, ETA 00:24:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 288510.421 ops/s
[info] # Warmup Iteration   2: 693172.367 ops/s
[info] # Warmup Iteration   3: 707982.046 ops/s
[info] # Warmup Iteration   4: 710158.551 ops/s
[info] # Warmup Iteration   5: 715386.637 ops/s
[info] Iteration   1: 712377.105 ops/s
[info]                  ·gc.alloc.rate:                   883.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2162.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 713785.126 ops/s
[info]                  ·gc.alloc.rate:                   885.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1446.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 712121.005 ops/s
[info]                  ·gc.alloc.rate:                   883.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2186.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 714503.406 ops/s
[info]                  ·gc.alloc.rate:                   886.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2187.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 716430.340 ops/s
[info]                  ·gc.alloc.rate:                   888.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1461.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson":
[info]   713843.396 ±(99.9%) 6738.056 ops/s [Average]
[info]   (min, avg, max) = (712121.005, 713843.396, 716430.340), stdev = 1749.852
[info]   CI (99.9%): [707105.340, 720581.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   885.611 ±(99.9%) 8.194 MB/sec [Average]
[info]   (min, avg, max) = (883.522, 885.611, 888.740), stdev = 2.128
[info]   CI (99.9%): [877.418, 893.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   856.864 ±(99.9%) 688.905 MB/sec [Average]
[info]   (min, avg, max) = (656.371, 856.864, 993.529), stdev = 178.906
[info]   CI (99.9%): [167.959, 1545.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1889.129 ±(99.9%) 1528.786 B/op [Average]
[info]   (min, avg, max) = (1446.824, 1889.129, 2187.820), stdev = 397.021
[info]   CI (99.9%): [360.344, 3417.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.101 ±(99.9%) 0.231 B/op [Average]
[info]   (min, avg, max) = (0.046, 0.101, 0.184), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 21.85% complete, ETA 00:24:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4108320.242 ops/s
[info] # Warmup Iteration   2: 4198320.970 ops/s
[info] # Warmup Iteration   3: 4267551.304 ops/s
[info] # Warmup Iteration   4: 4242625.948 ops/s
[info] # Warmup Iteration   5: 4297696.926 ops/s
[info] Iteration   1: 4272118.202 ops/s
[info]                  ·gc.alloc.rate:                   195.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.040 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4253840.749 ops/s
[info]                  ·gc.alloc.rate:               194.660 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 94.641 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 4288838.190 ops/s
[info]                  ·gc.alloc.rate:                   196.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4289367.598 ops/s
[info]                  ·gc.alloc.rate:      196.303 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4209452.730 ops/s
[info]                  ·gc.alloc.rate:                   192.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.767 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.661 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter":
[info]   4262723.494 ±(99.9%) 127665.305 ops/s [Average]
[info]   (min, avg, max) = (4209452.730, 4262723.494, 4289367.598), stdev = 33154.274
[info]   CI (99.9%): [4135058.189, 4390388.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   195.077 ±(99.9%) 5.842 MB/sec [Average]
[info]   (min, avg, max) = (192.645, 195.077, 196.303), stdev = 1.517
[info]   CI (99.9%): [189.235, 200.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   219.840 ±(99.9%) 489.750 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 219.840, 331.546), stdev = 127.187
[info]   CI (99.9%): [≈ 0, 709.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   81.333 ±(99.9%) 181.931 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 81.333, 123.914), stdev = 47.247
[info]   CI (99.9%): [≈ 0, 263.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.365 ±(99.9%) 3.020 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.365, 1.767), stdev = 0.784
[info]   CI (99.9%): [≈ 0, 3.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.136 ±(99.9%) 1.129 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.136, 0.661), stdev = 0.293
[info]   CI (99.9%): [≈ 0, 1.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay
[info] # Run progress: 22.69% complete, ETA 00:24:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35958.080 ops/s
[info] # Warmup Iteration   2: 212059.811 ops/s
[info] # Warmup Iteration   3: 225122.132 ops/s
[info] # Warmup Iteration   4: 228119.770 ops/s
[info] # Warmup Iteration   5: 225399.297 ops/s
[info] Iteration   1: 222792.313 ops/s
[info]                  ·gc.alloc.rate:                   1203.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              8496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9406.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 224688.280 ops/s
[info]                  ·gc.alloc.rate:               1213.209 MB/sec
[info]                  ·gc.alloc.rate.norm:          8496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7029.109 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 226769.428 ops/s
[info]                  ·gc.alloc.rate:                   1224.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              8496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9320.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.578 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 226591.634 ops/s
[info]                  ·gc.alloc.rate:                   1223.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              8496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9365.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.289 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 223527.062 ops/s
[info]                  ·gc.alloc.rate:               1207.042 MB/sec
[info]                  ·gc.alloc.rate.norm:          8496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1013.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7136.536 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay":
[info]   224873.744 ±(99.9%) 6868.049 ops/s [Average]
[info]   (min, avg, max) = (222792.313, 224873.744, 226769.428), stdev = 1783.611
[info]   CI (99.9%): [218005.694, 231741.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1214.284 ±(99.9%) 37.085 MB/sec [Average]
[info]   (min, avg, max) = (1203.060, 1214.284, 1224.544), stdev = 9.631
[info]   CI (99.9%): [1177.200, 1251.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8496.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8496.002, 8496.002, 8496.002), stdev = 0.001
[info]   CI (99.9%): [8496.002, 8496.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1208.358 ±(99.9%) 701.924 MB/sec [Average]
[info]   (min, avg, max) = (1003.740, 1208.358, 1348.755), stdev = 182.288
[info]   CI (99.9%): [506.433, 1910.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8451.614 ±(99.9%) 4815.143 B/op [Average]
[info]   (min, avg, max) = (7029.109, 8451.614, 9406.611), stdev = 1250.477
[info]   CI (99.9%): [3636.471, 13266.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.203 ±(99.9%) 0.930 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.203, 0.578), stdev = 0.242
[info]   CI (99.9%): [≈ 0, 1.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce
[info] # Run progress: 23.53% complete, ETA 00:24:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2962.091 ops/s
[info] # Warmup Iteration   2: 5067.208 ops/s
[info] # Warmup Iteration   3: 5254.881 ops/s
[info] # Warmup Iteration   4: 5283.321 ops/s
[info] # Warmup Iteration   5: 5329.735 ops/s
[info] Iteration   1: 5321.688 ops/s
[info]                  ·gc.alloc.rate:                   1369.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     393979.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.466 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 5359.148 ops/s
[info]                  ·gc.alloc.rate:                   1379.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     393216.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.113 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 5325.919 ops/s
[info]                  ·gc.alloc.rate:                   1371.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     397226.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.908 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5351.154 ops/s
[info]                  ·gc.alloc.rate:                   1377.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     396668.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.730 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5326.834 ops/s
[info]                  ·gc.alloc.rate:                   1371.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     399513.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.450 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce":
[info]   5336.949 ±(99.9%) 65.332 ops/s [Average]
[info]   (min, avg, max) = (5321.688, 5336.949, 5359.148), stdev = 16.966
[info]   CI (99.9%): [5271.617, 5402.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1373.820 ±(99.9%) 16.702 MB/sec [Average]
[info]   (min, avg, max) = (1369.881, 1373.820, 1379.485), stdev = 4.338
[info]   CI (99.9%): [1357.118, 1390.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   405000.083 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (405000.081, 405000.083, 405000.093), stdev = 0.005
[info]   CI (99.9%): [405000.062, 405000.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   1343.692 ±(99.9%) 30.629 MB/sec [Average]
[info]   (min, avg, max) = (1332.604, 1343.692, 1352.678), stdev = 7.954
[info]   CI (99.9%): [1313.063, 1374.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   396120.845 ±(99.9%) 9828.337 B/op [Average]
[info]   (min, avg, max) = (393216.000, 396120.845, 399513.754), stdev = 2552.388
[info]   CI (99.9%): [386292.508, 405949.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.142 MB/sec [Average]
[info]   (min, avg, max) = (0.046, 0.079, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   23.321 ±(99.9%) 41.914 B/op [Average]
[info]   (min, avg, max) = (13.466, 23.321, 36.908), stdev = 10.885
[info]   CI (99.9%): [≈ 0, 65.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson
[info] # Run progress: 24.37% complete, ETA 00:23:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4967.618 ops/s
[info] # Warmup Iteration   2: 9975.742 ops/s
[info] # Warmup Iteration   3: 10452.510 ops/s
[info] # Warmup Iteration   4: 10330.042 ops/s
[info] # Warmup Iteration   5: 10444.259 ops/s
[info] Iteration   1: 10436.147 ops/s
[info]                  ·gc.alloc.rate:               281.501 MB/sec
[info]                  ·gc.alloc.rate.norm:          42440.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38575.703 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 10470.145 ops/s
[info]                  ·gc.alloc.rate:                   282.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              42440.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48559.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.579 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 387.539 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 10565.019 ops/s
[info]                  ·gc.alloc.rate:      284.999 MB/sec
[info]                  ·gc.alloc.rate.norm: 42440.041 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 10494.499 ops/s
[info]                  ·gc.alloc.rate:                   283.096 MB/sec
[info]                  ·gc.alloc.rate.norm:              42440.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48452.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.366 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 10515.954 ops/s
[info]                  ·gc.alloc.rate:               283.661 MB/sec
[info]                  ·gc.alloc.rate.norm:          42440.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 48351.337 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson":
[info]   10496.353 ±(99.9%) 186.808 ops/s [Average]
[info]   (min, avg, max) = (10436.147, 10496.353, 10565.019), stdev = 48.513
[info]   CI (99.9%): [10309.544, 10683.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   283.140 ±(99.9%) 5.056 MB/sec [Average]
[info]   (min, avg, max) = (281.501, 283.140, 284.999), stdev = 1.313
[info]   CI (99.9%): [278.084, 288.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   42440.042 ±(99.9%) 0.006 B/op [Average]
[info]   (min, avg, max) = (42440.041, 42440.042, 42440.044), stdev = 0.001
[info]   CI (99.9%): [42440.036, 42440.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   245.082 ±(99.9%) 539.365 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 245.082, 323.203), stdev = 140.071
[info]   CI (99.9%): [≈ 0, 784.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   36787.763 ±(99.9%) 80883.850 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 36787.763, 48559.091), stdev = 21005.279
[info]   CI (99.9%): [≈ 0, 117671.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.528 ±(99.9%) 4.416 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.528, 2.579), stdev = 1.147
[info]   CI (99.9%): [≈ 0, 4.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   79.381 ±(99.9%) 663.517 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 79.381, 387.539), stdev = 172.313
[info]   CI (99.9%): [≈ 0, 742.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 4.000), stdev = 1.789
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter
[info] # Run progress: 25.21% complete, ETA 00:23:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12884.896 ops/s
[info] # Warmup Iteration   2: 17838.024 ops/s
[info] # Warmup Iteration   3: 17887.279 ops/s
[info] # Warmup Iteration   4: 17844.580 ops/s
[info] # Warmup Iteration   5: 17903.243 ops/s
[info] Iteration   1: 17822.226 ops/s
[info]                  ·gc.alloc.rate:                   333.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29264.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.763 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 155.621 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 17868.943 ops/s
[info]                  ·gc.alloc.rate:                   334.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29187.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.500 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 17905.635 ops/s
[info]                  ·gc.alloc.rate:               335.119 MB/sec
[info]                  ·gc.alloc.rate.norm:          29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29099.462 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 17952.846 ops/s
[info]                  ·gc.alloc.rate:               336.013 MB/sec
[info]                  ·gc.alloc.rate.norm:          29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29023.294 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 17977.995 ops/s
[info]                  ·gc.alloc.rate:                   336.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28982.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.467 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter":
[info]   17905.529 ±(99.9%) 241.765 ops/s [Average]
[info]   (min, avg, max) = (17822.226, 17905.529, 17977.995), stdev = 62.786
[info]   CI (99.9%): [17663.764, 18147.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   335.123 ±(99.9%) 4.503 MB/sec [Average]
[info]   (min, avg, max) = (333.575, 335.123, 336.470), stdev = 1.169
[info]   CI (99.9%): [330.620, 339.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   29448.026 ±(99.9%) 0.016 B/op [Average]
[info]   (min, avg, max) = (29448.024, 29448.026, 29448.033), stdev = 0.004
[info]   CI (99.9%): [29448.010, 29448.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   331.290 ±(99.9%) 0.693 MB/sec [Average]
[info]   (min, avg, max) = (331.153, 331.290, 331.495), stdev = 0.180
[info]   CI (99.9%): [330.597, 331.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   29111.494 ±(99.9%) 445.670 B/op [Average]
[info]   (min, avg, max) = (28982.942, 29111.494, 29264.364), stdev = 115.739
[info]   CI (99.9%): [28665.824, 29557.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.378 ±(99.9%) 2.984 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.378, 1.763), stdev = 0.775
[info]   CI (99.9%): [≈ 0, 3.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   33.318 ±(99.9%) 263.478 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 33.318, 155.621), stdev = 68.425
[info]   CI (99.9%): [≈ 0, 296.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay
[info] # Run progress: 26.05% complete, ETA 00:23:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 398.618 ops/s
[info] # Warmup Iteration   2: 1798.857 ops/s
[info] # Warmup Iteration   3: 1843.831 ops/s
[info] # Warmup Iteration   4: 1868.251 ops/s
[info] # Warmup Iteration   5: 1857.197 ops/s
[info] Iteration   1: 1875.110 ops/s
[info]                  ·gc.alloc.rate:                   1174.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              985528.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     836457.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 122.269 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1874.772 ops/s
[info]                  ·gc.alloc.rate:                   1174.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              985528.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1120679.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.467 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1882.696 ops/s
[info]                  ·gc.alloc.rate:               1179.236 MB/sec
[info]                  ·gc.alloc.rate.norm:          985528.229 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 840865.512 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1888.602 ops/s
[info]                  ·gc.alloc.rate:                   1183.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              985528.246 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1121293.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.347 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1897.535 ops/s
[info]                  ·gc.alloc.rate:               1188.723 MB/sec
[info]                  ·gc.alloc.rate.norm:          985528.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1012.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 839192.278 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay":
[info]   1883.743 ±(99.9%) 37.031 ops/s [Average]
[info]   (min, avg, max) = (1874.772, 1883.743, 1897.535), stdev = 9.617
[info]   CI (99.9%): [1846.712, 1920.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1180.054 ±(99.9%) 23.205 MB/sec [Average]
[info]   (min, avg, max) = (1174.575, 1180.054, 1188.723), stdev = 6.026
[info]   CI (99.9%): [1156.848, 1203.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   985528.233 ±(99.9%) 0.028 B/op [Average]
[info]   (min, avg, max) = (985528.228, 985528.233, 985528.246), stdev = 0.007
[info]   CI (99.9%): [985528.204, 985528.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1139.412 ±(99.9%) 708.686 MB/sec [Average]
[info]   (min, avg, max) = (996.920, 1139.412, 1346.134), stdev = 184.043
[info]   CI (99.9%): [430.726, 1848.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   951697.653 ±(99.9%) 595105.805 B/op [Average]
[info]   (min, avg, max) = (836457.348, 951697.653, 1121293.552), stdev = 154547.088
[info]   CI (99.9%): [356591.848, 1546803.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.236 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.146), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   31.416 ±(99.9%) 198.417 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 31.416, 122.269), stdev = 51.528
[info]   CI (99.9%): [≈ 0, 229.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.517
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 26.89% complete, ETA 00:23:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2446479.978 ops/s
[info] # Warmup Iteration   2: 2953307.996 ops/s
[info] # Warmup Iteration   3: 3067852.679 ops/s
[info] # Warmup Iteration   4: 3052496.364 ops/s
[info] # Warmup Iteration   5: 3055450.144 ops/s
[info] Iteration   1: 3018359.604 ops/s
[info]                  ·gc.alloc.rate:               905.499 MB/sec
[info]                  ·gc.alloc.rate.norm:          472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      996.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 519.282 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 3045341.756 ops/s
[info]                  ·gc.alloc.rate:                   913.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     516.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3027220.414 ops/s
[info]                  ·gc.alloc.rate:                   908.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     347.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3076670.728 ops/s
[info]                  ·gc.alloc.rate:                   922.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     514.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3033864.362 ops/s
[info]                  ·gc.alloc.rate:                   910.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     522.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter":
[info]   3040291.373 ±(99.9%) 87005.016 ops/s [Average]
[info]   (min, avg, max) = (3018359.604, 3040291.373, 3076670.728), stdev = 22594.926
[info]   CI (99.9%): [2953286.357, 3127296.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   912.049 ±(99.9%) 26.072 MB/sec [Average]
[info]   (min, avg, max) = (905.499, 912.049, 922.965), stdev = 6.771
[info]   CI (99.9%): [885.977, 938.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   472.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (472.000, 472.000, 472.000), stdev = 0.001
[info]   CI (99.9%): [472.000, 472.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   935.398 ±(99.9%) 575.033 MB/sec [Average]
[info]   (min, avg, max) = (668.385, 935.398, 1007.753), stdev = 149.334
[info]   CI (99.9%): [360.365, 1510.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   483.953 ±(99.9%) 294.254 B/op [Average]
[info]   (min, avg, max) = (347.376, 483.953, 522.675), stdev = 76.417
[info]   CI (99.9%): [189.699, 778.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.032), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 5.000), stdev = 1.225
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 27.73% complete, ETA 00:22:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39331.431 ops/s
[info] # Warmup Iteration   2: 246717.509 ops/s
[info] # Warmup Iteration   3: 252181.842 ops/s
[info] # Warmup Iteration   4: 252011.332 ops/s
[info] # Warmup Iteration   5: 253903.963 ops/s
[info] Iteration   1: 255964.763 ops/s
[info]                  ·gc.alloc.rate:               1353.548 MB/sec
[info]                  ·gc.alloc.rate.norm:          8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1335.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8208.224 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 255495.452 ops/s
[info]                  ·gc.alloc.rate:                   1350.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8264.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.385 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 254110.173 ops/s
[info]                  ·gc.alloc.rate:                   1343.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8342.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.387 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 254099.731 ops/s
[info]                  ·gc.alloc.rate:               1343.625 MB/sec
[info]                  ·gc.alloc.rate.norm:          8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1351.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8367.779 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 250599.124 ops/s
[info]                  ·gc.alloc.rate:                   1325.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.383 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8503.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay":
[info]   254053.849 ±(99.9%) 8093.274 ops/s [Average]
[info]   (min, avg, max) = (250599.124, 254053.849, 255964.763), stdev = 2101.798
[info]   CI (99.9%): [245960.575, 262147.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1343.388 ±(99.9%) 42.740 MB/sec [Average]
[info]   (min, avg, max) = (1325.157, 1343.388, 1353.548), stdev = 11.099
[info]   CI (99.9%): [1300.649, 1386.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8320.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8320.002, 8320.002, 8320.002), stdev = 0.001
[info]   CI (99.9%): [8320.001, 8320.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1346.068 ±(99.9%) 29.197 MB/sec [Average]
[info]   (min, avg, max) = (1335.363, 1346.068, 1354.383), stdev = 7.582
[info]   CI (99.9%): [1316.871, 1375.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8337.322 ±(99.9%) 432.728 B/op [Average]
[info]   (min, avg, max) = (8208.224, 8337.322, 8503.494), stdev = 112.378
[info]   CI (99.9%): [7904.594, 8770.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.207 ±(99.9%) 0.752 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.207, 0.387), stdev = 0.195
[info]   CI (99.9%): [≈ 0, 0.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce
[info] # Run progress: 28.57% complete, ETA 00:22:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 295406.622 ops/s
[info] # Warmup Iteration   2: 484012.666 ops/s
[info] # Warmup Iteration   3: 486911.260 ops/s
[info] # Warmup Iteration   4: 494042.211 ops/s
[info] # Warmup Iteration   5: 498106.890 ops/s
[info] Iteration   1: 495052.126 ops/s
[info]                  ·gc.alloc.rate:                   1804.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5339.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.199 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 493712.801 ops/s
[info]                  ·gc.alloc.rate:                   1799.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6453.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.398 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 488634.394 ops/s
[info]                  ·gc.alloc.rate:                   1781.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5450.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.268 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 492523.490 ops/s
[info]                  ·gc.alloc.rate:                   1795.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5419.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 495529.857 ops/s
[info]                  ·gc.alloc.rate:                   1806.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.228 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5395.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce":
[info]   493090.534 ±(99.9%) 10609.219 ops/s [Average]
[info]   (min, avg, max) = (488634.394, 493090.534, 495529.857), stdev = 2755.180
[info]   CI (99.9%): [482481.315, 503699.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1797.658 ±(99.9%) 38.701 MB/sec [Average]
[info]   (min, avg, max) = (1781.398, 1797.658, 1806.577), stdev = 10.050
[info]   CI (99.9%): [1758.957, 1836.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5736.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5736.001, 5736.001, 5736.001), stdev = 0.001
[info]   CI (99.9%): [5736.001, 5736.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1758.763 ±(99.9%) 574.016 MB/sec [Average]
[info]   (min, avg, max) = (1680.149, 1758.763, 2025.108), stdev = 149.070
[info]   CI (99.9%): [1184.747, 2332.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5611.773 ±(99.9%) 1818.467 B/op [Average]
[info]   (min, avg, max) = (5339.959, 5611.773, 6453.435), stdev = 472.250
[info]   CI (99.9%): [3793.306, 7430.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.125), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.226 ±(99.9%) 0.429 B/op [Average]
[info]   (min, avg, max) = (0.132, 0.226, 0.398), stdev = 0.111
[info]   CI (99.9%): [≈ 0, 0.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 7.000), stdev = 1.140
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson
[info] # Run progress: 29.41% complete, ETA 00:22:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 188700.962 ops/s
[info] # Warmup Iteration   2: 533070.372 ops/s
[info] # Warmup Iteration   3: 531556.251 ops/s
[info] # Warmup Iteration   4: 541206.889 ops/s
[info] # Warmup Iteration   5: 535978.576 ops/s
[info] Iteration   1: 544013.119 ops/s
[info]                  ·gc.alloc.rate:                   633.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1869.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 533906.264 ops/s
[info]                  ·gc.alloc.rate:                   621.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1907.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.245 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 544169.360 ops/s
[info]                  ·gc.alloc.rate:                   633.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1878.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 543383.633 ops/s
[info]                  ·gc.alloc.rate:               632.667 MB/sec
[info]                  ·gc.alloc.rate.norm:          1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1888.892 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 539021.536 ops/s
[info]                  ·gc.alloc.rate:                   627.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1911.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson":
[info]   540898.782 ±(99.9%) 17111.512 ops/s [Average]
[info]   (min, avg, max) = (533906.264, 540898.782, 544169.360), stdev = 4443.805
[info]   CI (99.9%): [523787.270, 558010.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   629.792 ±(99.9%) 19.933 MB/sec [Average]
[info]   (min, avg, max) = (621.673, 629.792, 633.628), stdev = 5.177
[info]   CI (99.9%): [609.858, 649.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1832.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1832.001, 1832.001, 1832.001), stdev = 0.001
[info]   CI (99.9%): [1832.001, 1832.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   650.134 ±(99.9%) 13.651 MB/sec [Average]
[info]   (min, avg, max) = (646.334, 650.134, 654.953), stdev = 3.545
[info]   CI (99.9%): [636.484, 663.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1891.275 ±(99.9%) 70.776 B/op [Average]
[info]   (min, avg, max) = (1869.301, 1891.275, 1911.987), stdev = 18.380
[info]   CI (99.9%): [1820.498, 1962.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.122 ±(99.9%) 0.334 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.122, 0.245), stdev = 0.087
[info]   CI (99.9%): [≈ 0, 0.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter
[info] # Run progress: 30.25% complete, ETA 00:22:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1644301.010 ops/s
[info] # Warmup Iteration   2: 2438801.727 ops/s
[info] # Warmup Iteration   3: 2569360.992 ops/s
[info] # Warmup Iteration   4: 2565504.900 ops/s
[info] # Warmup Iteration   5: 2583971.164 ops/s
[info] Iteration   1: 2604245.544 ops/s
[info]                  ·gc.alloc.rate:                   1032.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     602.876 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2605218.633 ops/s
[info]                  ·gc.alloc.rate:                   1033.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     604.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2577687.712 ops/s
[info]                  ·gc.alloc.rate:                   1022.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     817.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2570062.058 ops/s
[info]                  ·gc.alloc.rate:                   1019.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     617.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2555668.839 ops/s
[info]                  ·gc.alloc.rate:                   1013.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     622.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter":
[info]   2582576.557 ±(99.9%) 83629.643 ops/s [Average]
[info]   (min, avg, max) = (2555668.839, 2582576.557, 2605218.633), stdev = 21718.353
[info]   CI (99.9%): [2498946.914, 2666206.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   1024.222 ±(99.9%) 33.275 MB/sec [Average]
[info]   (min, avg, max) = (1013.491, 1024.222, 1033.259), stdev = 8.641
[info]   CI (99.9%): [990.947, 1057.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   624.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (624.000, 624.000, 624.000), stdev = 0.001
[info]   CI (99.9%): [624.000, 624.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   1071.404 ±(99.9%) 577.167 MB/sec [Average]
[info]   (min, avg, max) = (997.840, 1071.404, 1339.376), stdev = 149.888
[info]   CI (99.9%): [494.237, 1648.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   652.878 ±(99.9%) 355.869 B/op [Average]
[info]   (min, avg, max) = (602.876, 652.878, 817.550), stdev = 92.418
[info]   CI (99.9%): [297.009, 1008.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.043 ±(99.9%) 0.064 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.043, 0.063), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 6.000), stdev = 1.517
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay
[info] # Run progress: 31.09% complete, ETA 00:21:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16271.095 ops/s
[info] # Warmup Iteration   2: 141978.931 ops/s
[info] # Warmup Iteration   3: 153811.945 ops/s
[info] # Warmup Iteration   4: 155898.219 ops/s
[info] # Warmup Iteration   5: 157133.710 ops/s
[info] Iteration   1: 157673.413 ops/s
[info]                  ·gc.alloc.rate:                   1097.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              10952.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9924.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.455 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 157712.233 ops/s
[info]                  ·gc.alloc.rate:               1097.834 MB/sec
[info]                  ·gc.alloc.rate.norm:          10952.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1333.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13301.977 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 157845.180 ops/s
[info]                  ·gc.alloc.rate:                   1098.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              10952.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10019.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.415 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 157789.663 ops/s
[info]                  ·gc.alloc.rate:               1098.309 MB/sec
[info]                  ·gc.alloc.rate.norm:          10952.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10049.687 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 157169.019 ops/s
[info]                  ·gc.alloc.rate:                   1094.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              10952.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10119.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.417 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay":
[info]   157637.901 ±(99.9%) 1041.514 ops/s [Average]
[info]   (min, avg, max) = (157169.019, 157637.901, 157845.180), stdev = 270.478
[info]   CI (99.9%): [156596.388, 158679.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1097.295 ±(99.9%) 7.271 MB/sec [Average]
[info]   (min, avg, max) = (1094.024, 1097.295, 1098.773), stdev = 1.888
[info]   CI (99.9%): [1090.025, 1104.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10952.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10952.003, 10952.003, 10952.003), stdev = 0.001
[info]   CI (99.9%): [10952.003, 10952.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1070.355 ±(99.9%) 566.711 MB/sec [Average]
[info]   (min, avg, max) = (994.520, 1070.355, 1333.396), stdev = 147.173
[info]   CI (99.9%): [503.645, 1637.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10682.854 ±(99.9%) 5644.331 B/op [Average]
[info]   (min, avg, max) = (9924.030, 10682.854, 13301.977), stdev = 1465.815
[info]   CI (99.9%): [5038.524, 16327.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.230 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.146), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.457 ±(99.9%) 2.291 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.457, 1.455), stdev = 0.595
[info]   CI (99.9%): [≈ 0, 2.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce
[info] # Run progress: 31.93% complete, ETA 00:21:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 232681.780 ops/s
[info] # Warmup Iteration   2: 453713.720 ops/s
[info] # Warmup Iteration   3: 467634.419 ops/s
[info] # Warmup Iteration   4: 467997.696 ops/s
[info] # Warmup Iteration   5: 470804.863 ops/s
[info] Iteration   1: 476502.108 ops/s
[info]                  ·gc.alloc.rate:                   1698.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5534.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 470650.799 ops/s
[info]                  ·gc.alloc.rate:                   1677.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1684.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5630.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.418 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 472574.230 ops/s
[info]                  ·gc.alloc.rate:                   1684.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5628.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 468905.721 ops/s
[info]                  ·gc.alloc.rate:                   1671.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5686.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 475636.507 ops/s
[info]                  ·gc.alloc.rate:                   1695.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5616.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.276 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce":
[info]   472853.873 ±(99.9%) 12413.820 ops/s [Average]
[info]   (min, avg, max) = (468905.721, 472853.873, 476502.108), stdev = 3223.830
[info]   CI (99.9%): [460440.053, 485267.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1685.419 ±(99.9%) 44.176 MB/sec [Average]
[info]   (min, avg, max) = (1671.334, 1685.419, 1698.421), stdev = 11.472
[info]   CI (99.9%): [1641.243, 1729.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5608.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5608.001, 5608.001, 5608.001), stdev = 0.001
[info]   CI (99.9%): [5608.001, 5608.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1688.713 ±(99.9%) 33.162 MB/sec [Average]
[info]   (min, avg, max) = (1676.245, 1688.713, 1697.833), stdev = 8.612
[info]   CI (99.9%): [1655.551, 1721.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5619.218 ±(99.9%) 209.243 B/op [Average]
[info]   (min, avg, max) = (5534.779, 5619.218, 5686.035), stdev = 54.340
[info]   CI (99.9%): [5409.976, 5828.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.079, 0.125), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.263 ±(99.9%) 0.351 B/op [Average]
[info]   (min, avg, max) = (0.206, 0.263, 0.418), stdev = 0.091
[info]   CI (99.9%): [≈ 0, 0.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.304
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson
[info] # Run progress: 32.77% complete, ETA 00:21:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 254287.178 ops/s
[info] # Warmup Iteration   2: 845160.164 ops/s
[info] # Warmup Iteration   3: 870337.531 ops/s
[info] # Warmup Iteration   4: 865591.446 ops/s
[info] # Warmup Iteration   5: 863567.642 ops/s
[info] Iteration   1: 872566.535 ops/s
[info]                  ·gc.alloc.rate:                   1029.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1304.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2352.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 882329.488 ops/s
[info]                  ·gc.alloc.rate:                   1040.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1758.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 877210.370 ops/s
[info]                  ·gc.alloc.rate:                   1034.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1777.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.112 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 876377.586 ops/s
[info]                  ·gc.alloc.rate:                   1033.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1790.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 868696.848 ops/s
[info]                  ·gc.alloc.rate:                   1024.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1813.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson":
[info]   875436.165 ±(99.9%) 19747.943 ops/s [Average]
[info]   (min, avg, max) = (868696.848, 875436.165, 882329.488), stdev = 5128.478
[info]   CI (99.9%): [855688.222, 895184.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1032.656 ±(99.9%) 23.441 MB/sec [Average]
[info]   (min, avg, max) = (1024.594, 1032.656, 1040.774), stdev = 6.088
[info]   CI (99.9%): [1009.215, 1056.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.001, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1056.133 ±(99.9%) 535.527 MB/sec [Average]
[info]   (min, avg, max) = (985.822, 1056.133, 1304.688), stdev = 139.075
[info]   CI (99.9%): [520.606, 1591.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1898.656 ±(99.9%) 980.314 B/op [Average]
[info]   (min, avg, max) = (1758.006, 1898.656, 2352.614), stdev = 254.584
[info]   CI (99.9%): [918.342, 2878.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.090 ±(99.9%) 0.165 B/op [Average]
[info]   (min, avg, max) = (0.037, 0.090, 0.150), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter
[info] # Run progress: 33.61% complete, ETA 00:20:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2394082.918 ops/s
[info] # Warmup Iteration   2: 2680826.002 ops/s
[info] # Warmup Iteration   3: 2699093.643 ops/s
[info] # Warmup Iteration   4: 2678682.480 ops/s
[info] # Warmup Iteration   5: 2702860.785 ops/s
[info] Iteration   1: 2678719.499 ops/s
[info]                  ·gc.alloc.rate:                   667.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     389.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2691022.745 ops/s
[info]                  ·gc.alloc.rate:                   670.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     387.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2692112.769 ops/s
[info]                  ·gc.alloc.rate:                   670.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     388.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2693727.450 ops/s
[info]                  ·gc.alloc.rate:                   671.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     389.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2440779.769 ops/s
[info]                  ·gc.alloc.rate:               608.057 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 430.417 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter":
[info]   2639272.446 ±(99.9%) 427885.008 ops/s [Average]
[info]   (min, avg, max) = (2440779.769, 2639272.446, 2693727.450), stdev = 111120.378
[info]   CI (99.9%): [2211387.439, 3067157.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   657.558 ±(99.9%) 106.708 MB/sec [Average]
[info]   (min, avg, max) = (608.057, 657.558, 671.116), stdev = 27.712
[info]   CI (99.9%): [550.850, 764.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   664.946 ±(99.9%) 7.927 MB/sec [Average]
[info]   (min, avg, max) = (662.691, 664.946, 667.648), stdev = 2.059
[info]   CI (99.9%): [657.019, 672.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   397.033 ±(99.9%) 71.896 B/op [Average]
[info]   (min, avg, max) = (387.831, 397.033, 430.417), stdev = 18.671
[info]   CI (99.9%): [325.137, 468.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.094 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.061), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay
[info] # Run progress: 34.45% complete, ETA 00:20:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46131.562 ops/s
[info] # Warmup Iteration   2: 253408.792 ops/s
[info] # Warmup Iteration   3: 255549.036 ops/s
[info] # Warmup Iteration   4: 260640.222 ops/s
[info] # Warmup Iteration   5: 258780.130 ops/s
[info] Iteration   1: 264097.912 ops/s
[info]                  ·gc.alloc.rate:                   1350.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7955.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.620 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 261666.747 ops/s
[info]                  ·gc.alloc.rate:               1338.549 MB/sec
[info]                  ·gc.alloc.rate.norm:          8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8069.514 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 262076.071 ops/s
[info]                  ·gc.alloc.rate:                   1340.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8089.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.625 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 259309.468 ops/s
[info]                  ·gc.alloc.rate:               1326.393 MB/sec
[info]                  ·gc.alloc.rate.norm:          8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1013.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6147.380 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 259311.842 ops/s
[info]                  ·gc.alloc.rate:                   1326.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8211.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.253 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay":
[info]   261292.408 ±(99.9%) 7815.906 ops/s [Average]
[info]   (min, avg, max) = (259309.468, 261292.408, 264097.912), stdev = 2029.766
[info]   CI (99.9%): [253476.502, 269108.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1336.564 ±(99.9%) 40.090 MB/sec [Average]
[info]   (min, avg, max) = (1326.380, 1336.564, 1350.931), stdev = 10.411
[info]   CI (99.9%): [1296.475, 1376.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8048.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8048.002, 8048.002, 8048.002), stdev = 0.001
[info]   CI (99.9%): [8048.001, 8048.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1278.280 ±(99.9%) 571.278 MB/sec [Average]
[info]   (min, avg, max) = (1013.151, 1278.280, 1353.319), stdev = 148.359
[info]   CI (99.9%): [707.002, 1849.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7694.571 ±(99.9%) 3348.753 B/op [Average]
[info]   (min, avg, max) = (6147.380, 7694.571, 8211.457), stdev = 869.660
[info]   CI (99.9%): [4345.819, 11043.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.300 ±(99.9%) 1.203 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.300, 0.625), stdev = 0.312
[info]   CI (99.9%): [≈ 0, 1.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce
[info] # Run progress: 35.29% complete, ETA 00:20:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 317848.275 ops/s
[info] # Warmup Iteration   2: 536911.471 ops/s
[info] # Warmup Iteration   3: 540975.919 ops/s
[info] # Warmup Iteration   4: 538616.258 ops/s
[info] # Warmup Iteration   5: 548680.944 ops/s
[info] Iteration   1: 542584.356 ops/s
[info]                  ·gc.alloc.rate:                   2091.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5868.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 552217.497 ops/s
[info]                  ·gc.alloc.rate:                   2128.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5788.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.297 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 547635.208 ops/s
[info]                  ·gc.alloc.rate:                   2110.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2375.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6826.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 555753.847 ops/s
[info]                  ·gc.alloc.rate:                   2141.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5773.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 549135.461 ops/s
[info]                  ·gc.alloc.rate:                   2116.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2042.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5852.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce":
[info]   549465.274 ±(99.9%) 19052.502 ops/s [Average]
[info]   (min, avg, max) = (542584.356, 549465.274, 555753.847), stdev = 4947.874
[info]   CI (99.9%): [530412.772, 568517.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate":
[info]   2117.656 ±(99.9%) 73.353 MB/sec [Average]
[info]   (min, avg, max) = (2091.163, 2117.656, 2141.831), stdev = 19.050
[info]   CI (99.9%): [2044.303, 2191.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   6064.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6064.001, 6064.001, 6064.001), stdev = 0.001
[info]   CI (99.9%): [6064.001, 6064.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   2102.668 ±(99.9%) 589.011 MB/sec [Average]
[info]   (min, avg, max) = (2023.660, 2102.668, 2375.983), stdev = 152.964
[info]   CI (99.9%): [1513.658, 2691.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   6022.027 ±(99.9%) 1739.371 B/op [Average]
[info]   (min, avg, max) = (5773.575, 6022.027, 6826.836), stdev = 451.709
[info]   CI (99.9%): [4282.656, 7761.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.143 ±(99.9%) 0.382 B/op [Average]
[info]   (min, avg, max) = (0.059, 0.143, 0.297), stdev = 0.099
[info]   CI (99.9%): [≈ 0, 0.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 9.000), stdev = 1.140
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter
[info] # Run progress: 36.13% complete, ETA 00:20:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1713732.551 ops/s
[info] # Warmup Iteration   2: 1878239.133 ops/s
[info] # Warmup Iteration   3: 1867435.074 ops/s
[info] # Warmup Iteration   4: 1883989.686 ops/s
[info] # Warmup Iteration   5: 1920222.188 ops/s
[info] Iteration   1: 1856442.201 ops/s
[info]                  ·gc.alloc.rate:                   1198.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1132.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1914385.948 ops/s
[info]                  ·gc.alloc.rate:                   1236.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     826.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1916920.556 ops/s
[info]                  ·gc.alloc.rate:                   1237.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1104.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1923112.862 ops/s
[info]                  ·gc.alloc.rate:                   1241.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1104.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1917940.692 ops/s
[info]                  ·gc.alloc.rate:                   1238.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     832.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter":
[info]   1905760.452 ±(99.9%) 106863.198 ops/s [Average]
[info]   (min, avg, max) = (1856442.201, 1905760.452, 1923112.862), stdev = 27752.033
[info]   CI (99.9%): [1798897.254, 2012623.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate":
[info]   1230.614 ±(99.9%) 68.960 MB/sec [Average]
[info]   (min, avg, max) = (1198.793, 1230.614, 1241.838), stdev = 17.909
[info]   CI (99.9%): [1161.654, 1299.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   1210.663 ±(99.9%) 704.539 MB/sec [Average]
[info]   (min, avg, max) = (1005.810, 1210.663, 1350.029), stdev = 182.966
[info]   CI (99.9%): [506.125, 1915.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1000.274 ±(99.9%) 601.627 B/op [Average]
[info]   (min, avg, max) = (826.681, 1000.274, 1132.904), stdev = 156.241
[info]   CI (99.9%): [398.647, 1601.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.088 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.041, 0.068), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 8.000), stdev = 2.345
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay
[info] # Run progress: 36.97% complete, ETA 00:19:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11447.252 ops/s
[info] # Warmup Iteration   2: 152021.385 ops/s
[info] # Warmup Iteration   3: 164353.372 ops/s
[info] # Warmup Iteration   4: 163926.873 ops/s
[info] # Warmup Iteration   5: 164586.039 ops/s
[info] Iteration   1: 164976.742 ops/s
[info]                  ·gc.alloc.rate:                   1180.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12678.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.390 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 167379.051 ops/s
[info]                  ·gc.alloc.rate:                   1197.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9423.748 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.391 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 164463.967 ops/s
[info]                  ·gc.alloc.rate:                   1176.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12838.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.199 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 166122.222 ops/s
[info]                  ·gc.alloc.rate:               1188.482 MB/sec
[info]                  ·gc.alloc.rate.norm:          11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1009.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9564.754 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 162720.978 ops/s
[info]                  ·gc.alloc.rate:                   1164.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13060.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay":
[info]   165132.592 ±(99.9%) 6755.981 ops/s [Average]
[info]   (min, avg, max) = (162720.978, 165132.592, 167379.051), stdev = 1754.507
[info]   CI (99.9%): [158376.611, 171888.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate":
[info]   1181.362 ±(99.9%) 48.294 MB/sec [Average]
[info]   (min, avg, max) = (1164.139, 1181.362, 1197.405), stdev = 12.542
[info]   CI (99.9%): [1133.068, 1229.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   11256.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11256.003, 11256.003, 11256.003), stdev = 0.001
[info]   CI (99.9%): [11256.002, 11256.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1206.898 ±(99.9%) 706.159 MB/sec [Average]
[info]   (min, avg, max) = (1002.491, 1206.898, 1350.725), stdev = 183.387
[info]   CI (99.9%): [500.739, 1913.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11513.145 ±(99.9%) 7118.465 B/op [Average]
[info]   (min, avg, max) = (9423.748, 11513.145, 13060.085), stdev = 1848.643
[info]   CI (99.9%): [4394.680, 18631.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.222 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.146), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.436 ±(99.9%) 2.121 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.436, 1.390), stdev = 0.551
[info]   CI (99.9%): [≈ 0, 2.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 10.000), stdev = 2.864
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson
[info] # Run progress: 37.82% complete, ETA 00:19:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51842.972 ops/s
[info] # Warmup Iteration   2: 743362.748 ops/s
[info] # Warmup Iteration   3: 848421.464 ops/s
[info] # Warmup Iteration   4: 870140.015 ops/s
[info] # Warmup Iteration   5: 876022.668 ops/s
[info] Iteration   1: 878818.373 ops/s
[info]                  ·gc.alloc.rate:                   1139.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1753.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 878070.721 ops/s
[info]                  ·gc.alloc.rate:                   1138.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2356.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.112 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 873735.341 ops/s
[info]                  ·gc.alloc.rate:                   1132.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1789.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 862004.600 ops/s
[info]                  ·gc.alloc.rate:                   1117.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1822.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 870598.349 ops/s
[info]                  ·gc.alloc.rate:                   1128.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2418.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson":
[info]   872645.477 ±(99.9%) 26268.104 ops/s [Average]
[info]   (min, avg, max) = (862004.600, 872645.477, 878818.373), stdev = 6821.743
[info]   CI (99.9%): [846377.373, 898913.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   1131.457 ±(99.9%) 34.023 MB/sec [Average]
[info]   (min, avg, max) = (1117.716, 1131.457, 1139.464), stdev = 8.836
[info]   CI (99.9%): [1097.434, 1165.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.000, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.000, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1124.999 ±(99.9%) 710.044 MB/sec [Average]
[info]   (min, avg, max) = (979.225, 1124.999, 1337.903), stdev = 184.396
[info]   CI (99.9%): [414.956, 1835.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2028.088 ±(99.9%) 1269.807 B/op [Average]
[info]   (min, avg, max) = (1753.122, 2028.088, 2418.113), stdev = 329.765
[info]   CI (99.9%): [758.281, 3297.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.090 ±(99.9%) 0.164 B/op [Average]
[info]   (min, avg, max) = (0.037, 0.090, 0.150), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter
[info] # Run progress: 38.66% complete, ETA 00:19:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1597170.207 ops/s
[info] # Warmup Iteration   2: 1527459.366 ops/s
[info] # Warmup Iteration   3: 1533205.514 ops/s
[info] # Warmup Iteration   4: 1556280.652 ops/s
[info] # Warmup Iteration   5: 1557164.440 ops/s
[info] Iteration   1: 1556626.037 ops/s
[info]                  ·gc.alloc.rate:                   736.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     670.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1552303.996 ops/s
[info]                  ·gc.alloc.rate:                   734.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1010.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1558182.693 ops/s
[info]                  ·gc.alloc.rate:                   736.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     672.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1557547.261 ops/s
[info]                  ·gc.alloc.rate:               736.571 MB/sec
[info]                  ·gc.alloc.rate.norm:          744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 674.486 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1541273.522 ops/s
[info]                  ·gc.alloc.rate:               728.817 MB/sec
[info]                  ·gc.alloc.rate.norm:          744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 682.966 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter":
[info]   1553186.702 ±(99.9%) 27126.307 ops/s [Average]
[info]   (min, avg, max) = (1541273.522, 1553186.702, 1558182.693), stdev = 7044.616
[info]   CI (99.9%): [1526060.395, 1580313.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   734.496 ±(99.9%) 12.915 MB/sec [Average]
[info]   (min, avg, max) = (728.817, 734.496, 736.865), stdev = 3.354
[info]   CI (99.9%): [721.581, 747.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   732.711 ±(99.9%) 569.580 MB/sec [Average]
[info]   (min, avg, max) = (663.081, 732.711, 997.285), stdev = 147.918
[info]   CI (99.9%): [163.131, 1302.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   742.245 ±(99.9%) 578.248 B/op [Average]
[info]   (min, avg, max) = (670.171, 742.245, 1010.739), stdev = 150.169
[info]   CI (99.9%): [163.996, 1320.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.169 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.034, 0.106), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay
[info] # Run progress: 39.50% complete, ETA 00:19:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39750.810 ops/s
[info] # Warmup Iteration   2: 217984.260 ops/s
[info] # Warmup Iteration   3: 223639.416 ops/s
[info] # Warmup Iteration   4: 222368.944 ops/s
[info] # Warmup Iteration   5: 221988.413 ops/s
[info] Iteration   1: 223475.577 ops/s
[info]                  ·gc.alloc.rate:                   1174.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7025.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.293 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 223623.668 ops/s
[info]                  ·gc.alloc.rate:                   1175.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9409.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.586 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 223124.158 ops/s
[info]                  ·gc.alloc.rate:               1173.033 MB/sec
[info]                  ·gc.alloc.rate.norm:          8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7102.403 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 223865.028 ops/s
[info]                  ·gc.alloc.rate:                   1176.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9466.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.439 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 225017.658 ops/s
[info]                  ·gc.alloc.rate:                   1182.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7082.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.437 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay":
[info]   223821.218 ±(99.9%) 2775.254 ops/s [Average]
[info]   (min, avg, max) = (223124.158, 223821.218, 225017.658), stdev = 720.725
[info]   CI (99.9%): [221045.964, 226596.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1176.704 ±(99.9%) 14.500 MB/sec [Average]
[info]   (min, avg, max) = (1173.033, 1176.704, 1182.951), stdev = 3.766
[info]   CI (99.9%): [1162.205, 1191.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8272.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8272.002, 8272.002, 8272.002), stdev = 0.001
[info]   CI (99.9%): [8272.002, 8272.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1140.427 ±(99.9%) 709.507 MB/sec [Average]
[info]   (min, avg, max) = (997.851, 1140.427, 1346.927), stdev = 184.257
[info]   CI (99.9%): [430.920, 1849.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8017.287 ±(99.9%) 4996.595 B/op [Average]
[info]   (min, avg, max) = (7025.348, 8017.287, 9466.988), stdev = 1297.600
[info]   CI (99.9%): [3020.692, 13013.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.351 ±(99.9%) 0.854 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.351, 0.586), stdev = 0.222
[info]   CI (99.9%): [≈ 0, 1.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.342
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce
[info] # Run progress: 40.34% complete, ETA 00:18:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 900426.396 ops/s
[info] # Warmup Iteration   2: 1030005.399 ops/s
[info] # Warmup Iteration   3: 1057706.082 ops/s
[info] # Warmup Iteration   4: 1054601.036 ops/s
[info] # Warmup Iteration   5: 1062149.095 ops/s
[info] Iteration   1: 1063324.327 ops/s
[info]                  ·gc.alloc.rate:                   1302.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1975.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1067079.716 ops/s
[info]                  ·gc.alloc.rate:                   1307.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1977.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1058006.894 ops/s
[info]                  ·gc.alloc.rate:                   1296.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.724 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2002.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1053152.036 ops/s
[info]                  ·gc.alloc.rate:                   1290.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1513.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1058028.606 ops/s
[info]                  ·gc.alloc.rate:                   1296.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2012.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce":
[info]   1059918.316 ±(99.9%) 20726.844 ops/s [Average]
[info]   (min, avg, max) = (1053152.036, 1059918.316, 1067079.716), stdev = 5382.696
[info]   CI (99.9%): [1039191.471, 1080645.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate":
[info]   1298.813 ±(99.9%) 25.436 MB/sec [Average]
[info]   (min, avg, max) = (1290.524, 1298.813, 1307.613), stdev = 6.606
[info]   CI (99.9%): [1273.377, 1324.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate.norm":
[info]   1928.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1928.000, 1928.000, 1928.000), stdev = 0.001
[info]   CI (99.9%): [1928.000, 1928.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   1277.927 ±(99.9%) 571.145 MB/sec [Average]
[info]   (min, avg, max) = (1012.861, 1277.927, 1353.313), stdev = 148.324
[info]   CI (99.9%): [706.783, 1849.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1896.427 ±(99.9%) 827.206 B/op [Average]
[info]   (min, avg, max) = (1513.181, 1896.427, 2012.601), stdev = 214.823
[info]   CI (99.9%): [1069.221, 2723.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.083, 0.125), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.124 ±(99.9%) 0.167 B/op [Average]
[info]   (min, avg, max) = (0.092, 0.124, 0.184), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson
[info] # Run progress: 41.18% complete, ETA 00:18:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 593330.296 ops/s
[info] # Warmup Iteration   2: 909119.375 ops/s
[info] # Warmup Iteration   3: 896377.135 ops/s
[info] # Warmup Iteration   4: 911126.578 ops/s
[info] # Warmup Iteration   5: 908310.932 ops/s
[info] Iteration   1: 910035.610 ops/s
[info]                  ·gc.alloc.rate:                   564.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1127.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 911409.808 ops/s
[info]                  ·gc.alloc.rate:               565.349 MB/sec
[info]                  ·gc.alloc.rate.norm:          976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 563.670 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 906199.780 ops/s
[info]                  ·gc.alloc.rate:                   562.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1136.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.181 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 908756.980 ops/s
[info]                  ·gc.alloc.rate:               563.733 MB/sec
[info]                  ·gc.alloc.rate.norm:          976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1136.368 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 907640.466 ops/s
[info]                  ·gc.alloc.rate:                   563.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1141.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson":
[info]   908808.529 ±(99.9%) 7807.644 ops/s [Average]
[info]   (min, avg, max) = (906199.780, 908808.529, 911409.808), stdev = 2027.620
[info]   CI (99.9%): [901000.885, 916616.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate":
[info]   563.752 ±(99.9%) 4.835 MB/sec [Average]
[info]   (min, avg, max) = (562.138, 563.752, 565.349), stdev = 1.256
[info]   CI (99.9%): [558.917, 568.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.001), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   589.587 ±(99.9%) 566.368 MB/sec [Average]
[info]   (min, avg, max) = (326.506, 589.587, 658.337), stdev = 147.084
[info]   CI (99.9%): [23.219, 1155.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1021.055 ±(99.9%) 984.733 B/op [Average]
[info]   (min, avg, max) = (563.670, 1021.055, 1141.252), stdev = 255.732
[info]   CI (99.9%): [36.323, 2005.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.087 ±(99.9%) 0.320 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.087, 0.181), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter
[info] # Run progress: 42.02% complete, ETA 00:18:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1311837.448 ops/s
[info] # Warmup Iteration   2: 1342863.791 ops/s
[info] # Warmup Iteration   3: 1357254.071 ops/s
[info] # Warmup Iteration   4: 1337680.748 ops/s
[info] # Warmup Iteration   5: 1335883.469 ops/s
[info] Iteration   1: 1347345.933 ops/s
[info]                  ·gc.alloc.rate:               219.220 MB/sec
[info]                  ·gc.alloc.rate.norm:          256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 298.796 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1351610.047 ops/s
[info]                  ·gc.alloc.rate:                   219.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     297.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1364704.284 ops/s
[info]                  ·gc.alloc.rate:      222.025 MB/sec
[info]                  ·gc.alloc.rate.norm: 256.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1350582.039 ops/s
[info]                  ·gc.alloc.rate:                   219.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     385.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.732 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1355185.317 ops/s
[info]                  ·gc.alloc.rate:                   220.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     384.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter":
[info]   1353885.524 ±(99.9%) 25657.549 ops/s [Average]
[info]   (min, avg, max) = (1347345.933, 1353885.524, 1364704.284), stdev = 6663.184
[info]   CI (99.9%): [1328227.976, 1379543.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate":
[info]   220.283 ±(99.9%) 4.141 MB/sec [Average]
[info]   (min, avg, max) = (219.220, 220.283, 222.025), stdev = 1.075
[info]   CI (99.9%): [216.142, 224.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   256.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (256.000, 256.000, 256.000), stdev = 0.001
[info]   CI (99.9%): [256.000, 256.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   234.820 ±(99.9%) 525.854 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 234.820, 331.182), stdev = 136.563
[info]   CI (99.9%): [≈ 0, 760.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   273.392 ±(99.9%) 611.783 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 273.392, 385.803), stdev = 158.878
[info]   CI (99.9%): [≈ 0, 885.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.371 ±(99.9%) 2.931 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.371, 1.732), stdev = 0.761
[info]   CI (99.9%): [≈ 0, 3.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.433 ±(99.9%) 3.414 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.433, 2.017), stdev = 0.887
[info]   CI (99.9%): [≈ 0, 3.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce
[info] # Run progress: 42.86% complete, ETA 00:18:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 118018.189 ops/s
[info] # Warmup Iteration   2: 455513.370 ops/s
[info] # Warmup Iteration   3: 469775.841 ops/s
[info] # Warmup Iteration   4: 468011.108 ops/s
[info] # Warmup Iteration   5: 468467.957 ops/s
[info] Iteration   1: 466856.076 ops/s
[info]                  ·gc.alloc.rate:                   1393.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              4696.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4487.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 472917.236 ops/s
[info]                  ·gc.alloc.rate:                   1411.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              4696.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4454.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.277 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 471245.320 ops/s
[info]                  ·gc.alloc.rate:                   1406.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              4696.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5614.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 471934.932 ops/s
[info]                  ·gc.alloc.rate:                   1408.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              4696.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4500.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 468216.852 ops/s
[info]                  ·gc.alloc.rate:                   1397.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              4696.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4547.840 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce":
[info]   470234.083 ±(99.9%) 9928.941 ops/s [Average]
[info]   (min, avg, max) = (466856.076, 470234.083, 472917.236), stdev = 2578.514
[info]   CI (99.9%): [460305.142, 480163.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1403.521 ±(99.9%) 29.597 MB/sec [Average]
[info]   (min, avg, max) = (1393.430, 1403.521, 1411.562), stdev = 7.686
[info]   CI (99.9%): [1373.924, 1433.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4696.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4696.001, 4696.001, 4696.001), stdev = 0.001
[info]   CI (99.9%): [4696.001, 4696.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1411.125 ±(99.9%) 582.878 MB/sec [Average]
[info]   (min, avg, max) = (1331.649, 1411.125, 1681.460), stdev = 151.372
[info]   CI (99.9%): [828.248, 1994.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4721.052 ±(99.9%) 1926.938 B/op [Average]
[info]   (min, avg, max) = (4454.663, 4721.052, 5614.229), stdev = 500.420
[info]   CI (99.9%): [2794.114, 6647.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.153 ±(99.9%) 0.291 B/op [Average]
[info]   (min, avg, max) = (0.069, 0.153, 0.277), stdev = 0.076
[info]   CI (99.9%): [≈ 0, 0.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 1.000
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson
[info] # Run progress: 43.70% complete, ETA 00:17:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 476933.352 ops/s
[info] # Warmup Iteration   2: 1019495.801 ops/s
[info] # Warmup Iteration   3: 1005716.359 ops/s
[info] # Warmup Iteration   4: 1029014.389 ops/s
[info] # Warmup Iteration   5: 1029446.496 ops/s
[info] Iteration   1: 1030786.198 ops/s
[info]                  ·gc.alloc.rate:                   780.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     994.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1013269.293 ops/s
[info]                  ·gc.alloc.rate:                   767.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1015.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1009173.469 ops/s
[info]                  ·gc.alloc.rate:                   764.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1537.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1020776.817 ops/s
[info]                  ·gc.alloc.rate:                   773.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1017.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1027753.779 ops/s
[info]                  ·gc.alloc.rate:                   778.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1013.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson":
[info]   1020351.911 ±(99.9%) 35447.034 ops/s [Average]
[info]   (min, avg, max) = (1009173.469, 1020351.911, 1030786.198), stdev = 9205.482
[info]   CI (99.9%): [984904.878, 1055798.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   772.992 ±(99.9%) 26.760 MB/sec [Average]
[info]   (min, avg, max) = (764.563, 772.992, 780.904), stdev = 6.949
[info]   CI (99.9%): [746.232, 799.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1192.000, 1192.000, 1192.000), stdev = 0.001
[info]   CI (99.9%): [1192.000, 1192.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   722.763 ±(99.9%) 566.624 MB/sec [Average]
[info]   (min, avg, max) = (651.670, 722.763, 985.875), stdev = 147.151
[info]   CI (99.9%): [156.139, 1289.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1115.726 ±(99.9%) 907.593 B/op [Average]
[info]   (min, avg, max) = (994.733, 1115.726, 1537.038), stdev = 235.699
[info]   CI (99.9%): [208.133, 2023.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.084 ±(99.9%) 0.190 B/op [Average]
[info]   (min, avg, max) = (0.032, 0.084, 0.162), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 9.000), stdev = 3.130
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter
[info] # Run progress: 44.54% complete, ETA 00:17:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3042088.113 ops/s
[info] # Warmup Iteration   2: 3339123.275 ops/s
[info] # Warmup Iteration   3: 3323204.569 ops/s
[info] # Warmup Iteration   4: 3374852.949 ops/s
[info] # Warmup Iteration   5: 3347734.711 ops/s
[info] Iteration   1: 3360302.217 ops/s
[info]                  ·gc.alloc.rate:      102.504 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3375140.109 ops/s
[info]                  ·gc.alloc.rate:      102.963 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3325057.894 ops/s
[info]                  ·gc.alloc.rate:                   101.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3346304.648 ops/s
[info]                  ·gc.alloc.rate:      102.085 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3324712.328 ops/s
[info]                  ·gc.alloc.rate:                   101.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter":
[info]   3346303.439 ±(99.9%) 84912.343 ops/s [Average]
[info]   (min, avg, max) = (3324712.328, 3346303.439, 3375140.109), stdev = 22051.466
[info]   CI (99.9%): [3261391.096, 3431215.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   102.082 ±(99.9%) 2.588 MB/sec [Average]
[info]   (min, avg, max) = (101.426, 102.082, 102.963), stdev = 0.672
[info]   CI (99.9%): [99.494, 104.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   102.347 ±(99.9%) 539.648 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.347, 255.873), stdev = 140.145
[info]   CI (99.9%): [≈ 0, 641.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   48.435 ±(99.9%) 255.382 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.435, 121.093), stdev = 66.322
[info]   CI (99.9%): [≈ 0, 303.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.015 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.042 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.025), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay
[info] # Run progress: 45.38% complete, ETA 00:17:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31093.065 ops/s
[info] # Warmup Iteration   2: 168644.197 ops/s
[info] # Warmup Iteration   3: 170932.476 ops/s
[info] # Warmup Iteration   4: 170865.681 ops/s
[info] # Warmup Iteration   5: 171412.172 ops/s
[info] Iteration   1: 173466.243 ops/s
[info]                  ·gc.alloc.rate:                   1129.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              10240.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9044.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.944 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 171918.093 ops/s
[info]                  ·gc.alloc.rate:                   1118.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              10240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12221.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.381 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 174930.808 ops/s
[info]                  ·gc.alloc.rate:                   1138.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              10240.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9046.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 170798.916 ops/s
[info]                  ·gc.alloc.rate:                   1111.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              10240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9296.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.384 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 171619.212 ops/s
[info]                  ·gc.alloc.rate:               1116.993 MB/sec
[info]                  ·gc.alloc.rate.norm:          10240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12373.524 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay":
[info]   172546.655 ±(99.9%) 6338.860 ops/s [Average]
[info]   (min, avg, max) = (170798.916, 172546.655, 174930.808), stdev = 1646.182
[info]   CI (99.9%): [166207.795, 178885.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1123.016 ±(99.9%) 41.363 MB/sec [Average]
[info]   (min, avg, max) = (1111.534, 1123.016, 1138.479), stdev = 10.742
[info]   CI (99.9%): [1081.653, 1164.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10240.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10240.002, 10240.003, 10240.003), stdev = 0.001
[info]   CI (99.9%): [10240.002, 10240.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1139.499 ±(99.9%) 714.305 MB/sec [Average]
[info]   (min, avg, max) = (997.362, 1139.499, 1349.720), stdev = 185.503
[info]   CI (99.9%): [425.194, 1853.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10396.692 ±(99.9%) 6696.292 B/op [Average]
[info]   (min, avg, max) = (9044.867, 10396.692, 12373.524), stdev = 1739.006
[info]   CI (99.9%): [3700.400, 17092.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.379 ±(99.9%) 1.362 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.379, 0.944), stdev = 0.354
[info]   CI (99.9%): [≈ 0, 1.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce
[info] # Run progress: 46.22% complete, ETA 00:16:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2946.484 ops/s
[info] # Warmup Iteration   2: 5062.702 ops/s
[info] # Warmup Iteration   3: 6953.623 ops/s
[info] # Warmup Iteration   4: 7573.385 ops/s
[info] # Warmup Iteration   5: 7616.011 ops/s
[info] Iteration   1: 7613.000 ops/s
[info]                  ·gc.alloc.rate:                   1074.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              221968.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     204826.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.212 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 7615.511 ops/s
[info]                  ·gc.alloc.rate:                   1074.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              221968.061 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     274223.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.020 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 7682.518 ops/s
[info]                  ·gc.alloc.rate:                   1083.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              221968.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     204761.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.529 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 7643.726 ops/s
[info]                  ·gc.alloc.rate:                   1078.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              221968.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     206670.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.143 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 7657.393 ops/s
[info]                  ·gc.alloc.rate:                   1080.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              222004.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     206867.520 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.557 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce":
[info]   7642.430 ±(99.9%) 112.650 ops/s [Average]
[info]   (min, avg, max) = (7613.000, 7642.430, 7682.518), stdev = 29.255
[info]   CI (99.9%): [7529.779, 7755.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate":
[info]   1078.295 ±(99.9%) 16.038 MB/sec [Average]
[info]   (min, avg, max) = (1074.056, 1078.295, 1083.912), stdev = 4.165
[info]   CI (99.9%): [1062.257, 1094.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm":
[info]   221975.316 ±(99.9%) 62.500 B/op [Average]
[info]   (min, avg, max) = (221968.056, 221975.316, 222004.351), stdev = 16.231
[info]   CI (99.9%): [221912.816, 222037.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   1065.892 ±(99.9%) 563.393 MB/sec [Average]
[info]   (min, avg, max) = (991.113, 1065.892, 1327.403), stdev = 146.311
[info]   CI (99.9%): [502.499, 1629.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   219470.122 ±(99.9%) 117923.272 B/op [Average]
[info]   (min, avg, max) = (204761.620, 219470.122, 274223.893), stdev = 30624.299
[info]   CI (99.9%): [101546.850, 337393.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.092 ±(99.9%) 0.264 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.092, 0.208), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   18.892 ±(99.9%) 54.532 B/op [Average]
[info]   (min, avg, max) = (8.529, 18.892, 43.020), stdev = 14.162
[info]   CI (99.9%): [≈ 0, 73.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.304
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson
[info] # Run progress: 47.06% complete, ETA 00:16:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2308.389 ops/s
[info] # Warmup Iteration   2: 10989.777 ops/s
[info] # Warmup Iteration   3: 11795.871 ops/s
[info] # Warmup Iteration   4: 11688.724 ops/s
[info] # Warmup Iteration   5: 11697.002 ops/s
[info] Iteration   1: 11633.765 ops/s
[info]                  ·gc.alloc.rate:               183.979 MB/sec
[info]                  ·gc.alloc.rate.norm:          24880.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34604.089 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 11791.638 ops/s
[info]                  ·gc.alloc.rate:      186.479 MB/sec
[info]                  ·gc.alloc.rate.norm: 24880.037 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 11784.989 ops/s
[info]                  ·gc.alloc.rate:               186.355 MB/sec
[info]                  ·gc.alloc.rate.norm:          24880.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34160.786 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 11660.691 ops/s
[info]                  ·gc.alloc.rate:                   184.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              24880.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34523.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.269 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 11852.045 ops/s
[info]                  ·gc.alloc.rate:      187.431 MB/sec
[info]                  ·gc.alloc.rate.norm: 24880.050 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson":
[info]   11744.626 ±(99.9%) 358.716 ops/s [Average]
[info]   (min, avg, max) = (11633.765, 11744.626, 11852.045), stdev = 93.157
[info]   CI (99.9%): [11385.909, 12103.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate":
[info]   185.728 ±(99.9%) 5.677 MB/sec [Average]
[info]   (min, avg, max) = (183.979, 185.728, 187.431), stdev = 1.474
[info]   CI (99.9%): [180.051, 191.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   24880.040 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (24880.037, 24880.040, 24880.050), stdev = 0.006
[info]   CI (99.9%): [24880.018, 24880.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   153.525 ±(99.9%) 539.661 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.525, 255.885), stdev = 140.148
[info]   CI (99.9%): [≈ 0, 693.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   20657.771 ±(99.9%) 72617.825 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20657.771, 34604.089), stdev = 18858.619
[info]   CI (99.9%): [≈ 0, 93275.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.032), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.854 ±(99.9%) 7.352 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.854, 4.269), stdev = 1.909
[info]   CI (99.9%): [≈ 0, 8.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.400, 8.000), stdev = 3.435
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter
[info] # Run progress: 47.90% complete, ETA 00:16:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8945.534 ops/s
[info] # Warmup Iteration   2: 13494.943 ops/s
[info] # Warmup Iteration   3: 23567.788 ops/s
[info] # Warmup Iteration   4: 23598.264 ops/s
[info] # Warmup Iteration   5: 23561.863 ops/s
[info] Iteration   1: 23582.454 ops/s
[info]                  ·gc.alloc.rate:               265.951 MB/sec
[info]                  ·gc.alloc.rate.norm:          17744.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17071.703 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 23938.019 ops/s
[info]                  ·gc.alloc.rate:               269.963 MB/sec
[info]                  ·gc.alloc.rate.norm:          17744.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16817.859 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 23939.803 ops/s
[info]                  ·gc.alloc.rate:                   269.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              17744.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21765.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.797 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 118.140 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 23965.279 ops/s
[info]                  ·gc.alloc.rate:      270.277 MB/sec
[info]                  ·gc.alloc.rate.norm: 17744.018 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 24003.940 ops/s
[info]                  ·gc.alloc.rate:                   270.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              17744.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21707.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.730 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter":
[info]   23885.899 ±(99.9%) 661.190 ops/s [Average]
[info]   (min, avg, max) = (23582.454, 23885.899, 24003.940), stdev = 171.709
[info]   CI (99.9%): [23224.709, 24547.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate":
[info]   269.370 ±(99.9%) 7.448 MB/sec [Average]
[info]   (min, avg, max) = (265.951, 269.370, 270.689), stdev = 1.934
[info]   CI (99.9%): [261.922, 276.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   17744.029 ±(99.9%) 0.089 B/op [Average]
[info]   (min, avg, max) = (17744.018, 17744.029, 17744.070), stdev = 0.023
[info]   CI (99.9%): [17743.939, 17744.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   234.811 ±(99.9%) 525.820 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 234.811, 331.164), stdev = 136.554
[info]   CI (99.9%): [≈ 0, 760.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   15472.509 ±(99.9%) 34561.679 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15472.509, 21765.955), stdev = 8975.558
[info]   CI (99.9%): [≈ 0, 50034.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.368 ±(99.9%) 3.078 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.368, 1.797), stdev = 0.799
[info]   CI (99.9%): [≈ 0, 3.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   24.174 ±(99.9%) 202.321 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.174, 118.140), stdev = 52.542
[info]   CI (99.9%): [≈ 0, 226.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 4.000), stdev = 1.581
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay
[info] # Run progress: 48.74% complete, ETA 00:16:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 482.702 ops/s
[info] # Warmup Iteration   2: 3350.871 ops/s
[info] # Warmup Iteration   3: 3618.335 ops/s
[info] # Warmup Iteration   4: 3747.402 ops/s
[info] # Warmup Iteration   5: 3766.776 ops/s
[info] Iteration   1: 3713.781 ops/s
[info]                  ·gc.alloc.rate:                   1095.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              464136.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     562251.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.177 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74.978 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3697.563 ops/s
[info]                  ·gc.alloc.rate:                   1090.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              464136.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     425638.514 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.717 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3709.497 ops/s
[info]                  ·gc.alloc.rate:               1094.258 MB/sec
[info]                  ·gc.alloc.rate.norm:          464136.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 426354.958 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 3760.415 ops/s
[info]                  ·gc.alloc.rate:                   1109.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              464136.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     421576.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.421 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3797.669 ops/s
[info]                  ·gc.alloc.rate:                   1120.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              464136.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     558375.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.625 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay":
[info]   3735.785 ±(99.9%) 161.914 ops/s [Average]
[info]   (min, avg, max) = (3697.563, 3735.785, 3797.669), stdev = 42.049
[info]   CI (99.9%): [3573.871, 3897.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate":
[info]   1102.095 ±(99.9%) 47.643 MB/sec [Average]
[info]   (min, avg, max) = (1090.898, 1102.095, 1120.315), stdev = 12.373
[info]   CI (99.9%): [1054.452, 1149.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   464136.117 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (464136.114, 464136.117, 464136.125), stdev = 0.005
[info]   CI (99.9%): [464136.099, 464136.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1137.657 ±(99.9%) 703.237 MB/sec [Average]
[info]   (min, avg, max) = (1000.414, 1137.657, 1347.787), stdev = 182.628
[info]   CI (99.9%): [434.420, 1840.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   478839.404 ±(99.9%) 286527.346 B/op [Average]
[info]   (min, avg, max) = (421576.608, 478839.404, 562251.250), stdev = 74410.242
[info]   CI (99.9%): [192312.059, 765366.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.056 ±(99.9%) 0.268 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.056, 0.177), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   23.748 ±(99.9%) 113.799 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 23.748, 74.978), stdev = 29.553
[info]   CI (99.9%): [≈ 0, 137.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.140
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce
[info] # Run progress: 49.58% complete, ETA 00:15:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 237219.660 ops/s
[info] # Warmup Iteration   2: 417019.403 ops/s
[info] # Warmup Iteration   3: 428036.386 ops/s
[info] # Warmup Iteration   4: 425574.062 ops/s
[info] # Warmup Iteration   5: 421728.239 ops/s
[info] Iteration   1: 423465.271 ops/s
[info]                  ·gc.alloc.rate:                   1401.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1668.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6198.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 425118.575 ops/s
[info]                  ·gc.alloc.rate:                   1407.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4966.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.308 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 426760.000 ops/s
[info]                  ·gc.alloc.rate:                   1412.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4966.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 425442.169 ops/s
[info]                  ·gc.alloc.rate:                   1408.186 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4996.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 425586.004 ops/s
[info]                  ·gc.alloc.rate:                   1408.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5005.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce":
[info]   425274.404 ±(99.9%) 4568.120 ops/s [Average]
[info]   (min, avg, max) = (423465.271, 425274.404, 426760.000), stdev = 1186.326
[info]   CI (99.9%): [420706.283, 429842.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate":
[info]   1407.657 ±(99.9%) 15.246 MB/sec [Average]
[info]   (min, avg, max) = (1401.638, 1407.657, 1412.632), stdev = 3.959
[info]   CI (99.9%): [1392.411, 1422.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm":
[info]   5208.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5208.001, 5208.001, 5208.001), stdev = 0.001
[info]   CI (99.9%): [5208.001, 5208.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space":
[info]   1412.398 ±(99.9%) 550.820 MB/sec [Average]
[info]   (min, avg, max) = (1341.877, 1412.398, 1668.158), stdev = 143.046
[info]   CI (99.9%): [861.578, 1963.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5226.587 ±(99.9%) 2092.782 B/op [Average]
[info]   (min, avg, max) = (4966.219, 5226.587, 6198.300), stdev = 543.489
[info]   CI (99.9%): [3133.805, 7319.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.170 ±(99.9%) 0.325 B/op [Average]
[info]   (min, avg, max) = (0.077, 0.170, 0.308), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.517
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson
[info] # Run progress: 50.42% complete, ETA 00:15:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 757261.356 ops/s
[info] # Warmup Iteration   2: 1624823.012 ops/s
[info] # Warmup Iteration   3: 1637581.308 ops/s
[info] # Warmup Iteration   4: 1642748.259 ops/s
[info] # Warmup Iteration   5: 1635263.642 ops/s
[info] Iteration   1: 1648956.442 ops/s
[info]                  ·gc.alloc.rate:                   687.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     929.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1644976.442 ops/s
[info]                  ·gc.alloc.rate:                   685.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     623.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1631327.407 ops/s
[info]                  ·gc.alloc.rate:               680.148 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.008 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 631.753 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1650933.003 ops/s
[info]                  ·gc.alloc.rate:                   688.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     626.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1647617.525 ops/s
[info]                  ·gc.alloc.rate:                   686.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.366 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     629.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson":
[info]   1644762.164 ±(99.9%) 30096.848 ops/s [Average]
[info]   (min, avg, max) = (1631327.407, 1644762.164, 1650933.003), stdev = 7816.056
[info]   CI (99.9%): [1614665.316, 1674859.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate":
[info]   685.805 ±(99.9%) 12.682 MB/sec [Average]
[info]   (min, avg, max) = (680.148, 685.805, 688.315), stdev = 3.294
[info]   CI (99.9%): [673.122, 698.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space":
[info]   719.734 ±(99.9%) 548.709 MB/sec [Average]
[info]   (min, avg, max) = (652.362, 719.734, 974.600), stdev = 142.498
[info]   CI (99.9%): [171.025, 1268.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   688.292 ±(99.9%) 519.612 B/op [Average]
[info]   (min, avg, max) = (623.965, 688.292, 929.625), stdev = 134.942
[info]   CI (99.9%): [168.680, 1207.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.143 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.079), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter
[info] # Run progress: 51.26% complete, ETA 00:15:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5872196.841 ops/s
[info] # Warmup Iteration   2: 8590355.939 ops/s
[info] # Warmup Iteration   3: 8951144.436 ops/s
[info] # Warmup Iteration   4: 8891858.232 ops/s
[info] # Warmup Iteration   5: 8965867.511 ops/s
[info] Iteration   1: 8879191.784 ops/s
[info]                  ·gc.alloc.rate:                   451.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 8926218.096 ops/s
[info]                  ·gc.alloc.rate:               453.869 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58.375 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 8840096.875 ops/s
[info]                  ·gc.alloc.rate:               449.447 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58.941 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 8970559.765 ops/s
[info]                  ·gc.alloc.rate:                   456.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 8954384.296 ops/s
[info]                  ·gc.alloc.rate:               455.316 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58.192 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter":
[info]   8914090.163 ±(99.9%) 207831.559 ops/s [Average]
[info]   (min, avg, max) = (8840096.875, 8914090.163, 8970559.765), stdev = 53973.196
[info]   CI (99.9%): [8706258.605, 9121921.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate":
[info]   453.250 ±(99.9%) 10.625 MB/sec [Average]
[info]   (min, avg, max) = (449.447, 453.250, 456.125), stdev = 2.759
[info]   CI (99.9%): [442.625, 463.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   463.649 ±(99.9%) 698.512 MB/sec [Average]
[info]   (min, avg, max) = (331.135, 463.649, 662.372), stdev = 181.401
[info]   CI (99.9%): [≈ 0, 1162.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   81.809 ±(99.9%) 122.902 B/op [Average]
[info]   (min, avg, max) = (58.192, 81.809, 117.365), stdev = 31.917
[info]   CI (99.9%): [≈ 0, 204.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.031 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.015), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay
[info] # Run progress: 52.10% complete, ETA 00:15:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67908.631 ops/s
[info] # Warmup Iteration   2: 247422.761 ops/s
[info] # Warmup Iteration   3: 254244.580 ops/s
[info] # Warmup Iteration   4: 250243.664 ops/s
[info] # Warmup Iteration   5: 252095.876 ops/s
[info] Iteration   1: 248396.113 ops/s
[info]                  ·gc.alloc.rate:                   799.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6269.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 248355.856 ops/s
[info]                  ·gc.alloc.rate:                   799.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4200.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 251026.145 ops/s
[info]                  ·gc.alloc.rate:                   807.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6254.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.522 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 255368.191 ops/s
[info]                  ·gc.alloc.rate:               821.884 MB/sec
[info]                  ·gc.alloc.rate.norm:          5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4117.972 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 251908.045 ops/s
[info]                  ·gc.alloc.rate:                   810.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4182.817 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.390 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay":
[info]   251010.870 ±(99.9%) 11173.082 ops/s [Average]
[info]   (min, avg, max) = (248355.856, 251010.870, 255368.191), stdev = 2901.614
[info]   CI (99.9%): [239837.788, 262183.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate":
[info]   807.888 ±(99.9%) 35.886 MB/sec [Average]
[info]   (min, avg, max) = (799.371, 807.888, 821.884), stdev = 9.319
[info]   CI (99.9%): [772.003, 843.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm":
[info]   5064.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5064.002, 5064.002, 5064.002), stdev = 0.001
[info]   CI (99.9%): [5064.002, 5064.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space":
[info]   797.758 ±(99.9%) 689.520 MB/sec [Average]
[info]   (min, avg, max) = (663.035, 797.758, 997.893), stdev = 179.066
[info]   CI (99.9%): [108.238, 1487.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5005.074 ±(99.9%) 4420.367 B/op [Average]
[info]   (min, avg, max) = (4117.972, 5005.074, 6269.888), stdev = 1147.955
[info]   CI (99.9%): [584.707, 9425.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.262 ±(99.9%) 0.793 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.262, 0.522), stdev = 0.206
[info]   CI (99.9%): [≈ 0, 1.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 7.000), stdev = 1.924
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce
[info] # Run progress: 52.94% complete, ETA 00:14:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 956413.782 ops/s
[info] # Warmup Iteration   2: 1375577.469 ops/s
[info] # Warmup Iteration   3: 1411268.379 ops/s
[info] # Warmup Iteration   4: 1381133.845 ops/s
[info] # Warmup Iteration   5: 1391372.545 ops/s
[info] Iteration   1: 1407928.475 ops/s
[info]                  ·gc.alloc.rate:                   1417.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              1584.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1492.323 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1395576.224 ops/s
[info]                  ·gc.alloc.rate:                   1404.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              1584.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1512.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1398561.389 ops/s
[info]                  ·gc.alloc.rate:                   1407.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              1584.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1684.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1894.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1389920.151 ops/s
[info]                  ·gc.alloc.rate:                   1399.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              1584.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1530.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1405494.662 ops/s
[info]                  ·gc.alloc.rate:                   1415.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              1584.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1516.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce":
[info]   1399496.180 ±(99.9%) 28232.443 ops/s [Average]
[info]   (min, avg, max) = (1389920.151, 1399496.180, 1407928.475), stdev = 7331.876
[info]   CI (99.9%): [1371263.738, 1427728.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1408.896 ±(99.9%) 28.377 MB/sec [Average]
[info]   (min, avg, max) = (1399.226, 1408.896, 1417.259), stdev = 7.369
[info]   CI (99.9%): [1380.519, 1437.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1584.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1584.000, 1584.000, 1584.000), stdev = 0.001
[info]   CI (99.9%): [1584.000, 1584.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1413.613 ±(99.9%) 583.318 MB/sec [Average]
[info]   (min, avg, max) = (1335.233, 1413.613, 1684.239), stdev = 151.486
[info]   CI (99.9%): [830.296, 1996.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1589.398 ±(99.9%) 659.440 B/op [Average]
[info]   (min, avg, max) = (1492.323, 1589.398, 1894.773), stdev = 171.255
[info]   CI (99.9%): [929.957, 2248.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.070 ±(99.9%) 0.144 B/op [Average]
[info]   (min, avg, max) = (0.023, 0.070, 0.118), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson
[info] # Run progress: 53.78% complete, ETA 00:14:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1805474.183 ops/s
[info] # Warmup Iteration   2: 4169645.359 ops/s
[info] # Warmup Iteration   3: 4219652.494 ops/s
[info] # Warmup Iteration   4: 4230491.944 ops/s
[info] # Warmup Iteration   5: 4213512.196 ops/s
[info] Iteration   1: 4252311.924 ops/s
[info]                  ·gc.alloc.rate:                   1167.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     364.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4200695.793 ops/s
[info]                  ·gc.alloc.rate:                   1153.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     495.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 4211946.726 ops/s
[info]                  ·gc.alloc.rate:                   1156.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     372.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4285612.821 ops/s
[info]                  ·gc.alloc.rate:                   1176.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     490.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4253262.815 ops/s
[info]                  ·gc.alloc.rate:                   1167.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     372.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson":
[info]   4240766.016 ±(99.9%) 132510.390 ops/s [Average]
[info]   (min, avg, max) = (4200695.793, 4240766.016, 4285612.821), stdev = 34412.527
[info]   CI (99.9%): [4108255.626, 4373276.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1164.351 ±(99.9%) 36.420 MB/sec [Average]
[info]   (min, avg, max) = (1153.317, 1164.351, 1176.737), stdev = 9.458
[info]   CI (99.9%): [1127.931, 1200.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1129.895 ±(99.9%) 703.763 MB/sec [Average]
[info]   (min, avg, max) = (985.125, 1129.895, 1337.075), stdev = 182.765
[info]   CI (99.9%): [426.133, 1833.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   419.202 ±(99.9%) 260.286 B/op [Average]
[info]   (min, avg, max) = (364.527, 419.202, 495.417), stdev = 67.596
[info]   CI (99.9%): [158.915, 679.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.054 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.022, 0.047), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 54.62% complete, ETA 00:14:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14009164.422 ops/s
[info] # Warmup Iteration   2: 14791089.205 ops/s
[info] # Warmup Iteration   3: 15052144.080 ops/s
[info] # Warmup Iteration   4: 15438330.450 ops/s
[info] # Warmup Iteration   5: 15509050.467 ops/s
[info] Iteration   1: 15614458.080 ops/s
[info]                  ·gc.alloc.rate:                   476.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 15557957.080 ops/s
[info]                  ·gc.alloc.rate:                   474.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 15700802.429 ops/s
[info]                  ·gc.alloc.rate:               478.960 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.187 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 15631885.404 ops/s
[info]                  ·gc.alloc.rate:                   476.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 15646358.794 ops/s
[info]                  ·gc.alloc.rate:               477.299 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.370 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter":
[info]   15630292.358 ±(99.9%) 199300.632 ops/s [Average]
[info]   (min, avg, max) = (15557957.080, 15630292.358, 15700802.429), stdev = 51757.741
[info]   CI (99.9%): [15430991.726, 15829592.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   476.817 ±(99.9%) 6.069 MB/sec [Average]
[info]   (min, avg, max) = (474.607, 476.817, 478.960), stdev = 1.576
[info]   CI (99.9%): [470.748, 482.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   463.757 ±(99.9%) 697.980 MB/sec [Average]
[info]   (min, avg, max) = (331.155, 463.757, 662.327), stdev = 181.263
[info]   CI (99.9%): [≈ 0, 1161.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   46.716 ±(99.9%) 70.690 B/op [Average]
[info]   (min, avg, max) = (33.187, 46.716, 66.984), stdev = 18.358
[info]   CI (99.9%): [≈ 0, 117.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.008 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc
[info] # Run progress: 55.46% complete, ETA 00:14:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17405138.213 ops/s
[info] # Warmup Iteration   2: 18099620.958 ops/s
[info] # Warmup Iteration   3: 18994462.136 ops/s
[info] # Warmup Iteration   4: 18942582.032 ops/s
[info] # Warmup Iteration   5: 19050234.878 ops/s
[info] Iteration   1: 19057962.125 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 19032420.758 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 19039589.012 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 19049154.635 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 19050192.280 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc":
[info]   19045863.762 ±(99.9%) 38314.543 ops/s [Average]
[info]   (min, avg, max) = (19032420.758, 19045863.762, 19057962.125), stdev = 9950.165
[info]   CI (99.9%): [19007549.219, 19084178.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay
[info] # Run progress: 56.30% complete, ETA 00:13:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 277840.672 ops/s
[info] # Warmup Iteration   2: 874431.524 ops/s
[info] # Warmup Iteration   3: 875286.228 ops/s
[info] # Warmup Iteration   4: 873209.082 ops/s
[info] # Warmup Iteration   5: 886447.505 ops/s
[info] Iteration   1: 881867.920 ops/s
[info]                  ·gc.alloc.rate:               1322.755 MB/sec
[info]                  ·gc.alloc.rate.norm:          2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1318.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2352.741 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 881354.067 ops/s
[info]                  ·gc.alloc.rate:                   1321.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2373.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 872016.911 ops/s
[info]                  ·gc.alloc.rate:                   1308.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2414.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 885545.486 ops/s
[info]                  ·gc.alloc.rate:                   1328.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2389.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 878818.919 ops/s
[info]                  ·gc.alloc.rate:                   1318.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2416.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.112 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay":
[info]   879920.661 ±(99.9%) 19365.354 ops/s [Average]
[info]   (min, avg, max) = (872016.911, 879920.661, 885545.486), stdev = 5029.121
[info]   CI (99.9%): [860555.306, 899286.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1319.867 ±(99.9%) 29.045 MB/sec [Average]
[info]   (min, avg, max) = (1308.035, 1319.867, 1328.356), stdev = 7.543
[info]   CI (99.9%): [1290.822, 1348.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2360.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2360.000, 2360.000, 2360.001), stdev = 0.001
[info]   CI (99.9%): [2360.000, 2360.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1336.114 ±(99.9%) 47.780 MB/sec [Average]
[info]   (min, avg, max) = (1318.686, 1336.114, 1349.748), stdev = 12.408
[info]   CI (99.9%): [1288.334, 1383.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2389.125 ±(99.9%) 104.732 B/op [Average]
[info]   (min, avg, max) = (2352.741, 2389.125, 2416.453), stdev = 27.199
[info]   CI (99.9%): [2284.392, 2493.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.075 ±(99.9%) 0.227 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.149), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 6.000), stdev = 0.894
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce
[info] # Run progress: 57.14% complete, ETA 00:13:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 422004.490 ops/s
[info] # Warmup Iteration   2: 779747.858 ops/s
[info] # Warmup Iteration   3: 797753.899 ops/s
[info] # Warmup Iteration   4: 797986.494 ops/s
[info] # Warmup Iteration   5: 784680.943 ops/s
[info] Iteration   1: 800884.041 ops/s
[info]                  ·gc.alloc.rate:                   1824.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              3584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3300.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 792612.681 ops/s
[info]                  ·gc.alloc.rate:                   1805.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              3584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4019.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 793590.088 ops/s
[info]                  ·gc.alloc.rate:                   1807.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              3584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3356.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 798120.731 ops/s
[info]                  ·gc.alloc.rate:                   1818.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              3584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3344.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 787235.971 ops/s
[info]                  ·gc.alloc.rate:                   1793.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              3584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4072.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce":
[info]   794488.702 ±(99.9%) 20286.451 ops/s [Average]
[info]   (min, avg, max) = (787235.971, 794488.702, 800884.041), stdev = 5268.327
[info]   CI (99.9%): [774202.251, 814775.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1809.876 ±(99.9%) 45.578 MB/sec [Average]
[info]   (min, avg, max) = (1793.757, 1809.876, 1824.358), stdev = 11.836
[info]   CI (99.9%): [1764.298, 1855.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3584.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3584.001, 3584.001, 3584.001), stdev = 0.001
[info]   CI (99.9%): [3584.000, 3584.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1826.604 ±(99.9%) 721.373 MB/sec [Average]
[info]   (min, avg, max) = (1680.264, 1826.604, 2038.268), stdev = 187.338
[info]   CI (99.9%): [1105.231, 2547.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3618.821 ±(99.9%) 1505.983 B/op [Average]
[info]   (min, avg, max) = (3300.924, 3618.821, 4072.543), stdev = 391.099
[info]   CI (99.9%): [2112.838, 5124.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.124 ±(99.9%) 0.300 B/op [Average]
[info]   (min, avg, max) = (0.041, 0.124, 0.208), stdev = 0.078
[info]   CI (99.9%): [≈ 0, 0.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson
[info] # Run progress: 57.98% complete, ETA 00:13:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 899575.748 ops/s
[info] # Warmup Iteration   2: 2542195.315 ops/s
[info] # Warmup Iteration   3: 2559605.923 ops/s
[info] # Warmup Iteration   4: 2526932.363 ops/s
[info] # Warmup Iteration   5: 2561088.886 ops/s
[info] Iteration   1: 2574261.454 ops/s
[info]                  ·gc.alloc.rate:                   1492.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     810.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2577363.433 ops/s
[info]                  ·gc.alloc.rate:                   1494.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1668.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1018.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2554950.469 ops/s
[info]                  ·gc.alloc.rate:                   1480.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     827.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2563214.209 ops/s
[info]                  ·gc.alloc.rate:                   1485.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1035.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2521072.432 ops/s
[info]                  ·gc.alloc.rate:                   1461.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     844.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson":
[info]   2558172.399 ±(99.9%) 86946.177 ops/s [Average]
[info]   (min, avg, max) = (2521072.432, 2558172.399, 2577363.433), stdev = 22579.646
[info]   CI (99.9%): [2471226.222, 2645118.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1482.810 ±(99.9%) 50.435 MB/sec [Average]
[info]   (min, avg, max) = (1461.272, 1482.810, 1494.003), stdev = 13.098
[info]   CI (99.9%): [1432.375, 1533.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1475.592 ±(99.9%) 711.843 MB/sec [Average]
[info]   (min, avg, max) = (1325.937, 1475.592, 1686.443), stdev = 184.863
[info]   CI (99.9%): [763.749, 2187.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   907.260 ±(99.9%) 424.016 B/op [Average]
[info]   (min, avg, max) = (810.478, 907.260, 1035.181), stdev = 110.115
[info]   CI (99.9%): [483.244, 1331.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.036 ±(99.9%) 0.094 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.036, 0.076), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 9.000), stdev = 1.924
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter
[info] # Run progress: 58.82% complete, ETA 00:12:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4225664.077 ops/s
[info] # Warmup Iteration   2: 4647270.453 ops/s
[info] # Warmup Iteration   3: 4644965.658 ops/s
[info] # Warmup Iteration   4: 4659490.441 ops/s
[info] # Warmup Iteration   5: 4692234.027 ops/s
[info] Iteration   1: 4675914.105 ops/s
[info]                  ·gc.alloc.rate:                   1283.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     450.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4588902.005 ops/s
[info]                  ·gc.alloc.rate:                   1259.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     460.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4664939.374 ops/s
[info]                  ·gc.alloc.rate:                   1280.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     340.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4679250.639 ops/s
[info]                  ·gc.alloc.rate:                   1284.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     454.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4660809.475 ops/s
[info]                  ·gc.alloc.rate:                   1279.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     457.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter":
[info]   4653963.120 ±(99.9%) 143065.852 ops/s [Average]
[info]   (min, avg, max) = (4588902.005, 4653963.120, 4679250.639), stdev = 37153.747
[info]   CI (99.9%): [4510897.268, 4797028.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1277.815 ±(99.9%) 39.322 MB/sec [Average]
[info]   (min, avg, max) = (1259.950, 1277.815, 1284.817), stdev = 10.212
[info]   CI (99.9%): [1238.493, 1317.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1279.431 ±(99.9%) 578.769 MB/sec [Average]
[info]   (min, avg, max) = (1010.792, 1279.431, 1353.953), stdev = 150.304
[info]   CI (99.9%): [700.662, 1858.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   432.620 ±(99.9%) 197.906 B/op [Average]
[info]   (min, avg, max) = (340.932, 432.620, 460.591), stdev = 51.395
[info]   CI (99.9%): [234.714, 630.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.036 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.023, 0.036), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay
[info] # Run progress: 59.66% complete, ETA 00:12:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 56736.717 ops/s
[info] # Warmup Iteration   2: 318043.157 ops/s
[info] # Warmup Iteration   3: 330228.950 ops/s
[info] # Warmup Iteration   4: 332632.172 ops/s
[info] # Warmup Iteration   5: 332896.175 ops/s
[info] Iteration   1: 333907.957 ops/s
[info]                  ·gc.alloc.rate:                   1191.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4701.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.392 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 330836.334 ops/s
[info]                  ·gc.alloc.rate:                   1180.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6363.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.495 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 334736.850 ops/s
[info]                  ·gc.alloc.rate:               1194.866 MB/sec
[info]                  ·gc.alloc.rate.norm:          5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4734.179 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 327292.497 ops/s
[info]                  ·gc.alloc.rate:                   1168.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6477.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 331503.274 ops/s
[info]                  ·gc.alloc.rate:                   1183.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1013.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4808.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.395 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay":
[info]   331655.382 ±(99.9%) 11275.598 ops/s [Average]
[info]   (min, avg, max) = (327292.497, 331655.382, 334736.850), stdev = 2928.237
[info]   CI (99.9%): [320379.784, 342930.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1183.827 ±(99.9%) 40.329 MB/sec [Average]
[info]   (min, avg, max) = (1168.263, 1183.827, 1194.866), stdev = 10.473
[info]   CI (99.9%): [1143.498, 1224.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1140.745 ±(99.9%) 710.355 MB/sec [Average]
[info]   (min, avg, max) = (997.922, 1140.745, 1347.392), stdev = 184.477
[info]   CI (99.9%): [430.390, 1851.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5417.067 ±(99.9%) 3532.814 B/op [Average]
[info]   (min, avg, max) = (4701.916, 5417.067, 6477.101), stdev = 917.461
[info]   CI (99.9%): [1884.253, 8949.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.277 ±(99.9%) 0.824 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.277, 0.495), stdev = 0.214
[info]   CI (99.9%): [≈ 0, 1.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 7.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce
[info] # Run progress: 60.50% complete, ETA 00:12:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 133616.573 ops/s
[info] # Warmup Iteration   2: 157394.120 ops/s
[info] # Warmup Iteration   3: 160002.545 ops/s
[info] # Warmup Iteration   4: 160813.117 ops/s
[info] # Warmup Iteration   5: 162491.017 ops/s
[info] Iteration   1: 162309.035 ops/s
[info]                  ·gc.alloc.rate:                   828.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9605.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 162547.272 ops/s
[info]                  ·gc.alloc.rate:                   829.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6417.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.806 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 159950.169 ops/s
[info]                  ·gc.alloc.rate:                   816.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9812.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.615 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 163684.133 ops/s
[info]                  ·gc.alloc.rate:               835.633 MB/sec
[info]                  ·gc.alloc.rate.norm:          8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6411.566 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 162913.422 ops/s
[info]                  ·gc.alloc.rate:                   831.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9691.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.402 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce":
[info]   162280.806 ±(99.9%) 5402.304 ops/s [Average]
[info]   (min, avg, max) = (159950.169, 162280.806, 163684.133), stdev = 1402.961
[info]   CI (99.9%): [156878.502, 167683.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate":
[info]   828.487 ±(99.9%) 27.577 MB/sec [Average]
[info]   (min, avg, max) = (816.583, 828.487, 835.633), stdev = 7.162
[info]   CI (99.9%): [800.910, 856.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate.norm":
[info]   8032.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8032.003, 8032.003, 8032.003), stdev = 0.001
[info]   CI (99.9%): [8032.002, 8032.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   864.459 ±(99.9%) 701.132 MB/sec [Average]
[info]   (min, avg, max) = (663.083, 864.459, 1003.603), stdev = 182.082
[info]   CI (99.9%): [163.327, 1565.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8387.830 ±(99.9%) 6941.571 B/op [Average]
[info]   (min, avg, max) = (6411.566, 8387.830, 9812.579), stdev = 1802.704
[info]   CI (99.9%): [1446.259, 15329.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.405 ±(99.9%) 1.233 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.405, 0.806), stdev = 0.320
[info]   CI (99.9%): [≈ 0, 1.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.304
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson
[info] # Run progress: 61.34% complete, ETA 00:12:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 371575.006 ops/s
[info] # Warmup Iteration   2: 496139.800 ops/s
[info] # Warmup Iteration   3: 495060.888 ops/s
[info] # Warmup Iteration   4: 499120.685 ops/s
[info] # Warmup Iteration   5: 506487.290 ops/s
[info] Iteration   1: 503752.455 ops/s
[info]                  ·gc.alloc.rate:               509.713 MB/sec
[info]                  ·gc.alloc.rate.norm:          1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.687 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2035.431 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 507213.194 ops/s
[info]                  ·gc.alloc.rate:               513.204 MB/sec
[info]                  ·gc.alloc.rate.norm:          1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1012.837 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 502110.972 ops/s
[info]                  ·gc.alloc.rate:                   508.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2048.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.326 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 502901.700 ops/s
[info]                  ·gc.alloc.rate:                   508.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2050.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 501282.782 ops/s
[info]                  ·gc.alloc.rate:               507.177 MB/sec
[info]                  ·gc.alloc.rate.norm:          1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1030.015 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson":
[info]   503452.221 ±(99.9%) 8832.077 ops/s [Average]
[info]   (min, avg, max) = (501282.782, 503452.221, 507213.194), stdev = 2293.662
[info]   CI (99.9%): [494620.143, 512284.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate":
[info]   509.401 ±(99.9%) 8.949 MB/sec [Average]
[info]   (min, avg, max) = (507.177, 509.401, 513.204), stdev = 2.324
[info]   CI (99.9%): [500.451, 518.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate.norm":
[info]   1592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1592.001, 1592.001, 1592.001), stdev = 0.001
[info]   CI (99.9%): [1592.001, 1592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   523.075 ±(99.9%) 688.124 MB/sec [Average]
[info]   (min, avg, max) = (326.502, 523.075, 655.354), stdev = 178.704
[info]   CI (99.9%): [≈ 0, 1211.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1635.396 ±(99.9%) 2158.430 B/op [Average]
[info]   (min, avg, max) = (1012.837, 1635.396, 2050.349), stdev = 560.537
[info]   CI (99.9%): [≈ 0, 3793.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.078 ±(99.9%) 0.545 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.078, 0.326), stdev = 0.141
[info]   CI (99.9%): [≈ 0, 0.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 1.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter
[info] # Run progress: 62.18% complete, ETA 00:11:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 611290.225 ops/s
[info] # Warmup Iteration   2: 648994.635 ops/s
[info] # Warmup Iteration   3: 639121.403 ops/s
[info] # Warmup Iteration   4: 650782.739 ops/s
[info] # Warmup Iteration   5: 649814.096 ops/s
[info] Iteration   1: 653318.800 ops/s
[info]                  ·gc.alloc.rate:                   551.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1595.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 652867.056 ops/s
[info]                  ·gc.alloc.rate:                   551.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1596.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 657717.176 ops/s
[info]                  ·gc.alloc.rate:               555.141 MB/sec
[info]                  ·gc.alloc.rate.norm:          1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 792.248 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 650259.434 ops/s
[info]                  ·gc.alloc.rate:                   548.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1605.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 650475.772 ops/s
[info]                  ·gc.alloc.rate:                   549.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1608.589 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter":
[info]   652927.648 ±(99.9%) 11588.345 ops/s [Average]
[info]   (min, avg, max) = (650259.434, 652927.648, 657717.176), stdev = 3009.456
[info]   CI (99.9%): [641339.303, 664515.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate":
[info]   551.097 ±(99.9%) 9.756 MB/sec [Average]
[info]   (min, avg, max) = (548.866, 551.097, 555.141), stdev = 2.534
[info]   CI (99.9%): [541.341, 560.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   1328.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1328.001, 1328.001, 1328.001), stdev = 0.001
[info]   CI (99.9%): [1328.001, 1328.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   596.920 ±(99.9%) 572.038 MB/sec [Average]
[info]   (min, avg, max) = (331.182, 596.920, 665.044), stdev = 148.556
[info]   CI (99.9%): [24.882, 1168.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1439.620 ±(99.9%) 1393.699 B/op [Average]
[info]   (min, avg, max) = (792.248, 1439.620, 1608.589), stdev = 361.939
[info]   CI (99.9%): [45.921, 2833.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.101 ±(99.9%) 0.306 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.101, 0.201), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc
[info] # Run progress: 63.03% complete, ETA 00:11:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 694747.264 ops/s
[info] # Warmup Iteration   2: 708426.568 ops/s
[info] # Warmup Iteration   3: 728210.290 ops/s
[info] # Warmup Iteration   4: 726377.231 ops/s
[info] # Warmup Iteration   5: 726195.608 ops/s
[info] Iteration   1: 728606.058 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 728347.944 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 725863.377 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 723770.222 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 725184.784 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc":
[info]   726354.477 ±(99.9%) 8015.276 ops/s [Average]
[info]   (min, avg, max) = (723770.222, 726354.477, 728606.058), stdev = 2081.542
[info]   CI (99.9%): [718339.201, 734369.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay
[info] # Run progress: 63.87% complete, ETA 00:11:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 456849.743 ops/s
[info] # Warmup Iteration   2: 598812.426 ops/s
[info] # Warmup Iteration   3: 600278.451 ops/s
[info] # Warmup Iteration   4: 609110.727 ops/s
[info] # Warmup Iteration   5: 604476.314 ops/s
[info] Iteration   1: 596607.284 ops/s
[info]                  ·gc.alloc.rate:                   637.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1725.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.220 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 602347.909 ops/s
[info]                  ·gc.alloc.rate:                   643.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1710.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.218 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 608992.994 ops/s
[info]                  ·gc.alloc.rate:                   650.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1697.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 599512.344 ops/s
[info]                  ·gc.alloc.rate:                   640.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1729.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 611585.667 ops/s
[info]                  ·gc.alloc.rate:                   653.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1702.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay":
[info]   603809.240 ±(99.9%) 24339.230 ops/s [Average]
[info]   (min, avg, max) = (596607.284, 603809.240, 611585.667), stdev = 6320.821
[info]   CI (99.9%): [579470.010, 628148.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate":
[info]   644.718 ±(99.9%) 25.962 MB/sec [Average]
[info]   (min, avg, max) = (637.045, 644.718, 653.018), stdev = 6.742
[info]   CI (99.9%): [618.756, 670.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate.norm":
[info]   1680.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1680.001, 1680.001, 1680.001), stdev = 0.001
[info]   CI (99.9%): [1680.001, 1680.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space":
[info]   657.416 ±(99.9%) 11.576 MB/sec [Average]
[info]   (min, avg, max) = (654.368, 657.416, 661.681), stdev = 3.006
[info]   CI (99.9%): [645.840, 668.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space.norm":
[info]   1713.194 ±(99.9%) 54.191 B/op [Average]
[info]   (min, avg, max) = (1697.519, 1713.194, 1729.521), stdev = 14.073
[info]   CI (99.9%): [1659.003, 1767.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.163 ±(99.9%) 0.213 B/op [Average]
[info]   (min, avg, max) = (0.107, 0.163, 0.220), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.304
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson
[info] # Run progress: 64.71% complete, ETA 00:11:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1011728.634 ops/s
[info] # Warmup Iteration   2: 1943752.949 ops/s
[info] # Warmup Iteration   3: 2002596.806 ops/s
[info] # Warmup Iteration   4: 2014899.925 ops/s
[info] # Warmup Iteration   5: 2007254.120 ops/s
[info] Iteration   1: 2024221.342 ops/s
[info]                  ·gc.alloc.rate:                   1070.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     764.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2013395.141 ops/s
[info]                  ·gc.alloc.rate:                   1064.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     773.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1995005.139 ops/s
[info]                  ·gc.alloc.rate:                   1054.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     785.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2006801.739 ops/s
[info]                  ·gc.alloc.rate:                   1061.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     783.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1982407.782 ops/s
[info]                  ·gc.alloc.rate:                   1048.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1063.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson":
[info]   2004366.229 ±(99.9%) 62431.570 ops/s [Average]
[info]   (min, avg, max) = (1982407.782, 2004366.229, 2024221.342), stdev = 16213.281
[info]   CI (99.9%): [1941934.659, 2066797.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1059.882 ±(99.9%) 33.184 MB/sec [Average]
[info]   (min, avg, max) = (1048.217, 1059.882, 1070.454), stdev = 8.618
[info]   CI (99.9%): [1026.698, 1093.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   832.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (832.000, 832.000, 832.000), stdev = 0.001
[info]   CI (99.9%): [832.000, 832.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1061.469 ±(99.9%) 598.432 MB/sec [Average]
[info]   (min, avg, max) = (983.912, 1061.469, 1339.273), stdev = 155.411
[info]   CI (99.9%): [463.037, 1659.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   833.910 ±(99.9%) 494.212 B/op [Average]
[info]   (min, avg, max) = (764.736, 833.910, 1063.019), stdev = 128.345
[info]   CI (99.9%): [339.698, 1328.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.049 ±(99.9%) 0.090 B/op [Average]
[info]   (min, avg, max) = (0.032, 0.049, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter
[info] # Run progress: 65.55% complete, ETA 00:10:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4123443.575 ops/s
[info] # Warmup Iteration   2: 4496439.371 ops/s
[info] # Warmup Iteration   3: 4573078.252 ops/s
[info] # Warmup Iteration   4: 4565236.798 ops/s
[info] # Warmup Iteration   5: 4545945.858 ops/s
[info] Iteration   1: 4596718.177 ops/s
[info]                  ·gc.alloc.rate:                   701.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     226.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4522770.339 ops/s
[info]                  ·gc.alloc.rate:                   689.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     230.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 4528756.370 ops/s
[info]                  ·gc.alloc.rate:                   690.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     346.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4552775.456 ops/s
[info]                  ·gc.alloc.rate:                   694.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     230.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4582833.719 ops/s
[info]                  ·gc.alloc.rate:                   698.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     229.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter":
[info]   4556770.812 ±(99.9%) 125247.648 ops/s [Average]
[info]   (min, avg, max) = (4522770.339, 4556770.812, 4596718.177), stdev = 32526.416
[info]   CI (99.9%): [4431523.164, 4682018.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   695.040 ±(99.9%) 19.065 MB/sec [Average]
[info]   (min, avg, max) = (689.908, 695.040, 701.166), stdev = 4.951
[info]   CI (99.9%): [675.975, 714.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   731.341 ±(99.9%) 571.459 MB/sec [Average]
[info]   (min, avg, max) = (662.346, 731.341, 996.782), stdev = 148.406
[info]   CI (99.9%): [159.882, 1302.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   252.686 ±(99.9%) 201.661 B/op [Average]
[info]   (min, avg, max) = (226.713, 252.686, 346.329), stdev = 52.371
[info]   CI (99.9%): [51.024, 454.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.023, 0.029), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 7.000), stdev = 2.168
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay
[info] # Run progress: 66.39% complete, ETA 00:10:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 102900.081 ops/s
[info] # Warmup Iteration   2: 508843.179 ops/s
[info] # Warmup Iteration   3: 507171.486 ops/s
[info] # Warmup Iteration   4: 503433.233 ops/s
[info] # Warmup Iteration   5: 504461.732 ops/s
[info] Iteration   1: 511745.632 ops/s
[info]                  ·gc.alloc.rate:                   1514.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4118.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 503280.591 ops/s
[info]                  ·gc.alloc.rate:                   1489.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5261.951 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.325 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 501591.496 ops/s
[info]                  ·gc.alloc.rate:                   1484.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4236.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 509753.128 ops/s
[info]                  ·gc.alloc.rate:                   1508.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4179.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 506807.365 ops/s
[info]                  ·gc.alloc.rate:                   1499.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5264.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.323 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay":
[info]   506635.642 ±(99.9%) 16400.306 ops/s [Average]
[info]   (min, avg, max) = (501591.496, 506635.642, 511745.632), stdev = 4259.107
[info]   CI (99.9%): [490235.337, 523035.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1499.222 ±(99.9%) 48.551 MB/sec [Average]
[info]   (min, avg, max) = (1484.255, 1499.222, 1514.317), stdev = 12.609
[info]   CI (99.9%): [1450.670, 1547.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1484.636 ±(99.9%) 720.636 MB/sec [Average]
[info]   (min, avg, max) = (1339.645, 1484.636, 1695.886), stdev = 187.147
[info]   CI (99.9%): [764.000, 2205.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4612.291 ±(99.9%) 2294.231 B/op [Average]
[info]   (min, avg, max) = (4118.944, 4612.291, 5264.787), stdev = 595.805
[info]   CI (99.9%): [2318.060, 6906.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.207 ±(99.9%) 0.447 B/op [Average]
[info]   (min, avg, max) = (0.064, 0.207, 0.325), stdev = 0.116
[info]   CI (99.9%): [≈ 0, 0.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 9.000), stdev = 1.924
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce
[info] # Run progress: 67.23% complete, ETA 00:10:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3825.524 ops/s
[info] # Warmup Iteration   2: 5310.185 ops/s
[info] # Warmup Iteration   3: 5645.103 ops/s
[info] # Warmup Iteration   4: 5563.311 ops/s
[info] # Warmup Iteration   5: 5557.911 ops/s
[info] Iteration   1: 5569.590 ops/s
[info]                  ·gc.alloc.rate:                   1282.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     375970.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.402 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5623.708 ops/s
[info]                  ·gc.alloc.rate:                   1294.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     374225.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.953 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 5637.975 ops/s
[info]                  ·gc.alloc.rate:                   1298.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     374876.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.433 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 5535.241 ops/s
[info]                  ·gc.alloc.rate:                   1274.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     383297.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.089 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25.321 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 5616.658 ops/s
[info]                  ·gc.alloc.rate:                   1293.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     284020.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.089 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.951 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce":
[info]   5596.634 ±(99.9%) 164.989 ops/s [Average]
[info]   (min, avg, max) = (5535.241, 5596.634, 5637.975), stdev = 42.847
[info]   CI (99.9%): [5431.646, 5761.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1288.700 ±(99.9%) 37.975 MB/sec [Average]
[info]   (min, avg, max) = (1274.564, 1288.700, 1298.225), stdev = 9.862
[info]   CI (99.9%): [1250.725, 1326.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   362272.078 ±(99.9%) 0.009 B/op [Average]
[info]   (min, avg, max) = (362272.077, 362272.078, 362272.083), stdev = 0.002
[info]   CI (99.9%): [362272.069, 362272.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   1274.897 ±(99.9%) 562.164 MB/sec [Average]
[info]   (min, avg, max) = (1014.001, 1274.897, 1348.536), stdev = 145.992
[info]   CI (99.9%): [712.733, 1837.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   358477.993 ±(99.9%) 160885.845 B/op [Average]
[info]   (min, avg, max) = (284020.505, 358477.993, 383297.422), stdev = 41781.543
[info]   CI (99.9%): [197592.148, 519363.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.114 MB/sec [Average]
[info]   (min, avg, max) = (0.047, 0.083, 0.125), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   23.212 ±(99.9%) 31.924 B/op [Average]
[info]   (min, avg, max) = (13.402, 23.212, 34.953), stdev = 8.291
[info]   CI (99.9%): [≈ 0, 55.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.304
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson
[info] # Run progress: 68.07% complete, ETA 00:10:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14918.818 ops/s
[info] # Warmup Iteration   2: 29697.779 ops/s
[info] # Warmup Iteration   3: 29609.693 ops/s
[info] # Warmup Iteration   4: 29436.936 ops/s
[info] # Warmup Iteration   5: 29741.659 ops/s
[info] Iteration   1: 29779.571 ops/s
[info]                  ·gc.alloc.rate:               431.718 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.724 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17109.550 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 29573.121 ops/s
[info]                  ·gc.alloc.rate:                   428.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34457.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.216 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 29993.880 ops/s
[info]                  ·gc.alloc.rate:               434.801 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17021.316 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 29913.919 ops/s
[info]                  ·gc.alloc.rate:                   433.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.943 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17067.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.286 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 29803.761 ops/s
[info]                  ·gc.alloc.rate:               432.053 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:      650.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34331.103 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson":
[info]   29812.850 ±(99.9%) 613.834 ops/s [Average]
[info]   (min, avg, max) = (29573.121, 29812.850, 29993.880), stdev = 159.411
[info]   CI (99.9%): [29199.017, 30426.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   432.175 ±(99.9%) 8.960 MB/sec [Average]
[info]   (min, avg, max) = (428.657, 432.175, 434.801), stdev = 2.327
[info]   CI (99.9%): [423.215, 441.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   22807.843 ±(99.9%) 0.459 B/op [Average]
[info]   (min, avg, max) = (22807.724, 22807.843, 22807.981), stdev = 0.119
[info]   CI (99.9%): [22807.384, 22808.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   454.160 ±(99.9%) 684.792 MB/sec [Average]
[info]   (min, avg, max) = (323.860, 454.160, 650.335), stdev = 177.838
[info]   CI (99.9%): [≈ 0, 1138.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   23997.470 ±(99.9%) 36546.779 B/op [Average]
[info]   (min, avg, max) = (17021.316, 23997.470, 34457.415), stdev = 9491.082
[info]   CI (99.9%): [≈ 0, 60544.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.100 ±(99.9%) 5.981 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.100, 3.286), stdev = 1.553
[info]   CI (99.9%): [≈ 0, 7.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter
[info] # Run progress: 68.91% complete, ETA 00:09:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41200.522 ops/s
[info] # Warmup Iteration   2: 46142.827 ops/s
[info] # Warmup Iteration   3: 44782.391 ops/s
[info] # Warmup Iteration   4: 44666.974 ops/s
[info] # Warmup Iteration   5: 44604.518 ops/s
[info] Iteration   1: 44971.692 ops/s
[info]                  ·gc.alloc.rate:                   338.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11586.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.320 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 45183.950 ops/s
[info]                  ·gc.alloc.rate:                   340.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11532.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.450 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 45154.073 ops/s
[info]                  ·gc.alloc.rate:               340.257 MB/sec
[info]                  ·gc.alloc.rate.norm:          11856.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11516.434 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 44541.165 ops/s
[info]                  ·gc.alloc.rate:                   335.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11674.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.471 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 44902.256 ops/s
[info]                  ·gc.alloc.rate:               338.355 MB/sec
[info]                  ·gc.alloc.rate.norm:          11856.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11604.148 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter":
[info]   44950.627 ±(99.9%) 993.496 ops/s [Average]
[info]   (min, avg, max) = (44541.165, 44950.627, 45183.950), stdev = 258.008
[info]   CI (99.9%): [43957.131, 45944.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   338.721 ±(99.9%) 7.456 MB/sec [Average]
[info]   (min, avg, max) = (335.647, 338.721, 340.460), stdev = 1.936
[info]   CI (99.9%): [331.265, 346.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   11856.010 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (11856.010, 11856.010, 11856.010), stdev = 0.001
[info]   CI (99.9%): [11856.008, 11856.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   330.907 ±(99.9%) 1.374 MB/sec [Average]
[info]   (min, avg, max) = (330.512, 330.907, 331.171), stdev = 0.357
[info]   CI (99.9%): [329.533, 332.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   11582.765 ±(99.9%) 242.849 B/op [Average]
[info]   (min, avg, max) = (11516.434, 11582.765, 11674.906), stdev = 63.067
[info]   CI (99.9%): [11339.915, 11825.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.373 ±(99.9%) 3.033 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.373, 1.781), stdev = 0.788
[info]   CI (99.9%): [≈ 0, 3.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   13.048 ±(99.9%) 106.098 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.048, 62.320), stdev = 27.553
[info]   CI (99.9%): [≈ 0, 119.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 8.000), stdev = 2.864
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc
[info] # Run progress: 69.75% complete, ETA 00:09:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 50077.450 ops/s
[info] # Warmup Iteration   2: 56221.676 ops/s
[info] # Warmup Iteration   3: 56084.242 ops/s
[info] # Warmup Iteration   4: 56298.963 ops/s
[info] # Warmup Iteration   5: 56240.906 ops/s
[info] Iteration   1: 56080.024 ops/s
[info]                  ·gc.alloc.rate:      0.856 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 56274.822 ops/s
[info]                  ·gc.alloc.rate:      0.859 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 56217.415 ops/s
[info]                  ·gc.alloc.rate:      0.858 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 56031.914 ops/s
[info]                  ·gc.alloc.rate:      0.855 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 56456.829 ops/s
[info]                  ·gc.alloc.rate:      0.861 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc":
[info]   56212.201 ±(99.9%) 649.395 ops/s [Average]
[info]   (min, avg, max) = (56031.914, 56212.201, 56456.829), stdev = 168.646
[info]   CI (99.9%): [55562.806, 56861.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   0.858 ±(99.9%) 0.010 MB/sec [Average]
[info]   (min, avg, max) = (0.855, 0.858, 0.861), stdev = 0.003
[info]   CI (99.9%): [0.848, 0.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   24.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (24.008, 24.008, 24.008), stdev = 0.001
[info]   CI (99.9%): [24.008, 24.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay
[info] # Run progress: 70.59% complete, ETA 00:09:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1154.257 ops/s
[info] # Warmup Iteration   2: 4106.540 ops/s
[info] # Warmup Iteration   3: 4125.264 ops/s
[info] # Warmup Iteration   4: 4203.472 ops/s
[info] # Warmup Iteration   5: 4164.948 ops/s
[info] Iteration   1: 4166.702 ops/s
[info]                  ·gc.alloc.rate:                   1245.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              470367.772 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     503658.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.862 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 4249.500 ops/s
[info]                  ·gc.alloc.rate:                   1270.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              470367.944 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     372095.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.708 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4226.732 ops/s
[info]                  ·gc.alloc.rate:                   1263.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              470367.686 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     500479.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.500 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4261.105 ops/s
[info]                  ·gc.alloc.rate:               1273.964 MB/sec
[info]                  ·gc.alloc.rate.norm:          470368.676 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 498331.931 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 4169.697 ops/s
[info]                  ·gc.alloc.rate:               1246.610 MB/sec
[info]                  ·gc.alloc.rate.norm:          470368.447 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1353.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 510586.875 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay":
[info]   4214.747 ±(99.9%) 170.456 ops/s [Average]
[info]   (min, avg, max) = (4166.702, 4214.747, 4261.105), stdev = 44.267
[info]   CI (99.9%): [4044.291, 4385.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1260.083 ±(99.9%) 50.942 MB/sec [Average]
[info]   (min, avg, max) = (1245.761, 1260.083, 1273.964), stdev = 13.230
[info]   CI (99.9%): [1209.140, 1311.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   470368.105 ±(99.9%) 1.673 B/op [Average]
[info]   (min, avg, max) = (470367.686, 470368.105, 470368.676), stdev = 0.435
[info]   CI (99.9%): [470366.431, 470369.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1277.272 ±(99.9%) 586.627 MB/sec [Average]
[info]   (min, avg, max) = (1005.059, 1277.272, 1353.200), stdev = 152.345
[info]   CI (99.9%): [690.645, 1863.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   477030.390 ±(99.9%) 226584.226 B/op [Average]
[info]   (min, avg, max) = (372095.247, 477030.390, 510586.875), stdev = 58843.204
[info]   CI (99.9%): [250446.165, 703614.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   6.214 ±(99.9%) 24.986 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.214, 15.500), stdev = 6.489
[info]   CI (99.9%): [≈ 0, 31.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.140
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 71.43% complete, ETA 00:09:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 121411.427 ops/s
[info] # Warmup Iteration   2: 655192.426 ops/s
[info] # Warmup Iteration   3: 663297.077 ops/s
[info] # Warmup Iteration   4: 674062.994 ops/s
[info] # Warmup Iteration   5: 672009.617 ops/s
[info] Iteration   1: 675518.139 ops/s
[info]                  ·gc.alloc.rate:                   1480.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3076.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 666735.348 ops/s
[info]                  ·gc.alloc.rate:                   1461.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1663.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3925.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 667597.191 ops/s
[info]                  ·gc.alloc.rate:                   1463.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3156.583 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 672193.478 ops/s
[info]                  ·gc.alloc.rate:                   1473.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3149.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 673264.128 ops/s
[info]                  ·gc.alloc.rate:                   1475.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3944.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson":
[info]   671061.657 ±(99.9%) 14499.043 ops/s [Average]
[info]   (min, avg, max) = (666735.348, 671061.657, 675518.139), stdev = 3765.355
[info]   CI (99.9%): [656562.613, 685560.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1470.645 ±(99.9%) 31.863 MB/sec [Average]
[info]   (min, avg, max) = (1461.112, 1470.645, 1480.469), stdev = 8.275
[info]   CI (99.9%): [1438.782, 1502.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   3448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3448.001, 3448.001, 3448.001), stdev = 0.001
[info]   CI (99.9%): [3448.001, 3448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1471.479 ±(99.9%) 719.417 MB/sec [Average]
[info]   (min, avg, max) = (1320.817, 1471.479, 1687.834), stdev = 186.830
[info]   CI (99.9%): [752.062, 2190.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3450.554 ±(99.9%) 1707.666 B/op [Average]
[info]   (min, avg, max) = (3076.173, 3450.554, 3944.491), stdev = 443.476
[info]   CI (99.9%): [1742.888, 5158.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.127 ±(99.9%) 0.287 B/op [Average]
[info]   (min, avg, max) = (0.049, 0.127, 0.197), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 9.000), stdev = 1.949
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 72.27% complete, ETA 00:08:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2198692.898 ops/s
[info] # Warmup Iteration   2: 2476501.312 ops/s
[info] # Warmup Iteration   3: 2447193.590 ops/s
[info] # Warmup Iteration   4: 2468734.321 ops/s
[info] # Warmup Iteration   5: 2491491.312 ops/s
[info] Iteration   1: 2454915.023 ops/s
[info]                  ·gc.alloc.rate:                   362.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     424.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.860 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.191 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2455914.292 ops/s
[info]                  ·gc.alloc.rate:               362.106 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 212.168 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2452449.728 ops/s
[info]                  ·gc.alloc.rate:               361.620 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 212.471 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2447930.328 ops/s
[info]                  ·gc.alloc.rate:                   360.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2456232.580 ops/s
[info]                  ·gc.alloc.rate:               362.179 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 212.143 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter":
[info]   2453488.390 ±(99.9%) 13258.429 ops/s [Average]
[info]   (min, avg, max) = (2447930.328, 2453488.390, 2456232.580), stdev = 3443.172
[info]   CI (99.9%): [2440229.961, 2466746.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   361.791 ±(99.9%) 2.016 MB/sec [Average]
[info]   (min, avg, max) = (360.944, 361.791, 362.179), stdev = 0.524
[info]   CI (99.9%): [359.775, 363.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   232.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (232.000, 232.000, 232.000), stdev = 0.001
[info]   CI (99.9%): [232.000, 232.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   397.314 ±(99.9%) 569.529 MB/sec [Average]
[info]   (min, avg, max) = (331.152, 397.314, 661.894), stdev = 147.905
[info]   CI (99.9%): [≈ 0, 966.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   254.742 ±(99.9%) 364.494 B/op [Average]
[info]   (min, avg, max) = (212.143, 254.742, 424.071), stdev = 94.658
[info]   CI (99.9%): [≈ 0, 619.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.384 ±(99.9%) 3.177 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.384, 1.860), stdev = 0.825
[info]   CI (99.9%): [≈ 0, 3.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.246 ±(99.9%) 2.035 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.246, 1.191), stdev = 0.529
[info]   CI (99.9%): [≈ 0, 2.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 73.11% complete, ETA 00:08:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30159.673 ops/s
[info] # Warmup Iteration   2: 244484.449 ops/s
[info] # Warmup Iteration   3: 247369.822 ops/s
[info] # Warmup Iteration   4: 248745.627 ops/s
[info] # Warmup Iteration   5: 246113.692 ops/s
[info] Iteration   1: 247816.461 ops/s
[info]                  ·gc.alloc.rate:                   971.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6309.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.397 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 246266.105 ops/s
[info]                  ·gc.alloc.rate:                   965.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6375.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 251285.045 ops/s
[info]                  ·gc.alloc.rate:                   985.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6281.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 247635.563 ops/s
[info]                  ·gc.alloc.rate:               970.829 MB/sec
[info]                  ·gc.alloc.rate.norm:          6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6390.813 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 248621.060 ops/s
[info]                  ·gc.alloc.rate:                   975.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6383.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay":
[info]   248324.847 ±(99.9%) 7158.082 ops/s [Average]
[info]   (min, avg, max) = (246266.105, 248324.847, 251285.045), stdev = 1858.931
[info]   CI (99.9%): [241166.764, 255482.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   973.585 ±(99.9%) 28.097 MB/sec [Average]
[info]   (min, avg, max) = (965.444, 973.585, 985.097), stdev = 7.297
[info]   CI (99.9%): [945.488, 1001.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1001.979 ±(99.9%) 23.584 MB/sec [Average]
[info]   (min, avg, max) = (993.847, 1001.979, 1009.059), stdev = 6.125
[info]   CI (99.9%): [978.395, 1025.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6348.091 ±(99.9%) 189.349 B/op [Average]
[info]   (min, avg, max) = (6281.484, 6348.091, 6390.813), stdev = 49.173
[info]   CI (99.9%): [6158.743, 6537.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.158 ±(99.9%) 0.558 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.158, 0.397), stdev = 0.145
[info]   CI (99.9%): [≈ 0, 0.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce
[info] # Run progress: 73.95% complete, ETA 00:08:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 383083.124 ops/s
[info] # Warmup Iteration   2: 617828.872 ops/s
[info] # Warmup Iteration   3: 636234.088 ops/s
[info] # Warmup Iteration   4: 640553.238 ops/s
[info] # Warmup Iteration   5: 640830.821 ops/s
[info] Iteration   1: 640348.722 ops/s
[info]                  ·gc.alloc.rate:                   1543.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4108.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 646362.019 ops/s
[info]                  ·gc.alloc.rate:                   1557.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4093.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 639125.383 ops/s
[info]                  ·gc.alloc.rate:                   1540.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3323.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 648696.073 ops/s
[info]                  ·gc.alloc.rate:                   1563.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4104.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 648381.175 ops/s
[info]                  ·gc.alloc.rate:                   1562.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3291.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce":
[info]   644582.675 ±(99.9%) 17458.234 ops/s [Average]
[info]   (min, avg, max) = (639125.383, 644582.675, 648696.073), stdev = 4533.848
[info]   CI (99.9%): [627124.441, 662040.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1553.501 ±(99.9%) 42.193 MB/sec [Average]
[info]   (min, avg, max) = (1540.298, 1553.501, 1563.427), stdev = 10.957
[info]   CI (99.9%): [1511.308, 1595.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   3792.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3792.001, 3792.001, 3792.001), stdev = 0.001
[info]   CI (99.9%): [3792.001, 3792.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1550.433 ±(99.9%) 694.093 MB/sec [Average]
[info]   (min, avg, max) = (1349.940, 1550.433, 1692.164), stdev = 180.254
[info]   CI (99.9%): [856.340, 2244.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3784.158 ±(99.9%) 1676.766 B/op [Average]
[info]   (min, avg, max) = (3291.327, 3784.158, 4108.676), stdev = 435.451
[info]   CI (99.9%): [2107.391, 5460.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.125), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.152 ±(99.9%) 0.337 B/op [Average]
[info]   (min, avg, max) = (0.101, 0.152, 0.304), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson
[info] # Run progress: 74.79% complete, ETA 00:07:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 488422.922 ops/s
[info] # Warmup Iteration   2: 1268704.950 ops/s
[info] # Warmup Iteration   3: 1289646.423 ops/s
[info] # Warmup Iteration   4: 1313779.955 ops/s
[info] # Warmup Iteration   5: 1316337.121 ops/s
[info] Iteration   1: 1317773.664 ops/s
[info]                  ·gc.alloc.rate:                   891.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1164.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1320966.893 ops/s
[info]                  ·gc.alloc.rate:                   893.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     778.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1325471.495 ops/s
[info]                  ·gc.alloc.rate:                   896.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1170.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1328453.852 ops/s
[info]                  ·gc.alloc.rate:                   898.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1173.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1329447.788 ops/s
[info]                  ·gc.alloc.rate:                   899.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     786.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson":
[info]   1324422.738 ±(99.9%) 19132.891 ops/s [Average]
[info]   (min, avg, max) = (1317773.664, 1324422.738, 1329447.788), stdev = 4968.751
[info]   CI (99.9%): [1305289.848, 1343555.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   895.651 ±(99.9%) 12.969 MB/sec [Average]
[info]   (min, avg, max) = (891.137, 895.651, 899.018), stdev = 3.368
[info]   CI (99.9%): [882.682, 908.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   1064.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1064.000, 1064.000, 1064.000), stdev = 0.001
[info]   CI (99.9%): [1064.000, 1064.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   854.129 ±(99.9%) 686.419 MB/sec [Average]
[info]   (min, avg, max) = (653.666, 854.129, 991.215), stdev = 178.261
[info]   CI (99.9%): [167.710, 1540.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1014.749 ±(99.9%) 816.879 B/op [Average]
[info]   (min, avg, max) = (778.577, 1014.749, 1173.922), stdev = 212.141
[info]   CI (99.9%): [197.870, 1831.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.059 ±(99.9%) 0.109 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.059, 0.099), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter
[info] # Run progress: 75.63% complete, ETA 00:07:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4564883.035 ops/s
[info] # Warmup Iteration   2: 5172967.824 ops/s
[info] # Warmup Iteration   3: 5223837.949 ops/s
[info] # Warmup Iteration   4: 5264603.739 ops/s
[info] # Warmup Iteration   5: 5272692.908 ops/s
[info] Iteration   1: 5264972.699 ops/s
[info]                  ·gc.alloc.rate:                   642.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     197.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 5237813.892 ops/s
[info]                  ·gc.alloc.rate:                   639.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 5230960.707 ops/s
[info]                  ·gc.alloc.rate:                   638.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     199.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 5173174.153 ops/s
[info]                  ·gc.alloc.rate:                   631.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     202.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 5254279.940 ops/s
[info]                  ·gc.alloc.rate:                   641.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     199.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter":
[info]   5232240.278 ±(99.9%) 137207.629 ops/s [Average]
[info]   (min, avg, max) = (5173174.153, 5232240.278, 5264972.699), stdev = 35632.386
[info]   CI (99.9%): [5095032.649, 5369447.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   638.455 ±(99.9%) 16.755 MB/sec [Average]
[info]   (min, avg, max) = (631.227, 638.455, 642.448), stdev = 4.351
[info]   CI (99.9%): [621.699, 655.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (192.000, 192.000, 192.000), stdev = 0.001
[info]   CI (99.9%): [192.000, 192.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   663.914 ±(99.9%) 6.614 MB/sec [Average]
[info]   (min, avg, max) = (662.310, 663.914, 666.291), stdev = 1.718
[info]   CI (99.9%): [657.300, 670.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   199.665 ±(99.9%) 6.151 B/op [Average]
[info]   (min, avg, max) = (197.936, 199.665, 202.255), stdev = 1.597
[info]   CI (99.9%): [193.514, 205.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.032 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.016, 0.025), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 10.000), stdev = 3.347
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay
[info] # Run progress: 76.47% complete, ETA 00:07:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 70014.691 ops/s
[info] # Warmup Iteration   2: 369191.441 ops/s
[info] # Warmup Iteration   3: 368682.879 ops/s
[info] # Warmup Iteration   4: 374382.969 ops/s
[info] # Warmup Iteration   5: 370654.993 ops/s
[info] Iteration   1: 374281.598 ops/s
[info]                  ·gc.alloc.rate:                   1295.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5607.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.350 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 375867.258 ops/s
[info]                  ·gc.alloc.rate:                   1301.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5614.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.174 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 369799.947 ops/s
[info]                  ·gc.alloc.rate:                   1280.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5732.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.443 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 372997.870 ops/s
[info]                  ·gc.alloc.rate:               1291.400 MB/sec
[info]                  ·gc.alloc.rate.norm:          5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5697.637 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 372069.382 ops/s
[info]                  ·gc.alloc.rate:                   1288.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1015.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4294.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay":
[info]   373003.211 ±(99.9%) 8816.630 ops/s [Average]
[info]   (min, avg, max) = (369799.947, 373003.211, 375867.258), stdev = 2289.651
[info]   CI (99.9%): [364186.581, 381819.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1291.493 ±(99.9%) 30.518 MB/sec [Average]
[info]   (min, avg, max) = (1280.445, 1291.493, 1301.433), stdev = 7.926
[info]   CI (99.9%): [1260.975, 1322.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5448.001, 5448.001, 5448.001), stdev = 0.001
[info]   CI (99.9%): [5448.001, 5448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1277.711 ±(99.9%) 565.070 MB/sec [Average]
[info]   (min, avg, max) = (1015.448, 1277.711, 1350.574), stdev = 146.747
[info]   CI (99.9%): [712.641, 1842.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5389.403 ±(99.9%) 2366.155 B/op [Average]
[info]   (min, avg, max) = (4294.348, 5389.403, 5732.557), stdev = 614.483
[info]   CI (99.9%): [3023.248, 7755.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.246 ±(99.9%) 0.655 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.246, 0.443), stdev = 0.170
[info]   CI (99.9%): [≈ 0, 0.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.095
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce
[info] # Run progress: 77.31% complete, ETA 00:07:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 133704.894 ops/s
[info] # Warmup Iteration   2: 364944.349 ops/s
[info] # Warmup Iteration   3: 374578.092 ops/s
[info] # Warmup Iteration   4: 382471.437 ops/s
[info] # Warmup Iteration   5: 379598.280 ops/s
[info] Iteration   1: 380382.621 ops/s
[info]                  ·gc.alloc.rate:                   1040.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              4304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4102.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.345 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 381771.335 ops/s
[info]                  ·gc.alloc.rate:                   1044.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              4304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4109.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.429 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 383692.700 ops/s
[info]                  ·gc.alloc.rate:                   1049.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              4304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4102.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.171 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 382473.349 ops/s
[info]                  ·gc.alloc.rate:               1046.289 MB/sec
[info]                  ·gc.alloc.rate.norm:          4304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1004.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4132.331 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 381467.516 ops/s
[info]                  ·gc.alloc.rate:                   1043.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              4304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4156.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce":
[info]   381957.504 ±(99.9%) 4728.617 ops/s [Average]
[info]   (min, avg, max) = (380382.621, 381957.504, 383692.700), stdev = 1228.007
[info]   CI (99.9%): [377228.887, 386686.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1044.850 ±(99.9%) 13.024 MB/sec [Average]
[info]   (min, avg, max) = (1040.544, 1044.850, 1049.634), stdev = 3.382
[info]   CI (99.9%): [1031.826, 1057.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4304.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4304.001, 4304.001, 4304.001), stdev = 0.001
[info]   CI (99.9%): [4304.001, 4304.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1000.394 ±(99.9%) 23.948 MB/sec [Average]
[info]   (min, avg, max) = (991.879, 1000.394, 1007.778), stdev = 6.219
[info]   CI (99.9%): [976.446, 1024.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4120.884 ±(99.9%) 90.572 B/op [Average]
[info]   (min, avg, max) = (4102.708, 4120.884, 4156.926), stdev = 23.521
[info]   CI (99.9%): [4030.312, 4211.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.206 ±(99.9%) 0.686 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.206, 0.429), stdev = 0.178
[info]   CI (99.9%): [≈ 0, 0.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson
[info] # Run progress: 78.15% complete, ETA 00:06:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 73365.993 ops/s
[info] # Warmup Iteration   2: 740549.637 ops/s
[info] # Warmup Iteration   3: 749059.042 ops/s
[info] # Warmup Iteration   4: 761052.807 ops/s
[info] # Warmup Iteration   5: 755767.579 ops/s
[info] Iteration   1: 768351.184 ops/s
[info]                  ·gc.alloc.rate:                   1207.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2682.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 765044.859 ops/s
[info]                  ·gc.alloc.rate:                   1202.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2035.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.214 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 760831.171 ops/s
[info]                  ·gc.alloc.rate:                   1195.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2746.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 766458.278 ops/s
[info]                  ·gc.alloc.rate:                   1207.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2720.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 768648.147 ops/s
[info]                  ·gc.alloc.rate:                   1207.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2061.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson":
[info]   765866.728 ±(99.9%) 12221.025 ops/s [Average]
[info]   (min, avg, max) = (760831.171, 765866.728, 768648.147), stdev = 3173.761
[info]   CI (99.9%): [753645.703, 778087.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1203.990 ±(99.9%) 20.684 MB/sec [Average]
[info]   (min, avg, max) = (1195.388, 1203.990, 1207.719), stdev = 5.371
[info]   CI (99.9%): [1183.307, 1224.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   2472.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2472.001, 2472.001, 2472.001), stdev = 0.001
[info]   CI (99.9%): [2472.000, 2472.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1192.892 ±(99.9%) 684.845 MB/sec [Average]
[info]   (min, avg, max) = (989.876, 1192.892, 1329.258), stdev = 177.852
[info]   CI (99.9%): [508.047, 1877.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2449.442 ±(99.9%) 1412.932 B/op [Average]
[info]   (min, avg, max) = (2035.741, 2449.442, 2746.998), stdev = 366.934
[info]   CI (99.9%): [1036.510, 3862.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.075, 0.125), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.154 ±(99.9%) 0.342 B/op [Average]
[info]   (min, avg, max) = (0.042, 0.154, 0.256), stdev = 0.089
[info]   CI (99.9%): [≈ 0, 0.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.400, 12.000), stdev = 3.507
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter
[info] # Run progress: 78.99% complete, ETA 00:06:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2197714.572 ops/s
[info] # Warmup Iteration   2: 2406613.799 ops/s
[info] # Warmup Iteration   3: 2426936.950 ops/s
[info] # Warmup Iteration   4: 2368041.692 ops/s
[info] # Warmup Iteration   5: 2449679.460 ops/s
[info] Iteration   1: 2448433.462 ops/s
[info]                  ·gc.alloc.rate:                   485.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     425.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2462801.672 ops/s
[info]                  ·gc.alloc.rate:               488.373 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 211.579 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2438117.838 ops/s
[info]                  ·gc.alloc.rate:                   483.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     427.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2447295.038 ops/s
[info]                  ·gc.alloc.rate:               485.299 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 212.913 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2442582.530 ops/s
[info]                  ·gc.alloc.rate:                   484.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     213.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter":
[info]   2447846.108 ±(99.9%) 35847.305 ops/s [Average]
[info]   (min, avg, max) = (2438117.838, 2447846.108, 2462801.672), stdev = 9309.431
[info]   CI (99.9%): [2411998.802, 2483693.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   485.413 ±(99.9%) 7.125 MB/sec [Average]
[info]   (min, avg, max) = (483.467, 485.413, 488.373), stdev = 1.850
[info]   CI (99.9%): [478.289, 492.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (312.000, 312.000, 312.000), stdev = 0.001
[info]   CI (99.9%): [312.000, 312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   463.786 ±(99.9%) 698.038 MB/sec [Average]
[info]   (min, avg, max) = (331.174, 463.786, 662.376), stdev = 181.278
[info]   CI (99.9%): [≈ 0, 1161.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   298.260 ±(99.9%) 450.893 B/op [Average]
[info]   (min, avg, max) = (211.579, 298.260, 427.446), stdev = 117.095
[info]   CI (99.9%): [≈ 0, 749.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.040), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay
[info] # Run progress: 79.83% complete, ETA 00:06:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36929.213 ops/s
[info] # Warmup Iteration   2: 273069.946 ops/s
[info] # Warmup Iteration   3: 281112.581 ops/s
[info] # Warmup Iteration   4: 282928.637 ops/s
[info] # Warmup Iteration   5: 283679.137 ops/s
[info] Iteration   1: 281970.956 ops/s
[info]                  ·gc.alloc.rate:                   1039.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5553.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.581 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 288360.561 ops/s
[info]                  ·gc.alloc.rate:                   1062.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5455.520 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 288426.545 ops/s
[info]                  ·gc.alloc.rate:               1063.233 MB/sec
[info]                  ·gc.alloc.rate.norm:          5800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5476.176 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 286537.453 ops/s
[info]                  ·gc.alloc.rate:                   1056.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5531.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.229 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 284356.685 ops/s
[info]                  ·gc.alloc.rate:                   1048.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7456.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.576 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay":
[info]   285930.440 ±(99.9%) 10660.567 ops/s [Average]
[info]   (min, avg, max) = (281970.956, 285930.440, 288426.545), stdev = 2768.515
[info]   CI (99.9%): [275269.873, 296591.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   1054.031 ±(99.9%) 39.222 MB/sec [Average]
[info]   (min, avg, max) = (1039.457, 1054.031, 1063.233), stdev = 10.186
[info]   CI (99.9%): [1014.809, 1093.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.001, 5800.002, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.001, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1070.816 ±(99.9%) 596.348 MB/sec [Average]
[info]   (min, avg, max) = (995.231, 1070.816, 1347.737), stdev = 154.870
[info]   CI (99.9%): [474.468, 1667.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5894.754 ±(99.9%) 3366.032 B/op [Average]
[info]   (min, avg, max) = (5455.520, 5894.754, 7456.857), stdev = 874.148
[info]   CI (99.9%): [2528.722, 9260.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.300 ±(99.9%) 1.028 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.300, 0.581), stdev = 0.267
[info]   CI (99.9%): [≈ 0, 1.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce
[info] # Run progress: 80.67% complete, ETA 00:06:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 374923.543 ops/s
[info] # Warmup Iteration   2: 578168.046 ops/s
[info] # Warmup Iteration   3: 606103.258 ops/s
[info] # Warmup Iteration   4: 603397.063 ops/s
[info] # Warmup Iteration   5: 614111.632 ops/s
[info] Iteration   1: 603685.015 ops/s
[info]                  ·gc.alloc.rate:                   1393.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1667.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4346.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 611446.236 ops/s
[info]                  ·gc.alloc.rate:                   1411.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3452.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.214 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 611020.381 ops/s
[info]                  ·gc.alloc.rate:                   1410.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3466.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 609263.813 ops/s
[info]                  ·gc.alloc.rate:                   1406.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3488.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 614998.609 ops/s
[info]                  ·gc.alloc.rate:                   1419.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3464.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce":
[info]   610082.811 ±(99.9%) 15935.524 ops/s [Average]
[info]   (min, avg, max) = (603685.015, 610082.811, 614998.609), stdev = 4138.405
[info]   CI (99.9%): [594147.286, 626018.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate":
[info]   1408.264 ±(99.9%) 36.820 MB/sec [Average]
[info]   (min, avg, max) = (1393.488, 1408.264, 1419.623), stdev = 9.562
[info]   CI (99.9%): [1371.444, 1445.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   3632.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3632.001, 3632.001, 3632.001), stdev = 0.001
[info]   CI (99.9%): [3632.001, 3632.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1412.162 ±(99.9%) 550.588 MB/sec [Average]
[info]   (min, avg, max) = (1341.690, 1412.162, 1667.807), stdev = 142.986
[info]   CI (99.9%): [861.574, 1962.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3643.918 ±(99.9%) 1514.265 B/op [Average]
[info]   (min, avg, max) = (3452.523, 3643.918, 4346.989), stdev = 393.250
[info]   CI (99.9%): [2129.653, 5158.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.140 ±(99.9%) 0.184 B/op [Average]
[info]   (min, avg, max) = (0.107, 0.140, 0.214), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 11.000), stdev = 2.775
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson
[info] # Run progress: 81.51% complete, ETA 00:05:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 361738.919 ops/s
[info] # Warmup Iteration   2: 1097566.391 ops/s
[info] # Warmup Iteration   3: 1088310.391 ops/s
[info] # Warmup Iteration   4: 1096775.792 ops/s
[info] # Warmup Iteration   5: 1097578.644 ops/s
[info] Iteration   1: 1095493.003 ops/s
[info]                  ·gc.alloc.rate:                   629.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     928.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1107722.200 ops/s
[info]                  ·gc.alloc.rate:                   636.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     919.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1098201.352 ops/s
[info]                  ·gc.alloc.rate:                   630.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     930.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1098473.171 ops/s
[info]                  ·gc.alloc.rate:               631.165 MB/sec
[info]                  ·gc.alloc.rate.norm:          904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 934.367 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1109414.218 ops/s
[info]                  ·gc.alloc.rate:                   637.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     928.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson":
[info]   1101860.789 ±(99.9%) 24110.886 ops/s [Average]
[info]   (min, avg, max) = (1095493.003, 1101860.789, 1109414.218), stdev = 6261.521
[info]   CI (99.9%): [1077749.903, 1125971.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate":
[info]   633.087 ±(99.9%) 13.904 MB/sec [Average]
[info]   (min, avg, max) = (629.382, 633.087, 637.457), stdev = 3.611
[info]   CI (99.9%): [619.183, 646.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm":
[info]   904.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (904.000, 904.000, 904.000), stdev = 0.001
[info]   CI (99.9%): [904.000, 904.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   650.284 ±(99.9%) 13.286 MB/sec [Average]
[info]   (min, avg, max) = (646.648, 650.284, 655.061), stdev = 3.450
[info]   CI (99.9%): [636.998, 663.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   928.570 ±(99.9%) 20.485 B/op [Average]
[info]   (min, avg, max) = (919.938, 928.570, 934.367), stdev = 5.320
[info]   CI (99.9%): [908.085, 949.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.071 ±(99.9%) 0.173 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.118), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter
[info] # Run progress: 82.35% complete, ETA 00:05:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3202311.165 ops/s
[info] # Warmup Iteration   2: 3516575.789 ops/s
[info] # Warmup Iteration   3: 3510809.732 ops/s
[info] # Warmup Iteration   4: 3541757.183 ops/s
[info] # Warmup Iteration   5: 3529747.025 ops/s
[info] Iteration   1: 3542007.022 ops/s
[info]                  ·gc.alloc.rate:               270.151 MB/sec
[info]                  ·gc.alloc.rate.norm:          120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 113.664 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 3492302.984 ops/s
[info]                  ·gc.alloc.rate:                   266.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.792 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.807 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3440911.139 ops/s
[info]                  ·gc.alloc.rate:      262.437 MB/sec
[info]                  ·gc.alloc.rate.norm: 120.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3400039.319 ops/s
[info]                  ·gc.alloc.rate:                   259.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     153.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 3427014.244 ops/s
[info]                  ·gc.alloc.rate:               261.373 MB/sec
[info]                  ·gc.alloc.rate.norm:          120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 152.048 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter":
[info]   3460454.941 ±(99.9%) 217955.696 ops/s [Average]
[info]   (min, avg, max) = (3400039.319, 3460454.941, 3542007.022), stdev = 56602.402
[info]   CI (99.9%): [3242499.246, 3678410.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate":
[info]   263.924 ±(99.9%) 16.618 MB/sec [Average]
[info]   (min, avg, max) = (259.321, 263.924, 270.151), stdev = 4.316
[info]   CI (99.9%): [247.305, 280.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (120.000, 120.000, 120.000), stdev = 0.001
[info]   CI (99.9%): [120.000, 120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   249.876 ±(99.9%) 552.328 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 249.876, 331.180), stdev = 143.438
[info]   CI (99.9%): [≈ 0, 802.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   113.632 ±(99.9%) 252.670 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 113.632, 153.253), stdev = 65.618
[info]   CI (99.9%): [≈ 0, 366.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.375 ±(99.9%) 3.052 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.375, 1.792), stdev = 0.793
[info]   CI (99.9%): [≈ 0, 3.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.169 ±(99.9%) 1.375 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.169, 0.807), stdev = 0.357
[info]   CI (99.9%): [≈ 0, 1.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 4.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay
[info] # Run progress: 83.19% complete, ETA 00:05:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 63997.877 ops/s
[info] # Warmup Iteration   2: 347322.689 ops/s
[info] # Warmup Iteration   3: 354093.358 ops/s
[info] # Warmup Iteration   4: 350203.328 ops/s
[info] # Warmup Iteration   5: 354664.757 ops/s
[info] Iteration   1: 360430.472 ops/s
[info]                  ·gc.alloc.rate:                   1248.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5817.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.364 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 357395.702 ops/s
[info]                  ·gc.alloc.rate:                   1237.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5896.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 356170.345 ops/s
[info]                  ·gc.alloc.rate:               1233.329 MB/sec
[info]                  ·gc.alloc.rate.norm:          5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4455.117 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 354636.804 ops/s
[info]                  ·gc.alloc.rate:                   1227.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5983.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 355904.615 ops/s
[info]                  ·gc.alloc.rate:                   1232.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5980.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay":
[info]   356907.587 ±(99.9%) 8470.302 ops/s [Average]
[info]   (min, avg, max) = (354636.804, 356907.587, 360430.472), stdev = 2199.711
[info]   CI (99.9%): [348437.285, 365377.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate":
[info]   1235.856 ±(99.9%) 29.477 MB/sec [Average]
[info]   (min, avg, max) = (1227.859, 1235.856, 1248.072), stdev = 7.655
[info]   CI (99.9%): [1206.379, 1265.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   5448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5448.001, 5448.001, 5448.001), stdev = 0.001
[info]   CI (99.9%): [5448.001, 5448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1276.418 ±(99.9%) 577.372 MB/sec [Average]
[info]   (min, avg, max) = (1008.558, 1276.418, 1352.778), stdev = 149.942
[info]   CI (99.9%): [699.046, 1853.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5626.536 ±(99.9%) 2535.269 B/op [Average]
[info]   (min, avg, max) = (4455.117, 5626.536, 5983.568), stdev = 658.401
[info]   CI (99.9%): [3091.267, 8161.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.183 ±(99.9%) 0.554 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.183, 0.364), stdev = 0.144
[info]   CI (99.9%): [≈ 0, 0.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce
[info] # Run progress: 84.03% complete, ETA 00:05:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 124935.904 ops/s
[info] # Warmup Iteration   2: 328797.838 ops/s
[info] # Warmup Iteration   3: 345097.476 ops/s
[info] # Warmup Iteration   4: 341091.264 ops/s
[info] # Warmup Iteration   5: 346856.563 ops/s
[info] Iteration   1: 345993.881 ops/s
[info]                  ·gc.alloc.rate:                   935.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              4256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4499.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 347551.847 ops/s
[info]                  ·gc.alloc.rate:                   940.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              4256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4497.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.377 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 350669.426 ops/s
[info]                  ·gc.alloc.rate:                   948.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              4256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4475.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.280 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 348598.555 ops/s
[info]                  ·gc.alloc.rate:                   942.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              4256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4523.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 347829.732 ops/s
[info]                  ·gc.alloc.rate:               940.900 MB/sec
[info]                  ·gc.alloc.rate.norm:          4256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3029.147 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce":
[info]   348128.688 ±(99.9%) 6573.119 ops/s [Average]
[info]   (min, avg, max) = (345993.881, 348128.688, 350669.426), stdev = 1707.018
[info]   CI (99.9%): [341555.569, 354701.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   941.667 ±(99.9%) 17.822 MB/sec [Average]
[info]   (min, avg, max) = (935.853, 941.667, 948.558), stdev = 4.628
[info]   CI (99.9%): [923.846, 959.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4256.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4256.001, 4256.001, 4256.001), stdev = 0.001
[info]   CI (99.9%): [4256.001, 4256.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   930.463 ±(99.9%) 561.663 MB/sec [Average]
[info]   (min, avg, max) = (669.672, 930.463, 1002.110), stdev = 145.862
[info]   CI (99.9%): [368.800, 1492.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4205.152 ±(99.9%) 2532.273 B/op [Average]
[info]   (min, avg, max) = (3029.147, 4205.152, 4523.341), stdev = 657.623
[info]   CI (99.9%): [1672.879, 6737.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.188 ±(99.9%) 0.573 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.188, 0.377), stdev = 0.149
[info]   CI (99.9%): [≈ 0, 0.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 9.000), stdev = 2.702
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson
[info] # Run progress: 84.87% complete, ETA 00:04:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64229.180 ops/s
[info] # Warmup Iteration   2: 763549.571 ops/s
[info] # Warmup Iteration   3: 788560.560 ops/s
[info] # Warmup Iteration   4: 797210.485 ops/s
[info] # Warmup Iteration   5: 799682.076 ops/s
[info] Iteration   1: 796067.381 ops/s
[info]                  ·gc.alloc.rate:                   1307.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2594.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 794009.220 ops/s
[info]                  ·gc.alloc.rate:                   1303.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2622.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 800094.874 ops/s
[info]                  ·gc.alloc.rate:                   1314.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2620.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 797480.462 ops/s
[info]                  ·gc.alloc.rate:               1309.778 MB/sec
[info]                  ·gc.alloc.rate.norm:          2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2643.198 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   5: 787690.846 ops/s
[info]                  ·gc.alloc.rate:                   1293.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2688.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson":
[info]   795068.557 ±(99.9%) 18023.277 ops/s [Average]
[info]   (min, avg, max) = (787690.846, 795068.557, 800094.874), stdev = 4680.588
[info]   CI (99.9%): [777045.279, 813091.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1305.767 ±(99.9%) 29.585 MB/sec [Average]
[info]   (min, avg, max) = (1293.666, 1305.767, 1314.001), stdev = 7.683
[info]   CI (99.9%): [1276.182, 1335.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2584.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2584.001, 2584.001, 2584.001), stdev = 0.001
[info]   CI (99.9%): [2584.000, 2584.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1330.899 ±(99.9%) 50.846 MB/sec [Average]
[info]   (min, avg, max) = (1312.701, 1330.899, 1345.974), stdev = 13.205
[info]   CI (99.9%): [1280.054, 1381.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2633.854 ±(99.9%) 135.118 B/op [Average]
[info]   (min, avg, max) = (2594.491, 2633.854, 2688.482), stdev = 35.090
[info]   CI (99.9%): [2498.736, 2768.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.091 ±(99.9%) 0.260 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.091, 0.165), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 11.000), stdev = 2.915
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 85.71% complete, ETA 00:04:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1825417.290 ops/s
[info] # Warmup Iteration   2: 2077702.485 ops/s
[info] # Warmup Iteration   3: 2137347.211 ops/s
[info] # Warmup Iteration   4: 2100042.799 ops/s
[info] # Warmup Iteration   5: 2125198.818 ops/s
[info] Iteration   1: 2129433.475 ops/s
[info]                  ·gc.alloc.rate:                   400.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     244.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2128506.700 ops/s
[info]                  ·gc.alloc.rate:               400.408 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 244.311 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2125047.401 ops/s
[info]                  ·gc.alloc.rate:                   399.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     489.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2130924.922 ops/s
[info]                  ·gc.alloc.rate:               400.911 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 244.283 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2136399.148 ops/s
[info]                  ·gc.alloc.rate:                   401.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     243.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter":
[info]   2130062.329 ±(99.9%) 15977.189 ops/s [Average]
[info]   (min, avg, max) = (2125047.401, 2130062.329, 2136399.148), stdev = 4149.225
[info]   CI (99.9%): [2114085.140, 2146039.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   400.721 ±(99.9%) 3.039 MB/sec [Average]
[info]   (min, avg, max) = (399.762, 400.721, 401.915), stdev = 0.789
[info]   CI (99.9%): [397.682, 403.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (296.000, 296.000, 296.000), stdev = 0.001
[info]   CI (99.9%): [296.000, 296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   396.936 ±(99.9%) 569.070 MB/sec [Average]
[info]   (min, avg, max) = (330.487, 396.936, 661.303), stdev = 147.786
[info]   CI (99.9%): [≈ 0, 966.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   293.322 ±(99.9%) 422.624 B/op [Average]
[info]   (min, avg, max) = (243.905, 293.322, 489.656), stdev = 109.754
[info]   CI (99.9%): [≈ 0, 715.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.065 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.031), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay
[info] # Run progress: 86.55% complete, ETA 00:04:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31172.310 ops/s
[info] # Warmup Iteration   2: 253579.011 ops/s
[info] # Warmup Iteration   3: 255951.426 ops/s
[info] # Warmup Iteration   4: 257178.310 ops/s
[info] # Warmup Iteration   5: 255563.964 ops/s
[info] Iteration   1: 258087.318 ops/s
[info]                  ·gc.alloc.rate:                   988.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              6024.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6056.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.762 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 258545.119 ops/s
[info]                  ·gc.alloc.rate:                   989.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              6024.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6070.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.253 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 259791.953 ops/s
[info]                  ·gc.alloc.rate:                   994.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              6024.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6071.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 260250.315 ops/s
[info]                  ·gc.alloc.rate:                   996.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              6024.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6080.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 259930.738 ops/s
[info]                  ·gc.alloc.rate:                   995.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              6024.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6108.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay":
[info]   259321.089 ±(99.9%) 3643.474 ops/s [Average]
[info]   (min, avg, max) = (258087.318, 259321.089, 260250.315), stdev = 946.199
[info]   CI (99.9%): [255677.615, 262964.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   992.834 ±(99.9%) 13.869 MB/sec [Average]
[info]   (min, avg, max) = (988.124, 992.834, 996.412), stdev = 3.602
[info]   CI (99.9%): [978.965, 1006.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6024.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6024.002, 6024.002, 6024.002), stdev = 0.001
[info]   CI (99.9%): [6024.001, 6024.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1001.690 ±(99.9%) 24.113 MB/sec [Average]
[info]   (min, avg, max) = (993.518, 1001.690, 1009.112), stdev = 6.262
[info]   CI (99.9%): [977.577, 1025.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6077.698 ±(99.9%) 74.440 B/op [Average]
[info]   (min, avg, max) = (6056.883, 6077.698, 6108.684), stdev = 19.332
[info]   CI (99.9%): [6003.258, 6152.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.354 ±(99.9%) 0.942 B/op [Average]
[info]   (min, avg, max) = (0.126, 0.354, 0.762), stdev = 0.245
[info]   CI (99.9%): [≈ 0, 1.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce
[info] # Run progress: 87.39% complete, ETA 00:03:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 799363.889 ops/s
[info] # Warmup Iteration   2: 932737.870 ops/s
[info] # Warmup Iteration   3: 938512.919 ops/s
[info] # Warmup Iteration   4: 941727.887 ops/s
[info] # Warmup Iteration   5: 940128.704 ops/s
[info] Iteration   1: 920362.578 ops/s
[info]                  ·gc.alloc.rate:                   599.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1125.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 931359.316 ops/s
[info]                  ·gc.alloc.rate:                   606.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1113.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 953259.609 ops/s
[info]                  ·gc.alloc.rate:                   620.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1089.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 942010.231 ops/s
[info]                  ·gc.alloc.rate:               613.100 MB/sec
[info]                  ·gc.alloc.rate.norm:          1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 553.160 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 951975.065 ops/s
[info]                  ·gc.alloc.rate:                   619.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1096.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce":
[info]   939793.360 ±(99.9%) 53886.205 ops/s [Average]
[info]   (min, avg, max) = (920362.578, 939793.360, 953259.609), stdev = 13994.076
[info]   CI (99.9%): [885907.155, 993679.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate":
[info]   611.656 ±(99.9%) 35.096 MB/sec [Average]
[info]   (min, avg, max) = (599.001, 611.656, 620.425), stdev = 9.114
[info]   CI (99.9%): [576.560, 646.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate.norm":
[info]   1024.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1024.000, 1024.000, 1024.000), stdev = 0.001
[info]   CI (99.9%): [1024.000, 1024.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   594.457 ±(99.9%) 566.742 MB/sec [Average]
[info]   (min, avg, max) = (331.194, 594.457, 663.370), stdev = 147.181
[info]   CI (99.9%): [27.714, 1161.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   995.632 ±(99.9%) 953.973 B/op [Average]
[info]   (min, avg, max) = (553.160, 995.632, 1125.431), stdev = 247.744
[info]   CI (99.9%): [41.659, 1949.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.084 ±(99.9%) 0.205 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.084, 0.141), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson
[info] # Run progress: 88.24% complete, ETA 00:03:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1346149.456 ops/s
[info] # Warmup Iteration   2: 2024925.866 ops/s
[info] # Warmup Iteration   3: 2049353.411 ops/s
[info] # Warmup Iteration   4: 2065365.951 ops/s
[info] # Warmup Iteration   5: 2015459.396 ops/s
[info] Iteration   1: 2063158.677 ops/s
[info]                  ·gc.alloc.rate:                   849.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     499.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2045948.885 ops/s
[info]                  ·gc.alloc.rate:                   842.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     758.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2046420.261 ops/s
[info]                  ·gc.alloc.rate:                   842.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     762.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2080877.010 ops/s
[info]                  ·gc.alloc.rate:                   856.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     502.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2062667.879 ops/s
[info]                  ·gc.alloc.rate:                   849.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     762.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson":
[info]   2059814.543 ±(99.9%) 55622.000 ops/s [Average]
[info]   (min, avg, max) = (2045948.885, 2059814.543, 2080877.010), stdev = 14444.857
[info]   CI (99.9%): [2004192.543, 2115436.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate":
[info]   848.287 ±(99.9%) 22.902 MB/sec [Average]
[info]   (min, avg, max) = (842.605, 848.287, 856.975), stdev = 5.948
[info]   CI (99.9%): [825.385, 871.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate.norm":
[info]   648.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (648.000, 648.000, 648.000), stdev = 0.001
[info]   CI (99.9%): [648.000, 648.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   859.399 ±(99.9%) 702.452 MB/sec [Average]
[info]   (min, avg, max) = (655.329, 859.399, 999.399), stdev = 182.425
[info]   CI (99.9%): [156.947, 1561.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   657.104 ±(99.9%) 549.046 B/op [Average]
[info]   (min, avg, max) = (499.776, 657.104, 762.585), stdev = 142.585
[info]   CI (99.9%): [108.058, 1206.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.046, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.010, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.028 B/op [Average]
[info]   (min, avg, max) = (0.031, 0.035, 0.048), stdev = 0.007
[info]   CI (99.9%): [0.007, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 5.000), stdev = 1.225
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter
[info] # Run progress: 89.08% complete, ETA 00:03:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2164486.689 ops/s
[info] # Warmup Iteration   2: 2230070.739 ops/s
[info] # Warmup Iteration   3: 2253118.446 ops/s
[info] # Warmup Iteration   4: 2245408.757 ops/s
[info] # Warmup Iteration   5: 2233810.594 ops/s
[info] Iteration   1: 2239738.464 ops/s
[info]                  ·gc.alloc.rate:               444.090 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 232.181 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 2247676.344 ops/s
[info]                  ·gc.alloc.rate:               445.714 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 231.356 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2238676.024 ops/s
[info]                  ·gc.alloc.rate:                   443.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     465.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2246515.621 ops/s
[info]                  ·gc.alloc.rate:               445.476 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 231.944 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2236670.056 ops/s
[info]                  ·gc.alloc.rate:               443.485 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 232.961 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter":
[info]   2241855.302 ±(99.9%) 18969.913 ops/s [Average]
[info]   (min, avg, max) = (2236670.056, 2241855.302, 2247676.344), stdev = 4926.426
[info]   CI (99.9%): [2222885.389, 2260825.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate":
[info]   444.533 ±(99.9%) 3.842 MB/sec [Average]
[info]   (min, avg, max) = (443.485, 444.533, 445.714), stdev = 0.998
[info]   CI (99.9%): [440.691, 448.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (312.000, 312.000, 312.000), stdev = 0.001
[info]   CI (99.9%): [312.000, 312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   397.120 ±(99.9%) 570.834 MB/sec [Average]
[info]   (min, avg, max) = (330.478, 397.120, 662.306), stdev = 148.244
[info]   CI (99.9%): [≈ 0, 967.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   278.790 ±(99.9%) 401.935 B/op [Average]
[info]   (min, avg, max) = (231.356, 278.790, 465.510), stdev = 104.381
[info]   CI (99.9%): [≈ 0, 680.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.101 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.059), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc
[info] # Run progress: 89.92% complete, ETA 00:03:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2334684.084 ops/s
[info] # Warmup Iteration   2: 2391279.505 ops/s
[info] # Warmup Iteration   3: 2425322.629 ops/s
[info] # Warmup Iteration   4: 2421120.613 ops/s
[info] # Warmup Iteration   5: 2424459.033 ops/s
[info] Iteration   1: 2422727.752 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2423112.611 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2425970.357 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2434782.718 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2431402.348 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc":
[info]   2427599.157 ±(99.9%) 20428.427 ops/s [Average]
[info]   (min, avg, max) = (2422727.752, 2427599.157, 2434782.718), stdev = 5305.198
[info]   CI (99.9%): [2407170.730, 2448027.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay
[info] # Run progress: 90.76% complete, ETA 00:02:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1520491.158 ops/s
[info] # Warmup Iteration   2: 2019695.352 ops/s
[info] # Warmup Iteration   3: 2023846.304 ops/s
[info] # Warmup Iteration   4: 2025667.041 ops/s
[info] # Warmup Iteration   5: 2061040.267 ops/s
[info] Iteration   1: 2050890.251 ops/s
[info]                  ·gc.alloc.rate:                   865.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     755.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2065367.614 ops/s
[info]                  ·gc.alloc.rate:                   871.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     754.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2061414.009 ops/s
[info]                  ·gc.alloc.rate:                   869.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     505.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2033612.466 ops/s
[info]                  ·gc.alloc.rate:                   858.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     771.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2041510.333 ops/s
[info]                  ·gc.alloc.rate:                   861.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     771.835 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay":
[info]   2050558.935 ±(99.9%) 51167.922 ops/s [Average]
[info]   (min, avg, max) = (2033612.466, 2050558.935, 2065367.614), stdev = 13288.147
[info]   CI (99.9%): [1999391.012, 2101726.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate":
[info]   865.371 ±(99.9%) 21.554 MB/sec [Average]
[info]   (min, avg, max) = (858.217, 865.371, 871.591), stdev = 5.597
[info]   CI (99.9%): [843.817, 886.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate.norm":
[info]   664.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (664.000, 664.000, 664.000), stdev = 0.001
[info]   CI (99.9%): [664.000, 664.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space":
[info]   927.076 ±(99.9%) 570.397 MB/sec [Average]
[info]   (min, avg, max) = (662.351, 927.076, 1001.487), stdev = 148.130
[info]   CI (99.9%): [356.679, 1497.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space.norm":
[info]   711.655 ±(99.9%) 444.866 B/op [Average]
[info]   (min, avg, max) = (505.549, 711.655, 771.835), stdev = 115.530
[info]   CI (99.9%): [266.788, 1156.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.038, 0.063), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce
[info] # Run progress: 91.60% complete, ETA 00:02:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 405966.702 ops/s
[info] # Warmup Iteration   2: 671038.446 ops/s
[info] # Warmup Iteration   3: 687085.318 ops/s
[info] # Warmup Iteration   4: 685419.001 ops/s
[info] # Warmup Iteration   5: 683330.528 ops/s
[info] Iteration   1: 684264.646 ops/s
[info]                  ·gc.alloc.rate:                   1193.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2292.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 679620.773 ops/s
[info]                  ·gc.alloc.rate:                   1185.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3091.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.289 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 693791.869 ops/s
[info]                  ·gc.alloc.rate:                   1209.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2281.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 678843.358 ops/s
[info]                  ·gc.alloc.rate:                   1183.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3119.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 680371.309 ops/s
[info]                  ·gc.alloc.rate:                   1186.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2340.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce":
[info]   683378.391 ±(99.9%) 23811.393 ops/s [Average]
[info]   (min, avg, max) = (678843.358, 683378.391, 693791.869), stdev = 6183.743
[info]   CI (99.9%): [659566.998, 707189.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1191.831 ±(99.9%) 41.465 MB/sec [Average]
[info]   (min, avg, max) = (1183.936, 1191.831, 1209.939), stdev = 10.768
[info]   CI (99.9%): [1150.366, 1233.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   2744.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2744.001, 2744.001, 2744.001), stdev = 0.001
[info]   CI (99.9%): [2744.001, 2744.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1139.335 ±(99.9%) 708.244 MB/sec [Average]
[info]   (min, avg, max) = (997.263, 1139.335, 1346.017), stdev = 183.929
[info]   CI (99.9%): [431.091, 1847.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2625.193 ±(99.9%) 1691.379 B/op [Average]
[info]   (min, avg, max) = (2281.116, 2625.193, 3119.654), stdev = 439.246
[info]   CI (99.9%): [933.814, 4316.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.125), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.125 ±(99.9%) 0.385 B/op [Average]
[info]   (min, avg, max) = (0.048, 0.125, 0.289), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson
[info] # Run progress: 92.44% complete, ETA 00:02:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 801027.383 ops/s
[info] # Warmup Iteration   2: 1593229.262 ops/s
[info] # Warmup Iteration   3: 1601409.046 ops/s
[info] # Warmup Iteration   4: 1616340.588 ops/s
[info] # Warmup Iteration   5: 1621722.295 ops/s
[info] Iteration   1: 1618777.214 ops/s
[info]                  ·gc.alloc.rate:                   716.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     632.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1637240.991 ops/s
[info]                  ·gc.alloc.rate:                   724.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     627.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1627100.877 ops/s
[info]                  ·gc.alloc.rate:               719.809 MB/sec
[info]                  ·gc.alloc.rate.norm:          696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 633.407 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1631831.518 ops/s
[info]                  ·gc.alloc.rate:                   721.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     951.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1614331.649 ops/s
[info]                  ·gc.alloc.rate:                   714.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     644.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson":
[info]   1625856.450 ±(99.9%) 36008.897 ops/s [Average]
[info]   (min, avg, max) = (1614331.649, 1625856.450, 1637240.991), stdev = 9351.396
[info]   CI (99.9%): [1589847.553, 1661865.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   719.224 ±(99.9%) 15.940 MB/sec [Average]
[info]   (min, avg, max) = (714.113, 719.224, 724.262), stdev = 4.139
[info]   CI (99.9%): [703.285, 735.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   696.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (696.000, 696.000, 696.000), stdev = 0.001
[info]   CI (99.9%): [696.000, 696.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   721.545 ±(99.9%) 572.062 MB/sec [Average]
[info]   (min, avg, max) = (651.024, 721.545, 987.202), stdev = 148.563
[info]   CI (99.9%): [149.482, 1293.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   698.038 ±(99.9%) 546.922 B/op [Average]
[info]   (min, avg, max) = (627.251, 698.038, 951.856), stdev = 142.034
[info]   CI (99.9%): [151.116, 1244.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.104 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.061), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 4.000), stdev = 1.140
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter
[info] # Run progress: 93.28% complete, ETA 00:02:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4109321.452 ops/s
[info] # Warmup Iteration   2: 4646568.393 ops/s
[info] # Warmup Iteration   3: 4653370.756 ops/s
[info] # Warmup Iteration   4: 4713201.730 ops/s
[info] # Warmup Iteration   5: 4565548.125 ops/s
[info] Iteration   1: 4758975.521 ops/s
[info]                  ·gc.alloc.rate:                   387.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4751353.990 ops/s
[info]                  ·gc.alloc.rate:               386.526 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 109.671 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 4737161.620 ops/s
[info]                  ·gc.alloc.rate:                   385.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4671212.791 ops/s
[info]                  ·gc.alloc.rate:                   380.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     111.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4700801.241 ops/s
[info]                  ·gc.alloc.rate:               382.364 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 110.839 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter":
[info]   4723901.032 ±(99.9%) 142387.667 ops/s [Average]
[info]   (min, avg, max) = (4671212.791, 4723901.032, 4758975.521), stdev = 36977.625
[info]   CI (99.9%): [4581513.366, 4866288.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   384.293 ±(99.9%) 11.613 MB/sec [Average]
[info]   (min, avg, max) = (380.023, 384.293, 387.165), stdev = 3.016
[info]   CI (99.9%): [372.680, 395.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   331.162 ±(99.9%) 0.135 MB/sec [Average]
[info]   (min, avg, max) = (331.100, 331.162, 331.180), stdev = 0.035
[info]   CI (99.9%): [331.027, 331.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   110.309 ±(99.9%) 3.329 B/op [Average]
[info]   (min, avg, max) = (109.490, 110.309, 111.548), stdev = 0.865
[info]   CI (99.9%): [106.980, 113.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.032 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.021), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc
[info] # Run progress: 94.12% complete, ETA 00:01:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4449456.726 ops/s
[info] # Warmup Iteration   2: 4907069.777 ops/s
[info] # Warmup Iteration   3: 5107471.164 ops/s
[info] # Warmup Iteration   4: 5049474.597 ops/s
[info] # Warmup Iteration   5: 5038650.304 ops/s
[info] Iteration   1: 5071341.645 ops/s
[info]                  ·gc.alloc.rate:      154.705 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 5046463.483 ops/s
[info]                  ·gc.alloc.rate:               153.948 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79.780 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 5101586.665 ops/s
[info]                  ·gc.alloc.rate:      155.630 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 5033052.778 ops/s
[info]                  ·gc.alloc.rate:                   153.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5080645.817 ops/s
[info]                  ·gc.alloc.rate:               154.990 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79.242 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc":
[info]   5066618.078 ±(99.9%) 105009.126 ops/s [Average]
[info]   (min, avg, max) = (5033052.778, 5066618.078, 5101586.665), stdev = 27270.537
[info]   CI (99.9%): [4961608.951, 5171627.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate":
[info]   154.566 ±(99.9%) 3.181 MB/sec [Average]
[info]   (min, avg, max) = (153.558, 154.566, 155.630), stdev = 0.826
[info]   CI (99.9%): [151.386, 157.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space":
[info]   153.524 ±(99.9%) 539.658 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.524, 255.875), stdev = 140.147
[info]   CI (99.9%): [≈ 0, 693.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   47.801 ±(99.9%) 168.030 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 47.801, 79.982), stdev = 43.637
[info]   CI (99.9%): [≈ 0, 215.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.013), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay
[info] # Run progress: 94.96% complete, ETA 00:01:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31594.613 ops/s
[info] # Warmup Iteration   2: 212739.108 ops/s
[info] # Warmup Iteration   3: 215488.363 ops/s
[info] # Warmup Iteration   4: 217174.235 ops/s
[info] # Warmup Iteration   5: 217788.555 ops/s
[info] Iteration   1: 217506.830 ops/s
[info]                  ·gc.alloc.rate:                   1108.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7213.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.753 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 217238.169 ops/s
[info]                  ·gc.alloc.rate:                   1106.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7251.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 216971.640 ops/s
[info]                  ·gc.alloc.rate:                   1105.377 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9727.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.453 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 220203.094 ops/s
[info]                  ·gc.alloc.rate:                   1121.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7217.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.298 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 216085.499 ops/s
[info]                  ·gc.alloc.rate:                   1100.943 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7369.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.455 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay":
[info]   217601.046 ±(99.9%) 5966.710 ops/s [Average]
[info]   (min, avg, max) = (216085.499, 217601.046, 220203.094), stdev = 1549.536
[info]   CI (99.9%): [211634.336, 223567.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1108.606 ±(99.9%) 30.390 MB/sec [Average]
[info]   (min, avg, max) = (1100.943, 1108.606, 1121.879), stdev = 7.892
[info]   CI (99.9%): [1078.215, 1138.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8016.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8016.002, 8016.002, 8016.002), stdev = 0.001
[info]   CI (99.9%): [8016.002, 8016.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1072.387 ±(99.9%) 579.393 MB/sec [Average]
[info]   (min, avg, max) = (997.178, 1072.387, 1341.321), stdev = 150.467
[info]   CI (99.9%): [492.994, 1651.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7755.802 ±(99.9%) 4250.192 B/op [Average]
[info]   (min, avg, max) = (7213.491, 7755.802, 9727.023), stdev = 1103.761
[info]   CI (99.9%): [3505.610, 12005.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.422 ±(99.9%) 0.863 B/op [Average]
[info]   (min, avg, max) = (0.151, 0.422, 0.753), stdev = 0.224
[info]   CI (99.9%): [≈ 0, 1.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce
[info] # Run progress: 95.80% complete, ETA 00:01:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3524.937 ops/s
[info] # Warmup Iteration   2: 7008.052 ops/s
[info] # Warmup Iteration   3: 7876.284 ops/s
[info] # Warmup Iteration   4: 7902.565 ops/s
[info] # Warmup Iteration   5: 7923.661 ops/s
[info] Iteration   1: 7938.469 ops/s
[info]                  ·gc.alloc.rate:                   729.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              144568.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130345.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.635 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 7872.828 ops/s
[info]                  ·gc.alloc.rate:                   723.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              144568.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131687.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.805 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 7922.203 ops/s
[info]                  ·gc.alloc.rate:               727.873 MB/sec
[info]                  ·gc.alloc.rate.norm:          144568.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 131204.329 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 7893.058 ops/s
[info]                  ·gc.alloc.rate:                   725.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              144594.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     132084.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.856 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7974.065 ops/s
[info]                  ·gc.alloc.rate:                   732.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              144616.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196805.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.540 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce":
[info]   7920.125 ±(99.9%) 151.844 ops/s [Average]
[info]   (min, avg, max) = (7872.828, 7920.125, 7974.065), stdev = 39.433
[info]   CI (99.9%): [7768.281, 8071.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate":
[info]   727.831 ±(99.9%) 14.181 MB/sec [Average]
[info]   (min, avg, max) = (723.449, 727.831, 732.988), stdev = 3.683
[info]   CI (99.9%): [713.650, 742.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm":
[info]   144583.042 ±(99.9%) 84.061 B/op [Average]
[info]   (min, avg, max) = (144568.054, 144583.042, 144616.054), stdev = 21.830
[info]   CI (99.9%): [144498.981, 144667.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   727.483 ±(99.9%) 581.297 MB/sec [Average]
[info]   (min, avg, max) = (657.675, 727.483, 997.510), stdev = 150.961
[info]   CI (99.9%): [146.186, 1308.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   144425.546 ±(99.9%) 112778.805 B/op [Average]
[info]   (min, avg, max) = (130345.656, 144425.546, 196805.200), stdev = 29288.297
[info]   CI (99.9%): [31646.742, 257204.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.053 ±(99.9%) 0.193 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.053, 0.104), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   10.567 ±(99.9%) 38.499 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.567, 20.805), stdev = 9.998
[info]   CI (99.9%): [≈ 0, 49.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson
[info] # Run progress: 96.64% complete, ETA 00:01:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12144.170 ops/s
[info] # Warmup Iteration   2: 34900.604 ops/s
[info] # Warmup Iteration   3: 35207.397 ops/s
[info] # Warmup Iteration   4: 35154.748 ops/s
[info] # Warmup Iteration   5: 35808.095 ops/s
[info] Iteration   1: 35734.759 ops/s
[info]                  ·gc.alloc.rate:                   456.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28414.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.834 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 35792.382 ops/s
[info]                  ·gc.alloc.rate:               457.267 MB/sec
[info]                  ·gc.alloc.rate.norm:          20099.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14177.071 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 35810.958 ops/s
[info]                  ·gc.alloc.rate:                   457.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14199.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.915 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 35828.430 ops/s
[info]                  ·gc.alloc.rate:                   457.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              20099.913 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28413.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.743 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 36259.119 ops/s
[info]                  ·gc.alloc.rate:               463.210 MB/sec
[info]                  ·gc.alloc.rate.norm:          20100.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14051.948 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson":
[info]   35885.130 ±(99.9%) 816.387 ops/s [Average]
[info]   (min, avg, max) = (35734.759, 35885.130, 36259.119), stdev = 212.013
[info]   CI (99.9%): [35068.743, 36701.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate":
[info]   458.436 ±(99.9%) 10.422 MB/sec [Average]
[info]   (min, avg, max) = (456.512, 458.436, 463.210), stdev = 2.707
[info]   CI (99.9%): [448.014, 468.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   20100.008 ±(99.9%) 0.353 B/op [Average]
[info]   (min, avg, max) = (20099.913, 20100.008, 20100.113), stdev = 0.092
[info]   CI (99.9%): [20099.655, 20100.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   452.378 ±(99.9%) 681.247 MB/sec [Average]
[info]   (min, avg, max) = (322.524, 452.378, 647.020), stdev = 176.918
[info]   CI (99.9%): [≈ 0, 1133.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   19851.143 ±(99.9%) 30099.499 B/op [Average]
[info]   (min, avg, max) = (14051.948, 19851.143, 28414.030), stdev = 7816.744
[info]   CI (99.9%): [≈ 0, 49950.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.098 ±(99.9%) 4.594 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.098, 2.743), stdev = 1.193
[info]   CI (99.9%): [≈ 0, 5.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter
[info] # Run progress: 97.48% complete, ETA 00:00:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26380.894 ops/s
[info] # Warmup Iteration   2: 49436.633 ops/s
[info] # Warmup Iteration   3: 50186.230 ops/s
[info] # Warmup Iteration   4: 50252.854 ops/s
[info] # Warmup Iteration   5: 50672.318 ops/s
[info] Iteration   1: 50382.026 ops/s
[info]                  ·gc.alloc.rate:               325.596 MB/sec
[info]                  ·gc.alloc.rate.norm:          10168.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7990.736 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 50660.167 ops/s
[info]                  ·gc.alloc.rate:                   327.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              10168.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10285.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.787 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.503 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 50977.182 ops/s
[info]                  ·gc.alloc.rate:                   329.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              10168.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10221.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.856 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 50401.821 ops/s
[info]                  ·gc.alloc.rate:               325.730 MB/sec
[info]                  ·gc.alloc.rate.norm:          10168.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10317.477 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 50637.135 ops/s
[info]                  ·gc.alloc.rate:               327.245 MB/sec
[info]                  ·gc.alloc.rate.norm:          10168.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10269.804 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter":
[info]   50611.666 ±(99.9%) 930.096 ops/s [Average]
[info]   (min, avg, max) = (50382.026, 50611.666, 50977.182), stdev = 241.543
[info]   CI (99.9%): [49681.570, 51541.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate":
[info]   327.081 ±(99.9%) 5.980 MB/sec [Average]
[info]   (min, avg, max) = (325.596, 327.081, 329.422), stdev = 1.553
[info]   CI (99.9%): [321.101, 333.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   10168.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10168.008, 10168.009, 10168.009), stdev = 0.001
[info]   CI (99.9%): [10168.007, 10168.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   315.854 ±(99.9%) 129.113 MB/sec [Average]
[info]   (min, avg, max) = (255.876, 315.854, 331.193), stdev = 33.530
[info]   CI (99.9%): [186.741, 444.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   9817.026 ±(99.9%) 3933.478 B/op [Average]
[info]   (min, avg, max) = (7990.736, 9817.026, 10317.477), stdev = 1021.512
[info]   CI (99.9%): [5883.548, 13750.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.382 ±(99.9%) 3.031 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.382, 1.787), stdev = 0.787
[info]   CI (99.9%): [≈ 0, 3.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   11.872 ±(99.9%) 94.139 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.872, 55.503), stdev = 24.448
[info]   CI (99.9%): [≈ 0, 106.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc
[info] # Run progress: 98.32% complete, ETA 00:00:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36936.640 ops/s
[info] # Warmup Iteration   2: 59329.483 ops/s
[info] # Warmup Iteration   3: 60017.206 ops/s
[info] # Warmup Iteration   4: 61179.181 ops/s
[info] # Warmup Iteration   5: 60740.263 ops/s
[info] Iteration   1: 61090.204 ops/s
[info]                  ·gc.alloc.rate:      9.319 MB/sec
[info]                  ·gc.alloc.rate.norm: 240.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 61179.828 ops/s
[info]                  ·gc.alloc.rate:      9.332 MB/sec
[info]                  ·gc.alloc.rate.norm: 240.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 61163.129 ops/s
[info]                  ·gc.alloc.rate:      9.330 MB/sec
[info]                  ·gc.alloc.rate.norm: 240.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 61151.866 ops/s
[info]                  ·gc.alloc.rate:      9.329 MB/sec
[info]                  ·gc.alloc.rate.norm: 240.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 60799.662 ops/s
[info]                  ·gc.alloc.rate:      9.275 MB/sec
[info]                  ·gc.alloc.rate.norm: 240.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc":
[info]   61076.938 ±(99.9%) 610.929 ops/s [Average]
[info]   (min, avg, max) = (60799.662, 61076.938, 61179.828), stdev = 158.656
[info]   CI (99.9%): [60466.009, 61687.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   9.317 ±(99.9%) 0.092 MB/sec [Average]
[info]   (min, avg, max) = (9.275, 9.317, 9.332), stdev = 0.024
[info]   CI (99.9%): [9.225, 9.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   240.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.007, 240.007, 240.007), stdev = 0.001
[info]   CI (99.9%): [240.007, 240.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay
[info] # Run progress: 99.16% complete, ETA 00:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 967.451 ops/s
[info] # Warmup Iteration   2: 3930.992 ops/s
[info] # Warmup Iteration   3: 4205.045 ops/s
[info] # Warmup Iteration   4: 4331.701 ops/s
[info] # Warmup Iteration   5: 4289.129 ops/s
[info] Iteration   1: 4283.681 ops/s
[info]                  ·gc.alloc.rate:                   904.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              332301.620 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     364003.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.294 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4296.283 ops/s
[info]                  ·gc.alloc.rate:                   907.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              332301.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     365183.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.694 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4347.134 ops/s
[info]                  ·gc.alloc.rate:               918.223 MB/sec
[info]                  ·gc.alloc.rate.norm:          332302.429 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 241403.996 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 4328.843 ops/s
[info]                  ·gc.alloc.rate:                   914.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              332302.723 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     364822.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.568 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 4308.645 ops/s
[info]                  ·gc.alloc.rate:                   910.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              332302.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     367731.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.206 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay":
[info]   4312.917 ±(99.9%) 97.684 ops/s [Average]
[info]   (min, avg, max) = (4283.681, 4312.917, 4347.134), stdev = 25.368
[info]   CI (99.9%): [4215.233, 4410.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate":
[info]   910.948 ±(99.9%) 20.692 MB/sec [Average]
[info]   (min, avg, max) = (904.742, 910.948, 918.223), stdev = 5.374
[info]   CI (99.9%): [890.256, 931.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   332302.151 ±(99.9%) 1.744 B/op [Average]
[info]   (min, avg, max) = (332301.620, 332302.151, 332302.723), stdev = 0.453
[info]   CI (99.9%): [332300.407, 332303.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   933.235 ±(99.9%) 573.472 MB/sec [Average]
[info]   (min, avg, max) = (667.051, 933.235, 1007.105), stdev = 148.929
[info]   CI (99.9%): [359.763, 1506.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   340629.022 ±(99.9%) 213656.681 B/op [Average]
[info]   (min, avg, max) = (241403.996, 340629.022, 367731.467), stdev = 55485.961
[info]   CI (99.9%): [126972.341, 554285.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.035 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.073), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   12.952 ±(99.9%) 38.321 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.952, 26.694), stdev = 9.952
[info]   CI (99.9%): [≈ 0, 51.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:31:31
[info] Benchmark                                                                                         Mode  Cnt         Score        Error   Units
[info] JsonCodecMakerBenchmark.missingReqFieldCirce                                                     thrpt    5   1469149.110 ±  55887.958   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate                                      thrpt    5      2345.592 ±     89.173  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm                                 thrpt    5      2512.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space                             thrpt    5      2375.833 ±     31.204  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2544.544 ±     81.143    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.071 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.076 ±      0.101    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count                                           thrpt    5        35.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time                                            thrpt    5        36.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJackson                                                   thrpt    5    198210.086 ±   4648.367   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate                                    thrpt    5       469.648 ±     11.067  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm                               thrpt    5      3728.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space                           thrpt    5       454.785 ±    686.887  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      3615.237 ±   5524.846    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.033 ±      0.176  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.264 ±      1.395    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count                                         thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time                                          thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter                                                  thrpt    5    438562.093 ±  73612.619   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate                                   thrpt    5       396.928 ±     66.673  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm                              thrpt    5      1424.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       397.549 ±    569.997  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1423.541 ±   1962.183    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.029 ±      0.156  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.107 ±      0.569    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count                                        thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time                                         thrpt    5         5.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless                                         thrpt    5   1755131.559 ±  91404.428   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate                          thrpt    5      1070.929 ±     55.650  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm                     thrpt    5       960.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space                 thrpt    5      1005.887 ±     17.459  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm            thrpt    5       901.797 ±     37.520    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space             thrpt    5         0.050 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.045 ±      0.041    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count                               thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time                                thrpt    5        17.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump                                   thrpt    5   2649979.883 ±  49068.256   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate                    thrpt    5       309.908 ±      5.736  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm               thrpt    5       184.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space           thrpt    5       265.078 ±    570.601  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm      thrpt    5       157.603 ±    339.264    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space       thrpt    5         0.371 ±      3.059  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.222 ±      1.828    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count                         thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time                          thrpt    5         5.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldPlay                                                      thrpt    5    118688.490 ±   1656.392   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate                                       thrpt    5       989.095 ±     13.682  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm                                  thrpt    5     13112.004 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1001.578 ±     24.795  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5     13277.472 ±    258.516    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.042 ±      0.150  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.553 ±      1.998    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count                                            thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time                                             thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.readAdtCirce                                                             thrpt    5    582395.446 ±  18494.164   ops/s
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate                                              thrpt    5      1533.927 ±     48.486  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm                                         thrpt    5      4144.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space                                     thrpt    5      1549.903 ±    692.371  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm                                thrpt    5      4187.738 ±   1888.627    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.054 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.146 ±      0.328    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.count                                                   thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.time                                                    thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readAdtJackson                                                           thrpt    5   1267113.617 ±  26812.030   ops/s
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate                                            thrpt    5       901.972 ±     19.204  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm                                       thrpt    5      1120.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space                                   thrpt    5       922.732 ±    559.819  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm                              thrpt    5      1145.924 ±    698.745    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space                               thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.067 ±      0.113    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.count                                                 thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.time                                                  thrpt    5        15.000                   ms
[info] JsonCodecMakerBenchmark.readAdtJsoniter                                                          thrpt    5   2516690.339 ±  80524.978   ops/s
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate                                           thrpt    5       166.351 ±      5.327  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm                                      thrpt    5       104.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space                                  thrpt    5       153.522 ±    539.651  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm                             thrpt    5        96.043 ±    337.608    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space                              thrpt    5         0.001 ±      0.011  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.001 ±      0.007    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count                                                thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time                                                 thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.readAdtPlay                                                              thrpt    5    130847.041 ±   2034.700   ops/s
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate                                               thrpt    5      1088.427 ±     16.896  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm                                          thrpt    5     13088.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space                                      thrpt    5      1137.765 ±    703.413  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm                                 thrpt    5     13682.942 ±   8506.404    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space                                  thrpt    5         0.035 ±      0.219  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm                             thrpt    5         0.426 ±      2.640    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.count                                                    thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.time                                                     thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsCirce                                                         thrpt    5   1212468.104 ±  46211.299   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate                                          thrpt    5      1892.659 ±     72.130  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                                     thrpt    5      2456.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1895.630 ±    698.525  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2459.825 ±    900.165    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.062 ±      0.179  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.081 ±      0.230    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count                                               thrpt    5        28.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time                                                thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsJackson                                                       thrpt    5   1950868.807 ±  65323.587   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate                                        thrpt    5      1368.955 ±     45.940  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                                   thrpt    5      1104.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1405.098 ±    536.855  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1133.645 ±    457.632    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.079 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.064 ±      0.124    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count                                             thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time                                              thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter                                                      thrpt    5   6004496.565 ± 153265.169   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                                       thrpt    5       763.257 ±     19.419  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       200.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       799.607 ±    699.243  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       209.589 ±    184.592    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.037 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.010 ±      0.038    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count                                            thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time                                             thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsPlay                                                          thrpt    5    449548.670 ±   8909.739   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate                                           thrpt    5      1136.020 ±     22.527  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                                      thrpt    5      3976.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1139.597 ±    690.795  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      3988.699 ±   2421.876    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.050 ±      0.176  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.175 ±      0.612    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count                                                thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time                                                 thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.readArraysCirce                                                          thrpt    5    641355.421 ±  21006.960   ops/s
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate                                           thrpt    5      2096.920 ±     68.641  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm                                      thrpt    5      5144.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                                  thrpt    5      2102.772 ±    588.993  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5157.373 ±   1359.026    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                              thrpt    5         0.071 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.173 ±      0.294    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.count                                                thrpt    5        31.000               counts
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.time                                                 thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.readArraysJackson                                                        thrpt    5   1229550.302 ±  23648.351   ops/s
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate                                         thrpt    5      1156.589 ±     22.174  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm                                    thrpt    5      1480.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                                thrpt    5      1131.531 ±    704.004  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1448.736 ±    925.114    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                            thrpt    5         0.062 ±      0.139  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.080 ±      0.179    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.count                                              thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.time                                               thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.readArraysJsoniter                                                       thrpt    5   2269874.994 ±  78330.958   ops/s
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate                                        thrpt    5       946.352 ±     32.729  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                                   thrpt    5       656.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5       936.484 ±    580.268  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5       649.825 ±    417.243    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5         0.058 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.040 ±      0.047    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count                                             thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time                                              thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.readArraysPlay                                                           thrpt    5    237308.431 ±   4855.440   ops/s
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate                                            thrpt    5      1402.123 ±     28.717  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm                                       thrpt    5      9296.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                                   thrpt    5      1413.703 ±    570.165  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5      9376.292 ±   3955.505    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                               thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.331 ±      0.606    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.count                                                 thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.time                                                  thrpt    5        29.000                   ms
[info] JsonCodecMakerBenchmark.readAsciiStringCirce                                                     thrpt    5    286625.708 ±  10583.446   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate                                      thrpt    5      1117.882 ±     41.096  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate.norm                                 thrpt    5      6136.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space                             thrpt    5      1139.068 ±    699.685  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      6254.095 ±   3890.800    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.058 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.321 ±      0.381    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.count                                           thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.time                                            thrpt    5        17.000                   ms
[info] JsonCodecMakerBenchmark.readAsciiStringJackson                                                   thrpt    5    743047.568 ±  21298.045   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate                                    thrpt    5      1556.520 ±     44.575  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate.norm                               thrpt    5      3296.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space                           thrpt    5      1548.339 ±    707.877  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      3280.234 ±   1556.411    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.062 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.132 ±      0.205    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.count                                         thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.time                                          thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter                                                  thrpt    5    804325.422 ±  25716.936   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate                                   thrpt    5      1353.682 ±     43.282  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate.norm                              thrpt    5      2648.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5      1348.199 ±     24.420  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      2637.444 ±    108.261    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.098 ±      0.180    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.count                                        thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.time                                         thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsJackson                                                       thrpt    5   1735301.364 ±  86769.744   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate                                        thrpt    5      1102.902 ±     55.074  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                                   thrpt    5      1000.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1128.747 ±    688.827  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1024.773 ±    664.262    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.062 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.057 ±      0.114    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time                                              thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter                                                      thrpt    5   3678528.182 ±  66666.529   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate                                       thrpt    5       486.265 ±      8.784  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       208.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       463.346 ±    699.360  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       198.278 ±    300.268    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.025 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.011 ±      0.061    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count                                            thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time                                             thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsPlay                                                          thrpt    5    285244.423 ±  12550.985   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate                                           thrpt    5      1295.152 ±     57.011  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                                      thrpt    5      7144.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1277.118 ±    569.500  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      7048.158 ±   3254.737    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.050 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.276 ±      0.398    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count                                                thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time                                                 thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce                                                   thrpt    5    569448.681 ±  16808.939   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate                                    thrpt    5      1890.729 ±     55.727  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                               thrpt    5      5224.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                           thrpt    5      1895.598 ±    708.299  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5      5237.962 ±   1975.181    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.079 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.218 ±      0.325    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count                                         thrpt    5        28.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time                                          thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson                                                 thrpt    5    713843.396 ±   6738.056   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate                                  thrpt    5       885.611 ±      8.194  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                             thrpt    5      1952.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space                         thrpt    5       856.864 ±    688.905  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5      1889.129 ±   1528.786    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.101 ±      0.231    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count                                       thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time                                        thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter                                                thrpt    5   4262723.494 ± 127665.305   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                                 thrpt    5       195.077 ±      5.842  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                            thrpt    5        72.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       219.840 ±    489.750  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5        81.333 ±    181.931    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.365 ±      3.020  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.136 ±      1.129    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count                                      thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time                                       thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay                                                    thrpt    5    224873.744 ±   6868.049   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate                                     thrpt    5      1214.284 ±     37.085  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                                thrpt    5      8496.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1208.358 ±    701.924  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5      8451.614 ±   4815.143    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.029 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.203 ±      0.930    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count                                          thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time                                           thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce                                                   thrpt    5      5336.949 ±     65.332   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate                                    thrpt    5      1373.820 ±     16.702  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm                               thrpt    5    405000.083 ±      0.021    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                           thrpt    5      1343.692 ±     30.629  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5    396120.845 ±   9828.337    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.079 ±      0.142  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        23.321 ±     41.914    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count                                         thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time                                          thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson                                                 thrpt    5     10496.353 ±    186.808   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate                                  thrpt    5       283.140 ±      5.056  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm                             thrpt    5     42440.042 ±      0.006    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                         thrpt    5       245.082 ±    539.365  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5     36787.763 ±  80883.850    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.528 ±      4.416  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5        79.381 ±    663.517    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count                                       thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time                                        thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter                                                thrpt    5     17905.529 ±    241.765   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate                                 thrpt    5       335.123 ±      4.503  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                            thrpt    5     29448.026 ±      0.016    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       331.290 ±      0.693  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5     29111.494 ±    445.670    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.378 ±      2.984  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5        33.318 ±    263.478    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count                                      thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time                                       thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay                                                    thrpt    5      1883.743 ±     37.031   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate                                     thrpt    5      1180.054 ±     23.205  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm                                thrpt    5    985528.233 ±      0.028    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1139.412 ±    708.686  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5    951697.653 ± 595105.805    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.037 ±      0.236  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5        31.416 ±    198.417    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count                                          thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time                                           thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter                                               thrpt    5   3040291.373 ±  87005.016   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                                thrpt    5       912.049 ±     26.072  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                           thrpt    5       472.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       935.398 ±    575.033  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5       483.953 ±    294.254    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.024 ±      0.054    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count                                     thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time                                      thrpt    5        15.000                   ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay                                                   thrpt    5    254053.849 ±   8093.274   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                                    thrpt    5      1343.388 ±     42.740  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                               thrpt    5      8320.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1346.068 ±     29.197  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5      8337.322 ±    432.728    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.033 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.207 ±      0.752    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count                                         thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time                                          thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesCirce                                                       thrpt    5    493090.534 ±  10609.219   ops/s
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate                                        thrpt    5      1797.658 ±     38.701  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm                                   thrpt    5      5736.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                               thrpt    5      1758.763 ±    574.016  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5611.773 ±   1818.467    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                           thrpt    5         0.071 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.226 ±      0.429    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.count                                             thrpt    5        26.000               counts
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.time                                              thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesJackson                                                     thrpt    5    540898.782 ±  17111.512   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate                                      thrpt    5       629.792 ±     19.933  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm                                 thrpt    5      1832.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                             thrpt    5       650.134 ±     13.651  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5      1891.275 ±     70.776    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space                         thrpt    5         0.042 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.122 ±      0.334    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.count                                           thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.time                                            thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesJsoniter                                                    thrpt    5   2582576.557 ±  83629.643   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate                                     thrpt    5      1024.222 ±     33.275  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                                thrpt    5       624.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5      1071.404 ±    577.167  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5       652.878 ±    355.869    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5         0.071 ±      0.108  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.043 ±      0.064    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count                                          thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time                                           thrpt    5        17.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesPlay                                                        thrpt    5    157637.901 ±   1041.514   ops/s
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate                                         thrpt    5      1097.295 ±      7.271  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm                                    thrpt    5     10952.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                                thrpt    5      1070.355 ±    566.711  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5     10682.854 ±   5644.331    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                            thrpt    5         0.046 ±      0.230  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.457 ±      2.291    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.count                                              thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.time                                               thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.readMapsCirce                                                            thrpt    5    472853.873 ±  12413.820   ops/s
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate                                             thrpt    5      1685.419 ±     44.176  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm                                        thrpt    5      5608.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1688.713 ±     33.162  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5619.218 ±    209.243    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.079 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.263 ±      0.351    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.count                                                  thrpt    5        25.000               counts
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.time                                                   thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readMapsJackson                                                          thrpt    5    875436.165 ±  19747.943   ops/s
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate                                           thrpt    5      1032.656 ±     23.441  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm                                      thrpt    5      1856.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                                  thrpt    5      1056.133 ±    535.527  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5      1898.656 ±    980.314    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.090 ±      0.165    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.count                                                thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.time                                                 thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.readMapsJsoniter                                                         thrpt    5   2639272.446 ± 427885.008   ops/s
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate                                          thrpt    5       657.558 ±    106.708  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                                     thrpt    5       392.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       664.946 ±      7.927  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5       397.033 ±     71.896    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.042 ±      0.160  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.024 ±      0.094    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count                                               thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time                                                thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.readMapsPlay                                                             thrpt    5    261292.408 ±   7815.906   ops/s
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate                                              thrpt    5      1336.564 ±     40.090  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm                                         thrpt    5      8048.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                                     thrpt    5      1278.280 ±    571.278  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      7694.571 ±   3348.753    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.050 ±      0.201  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.300 ±      1.203    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.count                                                   thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.time                                                    thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce                                                thrpt    5    549465.274 ±  19052.502   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate                                 thrpt    5      2117.656 ±     73.353  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm                            thrpt    5      6064.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space                        thrpt    5      2102.668 ±    589.011  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5      6022.027 ±   1739.371    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space                    thrpt    5         0.050 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.143 ±      0.382    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count                                      thrpt    5        31.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time                                       thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter                                             thrpt    5   1905760.452 ± 106863.198   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate                              thrpt    5      1230.614 ±     68.960  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm                         thrpt    5      1016.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5      1210.663 ±    704.539  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5      1000.274 ±    601.627    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.050 ±      0.108  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.041 ±      0.088    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count                                   thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time                                    thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay                                                 thrpt    5    165132.592 ±   6755.981   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate                                  thrpt    5      1181.362 ±     48.294  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm                             thrpt    5     11256.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space                         thrpt    5      1206.898 ±    706.159  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5     11513.145 ±   7118.465    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.046 ±      0.222  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.436 ±      2.121    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count                                       thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time                                        thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsJackson                                                   thrpt    5    872645.477 ±  26268.104   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate                                    thrpt    5      1131.457 ±     34.023  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                               thrpt    5      2040.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                           thrpt    5      1124.999 ±    710.044  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      2028.088 ±   1269.807    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.090 ±      0.164    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count                                         thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time                                          thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter                                                  thrpt    5   1553186.702 ±  27126.307   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                                   thrpt    5       734.496 ±     12.915  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                              thrpt    5       744.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       732.711 ±    569.580  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       742.245 ±    578.248    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.033 ±      0.166  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.034 ±      0.169    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count                                        thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time                                         thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsPlay                                                      thrpt    5    223821.218 ±   2775.254   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate                                       thrpt    5      1176.704 ±     14.500  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                                  thrpt    5      8272.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1140.427 ±    709.507  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8017.287 ±   4996.595    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.351 ±      0.854    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count                                            thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time                                             thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce                                                  thrpt    5   1059918.316 ±  20726.844   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate                                   thrpt    5      1298.813 ±     25.436  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate.norm                              thrpt    5      1928.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space                          thrpt    5      1277.927 ±    571.145  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1896.427 ±    827.206    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space                      thrpt    5         0.083 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.124 ±      0.167    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.count                                        thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.time                                         thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson                                                thrpt    5    908808.529 ±   7807.644   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate                                 thrpt    5       563.752 ±      4.835  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate.norm                            thrpt    5       976.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space                        thrpt    5       589.587 ±    566.368  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5      1021.055 ±    984.733    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space                    thrpt    5         0.050 ±      0.185  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.087 ±      0.320    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.count                                      thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.time                                       thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter                                               thrpt    5   1353885.524 ±  25657.549   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate                                thrpt    5       220.283 ±      4.141  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate.norm                           thrpt    5       256.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       234.820 ±    525.854  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5       273.392 ±    611.783    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.371 ±      2.931  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.433 ±      3.414    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.count                                     thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.time                                      thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesCirce                                                      thrpt    5    470234.083 ±   9928.941   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate                                       thrpt    5      1403.521 ±     29.597  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                                  thrpt    5      4696.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1411.125 ±    582.878  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      4721.052 ±   1926.938    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.153 ±      0.291    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count                                            thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time                                             thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesJackson                                                    thrpt    5   1020351.911 ±  35447.034   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate                                     thrpt    5       772.992 ±     26.760  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                                thrpt    5      1192.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       722.763 ±    566.624  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1115.726 ±    907.593    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.054 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.084 ±      0.190    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count                                          thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time                                           thrpt    5        17.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter                                                   thrpt    5   3346303.439 ±  84912.343   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                                    thrpt    5       102.082 ±      2.588  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                               thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       102.347 ±    539.648  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5        48.435 ±    255.382    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.015 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.007 ±      0.042    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count                                         thrpt    5         2.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time                                          thrpt    5         5.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesPlay                                                       thrpt    5    172546.655 ±   6338.860   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate                                        thrpt    5      1123.016 ±     41.363  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                                   thrpt    5     10240.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1139.499 ±    714.305  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5     10396.692 ±   6696.292    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.042 ±      0.150  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.379 ±      1.362    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time                                              thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPICirce                                                      thrpt    5      7642.430 ±    112.650   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate                                       thrpt    5      1078.295 ±     16.038  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm                                  thrpt    5    221975.316 ±     62.500    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space                              thrpt    5      1065.892 ±    563.393  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5    219470.122 ± 117923.272    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.092 ±      0.264  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5        18.892 ±     54.532    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time                                             thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson                                                    thrpt    5     11744.626 ±    358.716   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate                                     thrpt    5       185.728 ±      5.677  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm                                thrpt    5     24880.040 ±      0.022    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space                            thrpt    5       153.525 ±    539.661  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5     20657.771 ±  72617.825    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.006 ±      0.054  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.854 ±      7.352    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count                                          thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time                                           thrpt    5        17.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter                                                   thrpt    5     23885.899 ±    661.190   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate                                    thrpt    5       269.370 ±      7.448  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm                               thrpt    5     17744.029 ±      0.089    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       234.811 ±    525.820  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5     15472.509 ±  34561.679    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.368 ±      3.078  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        24.174 ±    202.321    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count                                         thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time                                          thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay                                                       thrpt    5      3735.785 ±    161.914   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate                                        thrpt    5      1102.095 ±     47.643  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm                                   thrpt    5    464136.117 ±      0.018    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1137.657 ±    703.237  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5    478839.404 ± 286527.346    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.056 ±      0.268  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5        23.748 ±    113.799    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time                                              thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtCirce                                                            thrpt    5    425274.404 ±   4568.120   ops/s
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate                                             thrpt    5      1407.657 ±     15.246  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm                                        thrpt    5      5208.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1412.398 ±    550.820  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5226.587 ±   2092.782    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.046 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.170 ±      0.325    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.count                                                  thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.time                                                   thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtJackson                                                          thrpt    5   1644762.164 ±  30096.848   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate                                           thrpt    5       685.805 ±     12.682  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm                                      thrpt    5       656.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space                                  thrpt    5       719.734 ±    548.709  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5       688.292 ±    519.612    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.042 ±      0.150  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.040 ±      0.143    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.count                                                thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.time                                                 thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtJsoniter                                                         thrpt    5   8914090.163 ± 207831.559   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate                                          thrpt    5       453.250 ±     10.625  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm                                     thrpt    5        80.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       463.649 ±    698.512  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5        81.809 ±    122.902    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.033 ±      0.176  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.006 ±      0.031    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count                                               thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time                                                thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtPlay                                                             thrpt    5    251010.870 ±  11173.082   ops/s
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate                                              thrpt    5       807.888 ±     35.886  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm                                         thrpt    5      5064.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space                                     thrpt    5       797.758 ±    689.520  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      5005.074 ±   4420.367    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.042 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.262 ±      0.793    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.count                                                   thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.time                                                    thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce                                                        thrpt    5   1399496.180 ±  28232.443   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate                                         thrpt    5      1408.896 ±     28.377  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                                    thrpt    5      1584.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                                thrpt    5      1413.613 ±    583.318  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1589.398 ±    659.440    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                            thrpt    5         0.062 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.070 ±      0.144    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count                                              thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time                                               thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson                                                      thrpt    5   4240766.016 ± 132510.390   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate                                       thrpt    5      1164.351 ±     36.420  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1129.895 ±    703.763  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       419.202 ±    260.286    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.058 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.022 ±      0.054    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count                                            thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time                                             thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter                                                     thrpt    5  15630292.358 ± 199300.632   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                                      thrpt    5       476.817 ±      6.069  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                                 thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       463.757 ±    697.980  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5        46.716 ±     70.690    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.021 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.002 ±      0.008    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count                                           thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time                                            thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc                                             thrpt    5  19045863.762 ±  38314.543   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate                              thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm                         thrpt    5        ≈ 10⁻⁵                 B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count                                   thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay                                                         thrpt    5    879920.661 ±  19365.354   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate                                          thrpt    5      1319.867 ±     29.045  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                                     thrpt    5      2360.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1336.114 ±     47.780  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2389.125 ±    104.732    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.042 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.075 ±      0.227    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count                                               thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time                                                thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysCirce                                                         thrpt    5    794488.702 ±  20286.451   ops/s
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate                                          thrpt    5      1809.876 ±     45.578  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm                                     thrpt    5      3584.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1826.604 ±    721.373  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      3618.821 ±   1505.983    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.062 ±      0.150  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.124 ±      0.300    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.count                                               thrpt    5        27.000               counts
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.time                                                thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysJackson                                                       thrpt    5   2558172.399 ±  86946.177   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate                                        thrpt    5      1482.810 ±     50.435  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm                                   thrpt    5       912.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1475.592 ±    711.843  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5       907.260 ±    424.016    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.058 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.036 ±      0.094    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.count                                             thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.time                                              thrpt    5        29.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysJsoniter                                                      thrpt    5   4653963.120 ± 143065.852   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate                                       thrpt    5      1277.815 ±     39.322  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5      1279.431 ±    578.769  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       432.620 ±    197.906    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.067 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.023 ±      0.036    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count                                            thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time                                             thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysPlay                                                          thrpt    5    331655.382 ±  11275.598   ops/s
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate                                           thrpt    5      1183.827 ±     40.329  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm                                      thrpt    5      5616.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1140.745 ±    710.355  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5417.067 ±   3532.814    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.058 ±      0.174  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.277 ±      0.824    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.count                                                thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.time                                                 thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce                                                    thrpt    5    162280.806 ±   5402.304   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate                                     thrpt    5       828.487 ±     27.577  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate.norm                                thrpt    5      8032.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space                            thrpt    5       864.459 ±    701.132  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5      8387.830 ±   6941.571    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space                        thrpt    5         0.042 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.405 ±      1.233    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.count                                          thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.time                                           thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson                                                  thrpt    5    503452.221 ±   8832.077   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate                                   thrpt    5       509.401 ±      8.949  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate.norm                              thrpt    5      1592.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space                          thrpt    5       523.075 ±    688.124  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1635.396 ±   2158.430    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space                      thrpt    5         0.025 ±      0.174  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.078 ±      0.545    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.count                                        thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.time                                         thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter                                                 thrpt    5    652927.648 ±  11588.345   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate                                  thrpt    5       551.097 ±      9.756  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate.norm                             thrpt    5      1328.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5       596.920 ±    572.038  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5      1439.620 ±   1393.699    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5         0.042 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.101 ±      0.306    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.count                                       thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.time                                        thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc                                         thrpt    5    726354.477 ±   8015.276   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate                          thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm                     thrpt    5         0.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.count                               thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay                                                     thrpt    5    603809.240 ±  24339.230   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate                                      thrpt    5       644.718 ±     25.962  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate.norm                                 thrpt    5      1680.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space                             thrpt    5       657.416 ±     11.576  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5      1713.194 ±     54.191    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space                         thrpt    5         0.062 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.163 ±      0.213    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.count                                           thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.time                                            thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsJackson                                                      thrpt    5   2004366.229 ±  62431.570   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate                                       thrpt    5      1059.882 ±     33.184  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                                  thrpt    5       832.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1061.469 ±    598.432  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       833.910 ±    494.212    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.062 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.049 ±      0.090    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time                                             thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter                                                     thrpt    5   4556770.812 ± 125247.648   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                                      thrpt    5       695.040 ±     19.065  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                                 thrpt    5       240.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       731.341 ±    571.459  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5       252.686 ±    201.661    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.067 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.023 ±      0.023    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count                                           thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time                                            thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsPlay                                                         thrpt    5    506635.642 ±  16400.306   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate                                          thrpt    5      1499.222 ±     48.551  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                                     thrpt    5      4656.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1484.636 ±    720.636  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      4612.291 ±   2294.231    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.067 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.207 ±      0.447    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count                                               thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time                                                thrpt    5        29.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce                                                  thrpt    5      5596.634 ±    164.989   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate                                   thrpt    5      1288.700 ±     37.975  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm                              thrpt    5    362272.078 ±      0.009    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                          thrpt    5      1274.897 ±    562.164  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5    358477.993 ± 160885.845    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                      thrpt    5         0.083 ±      0.114  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5        23.212 ±     31.924    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count                                        thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time                                         thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson                                                thrpt    5     29812.850 ±    613.834   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate                                 thrpt    5       432.175 ±      8.960  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm                            thrpt    5     22807.843 ±      0.459    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                        thrpt    5       454.160 ±    684.792  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5     23997.470 ±  36546.779    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                    thrpt    5         0.021 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm               thrpt    5         1.100 ±      5.981    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count                                      thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time                                       thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter                                               thrpt    5     44950.627 ±    993.496   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate                                thrpt    5       338.721 ±      7.456  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                           thrpt    5     11856.010 ±      0.002    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       330.907 ±      1.374  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5     11582.765 ±    242.849    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.373 ±      3.033  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5        13.048 ±    106.098    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count                                     thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time                                      thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc                                       thrpt    5     56212.201 ±    649.395   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate                        thrpt    5         0.858 ±      0.010  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm                   thrpt    5        24.008 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count                             thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay                                                   thrpt    5      4214.747 ±    170.456   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate                                    thrpt    5      1260.083 ±     50.942  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm                               thrpt    5    470368.105 ±      1.673    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1277.272 ±    586.627  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5    477030.390 ± 226584.226    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.017 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         6.214 ±     24.986    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count                                         thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time                                          thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson                                               thrpt    5    671061.657 ±  14499.043   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                                thrpt    5      1470.645 ±     31.863  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                           thrpt    5      3448.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1471.479 ±    719.417  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      3450.554 ±   1707.666    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.054 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.127 ±      0.287    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count                                     thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time                                      thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter                                              thrpt    5   2453488.390 ±  13258.429   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                               thrpt    5       361.791 ±      2.016  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       232.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       397.314 ±    569.529  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       254.742 ±    364.494    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.384 ±      3.177  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.246 ±      2.035    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count                                    thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time                                     thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay                                                  thrpt    5    248324.847 ±   7158.082   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                                   thrpt    5       973.585 ±     28.097  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                              thrpt    5      6168.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1001.979 ±     23.584  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      6348.091 ±    189.349    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.025 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.158 ±      0.558    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count                                        thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time                                         thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesCirce                                                      thrpt    5    644582.675 ±  17458.234   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate                                       thrpt    5      1553.501 ±     42.193  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                                  thrpt    5      3792.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1550.433 ±    694.093  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      3784.158 ±   1676.766    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.062 ±      0.139  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.152 ±      0.337    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count                                            thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time                                             thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesJackson                                                    thrpt    5   1324422.738 ±  19132.891   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate                                     thrpt    5       895.651 ±     12.969  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                                thrpt    5      1064.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       854.129 ±    686.419  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1014.749 ±    816.879    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.059 ±      0.109    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count                                          thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time                                           thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter                                                   thrpt    5   5232240.278 ± 137207.629   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate                                    thrpt    5       638.455 ±     16.755  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                               thrpt    5       192.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       663.914 ±      6.614  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5       199.665 ±      6.151    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.054 ±      0.108  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.016 ±      0.032    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count                                         thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time                                          thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesPlay                                                       thrpt    5    373003.211 ±   8816.630   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate                                        thrpt    5      1291.493 ±     30.518  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                                   thrpt    5      5448.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1277.711 ±    565.070  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5389.403 ±   2366.155    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.058 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.246 ±      0.655    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count                                             thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time                                              thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsCirce                                                           thrpt    5    381957.504 ±   4728.617   ops/s
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate                                            thrpt    5      1044.850 ±     13.024  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm                                       thrpt    5      4304.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                                   thrpt    5      1000.394 ±     23.948  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                              thrpt    5      4120.884 ±     90.572    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                               thrpt    5         0.050 ±      0.166  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.206 ±      0.686    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.count                                                 thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.time                                                  thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsJackson                                                         thrpt    5    765866.728 ±  12221.025   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate                                          thrpt    5      1203.990 ±     20.684  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm                                     thrpt    5      2472.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                                 thrpt    5      1192.892 ±    684.845  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2449.442 ±   1412.932    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                             thrpt    5         0.075 ±      0.166  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.154 ±      0.342    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.count                                               thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.time                                                thrpt    5        37.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsJsoniter                                                        thrpt    5   2447846.108 ±  35847.305   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate                                         thrpt    5       485.413 ±      7.125  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                                    thrpt    5       312.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                                thrpt    5       463.786 ±    698.038  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                           thrpt    5       298.260 ±    450.893    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                            thrpt    5         0.025 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.016 ±      0.067    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count                                              thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time                                               thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsPlay                                                            thrpt    5    285930.440 ±  10660.567   ops/s
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate                                             thrpt    5      1054.031 ±     39.222  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm                                        thrpt    5      5800.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                                    thrpt    5      1070.816 ±    596.348  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5894.754 ±   3366.032    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                                thrpt    5         0.054 ±      0.185  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.300 ±      1.028    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.count                                                  thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.time                                                   thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce                                               thrpt    5    610082.811 ±  15935.524   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate                                thrpt    5      1408.264 ±     36.820  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm                           thrpt    5      3632.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space                       thrpt    5      1412.162 ±    550.588  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5      3643.918 ±   1514.265    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space                   thrpt    5         0.054 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.140 ±      0.184    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count                                     thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time                                      thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson                                             thrpt    5   1101860.789 ±  24110.886   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate                              thrpt    5       633.087 ±     13.904  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm                         thrpt    5       904.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space                     thrpt    5       650.284 ±     13.286  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5       928.570 ±     20.485    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space                 thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.071 ±      0.173    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count                                   thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time                                    thrpt    5        12.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter                                            thrpt    5   3460454.941 ± 217955.696   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate                             thrpt    5       263.924 ±     16.618  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm                        thrpt    5       120.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5       249.876 ±    552.328  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5       113.632 ±    252.670    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5         0.375 ±      3.052  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.169 ±      1.375    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count                                  thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time                                   thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay                                                thrpt    5    356907.587 ±   8470.302   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate                                 thrpt    5      1235.856 ±     29.477  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm                            thrpt    5      5448.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space                        thrpt    5      1276.418 ±    577.372  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5      5626.536 ±   2535.269    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space                    thrpt    5         0.042 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.183 ±      0.554    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count                                      thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time                                       thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce                                                    thrpt    5    348128.688 ±   6573.119   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate                                     thrpt    5       941.667 ±     17.822  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                                thrpt    5      4256.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                            thrpt    5       930.463 ±    561.663  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5      4205.152 ±   2532.273    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space                        thrpt    5         0.042 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.188 ±      0.573    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count                                          thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time                                           thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson                                                  thrpt    5    795068.557 ±  18023.277   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate                                   thrpt    5      1305.767 ±     29.585  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                              thrpt    5      2584.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space                          thrpt    5      1330.899 ±     50.846  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5      2633.854 ±    135.118    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space                      thrpt    5         0.046 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.091 ±      0.260    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count                                        thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time                                         thrpt    5        30.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter                                                 thrpt    5   2130062.329 ±  15977.189   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                                  thrpt    5       400.721 ±      3.039  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                             thrpt    5       296.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5       396.936 ±    569.070  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5       293.322 ±    422.624    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5         0.025 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.018 ±      0.065    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count                                       thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time                                        thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay                                                     thrpt    5    259321.089 ±   3643.474   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate                                      thrpt    5       992.834 ±     13.869  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                                 thrpt    5      6024.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                             thrpt    5      1001.690 ±     24.113  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5      6077.698 ±     74.440    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space                         thrpt    5         0.058 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.354 ±      0.942    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count                                           thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time                                            thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce                                                 thrpt    5    939793.360 ±  53886.205   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate                                  thrpt    5       611.656 ±     35.096  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate.norm                             thrpt    5      1024.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space                         thrpt    5       594.457 ±    566.742  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                    thrpt    5       995.632 ±    953.973    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space                     thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.084 ±      0.205    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.count                                       thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.time                                        thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson                                               thrpt    5   2059814.543 ±  55622.000   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate                                thrpt    5       848.287 ±     22.902  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate.norm                           thrpt    5       648.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space                       thrpt    5       859.399 ±    702.452  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5       657.104 ±    549.046    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.035 ±      0.028    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.count                                     thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.time                                      thrpt    5        15.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter                                              thrpt    5   2241855.302 ±  18969.913   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate                               thrpt    5       444.533 ±      3.842  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate.norm                          thrpt    5       312.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       397.120 ±    570.834  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       278.790 ±    401.935    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.017 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.012 ±      0.101    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.count                                    thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.time                                     thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc                                      thrpt    5   2427599.157 ±  20428.427   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate                       thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm                  thrpt    5        ≈ 10⁻⁴                 B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.count                            thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay                                                  thrpt    5   2050558.935 ±  51167.922   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate                                   thrpt    5       865.371 ±     21.554  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate.norm                              thrpt    5       664.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space                          thrpt    5       927.076 ±    570.397  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5       711.655 ±    444.866    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.038 ±      0.069    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.count                                        thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.time                                         thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesCirce                                                     thrpt    5    683378.391 ±  23811.393   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate                                      thrpt    5      1191.831 ±     41.465  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                                 thrpt    5      2744.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                             thrpt    5      1139.335 ±    708.244  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2625.193 ±   1691.379    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.054 ±      0.166  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.125 ±      0.385    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count                                           thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time                                            thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJackson                                                   thrpt    5   1625856.450 ±  36008.897   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate                                    thrpt    5       719.224 ±     15.940  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                               thrpt    5       696.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                           thrpt    5       721.545 ±    572.062  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5       698.038 ±    546.922    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.033 ±      0.108  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.032 ±      0.104    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count                                         thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time                                          thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter                                                  thrpt    5   4723901.032 ± 142387.667   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                                   thrpt    5       384.293 ±     11.613  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                              thrpt    5       128.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       331.162 ±      0.135  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       110.309 ±      3.329    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.021 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.007 ±      0.032    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count                                        thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time                                         thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc                                          thrpt    5   5066618.078 ± 105009.126   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate                           thrpt    5       154.566 ±      3.181  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space                  thrpt    5       153.524 ±    539.658  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm             thrpt    5        47.801 ±    168.030    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space              thrpt    5         0.008 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.003 ±      0.022    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count                                thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time                                 thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesPlay                                                      thrpt    5    217601.046 ±   5966.710   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate                                       thrpt    5      1108.606 ±     30.390  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                                  thrpt    5      8016.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1072.387 ±    579.393  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      7755.802 ±   4250.192    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.058 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.422 ±      0.863    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time                                             thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce                                                     thrpt    5      7920.125 ±    151.844   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate                                      thrpt    5       727.831 ±     14.181  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm                                 thrpt    5    144583.042 ±     84.061    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space                             thrpt    5       727.483 ±    581.297  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5    144425.546 ± 112778.805    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.053 ±      0.193  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5        10.567 ±     38.499    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count                                           thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time                                            thrpt    5        12.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson                                                   thrpt    5     35885.130 ±    816.387   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate                                    thrpt    5       458.436 ±     10.422  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm                               thrpt    5     20100.008 ±      0.353    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space                           thrpt    5       452.378 ±    681.247  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5     19851.143 ±  30099.499    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.025 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         1.098 ±      4.594    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count                                         thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time                                          thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter                                                  thrpt    5     50611.666 ±    930.096   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate                                   thrpt    5       327.081 ±      5.980  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm                              thrpt    5     10168.009 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       315.854 ±    129.113  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      9817.026 ±   3933.478    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.382 ±      3.031  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5        11.872 ±     94.139    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count                                        thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time                                         thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc                                          thrpt    5     61076.938 ±    610.929   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate                           thrpt    5         9.317 ±      0.092  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5       240.007 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count                                thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay                                                      thrpt    5      4312.917 ±     97.684   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate                                       thrpt    5       910.948 ±     20.692  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm                                  thrpt    5    332302.151 ±      1.744    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space                              thrpt    5       933.235 ±    573.472  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5    340629.022 ± 213656.681    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.035 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5        12.952 ±     38.321    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count                                            thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time                                             thrpt    5        20.000                   ms
[success] Total time: 1956 s, completed Dec 20, 2017 5:12:26 PM
