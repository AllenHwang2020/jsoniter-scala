[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt,release.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Dec 23, 2017 2:22:34 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}core...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 4 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:334:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:342:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] two warnings found
[info] Done compiling.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.3-SNAPSHOT.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.3-SNAPSHOT.jar ...
[info] Compiling 7 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:12:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "bd");
[info]       private def d1(in: JsonReader, default: Option[String]): Option[String] = {
[info]         val x = in.readString(null);
[info]         if (x.eq(null))
[info]           None
[info]         else
[info]           Some(x)
[info]       };
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         _bd = in.readBigDecimal(_bd);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       _os = d1(in, _os)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Option[String], out: JsonWriter): Unit = if (x.eq(null).||(x.isEmpty))
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           {
[info]             val v = x.os;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("os");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:13:52: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Arrays] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays): com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays, out: JsonWriter): Unit = e0(x, out);
[info]       private val v0: Array[Array[Int]] = new Array[Array[Int]](0);
[info]       private val v1: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private val v2: Array[Int] = new Array[Int](0);
[info]       private def d2(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Int](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   {
[info]                     val y = new Array[Int](i.<<(1));
[info]                     System.arraycopy(x, 0, y, 0, i);
[info]                     x = y
[info]                   }
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInt());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 {
[info]                   val y = new Array[Int](i);
[info]                   System.arraycopy(x, 0, y, 0, i);
[info]                   y
[info]                 }
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Array[Int]](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   {
[info]                     val y = new Array[Array[Int]](i.<<(1));
[info]                     System.arraycopy(x, 0, y, 0, i);
[info]                     x = y
[info]                   }
[info]                 else
[info]                   ();
[info]                 x.update(i, d2(in, v2));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 {
[info]                   val y = new Array[Array[Int]](i);
[info]                   System.arraycopy(x, 0, y, 0, i);
[info]                   y
[info]                 }
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigInt](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   {
[info]                     val y = new Array[scala.math.BigInt](i.<<(1));
[info]                     System.arraycopy(x, 0, y, 0, i);
[info]                     x = y
[info]                   }
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigInt(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 {
[info]                   val y = new Array[scala.math.BigInt](i);
[info]                   System.arraycopy(x, 0, y, 0, i);
[info]                   y
[info]                 }
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays): com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = if (in.isNextToken('{'))
[info]         {
[info]           var _aa: Array[Array[Int]] = v0;
[info]           var _a: Array[BigInt] = v1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3104 => if (in.isCharBufEqualsTo(l, "aa"))
[info]                       _aa = d1(in, _aa)
[info]                     else
[info]                       in.skip()
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       _a = d3(in, _a)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Arrays(aa = _aa, a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e2(x: Array[Int], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           val l = x.length;
[info]           var i = 0;
[info]           while (i.<(l)) 
[info]             {
[info]               out.writeComma();
[info]               out.writeVal(x(i));
[info]               i.+=(1)
[info]             }
[info]           ;
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: Array[Array[Int]], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           val l = x.length;
[info]           var i = 0;
[info]           while (i.<(l)) 
[info]             {
[info]               out.writeComma();
[info]               e2(x(i), out);
[info]               i.+=(1)
[info]             }
[info]           ;
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: Array[BigInt], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           val l = x.length;
[info]           var i = 0;
[info]           while (i.<(l)) 
[info]             {
[info]               out.writeComma();
[info]               out.writeVal(x(i));
[info]               i.+=(1)
[info]             }
[info]           ;
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.aa;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("aa");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.a;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("a");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = make[Arrays](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:14:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.BitSets] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets): com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = BitSet.newBuilder;
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               BitSet.empty;
[info]             do 
[info]               x.add(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets): com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = if (in.isNextToken('{'))
[info]         {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3153 => if (in.isCharBufEqualsTo(l, "bs"))
[info]                       _bs = d1(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 107902 => if (in.isCharBufEqualsTo(l, "mbs"))
[info]                       _mbs = d2(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             out.writeVal(x)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             out.writeVal(x)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.bs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("bs");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mbs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mbs");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = make[BitSets](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:15:62: Generated JSON codec for type 'Array[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[Array[Int]] {
[info]       def nullValue: Array[Int] = v0;
[info]       def decode(in: JsonReader, default: Array[Int]): Array[Int] = d0(in, default);
[info]       def encode(x: Array[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private val v0: Array[Int] = new Array[Int](0);
[info]       private def d0(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Int](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   {
[info]                     val y = new Array[Int](i.<<(1));
[info]                     System.arraycopy(x, 0, y, 0, i);
[info]                     x = y
[info]                   }
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInt());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 {
[info]                   val y = new Array[Int](i);
[info]                   System.arraycopy(x, 0, y, 0, i);
[info]                   y
[info]                 }
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def e0(x: Array[Int], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           val l = x.length;
[info]           var i = 0;
[info]           while (i.<(l)) 
[info]             {
[info]               out.writeComma();
[info]               out.writeVal(x(i));
[info]               i.+=(1)
[info]             }
[info]           ;
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intArrayCodec: JsonCodec[Array[Int]] = make[Array[Int]](CodecMakerConfig())
[info]                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:16:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Iterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables): com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Vector[String]): scala.collection.immutable.Vector[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.immutable.HashSet[Long]): scala.collection.immutable.HashSet[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = HashSet.newBuilder[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: List[scala.collection.immutable.HashSet[Long]]): List[scala.collection.immutable.HashSet[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[scala.collection.immutable.HashSet[Long]];
[info]             do 
[info]               x.+=(d4(in, HashSet.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables): com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.immutable.Vector[String] = Vector.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[scala.collection.immutable.HashSet[Long]] = List.empty[scala.collection.immutable.HashSet[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 3463 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.Vector[String], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             out.writeVal(x)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             out.writeVal(x)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: scala.collection.immutable.HashSet[Long], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             out.writeVal(x)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: List[scala.collection.immutable.HashSet[Long]], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             e4(x, out)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = make[Iterables](CodecMakerConfig())
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:46: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Maps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Maps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Maps): com.github.plokhotnyuk.jsoniter_scala.macros.Maps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Maps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[String, Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[Long, Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), d3(in, HashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Maps): com.github.plokhotnyuk.jsoniter_scala.macros.Maps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Maps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.HashMap[String,Double], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           x.foreach(((kv) => {
[info]             out.writeKey(kv._1);
[info]             out.writeVal(kv._2)
[info]           }));
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: scala.collection.immutable.HashMap[Long,Double], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           x.foreach(((kv) => {
[info]             out.writeKey(kv._1);
[info]             out.writeVal(kv._2)
[info]           }));
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           x.foreach(((kv) => {
[info]             out.writeKey(kv._1);
[info]             e3(kv._2, out)
[info]           }));
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Maps, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = make[Maps](CodecMakerConfig())
[info]                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:81: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "i");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val missingReqFieldCodec: JsonCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:82: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[String]): scala.collection.mutable.ArrayBuffer[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               ArrayBuffer.empty[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.TreeSet[Int]): scala.collection.mutable.TreeSet[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               TreeSet.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.mutable.Set[Long]): scala.collection.mutable.Set[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Set.empty[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]]): scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = ResizableArray.newBuilder[scala.collection.mutable.Set[Long]];
[info]             do 
[info]               x.+=(d4(in, Set.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.mutable.ArrayBuffer[String] = ArrayBuffer.empty[String];
[info]           var _s: scala.collection.mutable.TreeSet[Int] = TreeSet.empty[Int];
[info]           var _ls: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = ResizableArray.empty[scala.collection.mutable.Set[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 3463 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.ArrayBuffer[String], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             out.writeVal(x)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.mutable.TreeSet[Int], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             out.writeVal(x)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: scala.collection.mutable.Set[Long], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             out.writeVal(x)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             e4(x, out)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableIterablesCodec: JsonCodec[MutableIterables] = make[MutableIterables](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               HashMap.empty[String, Double];
[info]             do 
[info]               x.update(in.readKeyAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               OpenHashMap.empty[Long, Double];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               x.update(in.readKeyAsInt(), d3(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.HashMap[String,Double], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           x.foreach(((kv) => {
[info]             out.writeKey(kv._1);
[info]             out.writeVal(kv._2)
[info]           }));
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: scala.collection.mutable.OpenHashMap[Long,Double], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           x.foreach(((kv) => {
[info]             out.writeKey(kv._1);
[info]             out.writeVal(kv._2)
[info]           }));
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           x.foreach(((kv) => {
[info]             out.writeKey(kv._1);
[info]             e3(kv._2, out)
[info]           }));
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = make[MutableMaps](CodecMakerConfig())
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:76: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = LongMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               x.update(in.readKeyAsLong(), d3(in, LongMap.empty[Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.IntMap[Double], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           x.foreach(((kv) => {
[info]             out.writeKey(kv._1);
[info]             out.writeVal(kv._2)
[info]           }));
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: scala.collection.immutable.LongMap[Double], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           x.foreach(((kv) => {
[info]             out.writeKey(kv._1);
[info]             out.writeVal(kv._2)
[info]           }));
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           x.foreach(((kv) => {
[info]             out.writeKey(kv._1);
[info]             e3(kv._2, out)
[info]           }));
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = make[IntAndLongMaps](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:64: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var req0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readByte();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readShort();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         _bl = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         _ch = in.readChar();
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         _dbl = in.readDouble();
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         _f = in.readFloat();
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:73: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "l");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:51: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("a");
[info]       private val r1: Array[String] = Array("b");
[info]       private val r2: Array[String] = Array("l", "r");
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         _a = in.readInt();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readString(_b);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]           else
[info]             in.requiredKeyError(r1, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = d0(in, _l);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         _r = d0(in, _r);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]           else
[info]             in.requiredKeyError(r2, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           {
[info]             in.scanToKey("type");
[info]             val l = in.readStringAsCharBuf();
[info]             (in.charBufToHashCode(l): @switch) match {
[info]               case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d1(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d2(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d3(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case _ => in.discriminatorValueError("type")
[info]             }
[info]           }
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("A")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("a");
[info]             out.writeVal(x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("B")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("C")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             e0(x.l, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("r");
[info]             e0(x.r, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]         case null => out.writeNull()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val adtCodec: JsonCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:52: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[String] {
[info]       def nullValue: String = null;
[info]       def decode(in: JsonReader, default: String): String = in.readString(default);
[info]       def encode(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonCodec[String] = make[String](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:75: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("status");
[info]       private val r1: Array[String] = Array("distance", "duration", "status");
[info]       private val r2: Array[String] = Array("text", "value");
[info]       private def d1(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         _value = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]           else
[info]             in.requiredKeyError(r2, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         _distance = d6(in, _distance);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         _duration = d6(in, _duration);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]           else
[info]             in.requiredKeyError(r1, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       _elements = d4(in, _elements)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: Seq[String] = Seq.empty[String];
[info]           var _origin_addresses: Seq[String] = Seq.empty[String];
[info]           var _rows: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       _destination_addresses = d1(in, _destination_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       _origin_addresses = d1(in, _origin_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       _rows = d2(in, _rows)
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Seq[String], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             out.writeVal(x)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("value");
[info]             out.writeVal(x.value)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("distance");
[info]             e6(x.distance, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("duration");
[info]             e6(x.duration, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             e5(x, out)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.elements;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("elements");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             e3(x, out)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.destination_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("destination_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.origin_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("origin_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.rows;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("rows");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val googleMapsAPICodec: JsonCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:27:64: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decode(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encode(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private val r4: Array[String] = Array("url", "description");
[info]       private val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]           else
[info]             in.requiredKeyError(r1, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         _expanded_url = in.readString(_expanded_url);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         _display_url = in.readString(_display_url);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]           else
[info]             in.requiredKeyError(r2, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       _hashtags = d3(in, _hashtags)
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       _symbols = d3(in, _symbols)
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       _user_mentions = d4(in, _user_mentions)
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d9(in: JsonReader, default: Option[String]): Option[String] = {
[info]         val x = in.readString(null);
[info]         if (x.eq(null))
[info]           None
[info]         else
[info]           Some(x)
[info]       };
[info]       private def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = d12(in, _url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = d12(in, _description);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]           else
[info]             in.requiredKeyError(r4, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var req0 = -1;
[info]           var req1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         _location = in.readString(_location);
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = in.readString(_description);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d11(in, _entities);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         _protected = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         _followers_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         _friends_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         _listed_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         _favourites_count = in.readInt();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         _utc_offset = in.readInt();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         _time_zone = in.readString(_time_zone);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         _geo_enabled = in.readBoolean();
[info]                         req0.&=(-65537)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         _verified = in.readBoolean();
[info]                         req0.&=(-131073)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         _statuses_count = in.readInt();
[info]                         req0.&=(-262145)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-524289)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         _contributors_enabled = in.readBoolean();
[info]                         req0.&=(-1048577)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         _is_translator = in.readBoolean();
[info]                         req0.&=(-2097153)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         _is_translation_enabled = in.readBoolean();
[info]                         req0.&=(-4194305)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         _profile_background_color = in.readString(_profile_background_color);
[info]                         req0.&=(-8388609)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url);
[info]                         req0.&=(-16777217)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https);
[info]                         req0.&=(-33554433)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         _profile_background_tile = in.readBoolean();
[info]                         req0.&=(-67108865)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         _profile_image_url = in.readString(_profile_image_url);
[info]                         req0.&=(-134217729)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https);
[info]                         req0.&=(-268435457)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         _profile_banner_url = in.readString(_profile_banner_url);
[info]                         req0.&=(-536870913)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         _profile_link_color = in.readString(_profile_link_color);
[info]                         req0.&=(-1073741825)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color);
[info]                         req0.&=(2147483647)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color);
[info]                         req1.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         _profile_text_color = in.readString(_profile_text_color);
[info]                         req1.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         _profile_use_background_image = in.readBoolean();
[info]                         req1.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         _has_extended_profile = in.readBoolean();
[info]                         req1.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         _default_profile = in.readBoolean();
[info]                         req1.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         _default_profile_image = in.readBoolean();
[info]                         req1.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         _following = in.readBoolean();
[info]                         req1.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         _follow_request_sent = in.readBoolean();
[info]                         req1.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         _notifications = in.readBoolean();
[info]                         req1.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         _translator_type = in.readString(_translator_type);
[info]                         req1.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0).&&(req1.==(0)))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]           else
[info]             in.requiredKeyError(r3, Array(req0, req1))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 32767;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d10(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = d9(in, _geo)
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = d9(in, _coordinates)
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = d9(in, _place)
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = d9(in, _contributors)
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredKeyError(r5, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 65535;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d10(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = d9(in, _geo)
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = d9(in, _coordinates)
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = d9(in, _place)
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = d9(in, _contributors)
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         _retweeted_status = d13(in, _retweeted_status);
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def e3(x: Seq[String], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             out.writeVal(x)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e6(x: Seq[Int], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             out.writeVal(x)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             e5(x, out)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("expanded_url");
[info]             out.writeVal(x.expanded_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("display_url");
[info]             out.writeVal(x.display_url)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             e8(x, out)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.hashtags;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("hashtags");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.symbols;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("symbols");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.user_mentions;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("user_mentions");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e9(x: Option[String], out: JsonWriter): Unit = if (x.eq(null).||(x.isEmpty))
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             e12(x.url, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("description");
[info]             e12(x.description, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("location");
[info]             out.writeVal(x.location)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("description");
[info]             out.writeVal(x.description)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e11(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("protected");
[info]             out.writeVal(x.`protected`)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("followers_count");
[info]             out.writeVal(x.followers_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("friends_count");
[info]             out.writeVal(x.friends_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("listed_count");
[info]             out.writeVal(x.listed_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favourites_count");
[info]             out.writeVal(x.favourites_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("utc_offset");
[info]             out.writeVal(x.utc_offset)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("time_zone");
[info]             out.writeVal(x.time_zone)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("geo_enabled");
[info]             out.writeVal(x.geo_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("verified");
[info]             out.writeVal(x.verified)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("statuses_count");
[info]             out.writeVal(x.statuses_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("contributors_enabled");
[info]             out.writeVal(x.contributors_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_translator");
[info]             out.writeVal(x.is_translator)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]             out.writeVal(x.is_translation_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_color");
[info]             out.writeVal(x.profile_background_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]             out.writeVal(x.profile_background_image_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]             out.writeVal(x.profile_background_image_url_https)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_tile");
[info]             out.writeVal(x.profile_background_tile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_image_url");
[info]             out.writeVal(x.profile_image_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]             out.writeVal(x.profile_image_url_https)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_banner_url");
[info]             out.writeVal(x.profile_banner_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_link_color");
[info]             out.writeVal(x.profile_link_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]             out.writeVal(x.profile_sidebar_border_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]             out.writeVal(x.profile_sidebar_fill_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_text_color");
[info]             out.writeVal(x.profile_text_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]             out.writeVal(x.profile_use_background_image)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("has_extended_profile");
[info]             out.writeVal(x.has_extended_profile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("default_profile");
[info]             out.writeVal(x.default_profile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("default_profile_image");
[info]             out.writeVal(x.default_profile_image)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("following");
[info]             out.writeVal(x.following)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("follow_request_sent");
[info]             out.writeVal(x.follow_request_sent)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("notifications");
[info]             out.writeVal(x.notifications)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("translator_type");
[info]             out.writeVal(x.translator_type)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted_status");
[info]             e13(x.retweeted_status, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeArrayStart();
[info]           x.foreach(((x) => {
[info]             out.writeComma();
[info]             e1(x, out)
[info]           }));
[info]           out.writeArrayEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val twitterAPICodec: JsonCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:14:18: local val v1 in value arraysFormat is never used
[warn]     implicit val v1: Format[Array[BigInt]] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:20:18: local val v1 in value bitSetsFormat is never used
[warn]     implicit val v1: Reads[BitSet] = Reads[BitSet](js => JsSuccess(BitSet(js.as[Array[Int]]: _*)))
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:21:18: local val v2 in value bitSetsFormat is never used
[warn]     implicit val v2: Reads[mutable.BitSet] =
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:28:18: local val v1 in value mapsFormat is never used
[warn]     implicit val v1: OFormat[HashMap[String, Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:31:18: local val v2 in value mapsFormat is never used
[warn]     implicit val v2: OFormat[Map[Int, HashMap[Long, Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:18: local val v1 in value mutableMapsFormat is never used
[warn]     implicit val v1: OFormat[mutable.HashMap[String, Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:46:18: local val v2 in value mutableMapsFormat is never used
[warn]     implicit val v2: OFormat[mutable.Map[Int, mutable.OpenHashMap[Long, Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:63:18: local val v1 in value intAndLongMapsFormat is never used
[warn]     implicit val v1: OFormat[IntMap[Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:68:18: local val v2 in value intAndLongMapsFormat is never used
[warn]     implicit val v2: OFormat[mutable.LongMap[LongMap[Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:80:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:87:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:88:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:89:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:94:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:95:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:96:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:108:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:109:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:111:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] 19 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.3-SNAPSHOT.jar ...
Processing 296 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Done packaging.
[info] Compiling 132 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.3-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.3-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecMakerBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce
[info] # Run progress: 0.00% complete, ETA 00:21:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 982461.548 ops/s
[info] # Warmup Iteration   2: 1394491.164 ops/s
[info] # Warmup Iteration   3: 1420068.231 ops/s
[info] # Warmup Iteration   4: 1408850.751 ops/s
[info] # Warmup Iteration   5: 1420119.220 ops/s
[info] Iteration   1: 1406257.706 ops/s
[info]                  ·gc.alloc.rate:                   2373.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              2656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2368.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2650.323 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 1423795.534 ops/s
[info]                  ·gc.alloc.rate:                   2403.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              2656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2376.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2625.748 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1393459.938 ops/s
[info]                  ·gc.alloc.rate:                   2352.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              2656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2378.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2685.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   4: 1421373.615 ops/s
[info]                  ·gc.alloc.rate:                   2399.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              2656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2383.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2638.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1409625.211 ops/s
[info]                  ·gc.alloc.rate:                   2379.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              2656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2383.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2660.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce":
[info]   1410902.401 ±(99.9%) 47290.984 ops/s [Average]
[info]   (min, avg, max) = (1393459.938, 1410902.401, 1423795.534), stdev = 12281.318
[info]   CI (99.9%): [1363611.417, 1458193.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate":
[info]   2381.676 ±(99.9%) 79.892 MB/sec [Average]
[info]   (min, avg, max) = (2352.254, 2381.676, 2403.424), stdev = 20.748
[info]   CI (99.9%): [2301.784, 2461.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm":
[info]   2656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2656.000, 2656.000, 2656.000), stdev = 0.001
[info]   CI (99.9%): [2656.000, 2656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space":
[info]   2378.110 ±(99.9%) 23.762 MB/sec [Average]
[info]   (min, avg, max) = (2368.679, 2378.110, 2383.562), stdev = 6.171
[info]   CI (99.9%): [2354.347, 2401.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2652.175 ±(99.9%) 88.217 B/op [Average]
[info]   (min, avg, max) = (2625.748, 2652.175, 2685.936), stdev = 22.910
[info]   CI (99.9%): [2563.958, 2740.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.193 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.096, 0.167), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.107 ±(99.9%) 0.214 B/op [Average]
[info]   (min, avg, max) = (0.047, 0.107, 0.184), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time":
[info]   66.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 13.200, 21.000), stdev = 6.140
[info]   CI (99.9%): [66.000, 66.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson
[info] # Run progress: 0.78% complete, ETA 00:33:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 56121.331 ops/s
[info] # Warmup Iteration   2: 194904.297 ops/s
[info] # Warmup Iteration   3: 194158.792 ops/s
[info] # Warmup Iteration   4: 197857.179 ops/s
[info] # Warmup Iteration   5: 199525.509 ops/s
[info] Iteration   1: 199223.393 ops/s
[info]                  ·gc.alloc.rate:                   477.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              3768.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5123.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.822 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 200460.637 ops/s
[info]                  ·gc.alloc.rate:               480.107 MB/sec
[info]                  ·gc.alloc.rate.norm:          3768.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2547.131 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 199775.542 ops/s
[info]                  ·gc.alloc.rate:                   478.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              3768.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5116.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.492 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 199986.315 ops/s
[info]                  ·gc.alloc.rate:               478.964 MB/sec
[info]                  ·gc.alloc.rate.norm:          3768.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2560.993 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 199762.592 ops/s
[info]                  ·gc.alloc.rate:                   478.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              3768.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5138.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson":
[info]   199841.696 ±(99.9%) 1718.759 ops/s [Average]
[info]   (min, avg, max) = (199223.393, 199841.696, 200460.637), stdev = 446.356
[info]   CI (99.9%): [198122.937, 201560.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate":
[info]   478.607 ±(99.9%) 4.139 MB/sec [Average]
[info]   (min, avg, max) = (477.134, 478.607, 480.107), stdev = 1.075
[info]   CI (99.9%): [474.468, 482.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm":
[info]   3768.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3768.002, 3768.002, 3768.002), stdev = 0.001
[info]   CI (99.9%): [3768.002, 3768.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space":
[info]   520.183 ±(99.9%) 685.970 MB/sec [Average]
[info]   (min, avg, max) = (324.547, 520.183, 652.358), stdev = 178.144
[info]   CI (99.9%): [≈ 0, 1206.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm":
[info]   4097.327 ±(99.9%) 5424.909 B/op [Average]
[info]   (min, avg, max) = (2547.131, 4097.327, 5138.277), stdev = 1408.832
[info]   CI (99.9%): [≈ 0, 9522.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.296 ±(99.9%) 1.372 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.296, 0.822), stdev = 0.356
[info]   CI (99.9%): [≈ 0, 1.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.400, 7.000), stdev = 2.793
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter
[info] # Run progress: 1.56% complete, ETA 00:33:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 428680.580 ops/s
[info] # Warmup Iteration   2: 440457.291 ops/s
[info] # Warmup Iteration   3: 454802.281 ops/s
[info] # Warmup Iteration   4: 450024.119 ops/s
[info] # Warmup Iteration   5: 455811.007 ops/s
[info] Iteration   1: 455853.096 ops/s
[info]                  ·gc.alloc.rate:                   412.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              1424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1143.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 448671.158 ops/s
[info]                  ·gc.alloc.rate:               406.843 MB/sec
[info]                  ·gc.alloc.rate.norm:          1424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2308.938 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 454610.443 ops/s
[info]                  ·gc.alloc.rate:                   411.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              1424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1146.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 438725.902 ops/s
[info]                  ·gc.alloc.rate:                   397.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              1424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1187.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 440850.152 ops/s
[info]                  ·gc.alloc.rate:               398.978 MB/sec
[info]                  ·gc.alloc.rate.norm:          1424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1181.964 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter":
[info]   447742.150 ±(99.9%) 29989.095 ops/s [Average]
[info]   (min, avg, max) = (438725.902, 447742.150, 455853.096), stdev = 7788.073
[info]   CI (99.9%): [417753.055, 477731.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate":
[info]   405.368 ±(99.9%) 27.238 MB/sec [Average]
[info]   (min, avg, max) = (397.057, 405.368, 412.535), stdev = 7.074
[info]   CI (99.9%): [378.130, 432.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm":
[info]   1424.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1424.001, 1424.001, 1424.001), stdev = 0.001
[info]   CI (99.9%): [1424.001, 1424.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space":
[info]   396.865 ±(99.9%) 565.716 MB/sec [Average]
[info]   (min, avg, max) = (331.151, 396.865, 659.673), stdev = 146.915
[info]   CI (99.9%): [≈ 0, 962.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1393.579 ±(99.9%) 1971.919 B/op [Average]
[info]   (min, avg, max) = (1143.076, 1393.579, 2308.938), stdev = 512.101
[info]   CI (99.9%): [≈ 0, 3365.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.073 ±(99.9%) 0.283 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.073, 0.149), stdev = 0.073
[info]   CI (99.9%): [≈ 0, 0.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 7.000), stdev = 2.828
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless
[info] # Run progress: 2.34% complete, ETA 00:33:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1642990.768 ops/s
[info] # Warmup Iteration   2: 1688410.486 ops/s
[info] # Warmup Iteration   3: 1649107.502 ops/s
[info] # Warmup Iteration   4: 1667569.032 ops/s
[info] # Warmup Iteration   5: 1642540.035 ops/s
[info] Iteration   1: 1640627.406 ops/s
[info]                  ·gc.alloc.rate:                   976.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              936.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     957.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1667629.706 ops/s
[info]                  ·gc.alloc.rate:                   992.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              936.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     945.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1657387.786 ops/s
[info]                  ·gc.alloc.rate:                   985.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              936.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     954.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1657690.363 ops/s
[info]                  ·gc.alloc.rate:                   986.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              936.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     956.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1655704.839 ops/s
[info]                  ·gc.alloc.rate:               984.964 MB/sec
[info]                  ·gc.alloc.rate.norm:          936.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1010.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 960.604 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless":
[info]   1655808.020 ±(99.9%) 37345.927 ops/s [Average]
[info]   (min, avg, max) = (1640627.406, 1655808.020, 1667629.706), stdev = 9698.619
[info]   CI (99.9%): [1618462.093, 1693153.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate":
[info]   985.030 ±(99.9%) 22.189 MB/sec [Average]
[info]   (min, avg, max) = (976.019, 985.030, 992.067), stdev = 5.763
[info]   CI (99.9%): [962.841, 1007.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm":
[info]   936.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (936.000, 936.000, 936.000), stdev = 0.001
[info]   CI (99.9%): [936.000, 936.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   1004.856 ±(99.9%) 18.647 MB/sec [Average]
[info]   (min, avg, max) = (998.535, 1004.856, 1010.855), stdev = 4.843
[info]   CI (99.9%): [986.210, 1023.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   954.858 ±(99.9%) 22.464 B/op [Average]
[info]   (min, avg, max) = (945.254, 954.858, 960.604), stdev = 5.834
[info]   CI (99.9%): [932.394, 977.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.051 ±(99.9%) 0.149 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.051, 0.080), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 7.000), stdev = 1.483
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump
[info] # Run progress: 3.13% complete, ETA 00:32:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2469845.969 ops/s
[info] # Warmup Iteration   2: 2550785.174 ops/s
[info] # Warmup Iteration   3: 2584086.408 ops/s
[info] # Warmup Iteration   4: 2590187.946 ops/s
[info] # Warmup Iteration   5: 2573627.997 ops/s
[info] Iteration   1: 2601398.819 ops/s
[info]                  ·gc.alloc.rate:      304.194 MB/sec
[info]                  ·gc.alloc.rate.norm: 184.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2590163.007 ops/s
[info]                  ·gc.alloc.rate:                   302.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     201.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.784 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.084 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2596827.279 ops/s
[info]                  ·gc.alloc.rate:                   303.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     200.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2614898.983 ops/s
[info]                  ·gc.alloc.rate:               305.814 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 199.275 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 2348439.064 ops/s
[info]                  ·gc.alloc.rate:                   274.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump":
[info]   2550345.430 ±(99.9%) 436015.471 ops/s [Average]
[info]   (min, avg, max) = (2348439.064, 2550345.430, 2614898.983), stdev = 113231.833
[info]   CI (99.9%): [2114329.959, 2986360.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   298.254 ±(99.9%) 50.972 MB/sec [Average]
[info]   (min, avg, max) = (274.651, 298.254, 305.814), stdev = 13.237
[info]   CI (99.9%): [247.282, 349.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   184.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (184.000, 184.000, 184.000), stdev = 0.001
[info]   CI (99.9%): [184.000, 184.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   264.958 ±(99.9%) 570.342 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 264.958, 331.204), stdev = 148.116
[info]   CI (99.9%): [≈ 0, 835.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   164.600 ±(99.9%) 356.135 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 164.600, 221.886), stdev = 92.487
[info]   CI (99.9%): [≈ 0, 520.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.378 ±(99.9%) 3.030 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.378, 1.784), stdev = 0.787
[info]   CI (99.9%): [≈ 0, 3.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.230 ±(99.9%) 1.840 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.230, 1.084), stdev = 0.478
[info]   CI (99.9%): [≈ 0, 2.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 11.000), stdev = 4.637
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay
[info] # Run progress: 3.91% complete, ETA 00:32:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17265.649 ops/s
[info] # Warmup Iteration   2: 121409.816 ops/s
[info] # Warmup Iteration   3: 123643.001 ops/s
[info] # Warmup Iteration   4: 127230.763 ops/s
[info] # Warmup Iteration   5: 124451.327 ops/s
[info] Iteration   1: 126067.129 ops/s
[info]                  ·gc.alloc.rate:                   1051.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12403.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.079 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 125975.898 ops/s
[info]                  ·gc.alloc.rate:                   1051.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12483.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.520 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 124231.067 ops/s
[info]                  ·gc.alloc.rate:                   1036.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12700.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 124869.139 ops/s
[info]                  ·gc.alloc.rate:                   1041.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12690.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 125832.317 ops/s
[info]                  ·gc.alloc.rate:                   1049.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12627.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.521 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay":
[info]   125395.110 ±(99.9%) 3111.475 ops/s [Average]
[info]   (min, avg, max) = (124231.067, 125395.110, 126067.129), stdev = 808.040
[info]   CI (99.9%): [122283.635, 128506.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate":
[info]   1046.250 ±(99.9%) 26.039 MB/sec [Average]
[info]   (min, avg, max) = (1036.504, 1046.250, 1051.852), stdev = 6.762
[info]   CI (99.9%): [1020.211, 1072.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm":
[info]   13128.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13128.003, 13128.003, 13128.004), stdev = 0.001
[info]   CI (99.9%): [13128.003, 13128.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space":
[info]   1002.635 ±(99.9%) 24.340 MB/sec [Average]
[info]   (min, avg, max) = (993.838, 1002.635, 1009.870), stdev = 6.321
[info]   CI (99.9%): [978.294, 1026.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm":
[info]   12581.294 ±(99.9%) 507.291 B/op [Average]
[info]   (min, avg, max) = (12403.943, 12581.294, 12700.959), stdev = 131.742
[info]   CI (99.9%): [12074.003, 13088.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.237 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.167), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.729 ±(99.9%) 2.948 B/op [Average]
[info]   (min, avg, max) = (0.262, 0.729, 2.079), stdev = 0.766
[info]   CI (99.9%): [≈ 0, 3.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce
[info] # Run progress: 4.69% complete, ETA 00:32:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 365777.208 ops/s
[info] # Warmup Iteration   2: 554944.211 ops/s
[info] # Warmup Iteration   3: 570197.182 ops/s
[info] # Warmup Iteration   4: 569290.963 ops/s
[info] # Warmup Iteration   5: 578658.538 ops/s
[info] Iteration   1: 575048.392 ops/s
[info]                  ·gc.alloc.rate:                   1514.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1670.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4570.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.228 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 579416.634 ops/s
[info]                  ·gc.alloc.rate:                   1526.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.442 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3647.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.226 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 581937.512 ops/s
[info]                  ·gc.alloc.rate:                   1532.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4559.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 584515.221 ops/s
[info]                  ·gc.alloc.rate:                   1539.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3642.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.112 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 581760.720 ops/s
[info]                  ·gc.alloc.rate:                   1532.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4584.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce":
[info]   580535.696 ±(99.9%) 13704.343 ops/s [Average]
[info]   (min, avg, max) = (575048.392, 580535.696, 584515.221), stdev = 3558.974
[info]   CI (99.9%): [566831.353, 594240.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate":
[info]   1529.050 ±(99.9%) 36.166 MB/sec [Average]
[info]   (min, avg, max) = (1514.538, 1529.050, 1539.532), stdev = 9.392
[info]   CI (99.9%): [1492.885, 1565.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm":
[info]   4144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4144.001, 4144.001, 4144.001), stdev = 0.001
[info]   CI (99.9%): [4144.001, 4144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space":
[info]   1549.846 ±(99.9%) 708.986 MB/sec [Average]
[info]   (min, avg, max) = (1343.442, 1549.846, 1695.272), stdev = 184.121
[info]   CI (99.9%): [840.860, 2258.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4201.282 ±(99.9%) 1954.222 B/op [Average]
[info]   (min, avg, max) = (3642.994, 4201.282, 4584.813), stdev = 507.505
[info]   CI (99.9%): [2247.061, 6155.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.158 ±(99.9%) 0.242 B/op [Average]
[info]   (min, avg, max) = (0.112, 0.158, 0.228), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 11.000), stdev = 2.191
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson
[info] # Run progress: 5.47% complete, ETA 00:32:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 528746.531 ops/s
[info] # Warmup Iteration   2: 1059751.923 ops/s
[info] # Warmup Iteration   3: 1063968.519 ops/s
[info] # Warmup Iteration   4: 1080607.492 ops/s
[info] # Warmup Iteration   5: 1062976.845 ops/s
[info] Iteration   1: 1066790.004 ops/s
[info]                  ·gc.alloc.rate:                   759.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     960.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1064736.897 ops/s
[info]                  ·gc.alloc.rate:                   757.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     963.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1068148.050 ops/s
[info]                  ·gc.alloc.rate:                   760.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1449.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1070317.050 ops/s
[info]                  ·gc.alloc.rate:                   761.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     968.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1065218.443 ops/s
[info]                  ·gc.alloc.rate:                   758.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     977.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson":
[info]   1067042.089 ±(99.9%) 8749.452 ops/s [Average]
[info]   (min, avg, max) = (1064736.897, 1067042.089, 1070317.050), stdev = 2272.205
[info]   CI (99.9%): [1058292.637, 1075791.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate":
[info]   759.579 ±(99.9%) 6.285 MB/sec [Average]
[info]   (min, avg, max) = (757.941, 759.579, 761.942), stdev = 1.632
[info]   CI (99.9%): [753.295, 765.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space":
[info]   721.597 ±(99.9%) 564.837 MB/sec [Average]
[info]   (min, avg, max) = (651.032, 721.597, 983.876), stdev = 146.686
[info]   CI (99.9%): [156.761, 1286.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1063.898 ±(99.9%) 829.851 B/op [Average]
[info]   (min, avg, max) = (960.174, 1063.898, 1449.242), stdev = 215.510
[info]   CI (99.9%): [234.046, 1893.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.061 ±(99.9%) 0.083 B/op [Average]
[info]   (min, avg, max) = (0.031, 0.061, 0.092), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.168
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter
[info] # Run progress: 6.25% complete, ETA 00:31:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1419195.001 ops/s
[info] # Warmup Iteration   2: 1663905.787 ops/s
[info] # Warmup Iteration   3: 2558474.324 ops/s
[info] # Warmup Iteration   4: 2591035.067 ops/s
[info] # Warmup Iteration   5: 2592261.950 ops/s
[info] Iteration   1: 2584942.120 ops/s
[info]                  ·gc.alloc.rate:               170.842 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 155.738 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 2597518.092 ops/s
[info]                  ·gc.alloc.rate:               171.690 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 154.992 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 2586507.807 ops/s
[info]                  ·gc.alloc.rate:                   170.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2607879.225 ops/s
[info]                  ·gc.alloc.rate:      172.382 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2590725.541 ops/s
[info]                  ·gc.alloc.rate:               171.245 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 155.403 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter":
[info]   2593514.557 ±(99.9%) 36159.771 ops/s [Average]
[info]   (min, avg, max) = (2584942.120, 2593514.557, 2607879.225), stdev = 9390.578
[info]   CI (99.9%): [2557354.786, 2629674.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate":
[info]   171.422 ±(99.9%) 2.420 MB/sec [Average]
[info]   (min, avg, max) = (170.842, 171.422, 172.382), stdev = 0.629
[info]   CI (99.9%): [169.002, 173.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm":
[info]   104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (104.000, 104.000, 104.000), stdev = 0.001
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   204.688 ±(99.9%) 440.606 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.688, 255.884), stdev = 114.424
[info]   CI (99.9%): [≈ 0, 645.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   124.356 ±(99.9%) 267.689 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 124.356, 155.738), stdev = 69.518
[info]   CI (99.9%): [≈ 0, 392.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.009 ±(99.9%) 0.076 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.044), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.046 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.027), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 4.000), stdev = 1.517
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay
[info] # Run progress: 7.03% complete, ETA 00:31:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31682.558 ops/s
[info] # Warmup Iteration   2: 130903.359 ops/s
[info] # Warmup Iteration   3: 131764.910 ops/s
[info] # Warmup Iteration   4: 134751.943 ops/s
[info] # Warmup Iteration   5: 134625.386 ops/s
[info] Iteration   1: 134418.278 ops/s
[info]                  ·gc.alloc.rate:                   1118.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11655.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.219 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 133766.859 ops/s
[info]                  ·gc.alloc.rate:                   1112.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15706.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.735 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 133903.160 ops/s
[info]                  ·gc.alloc.rate:                   1113.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11818.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.489 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 134242.229 ops/s
[info]                  ·gc.alloc.rate:                   1116.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11828.306 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.244 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 133442.696 ops/s
[info]                  ·gc.alloc.rate:                   1110.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15906.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.246 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay":
[info]   133954.644 ±(99.9%) 1488.445 ops/s [Average]
[info]   (min, avg, max) = (133442.696, 133954.644, 134418.278), stdev = 386.544
[info]   CI (99.9%): [132466.200, 135443.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate":
[info]   1114.282 ±(99.9%) 12.300 MB/sec [Average]
[info]   (min, avg, max) = (1110.057, 1114.282, 1118.095), stdev = 3.194
[info]   CI (99.9%): [1101.981, 1126.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm":
[info]   13088.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13088.003, 13088.003, 13088.003), stdev = 0.001
[info]   CI (99.9%): [13088.003, 13088.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space":
[info]   1139.036 ±(99.9%) 714.657 MB/sec [Average]
[info]   (min, avg, max) = (995.735, 1139.036, 1349.102), stdev = 185.594
[info]   CI (99.9%): [424.378, 1853.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   13383.064 ±(99.9%) 8526.720 B/op [Average]
[info]   (min, avg, max) = (11655.697, 13383.064, 15906.443), stdev = 2214.362
[info]   CI (99.9%): [4856.344, 21909.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.586 ±(99.9%) 1.569 B/op [Average]
[info]   (min, avg, max) = (0.244, 0.586, 1.219), stdev = 0.408
[info]   CI (99.9%): [≈ 0, 2.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 10.000), stdev = 2.588
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce
[info] # Run progress: 7.81% complete, ETA 00:31:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 736152.630 ops/s
[info] # Warmup Iteration   2: 1158199.721 ops/s
[info] # Warmup Iteration   3: 1205117.884 ops/s
[info] # Warmup Iteration   4: 1226802.689 ops/s
[info] # Warmup Iteration   5: 1229752.009 ops/s
[info] Iteration   1: 1235166.994 ops/s
[info]                  ·gc.alloc.rate:                   1928.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2571.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1244252.171 ops/s
[info]                  ·gc.alloc.rate:                   1942.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2564.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 1217851.030 ops/s
[info]                  ·gc.alloc.rate:                   1901.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2189.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1224260.970 ops/s
[info]                  ·gc.alloc.rate:                   1911.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2618.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 1245443.873 ops/s
[info]                  ·gc.alloc.rate:                   1944.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2576.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce":
[info]   1233395.008 ±(99.9%) 46814.986 ops/s [Average]
[info]   (min, avg, max) = (1217851.030, 1233395.008, 1245443.873), stdev = 12157.703
[info]   CI (99.9%): [1186580.021, 1280209.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1925.308 ±(99.9%) 72.869 MB/sec [Average]
[info]   (min, avg, max) = (1901.105, 1925.308, 1944.006), stdev = 18.924
[info]   CI (99.9%): [1852.440, 1998.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2456.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2456.000, 2456.000, 2456.000), stdev = 0.001
[info]   CI (99.9%): [2456.000, 2456.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1963.629 ±(99.9%) 580.075 MB/sec [Average]
[info]   (min, avg, max) = (1694.571, 1963.629, 2039.543), stdev = 150.644
[info]   CI (99.9%): [1383.553, 2543.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2503.995 ±(99.9%) 682.606 B/op [Average]
[info]   (min, avg, max) = (2189.184, 2503.995, 2618.783), stdev = 177.271
[info]   CI (99.9%): [1821.389, 3186.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.058 ±(99.9%) 0.110 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.058, 0.105), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.000, 15.000), stdev = 2.550
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson
[info] # Run progress: 8.59% complete, ETA 00:31:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 971470.993 ops/s
[info] # Warmup Iteration   2: 1877269.455 ops/s
[info] # Warmup Iteration   3: 1931127.493 ops/s
[info] # Warmup Iteration   4: 1885445.966 ops/s
[info] # Warmup Iteration   5: 1924152.860 ops/s
[info] Iteration   1: 1895969.456 ops/s
[info]                  ·gc.alloc.rate:                   1330.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1098.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1946373.899 ops/s
[info]                  ·gc.alloc.rate:                   1365.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.349 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1077.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1907781.259 ops/s
[info]                  ·gc.alloc.rate:                   1338.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1105.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1910333.895 ops/s
[info]                  ·gc.alloc.rate:                   1340.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1108.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1900623.943 ops/s
[info]                  ·gc.alloc.rate:                   1333.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1118.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson":
[info]   1912216.490 ±(99.9%) 76730.718 ops/s [Average]
[info]   (min, avg, max) = (1895969.456, 1912216.490, 1946373.899), stdev = 19926.724
[info]   CI (99.9%): [1835485.773, 1988947.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1341.710 ±(99.9%) 53.808 MB/sec [Average]
[info]   (min, avg, max) = (1330.263, 1341.710, 1365.652), stdev = 13.974
[info]   CI (99.9%): [1287.902, 1395.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1338.763 ±(99.9%) 41.619 MB/sec [Average]
[info]   (min, avg, max) = (1323.215, 1338.763, 1350.665), stdev = 10.808
[info]   CI (99.9%): [1297.143, 1380.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1101.677 ±(99.9%) 58.148 B/op [Average]
[info]   (min, avg, max) = (1077.886, 1101.677, 1118.124), stdev = 15.101
[info]   CI (99.9%): [1043.529, 1159.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.051 ±(99.9%) 0.091 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.051, 0.084), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 10.000), stdev = 1.225
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter
[info] # Run progress: 9.38% complete, ETA 00:30:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5599817.342 ops/s
[info] # Warmup Iteration   2: 5815240.354 ops/s
[info] # Warmup Iteration   3: 5968870.358 ops/s
[info] # Warmup Iteration   4: 5958993.229 ops/s
[info] # Warmup Iteration   5: 6000133.030 ops/s
[info] Iteration   1: 5974432.996 ops/s
[info]                  ·gc.alloc.rate:                   759.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     261.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 6069965.469 ops/s
[info]                  ·gc.alloc.rate:                   771.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     172.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 5999103.982 ops/s
[info]                  ·gc.alloc.rate:                   762.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 5983781.067 ops/s
[info]                  ·gc.alloc.rate:                   760.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     175.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 5914438.422 ops/s
[info]                  ·gc.alloc.rate:                   751.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     267.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter":
[info]   5988344.387 ±(99.9%) 214862.932 ops/s [Average]
[info]   (min, avg, max) = (5914438.422, 5988344.387, 6069965.469), stdev = 55799.221
[info]   CI (99.9%): [5773481.455, 6203207.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   761.188 ±(99.9%) 27.480 MB/sec [Average]
[info]   (min, avg, max) = (751.730, 761.188, 771.623), stdev = 7.136
[info]   CI (99.9%): [733.708, 788.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   799.190 ±(99.9%) 702.413 MB/sec [Average]
[info]   (min, avg, max) = (664.385, 799.190, 1003.772), stdev = 182.414
[info]   CI (99.9%): [96.777, 1501.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   210.262 ±(99.9%) 190.632 B/op [Average]
[info]   (min, avg, max) = (172.205, 210.262, 267.057), stdev = 49.507
[info]   CI (99.9%): [19.630, 400.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.011, 0.016), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 9.000), stdev = 3.317
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay
[info] # Run progress: 10.16% complete, ETA 00:30:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 113524.331 ops/s
[info] # Warmup Iteration   2: 447697.773 ops/s
[info] # Warmup Iteration   3: 446776.536 ops/s
[info] # Warmup Iteration   4: 447770.371 ops/s
[info] # Warmup Iteration   5: 446669.934 ops/s
[info] Iteration   1: 451787.994 ops/s
[info]                  ·gc.alloc.rate:                   1155.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              4024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3473.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 452875.030 ops/s
[info]                  ·gc.alloc.rate:                   1158.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              4024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4646.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 450810.895 ops/s
[info]                  ·gc.alloc.rate:                   1152.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              4024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3515.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 453640.437 ops/s
[info]                  ·gc.alloc.rate:                   1160.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              4024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3502.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 451177.534 ops/s
[info]                  ·gc.alloc.rate:                   1153.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              4024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4707.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay":
[info]   452058.378 ±(99.9%) 4545.978 ops/s [Average]
[info]   (min, avg, max) = (450810.895, 452058.378, 453640.437), stdev = 1180.576
[info]   CI (99.9%): [447512.401, 456604.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1156.210 ±(99.9%) 11.670 MB/sec [Average]
[info]   (min, avg, max) = (1152.976, 1156.210, 1160.280), stdev = 3.031
[info]   CI (99.9%): [1144.541, 1167.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4024.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4024.001, 4024.001, 4024.001), stdev = 0.001
[info]   CI (99.9%): [4024.001, 4024.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1140.457 ±(99.9%) 715.146 MB/sec [Average]
[info]   (min, avg, max) = (997.562, 1140.457, 1350.139), stdev = 185.721
[info]   CI (99.9%): [425.311, 1855.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   3969.229 ±(99.9%) 2490.605 B/op [Average]
[info]   (min, avg, max) = (3473.912, 3969.229, 4707.991), stdev = 646.802
[info]   CI (99.9%): [1478.624, 6459.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.044 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.044, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.152 ±(99.9%) 0.425 B/op [Average]
[info]   (min, avg, max) = (0.072, 0.152, 0.291), stdev = 0.110
[info]   CI (99.9%): [≈ 0, 0.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 11.000), stdev = 3.271
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce
[info] # Run progress: 10.94% complete, ETA 00:30:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 402892.685 ops/s
[info] # Warmup Iteration   2: 623620.314 ops/s
[info] # Warmup Iteration   3: 629303.898 ops/s
[info] # Warmup Iteration   4: 620861.486 ops/s
[info] # Warmup Iteration   5: 613026.244 ops/s
[info] Iteration   1: 607069.751 ops/s
[info]                  ·gc.alloc.rate:                   1978.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5240.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 618604.161 ops/s
[info]                  ·gc.alloc.rate:                   2016.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5163.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 609890.346 ops/s
[info]                  ·gc.alloc.rate:                   1987.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5250.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 612699.178 ops/s
[info]                  ·gc.alloc.rate:                   1996.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5235.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 616046.322 ops/s
[info]                  ·gc.alloc.rate:                   2007.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2041.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5212.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce":
[info]   612861.952 ±(99.9%) 17804.775 ops/s [Average]
[info]   (min, avg, max) = (607069.751, 612861.952, 618604.161), stdev = 4623.843
[info]   CI (99.9%): [595057.177, 630666.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   1997.462 ±(99.9%) 58.045 MB/sec [Average]
[info]   (min, avg, max) = (1978.608, 1997.462, 2016.247), stdev = 15.074
[info]   CI (99.9%): [1939.417, 2055.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5128.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5128.001, 5128.001, 5128.001), stdev = 0.001
[info]   CI (99.9%): [5128.001, 5128.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2033.521 ±(99.9%) 29.277 MB/sec [Average]
[info]   (min, avg, max) = (2022.081, 2033.521, 2041.028), stdev = 7.603
[info]   CI (99.9%): [2004.244, 2062.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5220.757 ±(99.9%) 134.592 B/op [Average]
[info]   (min, avg, max) = (5163.391, 5220.757, 5250.899), stdev = 34.953
[info]   CI (99.9%): [5086.165, 5355.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.075, 0.104), stdev = 0.019
[info]   CI (99.9%): [0.003, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.192 ±(99.9%) 0.181 B/op [Average]
[info]   (min, avg, max) = (0.160, 0.192, 0.265), stdev = 0.047
[info]   CI (99.9%): [0.011, 0.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.800, 16.000), stdev = 3.347
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson
[info] # Run progress: 11.72% complete, ETA 00:29:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 529788.466 ops/s
[info] # Warmup Iteration   2: 1110016.332 ops/s
[info] # Warmup Iteration   3: 1144149.918 ops/s
[info] # Warmup Iteration   4: 1144135.080 ops/s
[info] # Warmup Iteration   5: 1158470.616 ops/s
[info] Iteration   1: 1167193.980 ops/s
[info]                  ·gc.alloc.rate:                   1097.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1328.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1156130.322 ops/s
[info]                  ·gc.alloc.rate:                   1087.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1348.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1136524.294 ops/s
[info]                  ·gc.alloc.rate:                   1069.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1839.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1132816.032 ops/s
[info]                  ·gc.alloc.rate:                   1065.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1392.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1149601.116 ops/s
[info]                  ·gc.alloc.rate:                   1081.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1376.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson":
[info]   1148453.149 ±(99.9%) 54398.185 ops/s [Average]
[info]   (min, avg, max) = (1132816.032, 1148453.149, 1167193.980), stdev = 14127.036
[info]   CI (99.9%): [1094054.964, 1202851.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1080.291 ±(99.9%) 51.295 MB/sec [Average]
[info]   (min, avg, max) = (1065.534, 1080.291, 1097.954), stdev = 13.321
[info]   CI (99.9%): [1028.996, 1131.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1062.675 ±(99.9%) 573.405 MB/sec [Average]
[info]   (min, avg, max) = (985.917, 1062.675, 1328.653), stdev = 148.912
[info]   CI (99.9%): [489.270, 1636.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1457.067 ±(99.9%) 828.394 B/op [Average]
[info]   (min, avg, max) = (1328.979, 1457.067, 1839.387), stdev = 215.131
[info]   CI (99.9%): [628.673, 2285.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.063 ±(99.9%) 0.143 B/op [Average]
[info]   (min, avg, max) = (0.028, 0.063, 0.113), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 12.000), stdev = 3.564
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter
[info] # Run progress: 12.50% complete, ETA 00:29:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3895294.559 ops/s
[info] # Warmup Iteration   2: 4452071.543 ops/s
[info] # Warmup Iteration   3: 4408925.294 ops/s
[info] # Warmup Iteration   4: 4425304.265 ops/s
[info] # Warmup Iteration   5: 4471089.258 ops/s
[info] Iteration   1: 4519910.390 ops/s
[info]                  ·gc.alloc.rate:                   1470.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     583.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 4452969.880 ops/s
[info]                  ·gc.alloc.rate:                   1449.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     475.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 4438007.882 ops/s
[info]                  ·gc.alloc.rate:                   1444.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     478.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 4448915.610 ops/s
[info]                  ·gc.alloc.rate:                   1447.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     478.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 4504427.126 ops/s
[info]                  ·gc.alloc.rate:                   1465.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     592.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter":
[info]   4472846.178 ±(99.9%) 141401.005 ops/s [Average]
[info]   (min, avg, max) = (4438007.882, 4472846.178, 4519910.390), stdev = 36721.392
[info]   CI (99.9%): [4331445.173, 4614247.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1455.519 ±(99.9%) 46.202 MB/sec [Average]
[info]   (min, avg, max) = (1444.131, 1455.519, 1470.866), stdev = 11.998
[info]   CI (99.9%): [1409.317, 1501.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1484.890 ±(99.9%) 708.402 MB/sec [Average]
[info]   (min, avg, max) = (1346.957, 1484.890, 1695.665), stdev = 183.970
[info]   CI (99.9%): [776.489, 2193.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   521.947 ±(99.9%) 232.472 B/op [Average]
[info]   (min, avg, max) = (475.941, 521.947, 592.260), stdev = 60.372
[info]   CI (99.9%): [289.475, 754.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.021, 0.030), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 11.000), stdev = 2.074
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay
[info] # Run progress: 13.28% complete, ETA 00:29:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43677.750 ops/s
[info] # Warmup Iteration   2: 225496.193 ops/s
[info] # Warmup Iteration   3: 223058.688 ops/s
[info] # Warmup Iteration   4: 229778.756 ops/s
[info] # Warmup Iteration   5: 226935.370 ops/s
[info] Iteration   1: 226308.056 ops/s
[info]                  ·gc.alloc.rate:                   1386.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1670.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11612.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.290 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 227442.738 ops/s
[info]                  ·gc.alloc.rate:                   1393.546 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9293.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.432 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 228658.493 ops/s
[info]                  ·gc.alloc.rate:                   1400.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9275.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.287 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 224159.103 ops/s
[info]                  ·gc.alloc.rate:                   1373.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9489.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   5: 228338.677 ops/s
[info]                  ·gc.alloc.rate:                   1399.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9334.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.287 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay":
[info]   226981.414 ±(99.9%) 7017.905 ops/s [Average]
[info]   (min, avg, max) = (224159.103, 226981.414, 228658.493), stdev = 1822.528
[info]   CI (99.9%): [219963.509, 233999.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1390.672 ±(99.9%) 43.057 MB/sec [Average]
[info]   (min, avg, max) = (1373.303, 1390.672, 1400.873), stdev = 11.182
[info]   CI (99.9%): [1347.615, 1433.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9640.002, 9640.002, 9640.002), stdev = 0.001
[info]   CI (99.9%): [9640.002, 9640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1413.642 ±(99.9%) 552.680 MB/sec [Average]
[info]   (min, avg, max) = (1343.398, 1413.642, 1670.282), stdev = 143.529
[info]   CI (99.9%): [860.962, 1966.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9801.047 ±(99.9%) 3911.937 B/op [Average]
[info]   (min, avg, max) = (9275.782, 9801.047, 11612.083), stdev = 1015.918
[info]   CI (99.9%): [5889.110, 13712.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.046, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.010, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.318 ±(99.9%) 0.247 B/op [Average]
[info]   (min, avg, max) = (0.287, 0.318, 0.432), stdev = 0.064
[info]   CI (99.9%): [0.071, 0.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 11.200, 21.000), stdev = 6.648
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce
[info] # Run progress: 14.06% complete, ETA 00:29:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 247789.741 ops/s
[info] # Warmup Iteration   2: 281724.218 ops/s
[info] # Warmup Iteration   3: 277797.672 ops/s
[info] # Warmup Iteration   4: 284899.617 ops/s
[info] # Warmup Iteration   5: 283674.558 ops/s
[info] Iteration   1: 281140.617 ops/s
[info]                  ·gc.alloc.rate:                   1096.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              6136.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7441.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 289325.419 ops/s
[info]                  ·gc.alloc.rate:                   1128.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              6136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5446.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.453 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 288225.377 ops/s
[info]                  ·gc.alloc.rate:                   1124.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              6136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5487.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 287056.692 ops/s
[info]                  ·gc.alloc.rate:                   1119.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              6136.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7370.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.342 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 288136.233 ops/s
[info]                  ·gc.alloc.rate:                   1123.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              6136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5525.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce":
[info]   286776.867 ±(99.9%) 12520.041 ops/s [Average]
[info]   (min, avg, max) = (281140.617, 286776.867, 289325.419), stdev = 3251.415
[info]   CI (99.9%): [274256.827, 299296.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate":
[info]   1118.391 ±(99.9%) 48.892 MB/sec [Average]
[info]   (min, avg, max) = (1096.374, 1118.391, 1128.308), stdev = 12.697
[info]   CI (99.9%): [1069.499, 1167.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate.norm":
[info]   6136.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6136.001, 6136.002, 6136.002), stdev = 0.001
[info]   CI (99.9%): [6136.001, 6136.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   1138.562 ±(99.9%) 698.476 MB/sec [Average]
[info]   (min, avg, max) = (1001.496, 1138.562, 1344.631), stdev = 181.392
[info]   CI (99.9%): [440.086, 1837.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   6254.029 ±(99.9%) 4051.186 B/op [Average]
[info]   (min, avg, max) = (5446.367, 6254.029, 7441.562), stdev = 1052.080
[info]   CI (99.9%): [2202.842, 10305.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.251 ±(99.9%) 0.568 B/op [Average]
[info]   (min, avg, max) = (0.114, 0.251, 0.453), stdev = 0.148
[info]   CI (99.9%): [≈ 0, 0.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 7.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson
[info] # Run progress: 14.84% complete, ETA 00:28:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 477027.162 ops/s
[info] # Warmup Iteration   2: 719888.356 ops/s
[info] # Warmup Iteration   3: 744305.260 ops/s
[info] # Warmup Iteration   4: 737990.534 ops/s
[info] # Warmup Iteration   5: 739390.101 ops/s
[info] Iteration   1: 729496.077 ops/s
[info]                  ·gc.alloc.rate:                   1528.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              3296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2875.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 738182.288 ops/s
[info]                  ·gc.alloc.rate:                   1546.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              3296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3572.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.178 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 737282.618 ops/s
[info]                  ·gc.alloc.rate:                   1544.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              3296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3596.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 731068.465 ops/s
[info]                  ·gc.alloc.rate:                   1531.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              3296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2911.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 740004.900 ops/s
[info]                  ·gc.alloc.rate:                   1550.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              3296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3602.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson":
[info]   735206.870 ±(99.9%) 17846.653 ops/s [Average]
[info]   (min, avg, max) = (729496.077, 735206.870, 740004.900), stdev = 4634.719
[info]   CI (99.9%): [717360.216, 753053.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate":
[info]   1540.080 ±(99.9%) 37.258 MB/sec [Average]
[info]   (min, avg, max) = (1528.127, 1540.080, 1550.099), stdev = 9.676
[info]   CI (99.9%): [1502.822, 1577.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate.norm":
[info]   3296.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3296.001, 3296.001, 3296.001), stdev = 0.001
[info]   CI (99.9%): [3296.001, 3296.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   1548.315 ±(99.9%) 722.650 MB/sec [Average]
[info]   (min, avg, max) = (1333.306, 1548.315, 1694.446), stdev = 187.670
[info]   CI (99.9%): [825.665, 2270.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3311.753 ±(99.9%) 1471.687 B/op [Average]
[info]   (min, avg, max) = (2875.792, 3311.753, 3602.928), stdev = 382.192
[info]   CI (99.9%): [1840.065, 4783.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.075, 0.083), stdev = 0.011
[info]   CI (99.9%): [0.031, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.160 ±(99.9%) 0.093 B/op [Average]
[info]   (min, avg, max) = (0.133, 0.160, 0.179), stdev = 0.024
[info]   CI (99.9%): [0.068, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 12.000), stdev = 3.033
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter
[info] # Run progress: 15.63% complete, ETA 00:28:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 763407.046 ops/s
[info] # Warmup Iteration   2: 785075.211 ops/s
[info] # Warmup Iteration   3: 803624.443 ops/s
[info] # Warmup Iteration   4: 792589.440 ops/s
[info] # Warmup Iteration   5: 807273.975 ops/s
[info] Iteration   1: 809935.863 ops/s
[info]                  ·gc.alloc.rate:                   1363.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2601.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 810537.392 ops/s
[info]                  ·gc.alloc.rate:                   1364.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2609.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 808953.572 ops/s
[info]                  ·gc.alloc.rate:                   1361.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2623.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 816515.086 ops/s
[info]                  ·gc.alloc.rate:                   1374.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2606.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 808315.216 ops/s
[info]                  ·gc.alloc.rate:                   1360.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2638.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter":
[info]   810851.426 ±(99.9%) 12632.245 ops/s [Average]
[info]   (min, avg, max) = (808315.216, 810851.426, 816515.086), stdev = 3280.554
[info]   CI (99.9%): [798219.181, 823483.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate":
[info]   1364.670 ±(99.9%) 21.233 MB/sec [Average]
[info]   (min, avg, max) = (1360.455, 1364.670, 1374.197), stdev = 5.514
[info]   CI (99.9%): [1343.437, 1385.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   2648.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2648.001, 2648.001, 2648.001), stdev = 0.001
[info]   CI (99.9%): [2648.000, 2648.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   1348.174 ±(99.9%) 24.796 MB/sec [Average]
[info]   (min, avg, max) = (1339.269, 1348.174, 1355.382), stdev = 6.439
[info]   CI (99.9%): [1323.378, 1372.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   2616.018 ±(99.9%) 57.311 B/op [Average]
[info]   (min, avg, max) = (2601.531, 2616.018, 2638.126), stdev = 14.884
[info]   CI (99.9%): [2558.706, 2673.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.129 ±(99.9%) 0.170 B/op [Average]
[info]   (min, avg, max) = (0.081, 0.129, 0.162), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 3.362
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson
[info] # Run progress: 16.41% complete, ETA 00:28:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 765012.163 ops/s
[info] # Warmup Iteration   2: 1540042.258 ops/s
[info] # Warmup Iteration   3: 1582771.845 ops/s
[info] # Warmup Iteration   4: 1591697.107 ops/s
[info] # Warmup Iteration   5: 1584379.426 ops/s
[info] Iteration   1: 1579895.979 ops/s
[info]                  ·gc.alloc.rate:                   1004.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     977.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1589389.910 ops/s
[info]                  ·gc.alloc.rate:                   1010.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     977.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1590500.065 ops/s
[info]                  ·gc.alloc.rate:                   1010.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     982.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1586547.810 ops/s
[info]                  ·gc.alloc.rate:                   1008.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     989.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1587340.069 ops/s
[info]                  ·gc.alloc.rate:                   1008.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     993.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson":
[info]   1586734.767 ±(99.9%) 15922.962 ops/s [Average]
[info]   (min, avg, max) = (1579895.979, 1586734.767, 1590500.065), stdev = 4135.143
[info]   CI (99.9%): [1570811.805, 1602657.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1008.493 ±(99.9%) 10.091 MB/sec [Average]
[info]   (min, avg, max) = (1004.168, 1008.493, 1010.872), stdev = 2.621
[info]   CI (99.9%): [998.402, 1018.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1000.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1000.000, 1000.000, 1000.000), stdev = 0.001
[info]   CI (99.9%): [1000.000, 1000.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   992.398 ±(99.9%) 31.325 MB/sec [Average]
[info]   (min, avg, max) = (981.222, 992.398, 1001.830), stdev = 8.135
[info]   CI (99.9%): [961.073, 1023.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   984.037 ±(99.9%) 27.185 B/op [Average]
[info]   (min, avg, max) = (977.150, 984.037, 993.040), stdev = 7.060
[info]   CI (99.9%): [956.852, 1011.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.062 ±(99.9%) 0.126 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.103), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.600, 12.000), stdev = 2.074
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter
[info] # Run progress: 17.19% complete, ETA 00:28:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4309498.960 ops/s
[info] # Warmup Iteration   2: 3579926.499 ops/s
[info] # Warmup Iteration   3: 3596475.516 ops/s
[info] # Warmup Iteration   4: 3628083.428 ops/s
[info] # Warmup Iteration   5: 3620601.069 ops/s
[info] Iteration   1: 3609789.447 ops/s
[info]                  ·gc.alloc.rate:               477.184 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 144.348 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 3582102.709 ops/s
[info]                  ·gc.alloc.rate:               473.555 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 145.459 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3554706.829 ops/s
[info]                  ·gc.alloc.rate:                   469.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     293.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3630470.823 ops/s
[info]                  ·gc.alloc.rate:               479.986 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 143.530 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 3618855.374 ops/s
[info]                  ·gc.alloc.rate:                   478.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     288.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter":
[info]   3599185.036 ±(99.9%) 117874.572 ops/s [Average]
[info]   (min, avg, max) = (3554706.829, 3599185.036, 3630470.823), stdev = 30611.652
[info]   CI (99.9%): [3481310.464, 3717059.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   475.805 ±(99.9%) 15.617 MB/sec [Average]
[info]   (min, avg, max) = (469.915, 475.805, 479.986), stdev = 4.056
[info]   CI (99.9%): [460.188, 491.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   463.911 ±(99.9%) 699.862 MB/sec [Average]
[info]   (min, avg, max) = (331.157, 463.911, 663.675), stdev = 181.752
[info]   CI (99.9%): [≈ 0, 1163.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   203.015 ±(99.9%) 308.896 B/op [Average]
[info]   (min, avg, max) = (143.530, 203.015, 293.176), stdev = 80.219
[info]   CI (99.9%): [≈ 0, 511.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.061 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.037), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 5.000), stdev = 1.789
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay
[info] # Run progress: 17.97% complete, ETA 00:27:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51705.996 ops/s
[info] # Warmup Iteration   2: 281697.921 ops/s
[info] # Warmup Iteration   3: 284913.658 ops/s
[info] # Warmup Iteration   4: 285004.187 ops/s
[info] # Warmup Iteration   5: 284970.554 ops/s
[info] Iteration   1: 284867.640 ops/s
[info]                  ·gc.alloc.rate:                   1302.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7364.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.230 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 285174.290 ops/s
[info]                  ·gc.alloc.rate:                   1303.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7396.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.230 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 287717.933 ops/s
[info]                  ·gc.alloc.rate:                   1315.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7360.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 286185.283 ops/s
[info]                  ·gc.alloc.rate:                   1308.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7422.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 287448.524 ops/s
[info]                  ·gc.alloc.rate:                   1313.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7407.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.228 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay":
[info]   286278.734 ±(99.9%) 4968.456 ops/s [Average]
[info]   (min, avg, max) = (284867.640, 286278.734, 287717.933), stdev = 1290.292
[info]   CI (99.9%): [281310.278, 291247.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1308.586 ±(99.9%) 22.625 MB/sec [Average]
[info]   (min, avg, max) = (1302.192, 1308.586, 1315.177), stdev = 5.876
[info]   CI (99.9%): [1285.961, 1331.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7192.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7192.002, 7192.002, 7192.002), stdev = 0.001
[info]   CI (99.9%): [7192.001, 7192.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1344.644 ±(99.9%) 30.224 MB/sec [Average]
[info]   (min, avg, max) = (1333.417, 1344.644, 1353.232), stdev = 7.849
[info]   CI (99.9%): [1314.420, 1374.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7390.175 ±(99.9%) 104.044 B/op [Average]
[info]   (min, avg, max) = (7360.218, 7390.175, 7422.159), stdev = 27.020
[info]   CI (99.9%): [7286.131, 7494.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.183 ±(99.9%) 0.243 B/op [Average]
[info]   (min, avg, max) = (0.114, 0.183, 0.230), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 11.000), stdev = 1.643
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce
[info] # Run progress: 18.75% complete, ETA 00:27:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 381910.711 ops/s
[info] # Warmup Iteration   2: 550408.916 ops/s
[info] # Warmup Iteration   3: 573878.543 ops/s
[info] # Warmup Iteration   4: 563849.735 ops/s
[info] # Warmup Iteration   5: 568786.991 ops/s
[info] Iteration   1: 573137.538 ops/s
[info]                  ·gc.alloc.rate:                   1902.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4620.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 555498.536 ops/s
[info]                  ·gc.alloc.rate:                   1844.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5743.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 565110.680 ops/s
[info]                  ·gc.alloc.rate:                   1876.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4717.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.116 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 566601.921 ops/s
[info]                  ·gc.alloc.rate:                   1881.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5658.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.231 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 568177.846 ops/s
[info]                  ·gc.alloc.rate:                   1886.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4705.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce":
[info]   565705.304 ±(99.9%) 24857.329 ops/s [Average]
[info]   (min, avg, max) = (555498.536, 565705.304, 573137.538), stdev = 6455.369
[info]   CI (99.9%): [540847.975, 590562.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1878.264 ±(99.9%) 82.605 MB/sec [Average]
[info]   (min, avg, max) = (1844.294, 1878.264, 1902.889), stdev = 21.452
[info]   CI (99.9%): [1795.659, 1960.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1828.413 ±(99.9%) 718.456 MB/sec [Average]
[info]   (min, avg, max) = (1683.056, 1828.413, 2037.738), stdev = 186.581
[info]   CI (99.9%): [1109.956, 2546.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5089.020 ±(99.9%) 2158.408 B/op [Average]
[info]   (min, avg, max) = (4620.494, 5089.020, 5743.186), stdev = 560.532
[info]   CI (99.9%): [2930.613, 7247.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.139 ±(99.9%) 0.256 B/op [Average]
[info]   (min, avg, max) = (0.058, 0.139, 0.231), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.600, 16.000), stdev = 5.079
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson
[info] # Run progress: 19.53% complete, ETA 00:27:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 312176.929 ops/s
[info] # Warmup Iteration   2: 702213.661 ops/s
[info] # Warmup Iteration   3: 707870.626 ops/s
[info] # Warmup Iteration   4: 714531.469 ops/s
[info] # Warmup Iteration   5: 711502.350 ops/s
[info] Iteration   1: 715290.946 ops/s
[info]                  ·gc.alloc.rate:                   887.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2153.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 717416.525 ops/s
[info]                  ·gc.alloc.rate:                   890.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.393 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1439.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.228 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 713579.203 ops/s
[info]                  ·gc.alloc.rate:                   885.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2181.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 703787.260 ops/s
[info]                  ·gc.alloc.rate:                   873.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2221.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 714517.078 ops/s
[info]                  ·gc.alloc.rate:                   886.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1465.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson":
[info]   712918.203 ±(99.9%) 20396.808 ops/s [Average]
[info]   (min, avg, max) = (703787.260, 712918.203, 717416.525), stdev = 5296.986
[info]   CI (99.9%): [692521.394, 733315.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   884.497 ±(99.9%) 25.466 MB/sec [Average]
[info]   (min, avg, max) = (873.092, 884.497, 890.088), stdev = 6.613
[info]   CI (99.9%): [859.031, 909.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   856.894 ±(99.9%) 688.726 MB/sec [Average]
[info]   (min, avg, max) = (656.393, 856.894, 993.483), stdev = 178.860
[info]   CI (99.9%): [168.168, 1545.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1892.472 ±(99.9%) 1549.026 B/op [Average]
[info]   (min, avg, max) = (1439.496, 1892.472, 2221.162), stdev = 402.277
[info]   CI (99.9%): [343.447, 3441.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.128 ±(99.9%) 0.288 B/op [Average]
[info]   (min, avg, max) = (0.047, 0.128, 0.228), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 8.000), stdev = 1.924
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 20.31% complete, ETA 00:27:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4073428.120 ops/s
[info] # Warmup Iteration   2: 4136667.762 ops/s
[info] # Warmup Iteration   3: 4284525.268 ops/s
[info] # Warmup Iteration   4: 4283914.496 ops/s
[info] # Warmup Iteration   5: 4306177.806 ops/s
[info] Iteration   1: 4125775.912 ops/s
[info]                  ·gc.alloc.rate:                   188.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97.583 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4266192.940 ops/s
[info]                  ·gc.alloc.rate:               195.217 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 94.371 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 4289501.289 ops/s
[info]                  ·gc.alloc.rate:                   196.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4310695.460 ops/s
[info]                  ·gc.alloc.rate:      197.265 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4273070.966 ops/s
[info]                  ·gc.alloc.rate:                   195.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.815 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.668 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter":
[info]   4253047.313 ±(99.9%) 281807.982 ops/s [Average]
[info]   (min, avg, max) = (4125775.912, 4253047.313, 4310695.460), stdev = 73184.638
[info]   CI (99.9%): [3971239.331, 4534855.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   194.621 ±(99.9%) 12.883 MB/sec [Average]
[info]   (min, avg, max) = (188.806, 194.621, 197.265), stdev = 3.346
[info]   CI (99.9%): [181.739, 207.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   219.694 ±(99.9%) 489.135 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 219.694, 330.820), stdev = 127.027
[info]   CI (99.9%): [≈ 0, 708.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   81.526 ±(99.9%) 181.072 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 81.526, 121.819), stdev = 47.024
[info]   CI (99.9%): [≈ 0, 262.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.375 ±(99.9%) 3.100 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.375, 1.815), stdev = 0.805
[info]   CI (99.9%): [≈ 0, 3.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.138 ±(99.9%) 1.141 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.138, 0.668), stdev = 0.296
[info]   CI (99.9%): [≈ 0, 1.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.800, 4.000), stdev = 1.643
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay
[info] # Run progress: 21.09% complete, ETA 00:26:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32282.200 ops/s
[info] # Warmup Iteration   2: 205616.949 ops/s
[info] # Warmup Iteration   3: 208546.554 ops/s
[info] # Warmup Iteration   4: 212153.421 ops/s
[info] # Warmup Iteration   5: 211822.836 ops/s
[info] Iteration   1: 210201.682 ops/s
[info]                  ·gc.alloc.rate:                   1154.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9950.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 215746.542 ops/s
[info]                  ·gc.alloc.rate:                   1184.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7310.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 209416.838 ops/s
[info]                  ·gc.alloc.rate:                   1149.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10082.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.782 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 212718.518 ops/s
[info]                  ·gc.alloc.rate:                   1168.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7469.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 210186.559 ops/s
[info]                  ·gc.alloc.rate:                   1154.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10105.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.312 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay":
[info]   211654.028 ±(99.9%) 10031.944 ops/s [Average]
[info]   (min, avg, max) = (209416.838, 211654.028, 215746.542), stdev = 2605.264
[info]   CI (99.9%): [201622.083, 221685.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1162.263 ±(99.9%) 54.981 MB/sec [Average]
[info]   (min, avg, max) = (1149.972, 1162.263, 1184.681), stdev = 14.278
[info]   CI (99.9%): [1107.282, 1217.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8640.002, 8640.002, 8640.002), stdev = 0.001
[info]   CI (99.9%): [8640.002, 8640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1206.745 ±(99.9%) 705.790 MB/sec [Average]
[info]   (min, avg, max) = (1002.412, 1206.745, 1350.076), stdev = 183.291
[info]   CI (99.9%): [500.955, 1912.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8983.848 ±(99.9%) 5610.938 B/op [Average]
[info]   (min, avg, max) = (7310.697, 8983.848, 10105.963), stdev = 1457.143
[info]   CI (99.9%): [3372.910, 14594.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.065 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.065, 0.135), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.483 ±(99.9%) 1.513 B/op [Average]
[info]   (min, avg, max) = (0.152, 0.483, 1.013), stdev = 0.393
[info]   CI (99.9%): [≈ 0, 1.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 12.000), stdev = 3.209
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce
[info] # Run progress: 21.88% complete, ETA 00:26:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3363.848 ops/s
[info] # Warmup Iteration   2: 5176.129 ops/s
[info] # Warmup Iteration   3: 5491.667 ops/s
[info] # Warmup Iteration   4: 5379.109 ops/s
[info] # Warmup Iteration   5: 5456.591 ops/s
[info] Iteration   1: 5433.297 ops/s
[info]                  ·gc.alloc.rate:                   1398.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     386342.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.029 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 5363.389 ops/s
[info]                  ·gc.alloc.rate:                   1380.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     393240.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.092 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.912 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 5431.809 ops/s
[info]                  ·gc.alloc.rate:                   1398.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     389862.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.094 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 5481.142 ops/s
[info]                  ·gc.alloc.rate:                   1411.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     387525.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.955 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 5377.610 ops/s
[info]                  ·gc.alloc.rate:                   1384.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     395920.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 42.643 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce":
[info]   5417.449 ±(99.9%) 182.892 ops/s [Average]
[info]   (min, avg, max) = (5363.389, 5417.449, 5481.142), stdev = 47.497
[info]   CI (99.9%): [5234.557, 5600.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1394.593 ±(99.9%) 47.171 MB/sec [Average]
[info]   (min, avg, max) = (1380.653, 1394.593, 1411.017), stdev = 12.250
[info]   CI (99.9%): [1347.422, 1441.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   405000.080 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (405000.079, 405000.080, 405000.081), stdev = 0.001
[info]   CI (99.9%): [405000.077, 405000.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   1344.853 ±(99.9%) 29.228 MB/sec [Average]
[info]   (min, avg, max) = (1334.277, 1344.853, 1353.278), stdev = 7.590
[info]   CI (99.9%): [1315.625, 1374.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   390578.441 ±(99.9%) 15330.153 B/op [Average]
[info]   (min, avg, max) = (386342.859, 390578.441, 395920.776), stdev = 3981.192
[info]   CI (99.9%): [375248.288, 405908.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.072 ±(99.9%) 0.187 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.072, 0.146), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   21.127 ±(99.9%) 55.055 B/op [Average]
[info]   (min, avg, max) = (6.029, 21.127, 42.643), stdev = 14.298
[info]   CI (99.9%): [≈ 0, 76.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.800, 13.000), stdev = 2.588
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson
[info] # Run progress: 22.66% complete, ETA 00:26:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5203.142 ops/s
[info] # Warmup Iteration   2: 10074.739 ops/s
[info] # Warmup Iteration   3: 10434.284 ops/s
[info] # Warmup Iteration   4: 10380.421 ops/s
[info] # Warmup Iteration   5: 10475.613 ops/s
[info] Iteration   1: 10369.048 ops/s
[info]                  ·gc.alloc.rate:                   279.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              42440.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38824.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.024 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.580 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 10489.381 ops/s
[info]                  ·gc.alloc.rate:                   282.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              42440.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48525.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.525 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 378.648 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 10408.637 ops/s
[info]                  ·gc.alloc.rate:                   280.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              42440.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48903.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.591 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 10357.455 ops/s
[info]                  ·gc.alloc.rate:      279.369 MB/sec
[info]                  ·gc.alloc.rate.norm: 42440.042 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 10525.869 ops/s
[info]                  ·gc.alloc.rate:               283.947 MB/sec
[info]                  ·gc.alloc.rate.norm:          42440.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 48405.009 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson":
[info]   10430.078 ±(99.9%) 286.552 ops/s [Average]
[info]   (min, avg, max) = (10357.455, 10430.078, 10525.869), stdev = 74.417
[info]   CI (99.9%): [10143.526, 10716.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   281.352 ±(99.9%) 7.765 MB/sec [Average]
[info]   (min, avg, max) = (279.369, 281.352, 283.947), stdev = 2.017
[info]   CI (99.9%): [273.587, 289.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   42440.042 ±(99.9%) 0.006 B/op [Average]
[info]   (min, avg, max) = (42440.041, 42440.042, 42440.045), stdev = 0.001
[info]   CI (99.9%): [42440.036, 42440.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   245.362 ±(99.9%) 540.107 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 245.362, 323.856), stdev = 140.264
[info]   CI (99.9%): [≈ 0, 785.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   36931.800 ±(99.9%) 81158.965 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 36931.800, 48903.328), stdev = 21076.726
[info]   CI (99.9%): [≈ 0, 118090.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.526 ±(99.9%) 4.303 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.526, 2.525), stdev = 1.118
[info]   CI (99.9%): [≈ 0, 4.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   78.964 ±(99.9%) 645.398 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 78.964, 378.648), stdev = 167.608
[info]   CI (99.9%): [≈ 0, 724.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 5.000), stdev = 2.168
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter
[info] # Run progress: 23.44% complete, ETA 00:25:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13698.851 ops/s
[info] # Warmup Iteration   2: 17865.269 ops/s
[info] # Warmup Iteration   3: 17921.346 ops/s
[info] # Warmup Iteration   4: 17536.443 ops/s
[info] # Warmup Iteration   5: 17895.681 ops/s
[info] Iteration   1: 17934.762 ops/s
[info]                  ·gc.alloc.rate:                   335.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29050.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.844 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 161.737 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 17952.904 ops/s
[info]                  ·gc.alloc.rate:               336.015 MB/sec
[info]                  ·gc.alloc.rate.norm:          29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29023.294 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 17852.687 ops/s
[info]                  ·gc.alloc.rate:                   334.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29187.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.835 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 17966.820 ops/s
[info]                  ·gc.alloc.rate:                   336.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29000.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.823 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 17822.996 ops/s
[info]                  ·gc.alloc.rate:                   333.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29234.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.838 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter":
[info]   17906.034 ±(99.9%) 246.999 ops/s [Average]
[info]   (min, avg, max) = (17822.996, 17906.034, 17966.820), stdev = 64.145
[info]   CI (99.9%): [17659.034, 18153.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   335.138 ±(99.9%) 4.633 MB/sec [Average]
[info]   (min, avg, max) = (333.571, 335.138, 336.265), stdev = 1.203
[info]   CI (99.9%): [330.505, 339.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   29448.026 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (29448.024, 29448.026, 29448.033), stdev = 0.004
[info]   CI (99.9%): [29448.011, 29448.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   331.168 ±(99.9%) 0.049 MB/sec [Average]
[info]   (min, avg, max) = (331.157, 331.168, 331.188), stdev = 0.013
[info]   CI (99.9%): [331.119, 331.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   29099.440 ±(99.9%) 403.997 B/op [Average]
[info]   (min, avg, max) = (29000.683, 29099.440, 29234.953), stdev = 104.917
[info]   CI (99.9%): [28695.442, 29503.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.381 ±(99.9%) 3.148 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.381, 1.844), stdev = 0.818
[info]   CI (99.9%): [≈ 0, 3.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   33.447 ±(99.9%) 276.172 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 33.447, 161.737), stdev = 71.721
[info]   CI (99.9%): [≈ 0, 309.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 4.000), stdev = 1.414
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay
[info] # Run progress: 24.22% complete, ETA 00:25:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 383.605 ops/s
[info] # Warmup Iteration   2: 1798.043 ops/s
[info] # Warmup Iteration   3: 1852.379 ops/s
[info] # Warmup Iteration   4: 1861.568 ops/s
[info] # Warmup Iteration   5: 1827.070 ops/s
[info] Iteration   1: 1867.099 ops/s
[info]                  ·gc.alloc.rate:                   1169.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              985528.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     840039.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.167 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1852.474 ops/s
[info]                  ·gc.alloc.rate:                   1160.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              985528.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1134589.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1844.267 ops/s
[info]                  ·gc.alloc.rate:               1155.238 MB/sec
[info]                  ·gc.alloc.rate.norm:          985528.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 858184.152 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 1871.629 ops/s
[info]                  ·gc.alloc.rate:                   1172.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              985528.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     848047.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.504 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1837.134 ops/s
[info]                  ·gc.alloc.rate:                   1150.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              985528.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1155829.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.828 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay":
[info]   1854.521 ±(99.9%) 56.545 ops/s [Average]
[info]   (min, avg, max) = (1837.134, 1854.521, 1871.629), stdev = 14.685
[info]   CI (99.9%): [1797.975, 1911.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1161.682 ±(99.9%) 35.443 MB/sec [Average]
[info]   (min, avg, max) = (1150.802, 1161.682, 1172.352), stdev = 9.204
[info]   CI (99.9%): [1126.239, 1197.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   985528.240 ±(99.9%) 0.038 B/op [Average]
[info]   (min, avg, max) = (985528.231, 985528.240, 985528.252), stdev = 0.010
[info]   CI (99.9%): [985528.202, 985528.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1139.459 ±(99.9%) 715.118 MB/sec [Average]
[info]   (min, avg, max) = (996.977, 1139.459, 1349.663), stdev = 185.714
[info]   CI (99.9%): [424.341, 1854.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   967338.057 ±(99.9%) 626401.824 B/op [Average]
[info]   (min, avg, max) = (840039.606, 967338.057, 1155829.693), stdev = 162674.564
[info]   CI (99.9%): [340936.233, 1593739.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   31.710 ±(99.9%) 111.177 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 31.710, 70.167), stdev = 28.872
[info]   CI (99.9%): [≈ 0, 142.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 10.000), stdev = 2.387
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 25.00% complete, ETA 00:25:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2098154.094 ops/s
[info] # Warmup Iteration   2: 2705832.437 ops/s
[info] # Warmup Iteration   3: 2754810.822 ops/s
[info] # Warmup Iteration   4: 2766814.306 ops/s
[info] # Warmup Iteration   5: 2751704.670 ops/s
[info] Iteration   1: 2741294.587 ops/s
[info]                  ·gc.alloc.rate:                   822.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     380.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2766387.351 ops/s
[info]                  ·gc.alloc.rate:                   829.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     566.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2759028.744 ops/s
[info]                  ·gc.alloc.rate:                   827.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     380.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2745995.500 ops/s
[info]                  ·gc.alloc.rate:                   823.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     574.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2762970.890 ops/s
[info]                  ·gc.alloc.rate:                   828.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     381.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter":
[info]   2755135.414 ±(99.9%) 42105.402 ops/s [Average]
[info]   (min, avg, max) = (2741294.587, 2755135.414, 2766387.351), stdev = 10934.639
[info]   CI (99.9%): [2713030.013, 2797240.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   826.533 ±(99.9%) 12.713 MB/sec [Average]
[info]   (min, avg, max) = (822.348, 826.533, 829.959), stdev = 3.302
[info]   CI (99.9%): [813.820, 839.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   472.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (472.000, 472.000, 472.000), stdev = 0.001
[info]   CI (99.9%): [472.000, 472.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   800.113 ±(99.9%) 703.017 MB/sec [Average]
[info]   (min, avg, max) = (663.003, 800.113, 1003.235), stdev = 182.571
[info]   CI (99.9%): [97.096, 1503.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   456.886 ±(99.9%) 400.848 B/op [Average]
[info]   (min, avg, max) = (380.390, 456.886, 574.809), stdev = 104.099
[info]   CI (99.9%): [56.038, 857.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.052 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.029, 0.047), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 8.000), stdev = 1.924
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 25.78% complete, ETA 00:25:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 56095.145 ops/s
[info] # Warmup Iteration   2: 244137.993 ops/s
[info] # Warmup Iteration   3: 246730.686 ops/s
[info] # Warmup Iteration   4: 253554.593 ops/s
[info] # Warmup Iteration   5: 246484.962 ops/s
[info] Iteration   1: 251201.364 ops/s
[info]                  ·gc.alloc.rate:                   1328.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8363.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 250852.795 ops/s
[info]                  ·gc.alloc.rate:                   1326.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8417.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.392 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 250095.510 ops/s
[info]                  ·gc.alloc.rate:               1322.561 MB/sec
[info]                  ·gc.alloc.rate.norm:          8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1009.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6353.113 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 251563.832 ops/s
[info]                  ·gc.alloc.rate:                   1330.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8448.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 250069.366 ops/s
[info]                  ·gc.alloc.rate:                   1322.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8515.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.393 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay":
[info]   250756.573 ±(99.9%) 2560.044 ops/s [Average]
[info]   (min, avg, max) = (250069.366, 250756.573, 251563.832), stdev = 664.835
[info]   CI (99.9%): [248196.529, 253316.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1325.955 ±(99.9%) 13.306 MB/sec [Average]
[info]   (min, avg, max) = (1322.385, 1325.955, 1330.191), stdev = 3.456
[info]   CI (99.9%): [1312.649, 1339.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8320.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8320.002, 8320.002, 8320.002), stdev = 0.001
[info]   CI (99.9%): [8320.002, 8320.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1278.210 ±(99.9%) 578.225 MB/sec [Average]
[info]   (min, avg, max) = (1009.901, 1278.210, 1353.419), stdev = 150.163
[info]   CI (99.9%): [699.985, 1856.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8019.412 ±(99.9%) 3593.059 B/op [Average]
[info]   (min, avg, max) = (6353.113, 8019.412, 8515.259), stdev = 933.106
[info]   CI (99.9%): [4426.353, 11612.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.261 ±(99.9%) 0.617 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.261, 0.393), stdev = 0.160
[info]   CI (99.9%): [≈ 0, 0.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.000, 12.000), stdev = 3.162
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayCirce
[info] # Run progress: 26.56% complete, ETA 00:24:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10094.931 ops/s
[info] # Warmup Iteration   2: 12554.693 ops/s
[info] # Warmup Iteration   3: 12579.343 ops/s
[info] # Warmup Iteration   4: 12651.244 ops/s
[info] # Warmup Iteration   5: 12445.580 ops/s
[info] Iteration   1: 12568.161 ops/s
[info]                  ·gc.alloc.rate:                   1620.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              202806.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167992.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.640 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 12536.533 ops/s
[info]                  ·gc.alloc.rate:                   1616.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              202808.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1684.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211362.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.680 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 12402.888 ops/s
[info]                  ·gc.alloc.rate:                   1598.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              202808.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214448.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.642 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 12483.368 ops/s
[info]                  ·gc.alloc.rate:                   1609.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              202807.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     213578.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.874 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 12703.971 ops/s
[info]                  ·gc.alloc.rate:                   1637.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              202808.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1358.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     168188.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.737 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayCirce":
[info]   12538.984 ±(99.9%) 429.192 ops/s [Average]
[info]   (min, avg, max) = (12402.888, 12538.984, 12703.971), stdev = 111.460
[info]   CI (99.9%): [12109.792, 12968.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayCirce:·gc.alloc.rate":
[info]   1616.305 ±(99.9%) 55.332 MB/sec [Average]
[info]   (min, avg, max) = (1598.708, 1616.305, 1637.543), stdev = 14.369
[info]   CI (99.9%): [1560.973, 1671.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayCirce:·gc.alloc.rate.norm":
[info]   202807.580 ±(99.9%) 2.515 B/op [Average]
[info]   (min, avg, max) = (202806.694, 202807.580, 202808.073), stdev = 0.653
[info]   CI (99.9%): [202805.065, 202810.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayCirce:·gc.churn.PS_Eden_Space":
[info]   1553.855 ±(99.9%) 717.089 MB/sec [Average]
[info]   (min, avg, max) = (1341.972, 1553.855, 1694.636), stdev = 186.226
[info]   CI (99.9%): [836.766, 2270.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayCirce:·gc.churn.PS_Eden_Space.norm":
[info]   195114.093 ±(99.9%) 95091.817 B/op [Average]
[info]   (min, avg, max) = (167992.368, 195114.093, 214448.796), stdev = 24695.043
[info]   CI (99.9%): [100022.276, 290205.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayCirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.079, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   9.914 ±(99.9%) 21.767 B/op [Average]
[info]   (min, avg, max) = (2.642, 9.914, 15.680), stdev = 5.653
[info]   CI (99.9%): [≈ 0, 31.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayCirce:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 11.000, 16.000), stdev = 4.301
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJackson
[info] # Run progress: 27.34% complete, ETA 00:24:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25184.663 ops/s
[info] # Warmup Iteration   2: 34101.343 ops/s
[info] # Warmup Iteration   3: 34124.079 ops/s
[info] # Warmup Iteration   4: 34124.607 ops/s
[info] # Warmup Iteration   5: 34294.157 ops/s
[info] Iteration   1: 34409.734 ops/s
[info]                  ·gc.alloc.rate:               245.118 MB/sec
[info]                  ·gc.alloc.rate.norm:          11208.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11699.933 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 34018.229 ops/s
[info]                  ·gc.alloc.rate:               242.316 MB/sec
[info]                  ·gc.alloc.rate.norm:          11208.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11834.735 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 34173.579 ops/s
[info]                  ·gc.alloc.rate:                   243.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              11208.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14986.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.221 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 102.253 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 34497.645 ops/s
[info]                  ·gc.alloc.rate:                   245.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              11208.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14846.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.899 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 34295.748 ops/s
[info]                  ·gc.alloc.rate:      244.305 MB/sec
[info]                  ·gc.alloc.rate.norm: 11208.013 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJackson":
[info]   34278.987 ±(99.9%) 731.350 ops/s [Average]
[info]   (min, avg, max) = (34018.229, 34278.987, 34497.645), stdev = 189.929
[info]   CI (99.9%): [33547.637, 35010.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJackson:·gc.alloc.rate":
[info]   244.178 ±(99.9%) 5.217 MB/sec [Average]
[info]   (min, avg, max) = (242.316, 244.178, 245.730), stdev = 1.355
[info]   CI (99.9%): [238.961, 249.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJackson:·gc.alloc.rate.norm":
[info]   11208.013 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11208.013, 11208.013, 11208.013), stdev = 0.001
[info]   CI (99.9%): [11208.011, 11208.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJackson:·gc.churn.PS_Eden_Space":
[info]   232.544 ±(99.9%) 518.204 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 232.544, 325.498), stdev = 134.576
[info]   CI (99.9%): [≈ 0, 750.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJackson:·gc.churn.PS_Eden_Space.norm":
[info]   10673.453 ±(99.9%) 23763.349 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10673.453, 14986.231), stdev = 6171.266
[info]   CI (99.9%): [≈ 0, 34436.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJackson:·gc.churn.PS_Survivor_Space":
[info]   0.452 ±(99.9%) 3.807 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.452, 2.221), stdev = 0.989
[info]   CI (99.9%): [≈ 0, 4.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   20.830 ±(99.9%) 175.296 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20.830, 102.253), stdev = 45.524
[info]   CI (99.9%): [≈ 0, 196.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJackson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJackson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.400, 6.000), stdev = 2.702
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJsoniter
[info] # Run progress: 28.13% complete, ETA 00:24:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 65404.803 ops/s
[info] # Warmup Iteration   2: 66681.158 ops/s
[info] # Warmup Iteration   3: 67167.334 ops/s
[info] # Warmup Iteration   4: 65516.596 ops/s
[info] # Warmup Iteration   5: 66391.655 ops/s
[info] Iteration   1: 66991.830 ops/s
[info]                  ·gc.alloc.rate:               521.853 MB/sec
[info]                  ·gc.alloc.rate.norm:          12256.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7777.895 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 67849.590 ops/s
[info]                  ·gc.alloc.rate:                   528.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              12256.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15359.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.931 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 66302.665 ops/s
[info]                  ·gc.alloc.rate:                   516.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              12256.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15717.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.494 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 67518.575 ops/s
[info]                  ·gc.alloc.rate:                   525.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              12256.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7732.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.485 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 67359.368 ops/s
[info]                  ·gc.alloc.rate:               524.698 MB/sec
[info]                  ·gc.alloc.rate.norm:          12256.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15517.512 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJsoniter":
[info]   67204.406 ±(99.9%) 2275.877 ops/s [Average]
[info]   (min, avg, max) = (66302.665, 67204.406, 67849.590), stdev = 591.038
[info]   CI (99.9%): [64928.529, 69480.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.alloc.rate":
[info]   523.499 ±(99.9%) 17.744 MB/sec [Average]
[info]   (min, avg, max) = (516.462, 523.499, 528.515), stdev = 4.608
[info]   CI (99.9%): [505.756, 541.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.alloc.rate.norm":
[info]   12256.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12256.006, 12256.007, 12256.007), stdev = 0.001
[info]   CI (99.9%): [12256.006, 12256.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.churn.PS_Eden_Space":
[info]   530.402 ±(99.9%) 699.126 MB/sec [Average]
[info]   (min, avg, max) = (331.178, 530.402, 664.328), stdev = 181.561
[info]   CI (99.9%): [≈ 0, 1229.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   12420.931 ±(99.9%) 16407.717 B/op [Average]
[info]   (min, avg, max) = (7732.724, 12420.931, 15717.413), stdev = 4261.032
[info]   CI (99.9%): [≈ 0, 28828.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.582 ±(99.9%) 3.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.582, 1.931), stdev = 0.793
[info]   CI (99.9%): [≈ 0, 3.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 8.000), stdev = 2.387
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayPlay
[info] # Run progress: 28.91% complete, ETA 00:24:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3372.079 ops/s
[info] # Warmup Iteration   2: 6138.059 ops/s
[info] # Warmup Iteration   3: 6446.851 ops/s
[info] # Warmup Iteration   4: 6502.918 ops/s
[info] # Warmup Iteration   5: 6452.545 ops/s
[info] Iteration   1: 6494.427 ops/s
[info]                  ·gc.alloc.rate:                   2268.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              549544.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     489905.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.177 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 6445.752 ops/s
[info]                  ·gc.alloc.rate:                   2251.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              549544.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2368.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     578205.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.579 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 6393.533 ops/s
[info]                  ·gc.alloc.rate:                   2233.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              549544.068 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2375.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     584546.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.248 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   4: 6539.897 ops/s
[info]                  ·gc.alloc.rate:                   2284.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              549544.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     490468.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.027 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 6458.699 ops/s
[info]                  ·gc.alloc.rate:                   2256.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              549544.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2382.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     580287.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.072 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayPlay":
[info]   6466.462 ±(99.9%) 210.755 ops/s [Average]
[info]   (min, avg, max) = (6393.533, 6466.462, 6539.897), stdev = 54.732
[info]   CI (99.9%): [6255.707, 6677.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayPlay:·gc.alloc.rate":
[info]   2258.697 ±(99.9%) 73.921 MB/sec [Average]
[info]   (min, avg, max) = (2233.118, 2258.697, 2284.434), stdev = 19.197
[info]   CI (99.9%): [2184.776, 2332.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayPlay:·gc.alloc.rate.norm":
[info]   549544.068 ±(99.9%) 0.009 B/op [Average]
[info]   (min, avg, max) = (549544.066, 549544.068, 549544.072), stdev = 0.002
[info]   CI (99.9%): [549544.059, 549544.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayPlay:·gc.churn.PS_Eden_Space":
[info]   2237.517 ±(99.9%) 727.922 MB/sec [Average]
[info]   (min, avg, max) = (2022.341, 2237.517, 2382.244), stdev = 189.039
[info]   CI (99.9%): [1509.594, 2965.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayPlay:·gc.churn.PS_Eden_Space.norm":
[info]   544682.607 ±(99.9%) 191763.413 B/op [Average]
[info]   (min, avg, max) = (489905.813, 544682.607, 584546.277), stdev = 49800.349
[info]   CI (99.9%): [352919.194, 736446.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayPlay:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.146), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   17.221 ±(99.9%) 45.020 B/op [Average]
[info]   (min, avg, max) = (5.072, 17.221, 35.579), stdev = 11.692
[info]   CI (99.9%): [≈ 0, 62.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayPlay:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntArrayPlay:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 13.000, 19.000), stdev = 3.808
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce
[info] # Run progress: 29.69% complete, ETA 00:23:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 293506.090 ops/s
[info] # Warmup Iteration   2: 458650.526 ops/s
[info] # Warmup Iteration   3: 481760.251 ops/s
[info] # Warmup Iteration   4: 469762.659 ops/s
[info] # Warmup Iteration   5: 483551.785 ops/s
[info] Iteration   1: 474503.538 ops/s
[info]                  ·gc.alloc.rate:                   1729.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5564.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 475215.287 ops/s
[info]                  ·gc.alloc.rate:                   1732.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5581.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.276 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 485228.932 ops/s
[info]                  ·gc.alloc.rate:                   1768.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6582.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.338 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 478831.680 ops/s
[info]                  ·gc.alloc.rate:                   1745.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5570.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 483660.504 ops/s
[info]                  ·gc.alloc.rate:                   1762.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5527.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce":
[info]   479487.988 ±(99.9%) 18656.736 ops/s [Average]
[info]   (min, avg, max) = (474503.538, 479487.988, 485228.932), stdev = 4845.095
[info]   CI (99.9%): [460831.252, 498144.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1747.942 ±(99.9%) 67.594 MB/sec [Average]
[info]   (min, avg, max) = (1729.911, 1747.942, 1768.839), stdev = 17.554
[info]   CI (99.9%): [1680.347, 1815.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5736.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5736.001, 5736.001, 5736.001), stdev = 0.001
[info]   CI (99.9%): [5736.001, 5736.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1757.622 ±(99.9%) 586.831 MB/sec [Average]
[info]   (min, avg, max) = (1678.269, 1757.622, 2029.857), stdev = 152.398
[info]   CI (99.9%): [1170.791, 2344.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5765.431 ±(99.9%) 1760.404 B/op [Average]
[info]   (min, avg, max) = (5527.446, 5765.431, 6582.431), stdev = 457.171
[info]   CI (99.9%): [4005.026, 7525.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.191 ±(99.9%) 0.429 B/op [Average]
[info]   (min, avg, max) = (0.069, 0.191, 0.338), stdev = 0.111
[info]   CI (99.9%): [≈ 0, 0.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.600, 13.000), stdev = 2.793
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson
[info] # Run progress: 30.47% complete, ETA 00:23:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 200498.680 ops/s
[info] # Warmup Iteration   2: 534578.800 ops/s
[info] # Warmup Iteration   3: 547012.446 ops/s
[info] # Warmup Iteration   4: 532309.002 ops/s
[info] # Warmup Iteration   5: 546654.075 ops/s
[info] Iteration   1: 546571.868 ops/s
[info]                  ·gc.alloc.rate:                   619.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              1784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1860.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 545627.003 ops/s
[info]                  ·gc.alloc.rate:                   618.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              1784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1866.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.360 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 537021.657 ops/s
[info]                  ·gc.alloc.rate:                   608.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              1784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1903.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 543620.479 ops/s
[info]                  ·gc.alloc.rate:               616.388 MB/sec
[info]                  ·gc.alloc.rate.norm:          1784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1888.079 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 542597.855 ops/s
[info]                  ·gc.alloc.rate:                   615.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              1784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1899.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson":
[info]   543087.772 ±(99.9%) 14395.972 ops/s [Average]
[info]   (min, avg, max) = (537021.657, 543087.772, 546571.868), stdev = 3738.588
[info]   CI (99.9%): [528691.800, 557483.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   615.786 ±(99.9%) 16.348 MB/sec [Average]
[info]   (min, avg, max) = (608.901, 615.786, 619.744), stdev = 4.245
[info]   CI (99.9%): [599.439, 632.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1784.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1784.001, 1784.001, 1784.001), stdev = 0.001
[info]   CI (99.9%): [1784.001, 1784.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   650.160 ±(99.9%) 13.709 MB/sec [Average]
[info]   (min, avg, max) = (646.387, 650.160, 655.021), stdev = 3.560
[info]   CI (99.9%): [636.451, 663.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1883.677 ±(99.9%) 73.927 B/op [Average]
[info]   (min, avg, max) = (1860.698, 1883.677, 1903.485), stdev = 19.199
[info]   CI (99.9%): [1809.750, 1957.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.157 ±(99.9%) 0.506 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.157, 0.360), stdev = 0.131
[info]   CI (99.9%): [≈ 0, 0.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 8.000), stdev = 2.191
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter
[info] # Run progress: 31.25% complete, ETA 00:23:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1685642.627 ops/s
[info] # Warmup Iteration   2: 2285616.513 ops/s
[info] # Warmup Iteration   3: 2400256.084 ops/s
[info] # Warmup Iteration   4: 2531247.504 ops/s
[info] # Warmup Iteration   5: 2514037.367 ops/s
[info] Iteration   1: 2516355.844 ops/s
[info]                  ·gc.alloc.rate:               998.038 MB/sec
[info]                  ·gc.alloc.rate.norm:          624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      996.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 623.301 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 2524273.543 ops/s
[info]                  ·gc.alloc.rate:                   1001.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     624.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2518720.746 ops/s
[info]                  ·gc.alloc.rate:               998.932 MB/sec
[info]                  ·gc.alloc.rate.norm:          624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 627.098 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 2506602.496 ops/s
[info]                  ·gc.alloc.rate:                   994.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     632.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2524472.069 ops/s
[info]                  ·gc.alloc.rate:                   1001.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     629.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter":
[info]   2518084.939 ±(99.9%) 28187.054 ops/s [Average]
[info]   (min, avg, max) = (2506602.496, 2518084.939, 2524472.069), stdev = 7320.088
[info]   CI (99.9%): [2489897.886, 2546271.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   998.707 ±(99.9%) 11.207 MB/sec [Average]
[info]   (min, avg, max) = (994.142, 998.707, 1001.224), stdev = 2.910
[info]   CI (99.9%): [987.500, 1009.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   624.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (624.000, 624.000, 624.000), stdev = 0.001
[info]   CI (99.9%): [624.000, 624.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   1003.839 ±(99.9%) 19.496 MB/sec [Average]
[info]   (min, avg, max) = (996.919, 1003.839, 1009.902), stdev = 5.063
[info]   CI (99.9%): [984.343, 1023.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   627.211 ±(99.9%) 14.280 B/op [Average]
[info]   (min, avg, max) = (623.301, 627.211, 632.199), stdev = 3.708
[info]   CI (99.9%): [612.931, 641.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.089 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 10.000), stdev = 2.000
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay
[info] # Run progress: 32.03% complete, ETA 00:23:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19919.660 ops/s
[info] # Warmup Iteration   2: 148748.384 ops/s
[info] # Warmup Iteration   3: 153791.818 ops/s
[info] # Warmup Iteration   4: 157521.998 ops/s
[info] # Warmup Iteration   5: 155275.640 ops/s
[info] Iteration   1: 155741.891 ops/s
[info]                  ·gc.alloc.rate:                   1081.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              10928.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10040.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.367 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 155655.970 ops/s
[info]                  ·gc.alloc.rate:               1081.120 MB/sec
[info]                  ·gc.alloc.rate.norm:          10928.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1333.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13477.823 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 155217.095 ops/s
[info]                  ·gc.alloc.rate:                   1078.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              10928.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10188.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.422 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 155041.553 ops/s
[info]                  ·gc.alloc.rate:                   1076.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              10928.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10227.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.211 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 157452.994 ops/s
[info]                  ·gc.alloc.rate:                   1093.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              10928.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10101.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay":
[info]   155821.901 ±(99.9%) 3687.950 ops/s [Average]
[info]   (min, avg, max) = (155041.553, 155821.901, 157452.994), stdev = 957.749
[info]   CI (99.9%): [152133.951, 159509.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1082.273 ±(99.9%) 25.556 MB/sec [Average]
[info]   (min, avg, max) = (1076.866, 1082.273, 1093.576), stdev = 6.637
[info]   CI (99.9%): [1056.716, 1107.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10928.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10928.003, 10928.003, 10928.003), stdev = 0.001
[info]   CI (99.9%): [10928.002, 10928.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1070.215 ±(99.9%) 567.018 MB/sec [Average]
[info]   (min, avg, max) = (993.834, 1070.215, 1333.376), stdev = 147.253
[info]   CI (99.9%): [503.197, 1637.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10807.160 ±(99.9%) 5755.752 B/op [Average]
[info]   (min, avg, max) = (10040.130, 10807.160, 13477.823), stdev = 1494.751
[info]   CI (99.9%): [5051.407, 16562.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.044 ±(99.9%) 0.205 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.044, 0.135), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.442 ±(99.9%) 2.074 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.442, 1.367), stdev = 0.539
[info]   CI (99.9%): [≈ 0, 2.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 15.000), stdev = 4.219
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce
[info] # Run progress: 32.81% complete, ETA 00:22:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 252500.032 ops/s
[info] # Warmup Iteration   2: 465968.619 ops/s
[info] # Warmup Iteration   3: 477701.590 ops/s
[info] # Warmup Iteration   4: 480030.150 ops/s
[info] # Warmup Iteration   5: 473012.914 ops/s
[info] Iteration   1: 477844.005 ops/s
[info]                  ·gc.alloc.rate:                   1698.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5519.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 478963.515 ops/s
[info]                  ·gc.alloc.rate:                   1702.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5530.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.274 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 475145.228 ops/s
[info]                  ·gc.alloc.rate:                   1688.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5597.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.276 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 476038.855 ops/s
[info]                  ·gc.alloc.rate:                   1691.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5600.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 478726.264 ops/s
[info]                  ·gc.alloc.rate:                   1701.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5580.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce":
[info]   477343.573 ±(99.9%) 6478.212 ops/s [Average]
[info]   (min, avg, max) = (475145.228, 477343.573, 478963.515), stdev = 1682.371
[info]   CI (99.9%): [470865.362, 483821.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1696.542 ±(99.9%) 23.040 MB/sec [Average]
[info]   (min, avg, max) = (1688.745, 1696.542, 1702.392), stdev = 5.984
[info]   CI (99.9%): [1673.502, 1719.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1688.533 ±(99.9%) 33.393 MB/sec [Average]
[info]   (min, avg, max) = (1676.225, 1688.533, 1697.780), stdev = 8.672
[info]   CI (99.9%): [1655.140, 1721.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5565.676 ±(99.9%) 147.980 B/op [Average]
[info]   (min, avg, max) = (5519.029, 5565.676, 5600.775), stdev = 38.430
[info]   CI (99.9%): [5417.696, 5713.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.178 ±(99.9%) 0.355 B/op [Average]
[info]   (min, avg, max) = (0.069, 0.178, 0.276), stdev = 0.092
[info]   CI (99.9%): [≈ 0, 0.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 12.000), stdev = 2.387
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson
[info] # Run progress: 33.59% complete, ETA 00:22:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 315179.388 ops/s
[info] # Warmup Iteration   2: 884030.485 ops/s
[info] # Warmup Iteration   3: 898432.482 ops/s
[info] # Warmup Iteration   4: 917938.629 ops/s
[info] # Warmup Iteration   5: 915159.815 ops/s
[info] Iteration   1: 886365.744 ops/s
[info]                  ·gc.alloc.rate:                   1045.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1307.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2320.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 909327.044 ops/s
[info]                  ·gc.alloc.rate:                   1072.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1708.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 918992.040 ops/s
[info]                  ·gc.alloc.rate:                   1084.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1701.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 909223.889 ops/s
[info]                  ·gc.alloc.rate:                   1072.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1727.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 911319.499 ops/s
[info]                  ·gc.alloc.rate:                   1074.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1732.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson":
[info]   907045.643 ±(99.9%) 47105.118 ops/s [Average]
[info]   (min, avg, max) = (886365.744, 907045.643, 918992.040), stdev = 12233.049
[info]   CI (99.9%): [859940.526, 954150.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1069.984 ±(99.9%) 55.600 MB/sec [Average]
[info]   (min, avg, max) = (1045.590, 1069.984, 1084.147), stdev = 14.439
[info]   CI (99.9%): [1014.384, 1125.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.000, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1058.052 ±(99.9%) 537.235 MB/sec [Average]
[info]   (min, avg, max) = (987.225, 1058.052, 1307.410), stdev = 139.518
[info]   CI (99.9%): [520.817, 1595.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1838.082 ±(99.9%) 1040.157 B/op [Average]
[info]   (min, avg, max) = (1701.615, 1838.082, 2320.751), stdev = 270.125
[info]   CI (99.9%): [797.926, 2878.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.072 ±(99.9%) 0.102 B/op [Average]
[info]   (min, avg, max) = (0.036, 0.072, 0.111), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 10.600, 15.000), stdev = 4.827
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter
[info] # Run progress: 34.38% complete, ETA 00:22:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2412740.008 ops/s
[info] # Warmup Iteration   2: 2721818.324 ops/s
[info] # Warmup Iteration   3: 2747068.155 ops/s
[info] # Warmup Iteration   4: 2759352.885 ops/s
[info] # Warmup Iteration   5: 2758524.133 ops/s
[info] Iteration   1: 2739275.105 ops/s
[info]                  ·gc.alloc.rate:                   682.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     380.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2713767.177 ops/s
[info]                  ·gc.alloc.rate:                   676.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     384.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2747204.835 ops/s
[info]                  ·gc.alloc.rate:               684.456 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 380.498 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 2759201.407 ops/s
[info]                  ·gc.alloc.rate:                   688.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     378.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2729879.422 ops/s
[info]                  ·gc.alloc.rate:                   680.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     384.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter":
[info]   2737865.589 ±(99.9%) 66386.981 ops/s [Average]
[info]   (min, avg, max) = (2713767.177, 2737865.589, 2759201.407), stdev = 17240.488
[info]   CI (99.9%): [2671478.609, 2804252.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   682.285 ±(99.9%) 17.324 MB/sec [Average]
[info]   (min, avg, max) = (676.192, 682.285, 688.158), stdev = 4.499
[info]   CI (99.9%): [664.961, 699.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   664.428 ±(99.9%) 7.835 MB/sec [Average]
[info]   (min, avg, max) = (662.315, 664.428, 667.632), stdev = 2.035
[info]   CI (99.9%): [656.593, 672.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   381.754 ±(99.9%) 10.427 B/op [Average]
[info]   (min, avg, max) = (378.645, 381.754, 384.791), stdev = 2.708
[info]   CI (99.9%): [371.326, 392.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.084 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.048), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 11.000), stdev = 2.510
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay
[info] # Run progress: 35.16% complete, ETA 00:22:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 50765.661 ops/s
[info] # Warmup Iteration   2: 249773.703 ops/s
[info] # Warmup Iteration   3: 249824.330 ops/s
[info] # Warmup Iteration   4: 251571.137 ops/s
[info] # Warmup Iteration   5: 252759.120 ops/s
[info] Iteration   1: 250083.973 ops/s
[info]                  ·gc.alloc.rate:                   1284.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              8080.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8388.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 249994.849 ops/s
[info]                  ·gc.alloc.rate:                   1283.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              8080.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8437.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 253930.753 ops/s
[info]                  ·gc.alloc.rate:               1304.013 MB/sec
[info]                  ·gc.alloc.rate.norm:          8080.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8340.054 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 251980.136 ops/s
[info]                  ·gc.alloc.rate:                   1294.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              8080.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8429.583 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 250130.597 ops/s
[info]                  ·gc.alloc.rate:                   1284.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              8080.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6383.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay":
[info]   251224.062 ±(99.9%) 6642.851 ops/s [Average]
[info]   (min, avg, max) = (249994.849, 251224.062, 253930.753), stdev = 1725.127
[info]   CI (99.9%): [244581.211, 257866.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1290.142 ±(99.9%) 34.053 MB/sec [Average]
[info]   (min, avg, max) = (1283.859, 1290.142, 1304.013), stdev = 8.844
[info]   CI (99.9%): [1256.089, 1324.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8080.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8080.002, 8080.002, 8080.002), stdev = 0.001
[info]   CI (99.9%): [8080.002, 8080.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1276.968 ±(99.9%) 564.772 MB/sec [Average]
[info]   (min, avg, max) = (1014.835, 1276.968, 1350.015), stdev = 146.669
[info]   CI (99.9%): [712.196, 1841.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7995.874 ±(99.9%) 3473.664 B/op [Average]
[info]   (min, avg, max) = (6383.635, 7995.874, 8437.421), stdev = 902.099
[info]   CI (99.9%): [4522.210, 11469.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.157 ±(99.9%) 0.420 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.157, 0.262), stdev = 0.109
[info]   CI (99.9%): [≈ 0, 0.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 10.000), stdev = 2.302
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce
[info] # Run progress: 35.94% complete, ETA 00:21:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 294779.974 ops/s
[info] # Warmup Iteration   2: 506566.181 ops/s
[info] # Warmup Iteration   3: 508967.538 ops/s
[info] # Warmup Iteration   4: 518042.543 ops/s
[info] # Warmup Iteration   5: 515239.564 ops/s
[info] Iteration   1: 516346.223 ops/s
[info]                  ·gc.alloc.rate:                   1990.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6156.306 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 519698.347 ops/s
[info]                  ·gc.alloc.rate:                   1999.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6142.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 514143.163 ops/s
[info]                  ·gc.alloc.rate:                   1981.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2034.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6225.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 512100.000 ops/s
[info]                  ·gc.alloc.rate:                   1973.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6264.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 503190.506 ops/s
[info]                  ·gc.alloc.rate:                   1939.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2040.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6378.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce":
[info]   513095.648 ±(99.9%) 23920.706 ops/s [Average]
[info]   (min, avg, max) = (503190.506, 513095.648, 519698.347), stdev = 6212.131
[info]   CI (99.9%): [489174.942, 537016.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate":
[info]   1976.859 ±(99.9%) 88.032 MB/sec [Average]
[info]   (min, avg, max) = (1939.691, 1976.859, 1999.304), stdev = 22.862
[info]   CI (99.9%): [1888.828, 2064.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   6064.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6064.001, 6064.001, 6064.001), stdev = 0.001
[info]   CI (99.9%): [6064.001, 6064.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   2031.824 ±(99.9%) 33.513 MB/sec [Average]
[info]   (min, avg, max) = (2020.377, 2031.824, 2040.260), stdev = 8.703
[info]   CI (99.9%): [1998.310, 2065.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   6233.471 ±(99.9%) 366.440 B/op [Average]
[info]   (min, avg, max) = (6142.759, 6233.471, 6378.405), stdev = 95.163
[info]   CI (99.9%): [5867.031, 6599.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.125), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.191 ±(99.9%) 0.417 B/op [Average]
[info]   (min, avg, max) = (0.127, 0.191, 0.378), stdev = 0.108
[info]   CI (99.9%): [≈ 0, 0.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.800, 16.000), stdev = 2.683
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter
[info] # Run progress: 36.72% complete, ETA 00:21:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1784531.989 ops/s
[info] # Warmup Iteration   2: 1877141.817 ops/s
[info] # Warmup Iteration   3: 1885731.397 ops/s
[info] # Warmup Iteration   4: 1875454.535 ops/s
[info] # Warmup Iteration   5: 1886346.597 ops/s
[info] Iteration   1: 1887230.349 ops/s
[info]                  ·gc.alloc.rate:                   1218.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.349 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1114.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1894982.677 ops/s
[info]                  ·gc.alloc.rate:                   1223.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     835.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1890387.122 ops/s
[info]                  ·gc.alloc.rate:                   1220.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1120.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1869545.710 ops/s
[info]                  ·gc.alloc.rate:                   1207.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1136.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1902802.503 ops/s
[info]                  ·gc.alloc.rate:                   1228.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     839.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter":
[info]   1888989.672 ±(99.9%) 47545.168 ops/s [Average]
[info]   (min, avg, max) = (1869545.710, 1888989.672, 1902802.503), stdev = 12347.329
[info]   CI (99.9%): [1841444.504, 1936534.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate":
[info]   1219.817 ±(99.9%) 30.513 MB/sec [Average]
[info]   (min, avg, max) = (1207.330, 1219.817, 1228.653), stdev = 7.924
[info]   CI (99.9%): [1189.304, 1250.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   1210.632 ±(99.9%) 704.432 MB/sec [Average]
[info]   (min, avg, max) = (1005.875, 1210.632, 1350.126), stdev = 182.939
[info]   CI (99.9%): [506.201, 1915.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1008.970 ±(99.9%) 604.771 B/op [Average]
[info]   (min, avg, max) = (835.151, 1008.970, 1136.167), stdev = 157.057
[info]   CI (99.9%): [404.199, 1613.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.042 ±(99.9%) 0.076 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.042, 0.069), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 8.000), stdev = 1.517
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay
[info] # Run progress: 37.50% complete, ETA 00:21:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10858.014 ops/s
[info] # Warmup Iteration   2: 160768.664 ops/s
[info] # Warmup Iteration   3: 168677.709 ops/s
[info] # Warmup Iteration   4: 168625.193 ops/s
[info] # Warmup Iteration   5: 167836.326 ops/s
[info] Iteration   1: 170591.875 ops/s
[info]                  ·gc.alloc.rate:               1220.444 MB/sec
[info]                  ·gc.alloc.rate.norm:          11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      997.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9199.922 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 170358.482 ops/s
[info]                  ·gc.alloc.rate:                   1218.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12351.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.577 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 170395.984 ops/s
[info]                  ·gc.alloc.rate:                   1219.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9299.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 166860.125 ops/s
[info]                  ·gc.alloc.rate:                   1193.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12701.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.393 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 168214.516 ops/s
[info]                  ·gc.alloc.rate:               1203.434 MB/sec
[info]                  ·gc.alloc.rate.norm:          11256.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1351.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12636.712 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay":
[info]   169284.196 ±(99.9%) 6420.457 ops/s [Average]
[info]   (min, avg, max) = (166860.125, 169284.196, 170591.875), stdev = 1667.372
[info]   CI (99.9%): [162863.739, 175704.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate":
[info]   1211.120 ±(99.9%) 45.857 MB/sec [Average]
[info]   (min, avg, max) = (1193.834, 1211.120, 1220.444), stdev = 11.909
[info]   CI (99.9%): [1165.263, 1256.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   11256.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11256.003, 11256.003, 11256.003), stdev = 0.001
[info]   CI (99.9%): [11256.002, 11256.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1208.082 ±(99.9%) 723.460 MB/sec [Average]
[info]   (min, avg, max) = (997.512, 1208.082, 1351.053), stdev = 187.880
[info]   CI (99.9%): [484.623, 1931.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11238.000 ±(99.9%) 7007.958 B/op [Average]
[info]   (min, avg, max) = (9199.922, 11238.000, 12701.768), stdev = 1819.944
[info]   CI (99.9%): [4230.042, 18245.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.232 ±(99.9%) 0.970 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.232, 0.577), stdev = 0.252
[info]   CI (99.9%): [≈ 0, 1.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 9.000), stdev = 1.924
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson
[info] # Run progress: 38.28% complete, ETA 00:20:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 97672.122 ops/s
[info] # Warmup Iteration   2: 660042.607 ops/s
[info] # Warmup Iteration   3: 686854.855 ops/s
[info] # Warmup Iteration   4: 696089.017 ops/s
[info] # Warmup Iteration   5: 698585.204 ops/s
[info] Iteration   1: 686529.344 ops/s
[info]                  ·gc.alloc.rate:                   890.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2231.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 695447.711 ops/s
[info]                  ·gc.alloc.rate:                   901.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2215.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 694846.915 ops/s
[info]                  ·gc.alloc.rate:                   900.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2232.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 696261.230 ops/s
[info]                  ·gc.alloc.rate:               902.722 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1492.147 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 700018.036 ops/s
[info]                  ·gc.alloc.rate:                   907.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2236.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson":
[info]   694620.647 ±(99.9%) 19062.413 ops/s [Average]
[info]   (min, avg, max) = (686529.344, 694620.647, 700018.036), stdev = 4950.448
[info]   CI (99.9%): [675558.234, 713683.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   900.643 ±(99.9%) 24.673 MB/sec [Average]
[info]   (min, avg, max) = (890.175, 900.643, 907.647), stdev = 6.408
[info]   CI (99.9%): [875.970, 925.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   918.918 ±(99.9%) 557.555 MB/sec [Average]
[info]   (min, avg, max) = (660.291, 918.918, 995.219), stdev = 144.795
[info]   CI (99.9%): [361.363, 1476.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2081.733 ±(99.9%) 1269.516 B/op [Average]
[info]   (min, avg, max) = (1492.147, 2081.733, 2236.825), stdev = 329.689
[info]   CI (99.9%): [812.217, 3351.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.085 ±(99.9%) 0.237 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.085, 0.141), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 1.095
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter
[info] # Run progress: 39.06% complete, ETA 00:20:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1280997.699 ops/s
[info] # Warmup Iteration   2: 1499029.455 ops/s
[info] # Warmup Iteration   3: 1514250.975 ops/s
[info] # Warmup Iteration   4: 1518148.307 ops/s
[info] # Warmup Iteration   5: 1507317.312 ops/s
[info] Iteration   1: 1507941.228 ops/s
[info]                  ·gc.alloc.rate:                   712.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1036.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1515138.471 ops/s
[info]                  ·gc.alloc.rate:                   716.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     689.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1524344.279 ops/s
[info]                  ·gc.alloc.rate:                   720.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     686.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1540920.983 ops/s
[info]                  ·gc.alloc.rate:               728.671 MB/sec
[info]                  ·gc.alloc.rate.norm:          744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 681.063 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1519531.219 ops/s
[info]                  ·gc.alloc.rate:                   718.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     692.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter":
[info]   1521575.236 ±(99.9%) 47685.124 ops/s [Average]
[info]   (min, avg, max) = (1507941.228, 1521575.236, 1540920.983), stdev = 12383.675
[info]   CI (99.9%): [1473890.113, 1569260.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   719.484 ±(99.9%) 22.660 MB/sec [Average]
[info]   (min, avg, max) = (712.996, 719.484, 728.671), stdev = 5.885
[info]   CI (99.9%): [696.824, 742.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   731.499 ±(99.9%) 563.891 MB/sec [Average]
[info]   (min, avg, max) = (663.672, 731.499, 993.440), stdev = 146.441
[info]   CI (99.9%): [167.608, 1295.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   757.074 ±(99.9%) 601.987 B/op [Average]
[info]   (min, avg, max) = (681.063, 757.074, 1036.639), stdev = 156.334
[info]   CI (99.9%): [155.087, 1359.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.125 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.034, 0.086), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 7.000), stdev = 2.588
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay
[info] # Run progress: 39.84% complete, ETA 00:20:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 50820.220 ops/s
[info] # Warmup Iteration   2: 217966.200 ops/s
[info] # Warmup Iteration   3: 217611.995 ops/s
[info] # Warmup Iteration   4: 221880.768 ops/s
[info] # Warmup Iteration   5: 220238.111 ops/s
[info] Iteration   1: 224255.650 ops/s
[info]                  ·gc.alloc.rate:                   1179.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6998.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.438 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 220008.783 ops/s
[info]                  ·gc.alloc.rate:                   1156.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9564.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.298 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 221141.649 ops/s
[info]                  ·gc.alloc.rate:                   1162.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7165.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.444 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 224471.260 ops/s
[info]                  ·gc.alloc.rate:                   1180.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9441.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 225966.173 ops/s
[info]                  ·gc.alloc.rate:                   1188.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7052.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay":
[info]   223168.703 ±(99.9%) 9587.639 ops/s [Average]
[info]   (min, avg, max) = (220008.783, 223168.703, 225966.173), stdev = 2489.879
[info]   CI (99.9%): [213581.064, 232756.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1173.300 ±(99.9%) 50.514 MB/sec [Average]
[info]   (min, avg, max) = (1156.583, 1173.300, 1188.009), stdev = 13.118
[info]   CI (99.9%): [1122.786, 1223.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8272.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8272.002, 8272.002, 8272.002), stdev = 0.001
[info]   CI (99.9%): [8272.002, 8272.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1140.387 ±(99.9%) 709.736 MB/sec [Average]
[info]   (min, avg, max) = (997.518, 1140.387, 1347.063), stdev = 184.316
[info]   CI (99.9%): [430.651, 1850.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8044.571 ±(99.9%) 5134.494 B/op [Average]
[info]   (min, avg, max) = (6998.610, 8044.571, 9564.351), stdev = 1333.412
[info]   CI (99.9%): [2910.077, 13179.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.294 ±(99.9%) 0.570 B/op [Average]
[info]   (min, avg, max) = (0.145, 0.294, 0.444), stdev = 0.148
[info]   CI (99.9%): [≈ 0, 0.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 10.200, 20.000), stdev = 6.535
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce
[info] # Run progress: 40.63% complete, ETA 00:20:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 908612.961 ops/s
[info] # Warmup Iteration   2: 1041321.670 ops/s
[info] # Warmup Iteration   3: 1054336.037 ops/s
[info] # Warmup Iteration   4: 1044392.665 ops/s
[info] # Warmup Iteration   5: 1064525.587 ops/s
[info] Iteration   1: 1035990.907 ops/s
[info]                  ·gc.alloc.rate:                   1269.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2027.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 1047880.399 ops/s
[info]                  ·gc.alloc.rate:                   1284.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2013.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1058117.241 ops/s
[info]                  ·gc.alloc.rate:                   1296.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1500.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1039647.076 ops/s
[info]                  ·gc.alloc.rate:                   1273.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2042.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1031280.220 ops/s
[info]                  ·gc.alloc.rate:                   1263.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2064.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce":
[info]   1042583.169 ±(99.9%) 40806.073 ops/s [Average]
[info]   (min, avg, max) = (1031280.220, 1042583.169, 1058117.241), stdev = 10597.208
[info]   CI (99.9%): [1001777.095, 1083389.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate":
[info]   1277.578 ±(99.9%) 49.897 MB/sec [Average]
[info]   (min, avg, max) = (1263.798, 1277.578, 1296.567), stdev = 12.958
[info]   CI (99.9%): [1227.681, 1327.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate.norm":
[info]   1928.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1928.000, 1928.000, 1928.000), stdev = 0.001
[info]   CI (99.9%): [1928.000, 1928.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   1277.541 ±(99.9%) 578.347 MB/sec [Average]
[info]   (min, avg, max) = (1009.188, 1277.541, 1353.437), stdev = 150.195
[info]   CI (99.9%): [699.194, 1855.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1929.613 ±(99.9%) 926.291 B/op [Average]
[info]   (min, avg, max) = (1500.667, 1929.613, 2064.750), stdev = 240.555
[info]   CI (99.9%): [1003.322, 2855.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.088 ±(99.9%) 0.157 B/op [Average]
[info]   (min, avg, max) = (0.062, 0.088, 0.156), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.time":
[info]   70.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 14.000, 24.000), stdev = 7.969
[info]   CI (99.9%): [70.000, 70.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson
[info] # Run progress: 41.41% complete, ETA 00:19:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 618088.613 ops/s
[info] # Warmup Iteration   2: 879510.654 ops/s
[info] # Warmup Iteration   3: 879290.812 ops/s
[info] # Warmup Iteration   4: 885823.733 ops/s
[info] # Warmup Iteration   5: 883748.475 ops/s
[info] Iteration   1: 891489.168 ops/s
[info]                  ·gc.alloc.rate:                   553.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1150.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 898664.226 ops/s
[info]                  ·gc.alloc.rate:               557.432 MB/sec
[info]                  ·gc.alloc.rate.norm:          976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 571.072 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 886218.621 ops/s
[info]                  ·gc.alloc.rate:                   549.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1160.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 898120.671 ops/s
[info]                  ·gc.alloc.rate:                   557.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1149.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 887359.760 ops/s
[info]                  ·gc.alloc.rate:               550.436 MB/sec
[info]                  ·gc.alloc.rate.norm:          976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 583.075 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson":
[info]   892370.489 ±(99.9%) 22486.354 ops/s [Average]
[info]   (min, avg, max) = (886218.621, 892370.489, 898664.226), stdev = 5839.635
[info]   CI (99.9%): [869884.135, 914856.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate":
[info]   553.538 ±(99.9%) 13.898 MB/sec [Average]
[info]   (min, avg, max) = (549.732, 553.538, 557.432), stdev = 3.609
[info]   CI (99.9%): [539.640, 567.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.001), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   523.389 ±(99.9%) 688.612 MB/sec [Average]
[info]   (min, avg, max) = (326.162, 523.389, 656.255), stdev = 178.830
[info]   CI (99.9%): [≈ 0, 1212.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   923.035 ±(99.9%) 1216.321 B/op [Average]
[info]   (min, avg, max) = (571.072, 923.035, 1160.510), stdev = 315.875
[info]   CI (99.9%): [≈ 0, 2139.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.059 ±(99.9%) 0.258 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.059, 0.147), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.800, 6.000), stdev = 1.924
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter
[info] # Run progress: 42.19% complete, ETA 00:19:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1362591.407 ops/s
[info] # Warmup Iteration   2: 1404282.951 ops/s
[info] # Warmup Iteration   3: 1409434.832 ops/s
[info] # Warmup Iteration   4: 1400069.615 ops/s
[info] # Warmup Iteration   5: 1411255.800 ops/s
[info] Iteration   1: 1411482.124 ops/s
[info]                  ·gc.alloc.rate:                   229.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     285.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1409868.023 ops/s
[info]                  ·gc.alloc.rate:               229.398 MB/sec
[info]                  ·gc.alloc.rate.norm:          256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 285.564 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 1410012.604 ops/s
[info]                  ·gc.alloc.rate:                   229.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     369.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.775 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.981 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1410803.175 ops/s
[info]                  ·gc.alloc.rate:      229.544 MB/sec
[info]                  ·gc.alloc.rate.norm: 256.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1409573.014 ops/s
[info]                  ·gc.alloc.rate:                   229.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     369.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter":
[info]   1410347.788 ±(99.9%) 3005.534 ops/s [Average]
[info]   (min, avg, max) = (1409573.014, 1410347.788, 1411482.124), stdev = 780.528
[info]   CI (99.9%): [1407342.254, 1413353.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate":
[info]   229.469 ±(99.9%) 0.494 MB/sec [Average]
[info]   (min, avg, max) = (229.335, 229.469, 229.653), stdev = 0.128
[info]   CI (99.9%): [228.975, 229.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   256.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (256.000, 256.000, 256.000), stdev = 0.001
[info]   CI (99.9%): [256.000, 256.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   234.822 ±(99.9%) 525.844 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 234.822, 331.173), stdev = 136.560
[info]   CI (99.9%): [≈ 0, 760.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   262.005 ±(99.9%) 586.830 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 262.005, 369.674), stdev = 152.398
[info]   CI (99.9%): [≈ 0, 848.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.366 ±(99.9%) 3.034 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.366, 1.775), stdev = 0.788
[info]   CI (99.9%): [≈ 0, 3.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.408 ±(99.9%) 3.386 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.408, 1.981), stdev = 0.879
[info]   CI (99.9%): [≈ 0, 3.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 4.000), stdev = 1.581
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce
[info] # Run progress: 42.97% complete, ETA 00:19:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 142652.741 ops/s
[info] # Warmup Iteration   2: 453125.933 ops/s
[info] # Warmup Iteration   3: 459918.861 ops/s
[info] # Warmup Iteration   4: 465154.119 ops/s
[info] # Warmup Iteration   5: 455321.783 ops/s
[info] Iteration   1: 461763.234 ops/s
[info]                  ·gc.alloc.rate:                   1366.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4537.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 469214.768 ops/s
[info]                  ·gc.alloc.rate:                   1388.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4490.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 471470.794 ops/s
[info]                  ·gc.alloc.rate:                   1395.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4487.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.278 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 460502.208 ops/s
[info]                  ·gc.alloc.rate:                   1362.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4609.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.213 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 465175.705 ops/s
[info]                  ·gc.alloc.rate:                   1376.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4575.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.211 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce":
[info]   465625.342 ±(99.9%) 18103.949 ops/s [Average]
[info]   (min, avg, max) = (460502.208, 465625.342, 471470.794), stdev = 4701.538
[info]   CI (99.9%): [447521.393, 483729.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1377.900 ±(99.9%) 53.513 MB/sec [Average]
[info]   (min, avg, max) = (1362.692, 1377.900, 1395.180), stdev = 13.897
[info]   CI (99.9%): [1324.387, 1431.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1343.451 ±(99.9%) 31.894 MB/sec [Average]
[info]   (min, avg, max) = (1331.769, 1343.451, 1352.714), stdev = 8.283
[info]   CI (99.9%): [1311.557, 1375.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4539.960 ±(99.9%) 204.443 B/op [Average]
[info]   (min, avg, max) = (4487.623, 4539.960, 4609.273), stdev = 53.093
[info]   CI (99.9%): [4335.517, 4744.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.225 ±(99.9%) 0.219 B/op [Average]
[info]   (min, avg, max) = (0.142, 0.225, 0.279), stdev = 0.057
[info]   CI (99.9%): [0.005, 0.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 9.000), stdev = 1.095
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson
[info] # Run progress: 43.75% complete, ETA 00:19:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 481763.334 ops/s
[info] # Warmup Iteration   2: 981047.837 ops/s
[info] # Warmup Iteration   3: 983559.427 ops/s
[info] # Warmup Iteration   4: 986939.874 ops/s
[info] # Warmup Iteration   5: 984281.179 ops/s
[info] Iteration   1: 984958.630 ops/s
[info]                  ·gc.alloc.rate:                   746.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          975.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1558.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 987448.891 ops/s
[info]                  ·gc.alloc.rate:                   748.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1041.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 998102.053 ops/s
[info]                  ·gc.alloc.rate:                   756.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1034.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 996516.060 ops/s
[info]                  ·gc.alloc.rate:                   754.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1561.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 997215.557 ops/s
[info]                  ·gc.alloc.rate:               755.522 MB/sec
[info]                  ·gc.alloc.rate.norm:          1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1044.012 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson":
[info]   992848.238 ±(99.9%) 23700.066 ops/s [Average]
[info]   (min, avg, max) = (984958.630, 992848.238, 998102.053), stdev = 6154.832
[info]   CI (99.9%): [969148.172, 1016548.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   752.200 ±(99.9%) 18.042 MB/sec [Average]
[info]   (min, avg, max) = (746.205, 752.200, 756.231), stdev = 4.686
[info]   CI (99.9%): [734.158, 770.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1192.000, 1192.000, 1192.000), stdev = 0.001
[info]   CI (99.9%): [1192.000, 1192.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   787.357 ±(99.9%) 686.326 MB/sec [Average]
[info]   (min, avg, max) = (653.631, 787.357, 989.220), stdev = 178.237
[info]   CI (99.9%): [101.031, 1473.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1248.161 ±(99.9%) 1097.350 B/op [Average]
[info]   (min, avg, max) = (1034.661, 1248.161, 1561.867), stdev = 284.978
[info]   CI (99.9%): [150.811, 2345.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.059 ±(99.9%) 0.166 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.059, 0.100), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.000, 14.000), stdev = 5.099
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter
[info] # Run progress: 44.53% complete, ETA 00:18:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2983388.218 ops/s
[info] # Warmup Iteration   2: 3173843.108 ops/s
[info] # Warmup Iteration   3: 3244810.228 ops/s
[info] # Warmup Iteration   4: 3233351.468 ops/s
[info] # Warmup Iteration   5: 3268181.776 ops/s
[info] Iteration   1: 3264655.872 ops/s
[info]                  ·gc.alloc.rate:      99.598 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3285109.438 ops/s
[info]                  ·gc.alloc.rate:      100.218 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3253482.948 ops/s
[info]                  ·gc.alloc.rate:                   99.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3258465.666 ops/s
[info]                  ·gc.alloc.rate:      99.410 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3233851.532 ops/s
[info]                  ·gc.alloc.rate:               98.657 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 124.497 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter":
[info]   3259113.091 ±(99.9%) 71439.472 ops/s [Average]
[info]   (min, avg, max) = (3233851.532, 3259113.091, 3285109.438), stdev = 18552.604
[info]   CI (99.9%): [3187673.619, 3330552.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   99.426 ±(99.9%) 2.177 MB/sec [Average]
[info]   (min, avg, max) = (98.657, 99.426, 100.218), stdev = 0.565
[info]   CI (99.9%): [97.249, 101.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   102.350 ±(99.9%) 539.662 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.350, 255.885), stdev = 140.148
[info]   CI (99.9%): [≈ 0, 642.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   49.648 ±(99.9%) 261.783 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 49.648, 124.497), stdev = 67.984
[info]   CI (99.9%): [≈ 0, 311.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.053 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.015), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay
[info] # Run progress: 45.31% complete, ETA 00:18:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36690.784 ops/s
[info] # Warmup Iteration   2: 170588.309 ops/s
[info] # Warmup Iteration   3: 175008.596 ops/s
[info] # Warmup Iteration   4: 174421.501 ops/s
[info] # Warmup Iteration   5: 173909.925 ops/s
[info] Iteration   1: 173432.005 ops/s
[info]                  ·gc.alloc.rate:                   1186.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              10768.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12081.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.945 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 173576.625 ops/s
[info]                  ·gc.alloc.rate:                   1187.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              10768.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9096.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.755 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 174676.949 ops/s
[info]                  ·gc.alloc.rate:                   1195.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              10768.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12100.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.750 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 175538.355 ops/s
[info]                  ·gc.alloc.rate:                   1201.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              10768.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9062.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 171521.745 ops/s
[info]                  ·gc.alloc.rate:               1173.886 MB/sec
[info]                  ·gc.alloc.rate.norm:          10768.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1351.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12395.874 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay":
[info]   173749.136 ±(99.9%) 5825.092 ops/s [Average]
[info]   (min, avg, max) = (171521.745, 173749.136, 175538.355), stdev = 1512.758
[info]   CI (99.9%): [167924.044, 179574.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1189.122 ±(99.9%) 39.896 MB/sec [Average]
[info]   (min, avg, max) = (1173.886, 1189.122, 1201.379), stdev = 10.361
[info]   CI (99.9%): [1149.225, 1229.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10768.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10768.002, 10768.003, 10768.003), stdev = 0.001
[info]   CI (99.9%): [10768.002, 10768.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1208.212 ±(99.9%) 706.753 MB/sec [Average]
[info]   (min, avg, max) = (1003.508, 1208.212, 1351.350), stdev = 183.542
[info]   CI (99.9%): [501.459, 1914.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10947.272 ±(99.9%) 6582.792 B/op [Average]
[info]   (min, avg, max) = (9062.822, 10947.272, 12395.874), stdev = 1709.530
[info]   CI (99.9%): [4364.480, 17530.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.527 ±(99.9%) 1.576 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.527, 0.945), stdev = 0.409
[info]   CI (99.9%): [≈ 0, 2.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 8.000), stdev = 1.949
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce
[info] # Run progress: 46.09% complete, ETA 00:18:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3193.266 ops/s
[info] # Warmup Iteration   2: 5523.770 ops/s
[info] # Warmup Iteration   3: 7097.425 ops/s
[info] # Warmup Iteration   4: 7471.404 ops/s
[info] # Warmup Iteration   5: 7614.216 ops/s
[info] Iteration   1: 7509.310 ops/s
[info]                  ·gc.alloc.rate:                   1059.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              221968.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     276837.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.088 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 7508.754 ops/s
[info]                  ·gc.alloc.rate:                   1059.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              221968.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     208668.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.453 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 7601.503 ops/s
[info]                  ·gc.alloc.rate:                   1072.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              221968.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     206943.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.310 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 7575.842 ops/s
[info]                  ·gc.alloc.rate:                   1068.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              221968.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     208525.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.648 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 7526.280 ops/s
[info]                  ·gc.alloc.rate:                   1061.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              222006.350 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     210464.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.411 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce":
[info]   7544.338 ±(99.9%) 161.997 ops/s [Average]
[info]   (min, avg, max) = (7508.754, 7544.338, 7601.503), stdev = 42.070
[info]   CI (99.9%): [7382.341, 7706.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate":
[info]   1064.426 ±(99.9%) 22.774 MB/sec [Average]
[info]   (min, avg, max) = (1059.333, 1064.426, 1072.481), stdev = 5.914
[info]   CI (99.9%): [1041.652, 1087.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm":
[info]   221975.717 ±(99.9%) 65.940 B/op [Average]
[info]   (min, avg, max) = (221968.057, 221975.717, 222006.350), stdev = 17.124
[info]   CI (99.9%): [221909.777, 222041.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   1065.605 ±(99.9%) 550.917 MB/sec [Average]
[info]   (min, avg, max) = (995.859, 1065.605, 1321.432), stdev = 143.071
[info]   CI (99.9%): [514.688, 1616.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   222287.602 ±(99.9%) 117520.847 B/op [Average]
[info]   (min, avg, max) = (206943.087, 222287.602, 276837.466), stdev = 30519.791
[info]   CI (99.9%): [104766.755, 339808.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   12.182 ±(99.9%) 21.986 B/op [Average]
[info]   (min, avg, max) = (4.310, 12.182, 17.453), stdev = 5.710
[info]   CI (99.9%): [≈ 0, 34.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 12.000), stdev = 2.683
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson
[info] # Run progress: 46.88% complete, ETA 00:18:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3192.077 ops/s
[info] # Warmup Iteration   2: 11069.283 ops/s
[info] # Warmup Iteration   3: 11969.130 ops/s
[info] # Warmup Iteration   4: 11863.741 ops/s
[info] # Warmup Iteration   5: 11936.252 ops/s
[info] Iteration   1: 11988.083 ops/s
[info]                  ·gc.alloc.rate:               189.579 MB/sec
[info]                  ·gc.alloc.rate.norm:          24880.819 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33582.417 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 12043.243 ops/s
[info]                  ·gc.alloc.rate:      190.576 MB/sec
[info]                  ·gc.alloc.rate.norm: 24896.036 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 11794.916 ops/s
[info]                  ·gc.alloc.rate:                   186.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              24896.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34128.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      ≈ 10⁻⁵ MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 11931.369 ops/s
[info]                  ·gc.alloc.rate:                   188.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              24896.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33740.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.666 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 11895.567 ops/s
[info]                  ·gc.alloc.rate:      188.217 MB/sec
[info]                  ·gc.alloc.rate.norm: 24895.875 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson":
[info]   11930.636 ±(99.9%) 363.426 ops/s [Average]
[info]   (min, avg, max) = (11794.916, 11930.636, 12043.243), stdev = 94.381
[info]   CI (99.9%): [11567.210, 12294.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate":
[info]   188.762 ±(99.9%) 5.710 MB/sec [Average]
[info]   (min, avg, max) = (186.631, 188.762, 190.576), stdev = 1.483
[info]   CI (99.9%): [183.052, 194.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   24893.001 ±(99.9%) 26.226 B/op [Average]
[info]   (min, avg, max) = (24880.819, 24893.001, 24896.238), stdev = 6.811
[info]   CI (99.9%): [24866.775, 24919.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   153.520 ±(99.9%) 539.644 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.520, 255.881), stdev = 140.144
[info]   CI (99.9%): [≈ 0, 693.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   20290.271 ±(99.9%) 71327.274 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20290.271, 34128.936), stdev = 18523.467
[info]   CI (99.9%): [≈ 0, 91617.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.003 ±(99.9%) 0.022 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.013), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.334 ±(99.9%) 2.867 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.334, 1.666), stdev = 0.745
[info]   CI (99.9%): [≈ 0, 3.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.800, 7.000), stdev = 3.493
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter
[info] # Run progress: 47.66% complete, ETA 00:17:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10011.747 ops/s
[info] # Warmup Iteration   2: 17410.995 ops/s
[info] # Warmup Iteration   3: 24266.193 ops/s
[info] # Warmup Iteration   4: 23964.368 ops/s
[info] # Warmup Iteration   5: 24205.696 ops/s
[info] Iteration   1: 24167.681 ops/s
[info]                  ·gc.alloc.rate:                   266.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              17328.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16658.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.025 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.631 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 24322.533 ops/s
[info]                  ·gc.alloc.rate:               267.876 MB/sec
[info]                  ·gc.alloc.rate.norm:          17328.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16552.380 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 24226.436 ops/s
[info]                  ·gc.alloc.rate:                   266.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              17328.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21508.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.825 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 118.547 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 24283.710 ops/s
[info]                  ·gc.alloc.rate:                   267.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              17328.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21456.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.349 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 24263.160 ops/s
[info]                  ·gc.alloc.rate:      267.182 MB/sec
[info]                  ·gc.alloc.rate.norm: 17328.018 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter":
[info]   24252.704 ±(99.9%) 226.713 ops/s [Average]
[info]   (min, avg, max) = (24167.681, 24252.704, 24322.533), stdev = 58.877
[info]   CI (99.9%): [24025.991, 24479.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate":
[info]   267.098 ±(99.9%) 2.511 MB/sec [Average]
[info]   (min, avg, max) = (266.160, 267.098, 267.876), stdev = 0.652
[info]   CI (99.9%): [264.587, 269.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   17328.028 ±(99.9%) 0.089 B/op [Average]
[info]   (min, avg, max) = (17328.018, 17328.028, 17328.070), stdev = 0.023
[info]   CI (99.9%): [17327.939, 17328.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   234.825 ±(99.9%) 525.858 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 234.825, 331.183), stdev = 136.564
[info]   CI (99.9%): [≈ 0, 760.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   15235.165 ±(99.9%) 34112.988 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15235.165, 21508.142), stdev = 8859.035
[info]   CI (99.9%): [≈ 0, 49348.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.374 ±(99.9%) 3.124 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.374, 1.825), stdev = 0.811
[info]   CI (99.9%): [≈ 0, 3.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   24.305 ±(99.9%) 202.883 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.305, 118.547), stdev = 52.688
[info]   CI (99.9%): [≈ 0, 227.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay
[info] # Run progress: 48.44% complete, ETA 00:17:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 610.638 ops/s
[info] # Warmup Iteration   2: 3410.051 ops/s
[info] # Warmup Iteration   3: 3627.780 ops/s
[info] # Warmup Iteration   4: 3722.317 ops/s
[info] # Warmup Iteration   5: 3671.184 ops/s
[info] Iteration   1: 3720.565 ops/s
[info]                  ·gc.alloc.rate:                   1097.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              464136.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     560771.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.198 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83.641 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 3660.336 ops/s
[info]                  ·gc.alloc.rate:                   1079.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              464136.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     429770.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.951 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 3667.758 ops/s
[info]                  ·gc.alloc.rate:                   1081.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              464136.118 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     430833.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.931 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 3726.335 ops/s
[info]                  ·gc.alloc.rate:                   1099.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              464136.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     425535.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.584 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 3701.624 ops/s
[info]                  ·gc.alloc.rate:                   1091.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              464136.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     572568.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.396 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay":
[info]   3695.324 ±(99.9%) 115.879 ops/s [Average]
[info]   (min, avg, max) = (3660.336, 3695.324, 3726.335), stdev = 30.094
[info]   CI (99.9%): [3579.444, 3811.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate":
[info]   1090.143 ±(99.9%) 34.406 MB/sec [Average]
[info]   (min, avg, max) = (1079.794, 1090.143, 1099.305), stdev = 8.935
[info]   CI (99.9%): [1055.736, 1124.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   464136.119 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (464136.116, 464136.119, 464136.124), stdev = 0.003
[info]   CI (99.9%): [464136.106, 464136.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1137.072 ±(99.9%) 702.271 MB/sec [Average]
[info]   (min, avg, max) = (999.843, 1137.072, 1347.061), stdev = 182.378
[info]   CI (99.9%): [434.802, 1839.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   483895.770 ±(99.9%) 291505.213 B/op [Average]
[info]   (min, avg, max) = (425535.605, 483895.770, 572568.369), stdev = 75702.978
[info]   CI (99.9%): [192390.557, 775400.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.073 ±(99.9%) 0.286 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.073, 0.198), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   30.901 ±(99.9%) 120.906 B/op [Average]
[info]   (min, avg, max) = (8.931, 30.901, 83.641), stdev = 31.399
[info]   CI (99.9%): [≈ 0, 151.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.800, 13.000), stdev = 2.683
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce
[info] # Run progress: 49.22% complete, ETA 00:17:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 253221.378 ops/s
[info] # Warmup Iteration   2: 380108.415 ops/s
[info] # Warmup Iteration   3: 405322.120 ops/s
[info] # Warmup Iteration   4: 402033.642 ops/s
[info] # Warmup Iteration   5: 406297.881 ops/s
[info] Iteration   1: 403430.765 ops/s
[info]                  ·gc.alloc.rate:                   1339.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5199.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 404772.811 ops/s
[info]                  ·gc.alloc.rate:                   1343.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5211.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.486 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 404670.884 ops/s
[info]                  ·gc.alloc.rate:                   1343.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5233.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 404882.678 ops/s
[info]                  ·gc.alloc.rate:                   1344.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5246.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.324 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 407735.558 ops/s
[info]                  ·gc.alloc.rate:                   1353.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5222.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.241 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce":
[info]   405098.539 ±(99.9%) 6109.955 ops/s [Average]
[info]   (min, avg, max) = (403430.765, 405098.539, 407735.558), stdev = 1586.736
[info]   CI (99.9%): [398988.584, 411208.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate":
[info]   1345.054 ±(99.9%) 20.373 MB/sec [Average]
[info]   (min, avg, max) = (1339.496, 1345.054, 1353.847), stdev = 5.291
[info]   CI (99.9%): [1324.681, 1365.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space":
[info]   1344.709 ±(99.9%) 30.607 MB/sec [Average]
[info]   (min, avg, max) = (1333.295, 1344.709, 1353.428), stdev = 7.948
[info]   CI (99.9%): [1314.102, 1375.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5222.644 ±(99.9%) 69.977 B/op [Average]
[info]   (min, avg, max) = (5199.821, 5222.644, 5246.233), stdev = 18.173
[info]   CI (99.9%): [5152.668, 5292.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.125), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.291 ±(99.9%) 0.473 B/op [Average]
[info]   (min, avg, max) = (0.162, 0.291, 0.486), stdev = 0.123
[info]   CI (99.9%): [≈ 0, 0.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 12.000), stdev = 2.000
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson
[info] # Run progress: 50.00% complete, ETA 00:16:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 771112.697 ops/s
[info] # Warmup Iteration   2: 1632686.138 ops/s
[info] # Warmup Iteration   3: 1621865.254 ops/s
[info] # Warmup Iteration   4: 1607377.499 ops/s
[info] # Warmup Iteration   5: 1642669.319 ops/s
[info] Iteration   1: 1625926.648 ops/s
[info]                  ·gc.alloc.rate:                   578.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     628.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1636138.698 ops/s
[info]                  ·gc.alloc.rate:                   582.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     625.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1651818.864 ops/s
[info]                  ·gc.alloc.rate:               587.908 MB/sec
[info]                  ·gc.alloc.rate.norm:          560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 310.060 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1637025.418 ops/s
[info]                  ·gc.alloc.rate:                   582.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     628.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1644200.495 ops/s
[info]                  ·gc.alloc.rate:                   585.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     626.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson":
[info]   1639022.025 ±(99.9%) 37252.096 ops/s [Average]
[info]   (min, avg, max) = (1625926.648, 1639022.025, 1651818.864), stdev = 9674.251
[info]   CI (99.9%): [1601769.929, 1676274.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate":
[info]   583.374 ±(99.9%) 13.121 MB/sec [Average]
[info]   (min, avg, max) = (578.771, 583.374, 587.908), stdev = 3.408
[info]   CI (99.9%): [570.253, 596.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm":
[info]   560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (560.000, 560.000, 560.000), stdev = 0.001
[info]   CI (99.9%): [560.000, 560.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space":
[info]   586.668 ±(99.9%) 562.236 MB/sec [Average]
[info]   (min, avg, max) = (325.512, 586.668, 654.938), stdev = 146.011
[info]   CI (99.9%): [24.432, 1148.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   563.656 ±(99.9%) 545.906 B/op [Average]
[info]   (min, avg, max) = (310.060, 563.656, 628.273), stdev = 141.770
[info]   CI (99.9%): [17.750, 1109.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.044 ±(99.9%) 0.148 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.044, 0.100), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.800, 10.000), stdev = 3.633
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter
[info] # Run progress: 50.78% complete, ETA 00:16:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5321967.253 ops/s
[info] # Warmup Iteration   2: 11196330.489 ops/s
[info] # Warmup Iteration   3: 11099801.947 ops/s
[info] # Warmup Iteration   4: 11431731.024 ops/s
[info] # Warmup Iteration   5: 11573062.014 ops/s
[info] Iteration   1: 11572156.349 ops/s
[info]                  ·gc.alloc.rate:                   588.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 11297898.554 ops/s
[info]                  ·gc.alloc.rate:               574.438 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46.075 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 11294088.996 ops/s
[info]                  ·gc.alloc.rate:                   574.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 11269754.810 ops/s
[info]                  ·gc.alloc.rate:                   573.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 11255226.841 ops/s
[info]                  ·gc.alloc.rate:                   572.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter":
[info]   11337825.110 ±(99.9%) 508934.188 ops/s [Average]
[info]   (min, avg, max) = (11255226.841, 11337825.110, 11572156.349), stdev = 132168.592
[info]   CI (99.9%): [10828890.922, 11846759.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate":
[info]   576.473 ±(99.9%) 25.838 MB/sec [Average]
[info]   (min, avg, max) = (572.270, 576.473, 588.369), stdev = 6.710
[info]   CI (99.9%): [550.635, 602.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   596.651 ±(99.9%) 572.204 MB/sec [Average]
[info]   (min, avg, max) = (330.839, 596.651, 665.028), stdev = 148.600
[info]   CI (99.9%): [24.447, 1168.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   82.779 ±(99.9%) 79.143 B/op [Average]
[info]   (min, avg, max) = (46.075, 82.779, 92.967), stdev = 20.553
[info]   CI (99.9%): [3.636, 161.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.020 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.012), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay
[info] # Run progress: 51.56% complete, ETA 00:16:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 74595.741 ops/s
[info] # Warmup Iteration   2: 249748.718 ops/s
[info] # Warmup Iteration   3: 252895.423 ops/s
[info] # Warmup Iteration   4: 249741.969 ops/s
[info] # Warmup Iteration   5: 252303.816 ops/s
[info] Iteration   1: 251610.718 ops/s
[info]                  ·gc.alloc.rate:               809.802 MB/sec
[info]                  ·gc.alloc.rate.norm:          5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6189.811 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 252468.405 ops/s
[info]                  ·gc.alloc.rate:                   812.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4131.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.779 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 248865.613 ops/s
[info]                  ·gc.alloc.rate:                   800.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6308.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.395 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 252487.963 ops/s
[info]                  ·gc.alloc.rate:                   812.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4160.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 251219.769 ops/s
[info]                  ·gc.alloc.rate:               808.495 MB/sec
[info]                  ·gc.alloc.rate.norm:          5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6295.629 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay":
[info]   251330.494 ±(99.9%) 5711.753 ops/s [Average]
[info]   (min, avg, max) = (248865.613, 251330.494, 252487.963), stdev = 1483.324
[info]   CI (99.9%): [245618.741, 257042.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate":
[info]   808.891 ±(99.9%) 18.326 MB/sec [Average]
[info]   (min, avg, max) = (800.994, 808.891, 812.586), stdev = 4.759
[info]   CI (99.9%): [790.565, 827.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm":
[info]   5064.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5064.002, 5064.002, 5064.002), stdev = 0.001
[info]   CI (99.9%): [5064.002, 5064.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space":
[info]   864.698 ±(99.9%) 701.149 MB/sec [Average]
[info]   (min, avg, max) = (663.010, 864.698, 1005.131), stdev = 182.086
[info]   CI (99.9%): [163.549, 1565.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5417.354 ±(99.9%) 4471.541 B/op [Average]
[info]   (min, avg, max) = (4131.898, 5417.354, 6308.678), stdev = 1161.245
[info]   CI (99.9%): [945.812, 9888.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.287 ±(99.9%) 1.246 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.287, 0.779), stdev = 0.324
[info]   CI (99.9%): [≈ 0, 1.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 8.000), stdev = 2.168
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce
[info] # Run progress: 52.34% complete, ETA 00:16:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 955645.043 ops/s
[info] # Warmup Iteration   2: 1364277.917 ops/s
[info] # Warmup Iteration   3: 1382741.415 ops/s
[info] # Warmup Iteration   4: 1390943.310 ops/s
[info] # Warmup Iteration   5: 1387109.580 ops/s
[info] Iteration   1: 1413649.498 ops/s
[info]                  ·gc.alloc.rate:                   1423.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              1584.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1485.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1402282.198 ops/s
[info]                  ·gc.alloc.rate:                   1411.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              1584.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1505.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1406776.410 ops/s
[info]                  ·gc.alloc.rate:                   1416.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              1584.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1684.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1883.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.116 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1400140.512 ops/s
[info]                  ·gc.alloc.rate:                   1409.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              1584.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1519.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1398404.518 ops/s
[info]                  ·gc.alloc.rate:                   1408.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              1584.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1524.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce":
[info]   1404250.627 ±(99.9%) 23553.787 ops/s [Average]
[info]   (min, avg, max) = (1398404.518, 1404250.627, 1413649.498), stdev = 6116.844
[info]   CI (99.9%): [1380696.840, 1427804.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1413.827 ±(99.9%) 23.450 MB/sec [Average]
[info]   (min, avg, max) = (1408.001, 1413.827, 1423.149), stdev = 6.090
[info]   CI (99.9%): [1390.377, 1437.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1584.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1584.000, 1584.000, 1584.000), stdev = 0.001
[info]   CI (99.9%): [1584.000, 1584.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1413.656 ±(99.9%) 583.724 MB/sec [Average]
[info]   (min, avg, max) = (1335.018, 1413.656, 1684.452), stdev = 151.591
[info]   CI (99.9%): [829.933, 1997.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1583.718 ±(99.9%) 648.284 B/op [Average]
[info]   (min, avg, max) = (1485.909, 1583.718, 1883.707), stdev = 168.357
[info]   CI (99.9%): [935.434, 2232.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.075 ±(99.9%) 0.147 B/op [Average]
[info]   (min, avg, max) = (0.023, 0.075, 0.116), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 10.000), stdev = 1.581
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson
[info] # Run progress: 53.13% complete, ETA 00:15:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2101703.289 ops/s
[info] # Warmup Iteration   2: 4201199.674 ops/s
[info] # Warmup Iteration   3: 4224134.467 ops/s
[info] # Warmup Iteration   4: 4244004.257 ops/s
[info] # Warmup Iteration   5: 4232011.072 ops/s
[info] Iteration   1: 4255148.717 ops/s
[info]                  ·gc.alloc.rate:                   1168.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     486.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 4291381.852 ops/s
[info]                  ·gc.alloc.rate:                   1178.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     363.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 4308329.978 ops/s
[info]                  ·gc.alloc.rate:                   1182.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     486.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4290302.364 ops/s
[info]                  ·gc.alloc.rate:                   1177.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     368.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4235042.425 ops/s
[info]                  ·gc.alloc.rate:                   1162.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     499.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson":
[info]   4276041.067 ±(99.9%) 115498.089 ops/s [Average]
[info]   (min, avg, max) = (4235042.425, 4276041.067, 4308329.978), stdev = 29994.487
[info]   CI (99.9%): [4160542.978, 4391539.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1174.029 ±(99.9%) 31.820 MB/sec [Average]
[info]   (min, avg, max) = (1162.699, 1174.029, 1182.928), stdev = 8.263
[info]   CI (99.9%): [1142.209, 1205.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1197.204 ±(99.9%) 701.355 MB/sec [Average]
[info]   (min, avg, max) = (992.518, 1197.204, 1343.258), stdev = 182.140
[info]   CI (99.9%): [495.849, 1898.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   440.720 ±(99.9%) 263.588 B/op [Average]
[info]   (min, avg, max) = (363.909, 440.720, 499.087), stdev = 68.453
[info]   CI (99.9%): [177.132, 704.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.023, 0.031), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 15.000), stdev = 4.848
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 53.91% complete, ETA 00:15:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12604026.981 ops/s
[info] # Warmup Iteration   2: 14837449.435 ops/s
[info] # Warmup Iteration   3: 15493356.944 ops/s
[info] # Warmup Iteration   4: 15402697.543 ops/s
[info] # Warmup Iteration   5: 15589253.345 ops/s
[info] Iteration   1: 15698690.766 ops/s
[info]                  ·gc.alloc.rate:               478.931 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.125 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 15621828.419 ops/s
[info]                  ·gc.alloc.rate:                   476.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 15872422.340 ops/s
[info]                  ·gc.alloc.rate:               484.260 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32.763 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 15855551.836 ops/s
[info]                  ·gc.alloc.rate:                   483.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 15805007.958 ops/s
[info]                  ·gc.alloc.rate:               482.151 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.036 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter":
[info]   15770700.264 ±(99.9%) 413260.310 ops/s [Average]
[info]   (min, avg, max) = (15621828.419, 15770700.264, 15872422.340), stdev = 107322.390
[info]   CI (99.9%): [15357439.953, 16183960.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   481.128 ±(99.9%) 12.621 MB/sec [Average]
[info]   (min, avg, max) = (476.587, 481.128, 484.260), stdev = 3.278
[info]   CI (99.9%): [468.507, 493.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   463.255 ±(99.9%) 697.541 MB/sec [Average]
[info]   (min, avg, max) = (330.509, 463.255, 662.368), stdev = 181.149
[info]   CI (99.9%): [≈ 0, 1160.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   46.246 ±(99.9%) 69.985 B/op [Average]
[info]   (min, avg, max) = (32.763, 46.246, 66.575), stdev = 18.175
[info]   CI (99.9%): [≈ 0, 116.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.008), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 4.000), stdev = 1.095
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc
[info] # Run progress: 54.69% complete, ETA 00:15:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17141083.284 ops/s
[info] # Warmup Iteration   2: 18112481.223 ops/s
[info] # Warmup Iteration   3: 18959883.645 ops/s
[info] # Warmup Iteration   4: 19107886.760 ops/s
[info] # Warmup Iteration   5: 19013495.211 ops/s
[info] Iteration   1: 19063874.982 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 18959792.303 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 18937345.627 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 19075819.492 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 19002481.939 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc":
[info]   19007862.869 ±(99.9%) 236335.719 ops/s [Average]
[info]   (min, avg, max) = (18937345.627, 19007862.869, 19075819.492), stdev = 61375.636
[info]   CI (99.9%): [18771527.150, 19244198.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay
[info] # Run progress: 55.47% complete, ETA 00:15:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 329415.903 ops/s
[info] # Warmup Iteration   2: 930607.246 ops/s
[info] # Warmup Iteration   3: 932344.480 ops/s
[info] # Warmup Iteration   4: 937061.661 ops/s
[info] # Warmup Iteration   5: 938621.767 ops/s
[info] Iteration   1: 941400.419 ops/s
[info]                  ·gc.alloc.rate:                   1413.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1669.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2787.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 933393.086 ops/s
[info]                  ·gc.alloc.rate:                   1400.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2266.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 914748.443 ops/s
[info]                  ·gc.alloc.rate:                   1372.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2321.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 934140.337 ops/s
[info]                  ·gc.alloc.rate:                   1401.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2279.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 943354.945 ops/s
[info]                  ·gc.alloc.rate:                   1415.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2261.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay":
[info]   933407.446 ±(99.9%) 43545.322 ops/s [Average]
[info]   (min, avg, max) = (914748.443, 933407.446, 943354.945), stdev = 11308.582
[info]   CI (99.9%): [889862.124, 976952.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1400.371 ±(99.9%) 66.454 MB/sec [Average]
[info]   (min, avg, max) = (1372.064, 1400.371, 1415.014), stdev = 17.258
[info]   CI (99.9%): [1333.917, 1466.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2360.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2360.000, 2360.000, 2360.000), stdev = 0.001
[info]   CI (99.9%): [2360.000, 2360.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1414.716 ±(99.9%) 549.430 MB/sec [Average]
[info]   (min, avg, max) = (1344.740, 1414.716, 1669.847), stdev = 142.685
[info]   CI (99.9%): [865.285, 1964.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2383.422 ±(99.9%) 875.164 B/op [Average]
[info]   (min, avg, max) = (2261.632, 2383.422, 2787.801), stdev = 227.277
[info]   CI (99.9%): [1508.258, 3258.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.046, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.010, 0.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.077 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (0.069, 0.077, 0.104), stdev = 0.015
[info]   CI (99.9%): [0.019, 0.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.600, 14.000), stdev = 3.578
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce
[info] # Run progress: 56.25% complete, ETA 00:14:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 366189.429 ops/s
[info] # Warmup Iteration   2: 638628.379 ops/s
[info] # Warmup Iteration   3: 645943.997 ops/s
[info] # Warmup Iteration   4: 655521.283 ops/s
[info] # Warmup Iteration   5: 644833.032 ops/s
[info] Iteration   1: 656888.272 ops/s
[info]                  ·gc.alloc.rate:                   1512.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              3624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3199.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 652093.945 ops/s
[info]                  ·gc.alloc.rate:                   1502.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              3624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1679.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4051.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 661970.659 ops/s
[info]                  ·gc.alloc.rate:                   1524.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              3624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3205.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 644473.855 ops/s
[info]                  ·gc.alloc.rate:                   1484.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              3624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4128.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 657855.658 ops/s
[info]                  ·gc.alloc.rate:                   1515.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              3624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3243.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce":
[info]   654656.478 ±(99.9%) 25756.555 ops/s [Average]
[info]   (min, avg, max) = (644473.855, 654656.478, 661970.659), stdev = 6688.896
[info]   CI (99.9%): [628899.923, 680413.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1507.933 ±(99.9%) 59.305 MB/sec [Average]
[info]   (min, avg, max) = (1484.487, 1507.933, 1524.819), stdev = 15.401
[info]   CI (99.9%): [1448.627, 1567.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3624.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3624.001, 3624.001, 3624.001), stdev = 0.001
[info]   CI (99.9%): [3624.001, 3624.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1482.243 ±(99.9%) 714.227 MB/sec [Average]
[info]   (min, avg, max) = (1335.965, 1482.243, 1691.233), stdev = 185.482
[info]   CI (99.9%): [768.016, 2196.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3565.754 ±(99.9%) 1847.052 B/op [Average]
[info]   (min, avg, max) = (3199.982, 3565.754, 4128.720), stdev = 479.673
[info]   CI (99.9%): [1718.703, 5412.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.140 ±(99.9%) 0.161 B/op [Average]
[info]   (min, avg, max) = (0.100, 0.140, 0.201), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.600, 13.000), stdev = 3.050
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson
[info] # Run progress: 57.03% complete, ETA 00:14:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1115143.656 ops/s
[info] # Warmup Iteration   2: 2257866.827 ops/s
[info] # Warmup Iteration   3: 2310752.738 ops/s
[info] # Warmup Iteration   4: 2313328.027 ops/s
[info] # Warmup Iteration   5: 2294460.541 ops/s
[info] Iteration   1: 2325013.839 ops/s
[info]                  ·gc.alloc.rate:                   1347.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     893.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2318127.324 ops/s
[info]                  ·gc.alloc.rate:                   1343.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     903.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2312679.851 ops/s
[info]                  ·gc.alloc.rate:                   1340.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     910.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 2329370.523 ops/s
[info]                  ·gc.alloc.rate:                   1350.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     908.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2307912.711 ops/s
[info]                  ·gc.alloc.rate:                   1337.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     919.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson":
[info]   2318620.850 ±(99.9%) 33713.980 ops/s [Average]
[info]   (min, avg, max) = (2307912.711, 2318620.850, 2329370.523), stdev = 8755.414
[info]   CI (99.9%): [2284906.869, 2352334.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1343.886 ±(99.9%) 19.610 MB/sec [Average]
[info]   (min, avg, max) = (1337.663, 1343.886, 1350.143), stdev = 5.093
[info]   CI (99.9%): [1324.276, 1363.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1336.488 ±(99.9%) 43.323 MB/sec [Average]
[info]   (min, avg, max) = (1320.576, 1336.488, 1348.835), stdev = 11.251
[info]   CI (99.9%): [1293.164, 1379.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   906.999 ±(99.9%) 36.622 B/op [Average]
[info]   (min, avg, max) = (893.739, 906.999, 919.617), stdev = 9.511
[info]   CI (99.9%): [870.377, 943.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.042 ±(99.9%) 0.109 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.042, 0.071), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 13.000), stdev = 3.130
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter
[info] # Run progress: 57.81% complete, ETA 00:14:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4417234.750 ops/s
[info] # Warmup Iteration   2: 4592077.464 ops/s
[info] # Warmup Iteration   3: 4814982.645 ops/s
[info] # Warmup Iteration   4: 4478694.724 ops/s
[info] # Warmup Iteration   5: 4715142.451 ops/s
[info] Iteration   1: 4685462.264 ops/s
[info]                  ·gc.alloc.rate:                   1286.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     449.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 4724580.191 ops/s
[info]                  ·gc.alloc.rate:                   1297.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     447.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4772344.712 ops/s
[info]                  ·gc.alloc.rate:                   1310.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     444.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 4761678.556 ops/s
[info]                  ·gc.alloc.rate:                   1307.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     446.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 4819397.048 ops/s
[info]                  ·gc.alloc.rate:                   1323.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1015.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     331.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter":
[info]   4752692.554 ±(99.9%) 194701.957 ops/s [Average]
[info]   (min, avg, max) = (4685462.264, 4752692.554, 4819397.048), stdev = 50563.480
[info]   CI (99.9%): [4557990.597, 4947394.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1304.913 ±(99.9%) 53.476 MB/sec [Average]
[info]   (min, avg, max) = (1286.450, 1304.913, 1323.219), stdev = 13.888
[info]   CI (99.9%): [1251.436, 1358.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1279.426 ±(99.9%) 567.805 MB/sec [Average]
[info]   (min, avg, max) = (1015.813, 1279.426, 1352.015), stdev = 147.457
[info]   CI (99.9%): [711.621, 1847.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   423.895 ±(99.9%) 198.702 B/op [Average]
[info]   (min, avg, max) = (331.639, 423.895, 449.315), stdev = 51.602
[info]   CI (99.9%): [225.193, 622.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.125), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.045 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.024, 0.042), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 17.000), stdev = 6.000
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay
[info] # Run progress: 58.59% complete, ETA 00:14:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71475.572 ops/s
[info] # Warmup Iteration   2: 364957.239 ops/s
[info] # Warmup Iteration   3: 378109.732 ops/s
[info] # Warmup Iteration   4: 373969.350 ops/s
[info] # Warmup Iteration   5: 371209.288 ops/s
[info] Iteration   1: 374552.536 ops/s
[info]                  ·gc.alloc.rate:                   1310.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              5504.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5600.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 375656.705 ops/s
[info]                  ·gc.alloc.rate:                   1314.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              5504.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5615.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 374003.445 ops/s
[info]                  ·gc.alloc.rate:                   1308.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              5504.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5662.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 373775.376 ops/s
[info]                  ·gc.alloc.rate:                   1307.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              5504.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5685.551 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 370955.392 ops/s
[info]                  ·gc.alloc.rate:                   1297.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              5504.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5740.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay":
[info]   373788.691 ±(99.9%) 6710.186 ops/s [Average]
[info]   (min, avg, max) = (370955.392, 373788.691, 375656.705), stdev = 1742.614
[info]   CI (99.9%): [367078.505, 380498.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1307.605 ±(99.9%) 23.553 MB/sec [Average]
[info]   (min, avg, max) = (1297.683, 1307.605, 1314.187), stdev = 6.117
[info]   CI (99.9%): [1284.051, 1331.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5504.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5504.001, 5504.001, 5504.001), stdev = 0.001
[info]   CI (99.9%): [5504.001, 5504.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1344.833 ±(99.9%) 30.747 MB/sec [Average]
[info]   (min, avg, max) = (1333.408, 1344.833, 1353.360), stdev = 7.985
[info]   CI (99.9%): [1314.086, 1375.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5660.894 ±(99.9%) 215.802 B/op [Average]
[info]   (min, avg, max) = (5600.967, 5660.894, 5740.147), stdev = 56.043
[info]   CI (99.9%): [5445.092, 5876.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.175 ±(99.9%) 0.335 B/op [Average]
[info]   (min, avg, max) = (0.088, 0.175, 0.262), stdev = 0.087
[info]   CI (99.9%): [≈ 0, 0.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 12.000), stdev = 2.775
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce
[info] # Run progress: 59.38% complete, ETA 00:13:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 136329.268 ops/s
[info] # Warmup Iteration   2: 159592.562 ops/s
[info] # Warmup Iteration   3: 161506.760 ops/s
[info] # Warmup Iteration   4: 159689.024 ops/s
[info] # Warmup Iteration   5: 161653.034 ops/s
[info] Iteration   1: 161625.464 ops/s
[info]                  ·gc.alloc.rate:                   825.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9636.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.608 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 162126.752 ops/s
[info]                  ·gc.alloc.rate:                   827.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6427.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 160571.178 ops/s
[info]                  ·gc.alloc.rate:                   819.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9771.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.408 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 156262.236 ops/s
[info]                  ·gc.alloc.rate:                   797.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6712.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 162804.368 ops/s
[info]                  ·gc.alloc.rate:                   831.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6462.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce":
[info]   160678.000 ±(99.9%) 10009.525 ops/s [Average]
[info]   (min, avg, max) = (156262.236, 160678.000, 162804.368), stdev = 2599.442
[info]   CI (99.9%): [150668.474, 170687.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate":
[info]   820.200 ±(99.9%) 51.136 MB/sec [Average]
[info]   (min, avg, max) = (797.657, 820.200, 831.107), stdev = 13.280
[info]   CI (99.9%): [769.064, 871.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate.norm":
[info]   8032.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8032.003, 8032.003, 8032.003), stdev = 0.001
[info]   CI (99.9%): [8032.002, 8032.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   796.892 ±(99.9%) 691.047 MB/sec [Average]
[info]   (min, avg, max) = (662.290, 796.892, 997.088), stdev = 179.463
[info]   CI (99.9%): [105.845, 1487.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   7801.916 ±(99.9%) 6700.662 B/op [Average]
[info]   (min, avg, max) = (6427.785, 7801.916, 9771.248), stdev = 1740.141
[info]   CI (99.9%): [1101.254, 14502.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.488 ±(99.9%) 1.296 B/op [Average]
[info]   (min, avg, max) = (0.201, 0.488, 1.010), stdev = 0.337
[info]   CI (99.9%): [≈ 0, 1.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson
[info] # Run progress: 60.16% complete, ETA 00:13:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 374148.550 ops/s
[info] # Warmup Iteration   2: 491421.049 ops/s
[info] # Warmup Iteration   3: 495397.732 ops/s
[info] # Warmup Iteration   4: 508869.667 ops/s
[info] # Warmup Iteration   5: 509946.341 ops/s
[info] Iteration   1: 510081.504 ops/s
[info]                  ·gc.alloc.rate:                   516.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2010.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 505952.946 ops/s
[info]                  ·gc.alloc.rate:                   511.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2028.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 515268.693 ops/s
[info]                  ·gc.alloc.rate:               521.391 MB/sec
[info]                  ·gc.alloc.rate.norm:          1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 998.028 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 507235.291 ops/s
[info]                  ·gc.alloc.rate:                   513.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2031.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 510073.181 ops/s
[info]                  ·gc.alloc.rate:               516.059 MB/sec
[info]                  ·gc.alloc.rate.norm:          1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1012.292 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson":
[info]   509722.323 ±(99.9%) 13804.420 ops/s [Average]
[info]   (min, avg, max) = (505952.946, 509722.323, 515268.693), stdev = 3584.964
[info]   CI (99.9%): [495917.903, 523526.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate":
[info]   515.740 ±(99.9%) 14.029 MB/sec [Average]
[info]   (min, avg, max) = (511.925, 515.740, 521.391), stdev = 3.643
[info]   CI (99.9%): [501.711, 529.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate.norm":
[info]   1592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1592.001, 1592.001, 1592.001), stdev = 0.001
[info]   CI (99.9%): [1592.001, 1592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   522.786 ±(99.9%) 686.472 MB/sec [Average]
[info]   (min, avg, max) = (326.861, 522.786, 654.926), stdev = 178.275
[info]   CI (99.9%): [≈ 0, 1209.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1616.142 ±(99.9%) 2148.008 B/op [Average]
[info]   (min, avg, max) = (998.028, 1616.142, 2031.587), stdev = 557.831
[info]   CI (99.9%): [≈ 0, 3764.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.090 ±(99.9%) 0.417 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.090, 0.259), stdev = 0.108
[info]   CI (99.9%): [≈ 0, 0.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 6.000, 10.000), stdev = 3.391
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter
[info] # Run progress: 60.94% complete, ETA 00:13:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 620321.771 ops/s
[info] # Warmup Iteration   2: 642829.493 ops/s
[info] # Warmup Iteration   3: 642482.542 ops/s
[info] # Warmup Iteration   4: 637009.879 ops/s
[info] # Warmup Iteration   5: 639427.791 ops/s
[info] Iteration   1: 644283.376 ops/s
[info]                  ·gc.alloc.rate:                   543.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1615.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.203 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 645696.752 ops/s
[info]                  ·gc.alloc.rate:               544.945 MB/sec
[info]                  ·gc.alloc.rate.norm:          1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 806.172 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 640844.137 ops/s
[info]                  ·gc.alloc.rate:                   540.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1626.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 629595.991 ops/s
[info]                  ·gc.alloc.rate:                   531.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1658.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 636528.448 ops/s
[info]                  ·gc.alloc.rate:               537.302 MB/sec
[info]                  ·gc.alloc.rate.norm:          1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      332.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 821.929 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter":
[info]   639389.741 ±(99.9%) 25099.129 ops/s [Average]
[info]   (min, avg, max) = (629595.991, 639389.741, 645696.752), stdev = 6518.164
[info]   CI (99.9%): [614290.612, 664488.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate":
[info]   539.642 ±(99.9%) 21.216 MB/sec [Average]
[info]   (min, avg, max) = (531.324, 539.642, 544.945), stdev = 5.510
[info]   CI (99.9%): [518.425, 560.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   1328.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1328.001, 1328.001, 1328.001), stdev = 0.001
[info]   CI (99.9%): [1328.001, 1328.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   530.112 ±(99.9%) 697.524 MB/sec [Average]
[info]   (min, avg, max) = (330.813, 530.112, 663.564), stdev = 181.145
[info]   CI (99.9%): [≈ 0, 1227.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1305.580 ±(99.9%) 1729.019 B/op [Average]
[info]   (min, avg, max) = (806.172, 1305.580, 1658.523), stdev = 449.021
[info]   CI (99.9%): [≈ 0, 3034.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.092 ±(99.9%) 0.351 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.092, 0.203), stdev = 0.091
[info]   CI (99.9%): [≈ 0, 0.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc
[info] # Run progress: 61.72% complete, ETA 00:12:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 660606.799 ops/s
[info] # Warmup Iteration   2: 659461.998 ops/s
[info] # Warmup Iteration   3: 658707.148 ops/s
[info] # Warmup Iteration   4: 671706.675 ops/s
[info] # Warmup Iteration   5: 674974.656 ops/s
[info] Iteration   1: 672639.518 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 675064.676 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 672998.946 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 671495.780 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 674254.405 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc":
[info]   673290.665 ±(99.9%) 5379.410 ops/s [Average]
[info]   (min, avg, max) = (671495.780, 673290.665, 675064.676), stdev = 1397.016
[info]   CI (99.9%): [667911.255, 678670.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay
[info] # Run progress: 62.50% complete, ETA 00:12:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 462588.233 ops/s
[info] # Warmup Iteration   2: 588779.172 ops/s
[info] # Warmup Iteration   3: 595837.822 ops/s
[info] # Warmup Iteration   4: 606748.405 ops/s
[info] # Warmup Iteration   5: 607497.658 ops/s
[info] Iteration   1: 605308.735 ops/s
[info]                  ·gc.alloc.rate:                   646.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1699.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 601294.310 ops/s
[info]                  ·gc.alloc.rate:                   641.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1713.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.218 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 603106.383 ops/s
[info]                  ·gc.alloc.rate:                   643.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1714.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 604941.930 ops/s
[info]                  ·gc.alloc.rate:                   645.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1714.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 601024.689 ops/s
[info]                  ·gc.alloc.rate:                   641.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1730.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay":
[info]   603135.209 ±(99.9%) 7660.869 ops/s [Average]
[info]   (min, avg, max) = (601024.689, 603135.209, 605308.735), stdev = 1989.503
[info]   CI (99.9%): [595474.341, 610796.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate":
[info]   643.986 ±(99.9%) 8.185 MB/sec [Average]
[info]   (min, avg, max) = (641.753, 643.986, 646.263), stdev = 2.126
[info]   CI (99.9%): [635.801, 652.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate.norm":
[info]   1680.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1680.001, 1680.001, 1680.001), stdev = 0.001
[info]   CI (99.9%): [1680.001, 1680.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space":
[info]   657.117 ±(99.9%) 11.562 MB/sec [Average]
[info]   (min, avg, max) = (653.600, 657.117, 661.014), stdev = 3.003
[info]   CI (99.9%): [645.554, 668.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space.norm":
[info]   1714.276 ±(99.9%) 42.710 B/op [Average]
[info]   (min, avg, max) = (1699.073, 1714.276, 1730.421), stdev = 11.092
[info]   CI (99.9%): [1671.566, 1756.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.141 ±(99.9%) 0.239 B/op [Average]
[info]   (min, avg, max) = (0.055, 0.141, 0.218), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 1.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson
[info] # Run progress: 63.28% complete, ETA 00:12:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1076503.469 ops/s
[info] # Warmup Iteration   2: 1950154.904 ops/s
[info] # Warmup Iteration   3: 1967137.236 ops/s
[info] # Warmup Iteration   4: 1995268.116 ops/s
[info] # Warmup Iteration   5: 1984748.588 ops/s
[info] Iteration   1: 1999273.436 ops/s
[info]                  ·gc.alloc.rate:                   1057.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     774.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1989458.755 ops/s
[info]                  ·gc.alloc.rate:                   1051.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     782.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1995972.242 ops/s
[info]                  ·gc.alloc.rate:                   1055.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     784.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1976983.467 ops/s
[info]                  ·gc.alloc.rate:                   1045.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     795.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1986782.019 ops/s
[info]                  ·gc.alloc.rate:                   1050.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     795.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson":
[info]   1989693.984 ±(99.9%) 33418.318 ops/s [Average]
[info]   (min, avg, max) = (1976983.467, 1989693.984, 1999273.436), stdev = 8678.631
[info]   CI (99.9%): [1956275.666, 2023112.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1052.127 ±(99.9%) 17.480 MB/sec [Average]
[info]   (min, avg, max) = (1045.496, 1052.127, 1057.197), stdev = 4.539
[info]   CI (99.9%): [1034.647, 1069.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   832.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (832.000, 832.000, 832.000), stdev = 0.001
[info]   CI (99.9%): [832.000, 832.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   994.306 ±(99.9%) 30.977 MB/sec [Average]
[info]   (min, avg, max) = (983.831, 994.306, 1004.157), stdev = 8.045
[info]   CI (99.9%): [963.328, 1025.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   786.303 ±(99.9%) 34.626 B/op [Average]
[info]   (min, avg, max) = (774.262, 786.303, 795.229), stdev = 8.992
[info]   CI (99.9%): [751.677, 820.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.079, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.062 ±(99.9%) 0.137 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.062, 0.099), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 9.000), stdev = 1.140
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter
[info] # Run progress: 64.06% complete, ETA 00:12:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4255852.285 ops/s
[info] # Warmup Iteration   2: 4507983.307 ops/s
[info] # Warmup Iteration   3: 4482969.156 ops/s
[info] # Warmup Iteration   4: 4541402.777 ops/s
[info] # Warmup Iteration   5: 4517582.520 ops/s
[info] Iteration   1: 4531776.313 ops/s
[info]                  ·gc.alloc.rate:                   691.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     229.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 4531469.323 ops/s
[info]                  ·gc.alloc.rate:                   691.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     230.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 4009113.687 ops/s
[info]                  ·gc.alloc.rate:               611.488 MB/sec
[info]                  ·gc.alloc.rate.norm:          240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 260.706 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 4561384.774 ops/s
[info]                  ·gc.alloc.rate:                   695.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     229.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4475221.143 ops/s
[info]                  ·gc.alloc.rate:                   682.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     234.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter":
[info]   4421793.048 ±(99.9%) 896402.014 ops/s [Average]
[info]   (min, avg, max) = (4009113.687, 4421793.048, 4561384.774), stdev = 232792.756
[info]   CI (99.9%): [3525391.034, 5318195.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   674.475 ±(99.9%) 136.813 MB/sec [Average]
[info]   (min, avg, max) = (611.488, 674.475, 695.738), stdev = 35.530
[info]   CI (99.9%): [537.662, 811.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   664.394 ±(99.9%) 7.631 MB/sec [Average]
[info]   (min, avg, max) = (662.035, 664.394, 666.996), stdev = 1.982
[info]   CI (99.9%): [656.763, 672.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   236.978 ±(99.9%) 51.660 B/op [Average]
[info]   (min, avg, max) = (229.618, 236.978, 260.706), stdev = 13.416
[info]   CI (99.9%): [185.318, 288.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.029), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 8.000), stdev = 1.643
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay
[info] # Run progress: 64.84% complete, ETA 00:11:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 110843.168 ops/s
[info] # Warmup Iteration   2: 494220.975 ops/s
[info] # Warmup Iteration   3: 500041.065 ops/s
[info] # Warmup Iteration   4: 504764.671 ops/s
[info] # Warmup Iteration   5: 498694.731 ops/s
[info] Iteration   1: 497224.517 ops/s
[info]                  ·gc.alloc.rate:                   1471.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4236.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 499462.128 ops/s
[info]                  ·gc.alloc.rate:                   1478.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5296.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.230 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 502002.590 ops/s
[info]                  ·gc.alloc.rate:                   1485.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4233.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 505014.888 ops/s
[info]                  ·gc.alloc.rate:                   1494.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4218.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 501841.331 ops/s
[info]                  ·gc.alloc.rate:                   1484.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5316.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.326 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay":
[info]   501109.091 ±(99.9%) 11291.019 ops/s [Average]
[info]   (min, avg, max) = (497224.517, 501109.091, 505014.888), stdev = 2932.242
[info]   CI (99.9%): [489818.071, 512400.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1482.852 ±(99.9%) 33.197 MB/sec [Average]
[info]   (min, avg, max) = (1471.418, 1482.852, 1494.325), stdev = 8.621
[info]   CI (99.9%): [1449.656, 1516.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1484.174 ±(99.9%) 719.212 MB/sec [Average]
[info]   (min, avg, max) = (1339.002, 1484.174, 1695.790), stdev = 186.777
[info]   CI (99.9%): [764.962, 2203.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4660.561 ±(99.9%) 2272.215 B/op [Average]
[info]   (min, avg, max) = (4218.602, 4660.561, 5316.983), stdev = 590.087
[info]   CI (99.9%): [2388.346, 6932.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.060 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.060, 0.104), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.190 ±(99.9%) 0.338 B/op [Average]
[info]   (min, avg, max) = (0.130, 0.190, 0.326), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.800, 16.000), stdev = 4.658
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce
[info] # Run progress: 65.63% complete, ETA 00:11:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3940.456 ops/s
[info] # Warmup Iteration   2: 5148.931 ops/s
[info] # Warmup Iteration   3: 5445.683 ops/s
[info] # Warmup Iteration   4: 5518.995 ops/s
[info] # Warmup Iteration   5: 5403.634 ops/s
[info] Iteration   1: 5443.452 ops/s
[info]                  ·gc.alloc.rate:                   1253.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     384670.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 5519.704 ops/s
[info]                  ·gc.alloc.rate:                   1270.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     285742.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.676 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 5474.067 ops/s
[info]                  ·gc.alloc.rate:                   1260.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     385652.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.968 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 5491.181 ops/s
[info]                  ·gc.alloc.rate:                   1264.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     385985.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.931 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 5448.133 ops/s
[info]                  ·gc.alloc.rate:                   1254.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     390378.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.193 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.787 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce":
[info]   5475.307 ±(99.9%) 121.429 ops/s [Average]
[info]   (min, avg, max) = (5443.452, 5475.307, 5519.704), stdev = 31.535
[info]   CI (99.9%): [5353.879, 5596.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1260.632 ±(99.9%) 27.763 MB/sec [Average]
[info]   (min, avg, max) = (1253.392, 1260.632, 1270.755), stdev = 7.210
[info]   CI (99.9%): [1232.869, 1288.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   362272.081 ±(99.9%) 0.012 B/op [Average]
[info]   (min, avg, max) = (362272.079, 362272.081, 362272.085), stdev = 0.003
[info]   CI (99.9%): [362272.069, 362272.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   1274.725 ±(99.9%) 587.159 MB/sec [Average]
[info]   (min, avg, max) = (1002.308, 1274.725, 1351.701), stdev = 152.483
[info]   CI (99.9%): [687.566, 1861.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   366485.794 ±(99.9%) 174011.888 B/op [Average]
[info]   (min, avg, max) = (285742.183, 366485.794, 390378.111), stdev = 45190.335
[info]   CI (99.9%): [192473.906, 540497.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.080 ±(99.9%) 0.271 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.080, 0.193), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   23.076 ±(99.9%) 78.258 B/op [Average]
[info]   (min, avg, max) = (6.018, 23.076, 55.787), stdev = 20.323
[info]   CI (99.9%): [≈ 0, 101.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 10.000), stdev = 1.304
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson
[info] # Run progress: 66.41% complete, ETA 00:11:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15743.356 ops/s
[info] # Warmup Iteration   2: 28769.494 ops/s
[info] # Warmup Iteration   3: 28800.710 ops/s
[info] # Warmup Iteration   4: 28764.045 ops/s
[info] # Warmup Iteration   5: 29070.813 ops/s
[info] Iteration   1: 28890.830 ops/s
[info]                  ·gc.alloc.rate:                   418.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17618.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.134 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 28796.518 ops/s
[info]                  ·gc.alloc.rate:               417.434 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.726 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17693.491 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 29131.714 ops/s
[info]                  ·gc.alloc.rate:                   422.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:          648.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34998.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.498 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 29066.415 ops/s
[info]                  ·gc.alloc.rate:               421.347 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.787 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17546.597 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 29095.030 ops/s
[info]                  ·gc.alloc.rate:               421.762 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17565.143 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson":
[info]   28996.101 ±(99.9%) 558.135 ops/s [Average]
[info]   (min, avg, max) = (28796.518, 28996.101, 29131.714), stdev = 144.946
[info]   CI (99.9%): [28437.966, 29554.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   420.336 ±(99.9%) 8.105 MB/sec [Average]
[info]   (min, avg, max) = (417.434, 420.336, 422.320), stdev = 2.105
[info]   CI (99.9%): [412.231, 428.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   22807.863 ±(99.9%) 0.436 B/op [Average]
[info]   (min, avg, max) = (22807.726, 22807.863, 22807.986), stdev = 0.113
[info]   CI (99.9%): [22807.427, 22808.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   388.872 ±(99.9%) 557.882 MB/sec [Average]
[info]   (min, avg, max) = (323.522, 388.872, 648.040), stdev = 144.880
[info]   CI (99.9%): [≈ 0, 946.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   21084.350 ±(99.9%) 29951.240 B/op [Average]
[info]   (min, avg, max) = (17546.597, 21084.350, 34998.118), stdev = 7778.242
[info]   CI (99.9%): [≈ 0, 51035.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.127 ±(99.9%) 7.501 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.127, 4.498), stdev = 1.948
[info]   CI (99.9%): [≈ 0, 8.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter
[info] # Run progress: 67.19% complete, ETA 00:11:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42405.893 ops/s
[info] # Warmup Iteration   2: 45419.500 ops/s
[info] # Warmup Iteration   3: 45265.282 ops/s
[info] # Warmup Iteration   4: 46138.479 ops/s
[info] # Warmup Iteration   5: 45681.355 ops/s
[info] Iteration   1: 46419.062 ops/s
[info]                  ·gc.alloc.rate:                   349.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11213.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.829 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 46433.054 ops/s
[info]                  ·gc.alloc.rate:                   349.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11210.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.411 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 45904.674 ops/s
[info]                  ·gc.alloc.rate:                   345.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11328.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.714 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 46136.961 ops/s
[info]                  ·gc.alloc.rate:               347.679 MB/sec
[info]                  ·gc.alloc.rate.norm:          11856.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11270.857 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 46623.346 ops/s
[info]                  ·gc.alloc.rate:                   351.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11153.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.405 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter":
[info]   46303.419 ±(99.9%) 1087.828 ops/s [Average]
[info]   (min, avg, max) = (45904.674, 46303.419, 46623.346), stdev = 282.505
[info]   CI (99.9%): [45215.591, 47391.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   348.896 ±(99.9%) 8.174 MB/sec [Average]
[info]   (min, avg, max) = (345.879, 348.896, 351.296), stdev = 2.123
[info]   CI (99.9%): [340.722, 357.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   11856.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11856.009, 11856.009, 11856.010), stdev = 0.001
[info]   CI (99.9%): [11856.008, 11856.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   330.628 ±(99.9%) 0.685 MB/sec [Average]
[info]   (min, avg, max) = (330.484, 330.628, 330.828), stdev = 0.178
[info]   CI (99.9%): [329.943, 331.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   11235.552 ±(99.9%) 256.052 B/op [Average]
[info]   (min, avg, max) = (11153.628, 11235.552, 11328.549), stdev = 66.496
[info]   CI (99.9%): [10979.499, 11491.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.387 ±(99.9%) 3.106 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.387, 1.829), stdev = 0.807
[info]   CI (99.9%): [≈ 0, 3.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   13.109 ±(99.9%) 105.295 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.109, 62.014), stdev = 27.345
[info]   CI (99.9%): [≈ 0, 118.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.800, 8.000), stdev = 2.588
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc
[info] # Run progress: 67.97% complete, ETA 00:10:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 62897.015 ops/s
[info] # Warmup Iteration   2: 68371.755 ops/s
[info] # Warmup Iteration   3: 68168.407 ops/s
[info] # Warmup Iteration   4: 68268.766 ops/s
[info] # Warmup Iteration   5: 68247.933 ops/s
[info] Iteration   1: 60684.697 ops/s
[info]                  ·gc.alloc.rate:      0.926 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 68313.953 ops/s
[info]                  ·gc.alloc.rate:      1.042 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 68069.783 ops/s
[info]                  ·gc.alloc.rate:      1.039 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 68368.731 ops/s
[info]                  ·gc.alloc.rate:      1.043 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 68163.617 ops/s
[info]                  ·gc.alloc.rate:      1.040 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc":
[info]   66720.156 ±(99.9%) 12999.821 ops/s [Average]
[info]   (min, avg, max) = (60684.697, 66720.156, 68368.731), stdev = 3376.012
[info]   CI (99.9%): [53720.335, 79719.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   1.018 ±(99.9%) 0.198 MB/sec [Average]
[info]   (min, avg, max) = (0.926, 1.018, 1.043), stdev = 0.052
[info]   CI (99.9%): [0.820, 1.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   24.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (24.006, 24.007, 24.007), stdev = 0.001
[info]   CI (99.9%): [24.005, 24.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay
[info] # Run progress: 68.75% complete, ETA 00:10:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1135.294 ops/s
[info] # Warmup Iteration   2: 4238.039 ops/s
[info] # Warmup Iteration   3: 4237.497 ops/s
[info] # Warmup Iteration   4: 4277.988 ops/s
[info] # Warmup Iteration   5: 4314.794 ops/s
[info] Iteration   1: 4300.609 ops/s
[info]                  ·gc.alloc.rate:               1342.613 MB/sec
[info]                  ·gc.alloc.rate.norm:          491193.594 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1334.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 488336.126 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   2: 4337.373 ops/s
[info]                  ·gc.alloc.rate:                   1354.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              491189.922 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     486588.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.656 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 4273.821 ops/s
[info]                  ·gc.alloc.rate:               1334.307 MB/sec
[info]                  ·gc.alloc.rate.norm:          491192.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 495835.411 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     18.000 ms
[info] Iteration   4: 4380.271 ops/s
[info]                  ·gc.alloc.rate:                   1367.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              491191.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     485274.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.959 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 4388.699 ops/s
[info]                  ·gc.alloc.rate:                   1370.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              491192.246 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     485354.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.928 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay":
[info]   4336.155 ±(99.9%) 191.156 ops/s [Average]
[info]   (min, avg, max) = (4273.821, 4336.155, 4388.699), stdev = 49.643
[info]   CI (99.9%): [4144.998, 4527.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1353.711 ±(99.9%) 59.503 MB/sec [Average]
[info]   (min, avg, max) = (1334.307, 1353.711, 1370.103), stdev = 15.453
[info]   CI (99.9%): [1294.208, 1413.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   491192.083 ±(99.9%) 5.232 B/op [Average]
[info]   (min, avg, max) = (491189.922, 491192.083, 491193.594), stdev = 1.359
[info]   CI (99.9%): [491186.852, 491197.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1345.583 ±(99.9%) 29.259 MB/sec [Average]
[info]   (min, avg, max) = (1334.803, 1345.583, 1353.820), stdev = 7.598
[info]   CI (99.9%): [1316.324, 1374.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   488277.840 ±(99.9%) 16953.695 B/op [Average]
[info]   (min, avg, max) = (485274.558, 488277.840, 495835.411), stdev = 4402.821
[info]   CI (99.9%): [471324.145, 505231.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   10.509 ±(99.9%) 38.878 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.509, 22.656), stdev = 10.097
[info]   CI (99.9%): [≈ 0, 49.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.000, 18.000), stdev = 5.431
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 69.53% complete, ETA 00:10:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 91710.488 ops/s
[info] # Warmup Iteration   2: 642678.608 ops/s
[info] # Warmup Iteration   3: 652690.791 ops/s
[info] # Warmup Iteration   4: 658489.092 ops/s
[info] # Warmup Iteration   5: 637435.667 ops/s
[info] Iteration   1: 670030.009 ops/s
[info]                  ·gc.alloc.rate:                   1502.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3101.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 672050.209 ops/s
[info]                  ·gc.alloc.rate:                   1506.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1662.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3893.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.195 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 665532.173 ops/s
[info]                  ·gc.alloc.rate:                   1492.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3166.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 661785.465 ops/s
[info]                  ·gc.alloc.rate:                   1483.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3199.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 661240.188 ops/s
[info]                  ·gc.alloc.rate:                   1482.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4016.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson":
[info]   666127.609 ±(99.9%) 18607.174 ops/s [Average]
[info]   (min, avg, max) = (661240.188, 666127.609, 672050.209), stdev = 4832.224
[info]   CI (99.9%): [647520.434, 684734.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1493.640 ±(99.9%) 41.865 MB/sec [Average]
[info]   (min, avg, max) = (1482.647, 1493.640, 1506.966), stdev = 10.872
[info]   CI (99.9%): [1451.775, 1535.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   3528.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3528.001, 3528.001, 3528.001), stdev = 0.001
[info]   CI (99.9%): [3528.001, 3528.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1471.249 ±(99.9%) 719.043 MB/sec [Average]
[info]   (min, avg, max) = (1320.681, 1471.249, 1687.766), stdev = 186.733
[info]   CI (99.9%): [752.206, 2190.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3475.185 ±(99.9%) 1698.843 B/op [Average]
[info]   (min, avg, max) = (3101.245, 3475.185, 4016.087), stdev = 441.184
[info]   CI (99.9%): [1776.343, 5174.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.118 ±(99.9%) 0.253 B/op [Average]
[info]   (min, avg, max) = (0.049, 0.118, 0.195), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 9.000), stdev = 1.949
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 70.31% complete, ETA 00:10:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2240696.072 ops/s
[info] # Warmup Iteration   2: 2426504.058 ops/s
[info] # Warmup Iteration   3: 2429859.187 ops/s
[info] # Warmup Iteration   4: 1894077.949 ops/s
[info] # Warmup Iteration   5: 2467358.987 ops/s
[info] Iteration   1: 2444865.618 ops/s
[info]                  ·gc.alloc.rate:                   360.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.835 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.181 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2466667.428 ops/s
[info]                  ·gc.alloc.rate:               363.687 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 211.018 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 2478707.072 ops/s
[info]                  ·gc.alloc.rate:                   365.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     209.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2461301.423 ops/s
[info]                  ·gc.alloc.rate:                   362.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     422.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2474149.239 ops/s
[info]                  ·gc.alloc.rate:               364.793 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 210.381 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter":
[info]   2465138.156 ±(99.9%) 50696.696 ops/s [Average]
[info]   (min, avg, max) = (2444865.618, 2465138.156, 2478707.072), stdev = 13165.771
[info]   CI (99.9%): [2414441.460, 2515834.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   363.474 ±(99.9%) 7.488 MB/sec [Average]
[info]   (min, avg, max) = (360.466, 363.474, 365.478), stdev = 1.945
[info]   CI (99.9%): [355.986, 370.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   232.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (232.000, 232.000, 232.000), stdev = 0.001
[info]   CI (99.9%): [232.000, 232.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   396.850 ±(99.9%) 569.431 MB/sec [Average]
[info]   (min, avg, max) = (330.486, 396.850, 661.385), stdev = 147.880
[info]   CI (99.9%): [≈ 0, 966.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   253.370 ±(99.9%) 364.667 B/op [Average]
[info]   (min, avg, max) = (209.788, 253.370, 422.767), stdev = 94.703
[info]   CI (99.9%): [≈ 0, 618.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.384 ±(99.9%) 3.126 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.384, 1.835), stdev = 0.812
[info]   CI (99.9%): [≈ 0, 3.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.247 ±(99.9%) 2.012 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.247, 1.181), stdev = 0.523
[info]   CI (99.9%): [≈ 0, 2.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 5.000), stdev = 1.949
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 71.09% complete, ETA 00:09:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 38095.493 ops/s
[info] # Warmup Iteration   2: 266396.412 ops/s
[info] # Warmup Iteration   3: 272249.346 ops/s
[info] # Warmup Iteration   4: 270928.445 ops/s
[info] # Warmup Iteration   5: 274780.901 ops/s
[info] Iteration   1: 269386.155 ops/s
[info]                  ·gc.alloc.rate:                   1030.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5808.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 273950.282 ops/s
[info]                  ·gc.alloc.rate:                   1047.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5740.589 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 275241.776 ops/s
[info]                  ·gc.alloc.rate:               1049.189 MB/sec
[info]                  ·gc.alloc.rate.norm:          6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1000.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5736.397 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 272916.720 ops/s
[info]                  ·gc.alloc.rate:                   1043.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5806.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 273947.021 ops/s
[info]                  ·gc.alloc.rate:                   1047.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5799.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay":
[info]   273088.391 ±(99.9%) 8578.642 ops/s [Average]
[info]   (min, avg, max) = (269386.155, 273088.391, 275241.776), stdev = 2227.846
[info]   CI (99.9%): [264509.748, 281667.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1043.532 ±(99.9%) 30.092 MB/sec [Average]
[info]   (min, avg, max) = (1030.059, 1043.532, 1049.189), stdev = 7.815
[info]   CI (99.9%): [1013.439, 1073.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6016.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6016.002, 6016.002, 6016.002), stdev = 0.001
[info]   CI (99.9%): [6016.001, 6016.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1002.266 ±(99.9%) 23.535 MB/sec [Average]
[info]   (min, avg, max) = (994.544, 1002.266, 1009.714), stdev = 6.112
[info]   CI (99.9%): [978.731, 1025.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5778.240 ±(99.9%) 140.429 B/op [Average]
[info]   (min, avg, max) = (5736.397, 5778.240, 5808.579), stdev = 36.469
[info]   CI (99.9%): [5637.812, 5918.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.298 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.187), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.291 ±(99.9%) 1.742 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.291, 1.095), stdev = 0.452
[info]   CI (99.9%): [≈ 0, 2.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.400, 14.000), stdev = 4.450
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayCirce
[info] # Run progress: 71.88% complete, ETA 00:09:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16416.756 ops/s
[info] # Warmup Iteration   2: 18771.682 ops/s
[info] # Warmup Iteration   3: 19096.848 ops/s
[info] # Warmup Iteration   4: 21223.098 ops/s
[info] # Warmup Iteration   5: 23234.538 ops/s
[info] Iteration   1: 21331.784 ops/s
[info]                  ·gc.alloc.rate:                   1118.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              82520.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73420.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.143 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 20162.633 ops/s
[info]                  ·gc.alloc.rate:                   1057.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              82488.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77995.835 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.500 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 20138.029 ops/s
[info]                  ·gc.alloc.rate:                   1055.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              82488.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78397.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.507 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 20376.088 ops/s
[info]                  ·gc.alloc.rate:                   1068.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              82488.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103725.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.824 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 20411.740 ops/s
[info]                  ·gc.alloc.rate:                   1070.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              82488.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77866.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.210 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayCirce":
[info]   20484.055 ±(99.9%) 1885.024 ops/s [Average]
[info]   (min, avg, max) = (20138.029, 20484.055, 21331.784), stdev = 489.535
[info]   CI (99.9%): [18599.030, 22369.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.alloc.rate":
[info]   1073.987 ±(99.9%) 99.635 MB/sec [Average]
[info]   (min, avg, max) = (1055.721, 1073.987, 1118.811), stdev = 25.875
[info]   CI (99.9%): [974.352, 1173.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.alloc.rate.norm":
[info]   82494.506 ±(99.9%) 55.838 B/op [Average]
[info]   (min, avg, max) = (82488.021, 82494.506, 82520.446), stdev = 14.501
[info]   CI (99.9%): [82438.669, 82550.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.churn.PS_Eden_Space":
[info]   1070.342 ±(99.9%) 587.874 MB/sec [Average]
[info]   (min, avg, max) = (995.433, 1070.342, 1343.272), stdev = 152.669
[info]   CI (99.9%): [482.468, 1658.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.churn.PS_Eden_Space.norm":
[info]   82281.109 ±(99.9%) 46818.137 B/op [Average]
[info]   (min, avg, max) = (73420.469, 82281.109, 103725.673), stdev = 12158.521
[info]   CI (99.9%): [35462.972, 129099.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.437 ±(99.9%) 5.482 B/op [Average]
[info]   (min, avg, max) = (3.210, 5.437, 6.507), stdev = 1.424
[info]   CI (99.9%): [≈ 0, 10.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.400, 13.000), stdev = 3.507
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJackson
[info] # Run progress: 72.66% complete, ETA 00:09:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 73789.066 ops/s
[info] # Warmup Iteration   2: 95005.326 ops/s
[info] # Warmup Iteration   3: 95069.405 ops/s
[info] # Warmup Iteration   4: 96863.213 ops/s
[info] # Warmup Iteration   5: 96311.619 ops/s
[info] Iteration   1: 96153.922 ops/s
[info]                  ·gc.alloc.rate:                   543.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              8896.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10669.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.681 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 95740.132 ops/s
[info]                  ·gc.alloc.rate:               541.310 MB/sec
[info]                  ·gc.alloc.rate.norm:          8896.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5359.934 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 96946.828 ops/s
[info]                  ·gc.alloc.rate:                   548.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              8896.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.676 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10608.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 95273.527 ops/s
[info]                  ·gc.alloc.rate:               538.696 MB/sec
[info]                  ·gc.alloc.rate.norm:          8896.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10839.104 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   5: 95498.797 ops/s
[info]                  ·gc.alloc.rate:               539.913 MB/sec
[info]                  ·gc.alloc.rate.norm:          8896.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5417.537 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJackson":
[info]   95922.641 ±(99.9%) 2537.303 ops/s [Average]
[info]   (min, avg, max) = (95273.527, 95922.641, 96946.828), stdev = 658.930
[info]   CI (99.9%): [93385.338, 98459.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.alloc.rate":
[info]   542.339 ±(99.9%) 14.343 MB/sec [Average]
[info]   (min, avg, max) = (538.696, 542.339, 548.133), stdev = 3.725
[info]   CI (99.9%): [527.997, 556.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.alloc.rate.norm":
[info]   8896.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8896.004, 8896.005, 8896.005), stdev = 0.001
[info]   CI (99.9%): [8896.004, 8896.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.churn.PS_Eden_Space":
[info]   523.400 ±(99.9%) 688.749 MB/sec [Average]
[info]   (min, avg, max) = (326.145, 523.400, 656.360), stdev = 178.866
[info]   CI (99.9%): [≈ 0, 1212.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.churn.PS_Eden_Space.norm":
[info]   8578.978 ±(99.9%) 11219.134 B/op [Average]
[info]   (min, avg, max) = (5359.934, 8578.978, 10839.104), stdev = 2913.573
[info]   CI (99.9%): [≈ 0, 19798.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.339 ±(99.9%) 1.844 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.339, 1.014), stdev = 0.479
[info]   CI (99.9%): [≈ 0, 2.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.800, 13.000), stdev = 5.357
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniter
[info] # Run progress: 73.44% complete, ETA 00:09:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 128045.749 ops/s
[info] # Warmup Iteration   2: 131960.185 ops/s
[info] # Warmup Iteration   3: 130885.145 ops/s
[info] # Warmup Iteration   4: 131165.976 ops/s
[info] # Warmup Iteration   5: 132070.000 ops/s
[info] Iteration   1: 131995.333 ops/s
[info]                  ·gc.alloc.rate:                   328.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              3912.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3947.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.784 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.260 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 133392.753 ops/s
[info]                  ·gc.alloc.rate:                   331.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              3912.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3906.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.491 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 133183.110 ops/s
[info]                  ·gc.alloc.rate:                   331.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              3912.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3904.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.492 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 133344.513 ops/s
[info]                  ·gc.alloc.rate:               331.531 MB/sec
[info]                  ·gc.alloc.rate.norm:          3912.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3899.601 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 133349.721 ops/s
[info]                  ·gc.alloc.rate:               331.567 MB/sec
[info]                  ·gc.alloc.rate.norm:          3912.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3903.210 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniter":
[info]   133053.086 ±(99.9%) 2297.551 ops/s [Average]
[info]   (min, avg, max) = (131995.333, 133053.086, 133392.753), stdev = 596.667
[info]   CI (99.9%): [130755.535, 135350.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.alloc.rate":
[info]   330.819 ±(99.9%) 5.694 MB/sec [Average]
[info]   (min, avg, max) = (328.199, 330.819, 331.664), stdev = 1.479
[info]   CI (99.9%): [325.125, 336.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.alloc.rate.norm":
[info]   3912.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3912.003, 3912.003, 3912.004), stdev = 0.001
[info]   CI (99.9%): [3912.003, 3912.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.churn.PS_Eden_Space":
[info]   330.832 ±(99.9%) 1.313 MB/sec [Average]
[info]   (min, avg, max) = (330.480, 330.832, 331.180), stdev = 0.341
[info]   CI (99.9%): [329.518, 332.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   3912.220 ±(99.9%) 76.359 B/op [Average]
[info]   (min, avg, max) = (3899.601, 3912.220, 3947.420), stdev = 19.830
[info]   CI (99.9%): [3835.861, 3988.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.373 ±(99.9%) 3.037 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.373, 1.784), stdev = 0.789
[info]   CI (99.9%): [≈ 0, 3.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   4.449 ±(99.9%) 36.201 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.449, 21.260), stdev = 9.401
[info]   CI (99.9%): [≈ 0, 40.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniterPrealloc
[info] # Run progress: 74.22% complete, ETA 00:08:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 133420.921 ops/s
[info] # Warmup Iteration   2: 101686.175 ops/s
[info] # Warmup Iteration   3: 136495.604 ops/s
[info] # Warmup Iteration   4: 135882.352 ops/s
[info] # Warmup Iteration   5: 136120.763 ops/s
[info] Iteration   1: 136096.005 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 136130.693 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 135989.522 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 136324.184 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 133025.216 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniterPrealloc":
[info]   135513.124 ±(99.9%) 5375.615 ops/s [Average]
[info]   (min, avg, max) = (133025.216, 135513.124, 136324.184), stdev = 1396.030
[info]   CI (99.9%): [130137.509, 140888.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   0.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
[info]   CI (99.9%): [0.003, 0.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayPlay
[info] # Run progress: 75.00% complete, ETA 00:08:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2282.402 ops/s
[info] # Warmup Iteration   2: 3377.284 ops/s
[info] # Warmup Iteration   3: 3519.629 ops/s
[info] # Warmup Iteration   4: 3496.574 ops/s
[info] # Warmup Iteration   5: 3511.045 ops/s
[info] Iteration   1: 3513.783 ops/s
[info]                  ·gc.alloc.rate:                   1310.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              586768.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     593496.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.322 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3552.319 ops/s
[info]                  ·gc.alloc.rate:                   1324.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              586768.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     590838.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36.891 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3535.729 ops/s
[info]                  ·gc.alloc.rate:                   1318.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              586768.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     596475.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.529 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 3480.687 ops/s
[info]                  ·gc.alloc.rate:                   1298.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              586768.133 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     608306.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.821 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 3559.796 ops/s
[info]                  ·gc.alloc.rate:                   1327.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              586768.121 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     597019.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.404 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayPlay":
[info]   3528.463 ±(99.9%) 123.306 ops/s [Average]
[info]   (min, avg, max) = (3480.687, 3528.463, 3559.796), stdev = 32.022
[info]   CI (99.9%): [3405.156, 3651.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.alloc.rate":
[info]   1315.907 ±(99.9%) 45.972 MB/sec [Average]
[info]   (min, avg, max) = (1298.088, 1315.907, 1327.658), stdev = 11.939
[info]   CI (99.9%): [1269.935, 1361.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.alloc.rate.norm":
[info]   586768.124 ±(99.9%) 0.020 B/op [Average]
[info]   (min, avg, max) = (586768.121, 586768.124, 586768.133), stdev = 0.005
[info]   CI (99.9%): [586768.105, 586768.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.churn.PS_Eden_Space":
[info]   1339.283 ±(99.9%) 38.303 MB/sec [Average]
[info]   (min, avg, max) = (1325.496, 1339.283, 1350.855), stdev = 9.947
[info]   CI (99.9%): [1300.979, 1377.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.churn.PS_Eden_Space.norm":
[info]   597227.553 ±(99.9%) 25693.515 B/op [Average]
[info]   (min, avg, max) = (590838.489, 597227.553, 608306.582), stdev = 6672.524
[info]   CI (99.9%): [571534.039, 622921.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   20.393 ±(99.9%) 38.729 B/op [Average]
[info]   (min, avg, max) = (9.322, 20.393, 36.891), stdev = 10.058
[info]   CI (99.9%): [≈ 0, 59.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 3.050
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce
[info] # Run progress: 75.78% complete, ETA 00:08:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 411572.622 ops/s
[info] # Warmup Iteration   2: 630105.939 ops/s
[info] # Warmup Iteration   3: 644119.429 ops/s
[info] # Warmup Iteration   4: 638824.127 ops/s
[info] # Warmup Iteration   5: 638863.845 ops/s
[info] Iteration   1: 641315.998 ops/s
[info]                  ·gc.alloc.rate:                   1545.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3283.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 639175.991 ops/s
[info]                  ·gc.alloc.rate:                   1540.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4139.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 642904.216 ops/s
[info]                  ·gc.alloc.rate:                   1549.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3303.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 643311.790 ops/s
[info]                  ·gc.alloc.rate:                   1550.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4138.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 636909.479 ops/s
[info]                  ·gc.alloc.rate:                   1534.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4188.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce":
[info]   640723.495 ±(99.9%) 10322.916 ops/s [Average]
[info]   (min, avg, max) = (636909.479, 640723.495, 643311.790), stdev = 2680.828
[info]   CI (99.9%): [630400.579, 651046.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1544.190 ±(99.9%) 24.908 MB/sec [Average]
[info]   (min, avg, max) = (1534.998, 1544.190, 1550.433), stdev = 6.468
[info]   CI (99.9%): [1519.282, 1569.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   3792.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3792.001, 3792.001, 3792.001), stdev = 0.001
[info]   CI (99.9%): [3792.001, 3792.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1551.505 ±(99.9%) 729.337 MB/sec [Average]
[info]   (min, avg, max) = (1338.285, 1551.505, 1695.510), stdev = 189.407
[info]   CI (99.9%): [822.168, 2280.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3810.751 ±(99.9%) 1819.689 B/op [Average]
[info]   (min, avg, max) = (3283.354, 3810.751, 4188.523), stdev = 472.567
[info]   CI (99.9%): [1991.063, 5630.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.092 ±(99.9%) 0.166 B/op [Average]
[info]   (min, avg, max) = (0.051, 0.092, 0.154), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.800, 13.000), stdev = 2.168
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson
[info] # Run progress: 76.56% complete, ETA 00:07:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 514173.213 ops/s
[info] # Warmup Iteration   2: 1269481.117 ops/s
[info] # Warmup Iteration   3: 1279486.108 ops/s
[info] # Warmup Iteration   4: 1266262.711 ops/s
[info] # Warmup Iteration   5: 1271617.632 ops/s
[info] Iteration   1: 1288308.494 ops/s
[info]                  ·gc.alloc.rate:                   871.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     793.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1287332.757 ops/s
[info]                  ·gc.alloc.rate:                   870.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1196.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1292956.042 ops/s
[info]                  ·gc.alloc.rate:                   874.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1199.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1297433.131 ops/s
[info]                  ·gc.alloc.rate:               877.384 MB/sec
[info]                  ·gc.alloc.rate.norm:          1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 800.777 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1284124.080 ops/s
[info]                  ·gc.alloc.rate:                   868.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1219.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson":
[info]   1290030.901 ±(99.9%) 20053.563 ops/s [Average]
[info]   (min, avg, max) = (1284124.080, 1290030.901, 1297433.131), stdev = 5207.847
[info]   CI (99.9%): [1269977.338, 1310084.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   872.369 ±(99.9%) 13.613 MB/sec [Average]
[info]   (min, avg, max) = (868.336, 872.369, 877.384), stdev = 3.535
[info]   CI (99.9%): [858.756, 885.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   1064.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1064.000, 1064.000, 1064.000), stdev = 0.001
[info]   CI (99.9%): [1064.000, 1064.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   854.028 ±(99.9%) 700.152 MB/sec [Average]
[info]   (min, avg, max) = (649.642, 854.028, 995.078), stdev = 181.827
[info]   CI (99.9%): [153.876, 1554.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1041.998 ±(99.9%) 861.586 B/op [Average]
[info]   (min, avg, max) = (793.405, 1041.998, 1219.301), stdev = 223.751
[info]   CI (99.9%): [180.412, 1903.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.061 ±(99.9%) 0.178 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.061, 0.102), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 8.000), stdev = 2.449
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter
[info] # Run progress: 77.34% complete, ETA 00:07:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4285046.977 ops/s
[info] # Warmup Iteration   2: 4801288.814 ops/s
[info] # Warmup Iteration   3: 4819966.393 ops/s
[info] # Warmup Iteration   4: 4817499.465 ops/s
[info] # Warmup Iteration   5: 4838899.655 ops/s
[info] Iteration   1: 4811024.008 ops/s
[info]                  ·gc.alloc.rate:               538.166 MB/sec
[info]                  ·gc.alloc.rate.norm:          176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 216.183 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 4848009.434 ops/s
[info]                  ·gc.alloc.rate:               542.286 MB/sec
[info]                  ·gc.alloc.rate.norm:          176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 107.262 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 4820769.969 ops/s
[info]                  ·gc.alloc.rate:                   539.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     216.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4796335.285 ops/s
[info]                  ·gc.alloc.rate:                   536.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4793352.660 ops/s
[info]                  ·gc.alloc.rate:               536.188 MB/sec
[info]                  ·gc.alloc.rate.norm:          176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      332.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 109.143 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter":
[info]   4813898.271 ±(99.9%) 85011.930 ops/s [Average]
[info]   (min, avg, max) = (4793352.660, 4813898.271, 4848009.434), stdev = 22077.328
[info]   CI (99.9%): [4728886.342, 4898910.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   538.485 ±(99.9%) 9.496 MB/sec [Average]
[info]   (min, avg, max) = (536.188, 538.485, 542.286), stdev = 2.466
[info]   CI (99.9%): [528.989, 547.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   176.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (176.000, 176.000, 176.000), stdev = 0.001
[info]   CI (99.9%): [176.000, 176.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   530.013 ±(99.9%) 697.817 MB/sec [Average]
[info]   (min, avg, max) = (330.492, 530.013, 663.658), stdev = 181.221
[info]   CI (99.9%): [≈ 0, 1227.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   173.295 ±(99.9%) 228.835 B/op [Average]
[info]   (min, avg, max) = (107.262, 173.295, 217.709), stdev = 59.428
[info]   CI (99.9%): [≈ 0, 402.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.020), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay
[info] # Run progress: 78.13% complete, ETA 00:07:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80967.273 ops/s
[info] # Warmup Iteration   2: 357963.381 ops/s
[info] # Warmup Iteration   3: 361324.867 ops/s
[info] # Warmup Iteration   4: 360823.070 ops/s
[info] # Warmup Iteration   5: 359662.164 ops/s
[info] Iteration   1: 357023.870 ops/s
[info]                  ·gc.alloc.rate:                   1236.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5878.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 360083.012 ops/s
[info]                  ·gc.alloc.rate:                   1246.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4391.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 361947.485 ops/s
[info]                  ·gc.alloc.rate:               1253.267 MB/sec
[info]                  ·gc.alloc.rate.norm:          5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5845.490 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 360199.516 ops/s
[info]                  ·gc.alloc.rate:                   1247.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5895.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.364 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 366459.843 ops/s
[info]                  ·gc.alloc.rate:                   1268.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4357.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.268 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay":
[info]   361142.745 ±(99.9%) 13324.700 ops/s [Average]
[info]   (min, avg, max) = (357023.870, 361142.745, 366459.843), stdev = 3460.382
[info]   CI (99.9%): [347818.045, 374467.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1250.456 ±(99.9%) 46.198 MB/sec [Average]
[info]   (min, avg, max) = (1236.205, 1250.456, 1268.899), stdev = 11.997
[info]   CI (99.9%): [1204.259, 1296.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5448.001, 5448.001, 5448.001), stdev = 0.001
[info]   CI (99.9%): [5448.001, 5448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1209.621 ±(99.9%) 702.457 MB/sec [Average]
[info]   (min, avg, max) = (1005.023, 1209.621, 1349.616), stdev = 182.426
[info]   CI (99.9%): [507.163, 1912.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5273.713 ±(99.9%) 3162.234 B/op [Average]
[info]   (min, avg, max) = (4357.063, 5273.713, 5895.455), stdev = 821.222
[info]   CI (99.9%): [2111.479, 8435.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.218 ±(99.9%) 0.530 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.218, 0.364), stdev = 0.138
[info]   CI (99.9%): [≈ 0, 0.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.400, 11.000), stdev = 3.362
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce
[info] # Run progress: 78.91% complete, ETA 00:07:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 159312.138 ops/s
[info] # Warmup Iteration   2: 355671.099 ops/s
[info] # Warmup Iteration   3: 364966.684 ops/s
[info] # Warmup Iteration   4: 369313.873 ops/s
[info] # Warmup Iteration   5: 369963.546 ops/s
[info] Iteration   1: 367591.171 ops/s
[info]                  ·gc.alloc.rate:                   1001.805 MB/sec
[info]                  ·gc.alloc.rate.norm:              4288.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4242.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.178 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 366256.889 ops/s
[info]                  ·gc.alloc.rate:                   998.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              4288.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5701.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 372994.456 ops/s
[info]                  ·gc.alloc.rate:                   1016.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              4288.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4220.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 369849.308 ops/s
[info]                  ·gc.alloc.rate:               1007.941 MB/sec
[info]                  ·gc.alloc.rate.norm:          4288.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1004.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4273.359 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     16.000 ms
[info] Iteration   5: 369750.886 ops/s
[info]                  ·gc.alloc.rate:                   1007.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              4288.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4288.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce":
[info]   369288.542 ±(99.9%) 9880.111 ops/s [Average]
[info]   (min, avg, max) = (366256.889, 369288.542, 372994.456), stdev = 2565.833
[info]   CI (99.9%): [359408.431, 379168.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1006.386 ±(99.9%) 26.904 MB/sec [Average]
[info]   (min, avg, max) = (998.097, 1006.386, 1016.468), stdev = 6.987
[info]   CI (99.9%): [979.481, 1033.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4288.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4288.001, 4288.001, 4288.001), stdev = 0.001
[info]   CI (99.9%): [4288.001, 4288.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1066.210 ±(99.9%) 562.212 MB/sec [Average]
[info]   (min, avg, max) = (991.216, 1066.210, 1327.154), stdev = 146.005
[info]   CI (99.9%): [503.998, 1628.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4545.328 ±(99.9%) 2491.268 B/op [Average]
[info]   (min, avg, max) = (4220.184, 4545.328, 5701.692), stdev = 646.974
[info]   CI (99.9%): [2054.060, 7036.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.142 ±(99.9%) 0.387 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.142, 0.263), stdev = 0.101
[info]   CI (99.9%): [≈ 0, 0.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 9.000, 16.000), stdev = 4.637
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson
[info] # Run progress: 79.69% complete, ETA 00:06:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 90371.683 ops/s
[info] # Warmup Iteration   2: 778966.332 ops/s
[info] # Warmup Iteration   3: 800887.872 ops/s
[info] # Warmup Iteration   4: 798691.294 ops/s
[info] # Warmup Iteration   5: 798602.389 ops/s
[info] Iteration   1: 792697.686 ops/s
[info]                  ·gc.alloc.rate:                   1197.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              2376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1310.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2600.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 808528.205 ops/s
[info]                  ·gc.alloc.rate:                   1221.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              2376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2570.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 812735.218 ops/s
[info]                  ·gc.alloc.rate:                   1227.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              2376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1931.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 803342.010 ops/s
[info]                  ·gc.alloc.rate:                   1213.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              2376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2617.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 813412.396 ops/s
[info]                  ·gc.alloc.rate:                   1228.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              2376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2597.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson":
[info]   806143.103 ±(99.9%) 32821.668 ops/s [Average]
[info]   (min, avg, max) = (792697.686, 806143.103, 813412.396), stdev = 8523.683
[info]   CI (99.9%): [773321.435, 838964.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1217.379 ±(99.9%) 49.521 MB/sec [Average]
[info]   (min, avg, max) = (1197.075, 1217.379, 1228.342), stdev = 12.860
[info]   CI (99.9%): [1167.858, 1266.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   2376.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2376.001, 2376.001, 2376.001), stdev = 0.001
[info]   CI (99.9%): [2376.000, 2376.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1261.547 ±(99.9%) 570.567 MB/sec [Average]
[info]   (min, avg, max) = (997.490, 1261.547, 1342.961), stdev = 148.174
[info]   CI (99.9%): [690.980, 1832.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2463.330 ±(99.9%) 1147.495 B/op [Average]
[info]   (min, avg, max) = (1931.110, 2463.330, 2617.313), stdev = 298.001
[info]   CI (99.9%): [1315.835, 3610.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.114 ±(99.9%) 0.203 B/op [Average]
[info]   (min, avg, max) = (0.041, 0.114, 0.162), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 12.000), stdev = 3.209
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter
[info] # Run progress: 80.47% complete, ETA 00:06:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2064947.661 ops/s
[info] # Warmup Iteration   2: 2299568.155 ops/s
[info] # Warmup Iteration   3: 2289532.320 ops/s
[info] # Warmup Iteration   4: 2310800.231 ops/s
[info] # Warmup Iteration   5: 2316535.610 ops/s
[info] Iteration   1: 2317753.999 ops/s
[info]                  ·gc.alloc.rate:                   353.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     224.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.815 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.232 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2315646.770 ops/s
[info]                  ·gc.alloc.rate:               353.217 MB/sec
[info]                  ·gc.alloc.rate.norm:          240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 224.803 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 2325334.009 ops/s
[info]                  ·gc.alloc.rate:                   354.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     223.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2296347.833 ops/s
[info]                  ·gc.alloc.rate:                   350.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     453.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2324666.670 ops/s
[info]                  ·gc.alloc.rate:               354.597 MB/sec
[info]                  ·gc.alloc.rate.norm:          240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 223.928 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter":
[info]   2315949.856 ±(99.9%) 45219.713 ops/s [Average]
[info]   (min, avg, max) = (2296347.833, 2315949.856, 2325334.009), stdev = 11743.416
[info]   CI (99.9%): [2270730.143, 2361169.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   353.268 ±(99.9%) 6.892 MB/sec [Average]
[info]   (min, avg, max) = (350.281, 353.268, 354.699), stdev = 1.790
[info]   CI (99.9%): [346.375, 360.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   396.892 ±(99.9%) 569.328 MB/sec [Average]
[info]   (min, avg, max) = (330.525, 396.892, 661.378), stdev = 147.853
[info]   CI (99.9%): [≈ 0, 966.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   270.025 ±(99.9%) 394.202 B/op [Average]
[info]   (min, avg, max) = (223.643, 270.025, 453.153), stdev = 102.373
[info]   CI (99.9%): [≈ 0, 664.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.396 ±(99.9%) 3.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.396, 1.815), stdev = 0.794
[info]   CI (99.9%): [≈ 0, 3.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.269 ±(99.9%) 2.075 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.269, 1.232), stdev = 0.539
[info]   CI (99.9%): [≈ 0, 2.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 5.000), stdev = 1.517
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay
[info] # Run progress: 81.25% complete, ETA 00:06:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44481.102 ops/s
[info] # Warmup Iteration   2: 288742.609 ops/s
[info] # Warmup Iteration   3: 283607.357 ops/s
[info] # Warmup Iteration   4: 292124.848 ops/s
[info] # Warmup Iteration   5: 297135.151 ops/s
[info] Iteration   1: 294268.820 ops/s
[info]                  ·gc.alloc.rate:                   1084.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7097.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.156 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.835 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 294227.848 ops/s
[info]                  ·gc.alloc.rate:                   1084.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5350.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 292691.282 ops/s
[info]                  ·gc.alloc.rate:                   1078.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5403.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.112 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 294797.985 ops/s
[info]                  ·gc.alloc.rate:                   1086.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5379.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.222 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 297659.310 ops/s
[info]                  ·gc.alloc.rate:                   1097.213 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7125.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay":
[info]   294729.049 ±(99.9%) 6996.815 ops/s [Average]
[info]   (min, avg, max) = (292691.282, 294729.049, 297659.310), stdev = 1817.051
[info]   CI (99.9%): [287732.235, 301725.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   1086.446 ±(99.9%) 25.746 MB/sec [Average]
[info]   (min, avg, max) = (1078.932, 1086.446, 1097.213), stdev = 6.686
[info]   CI (99.9%): [1060.700, 1112.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.001, 5800.001, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.001, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1137.764 ±(99.9%) 703.205 MB/sec [Average]
[info]   (min, avg, max) = (1000.498, 1137.764, 1347.946), stdev = 182.620
[info]   CI (99.9%): [434.560, 1840.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6071.066 ±(99.9%) 3657.252 B/op [Average]
[info]   (min, avg, max) = (5350.296, 6071.066, 7125.407), stdev = 949.777
[info]   CI (99.9%): [2413.815, 9728.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.052 ±(99.9%) 0.227 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.052, 0.156), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.278 ±(99.9%) 1.213 B/op [Average]
[info]   (min, avg, max) = (0.110, 0.278, 0.835), stdev = 0.315
[info]   CI (99.9%): [≈ 0, 1.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 9.000, 15.000), stdev = 5.339
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce
[info] # Run progress: 82.03% complete, ETA 00:06:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 404332.002 ops/s
[info] # Warmup Iteration   2: 585489.746 ops/s
[info] # Warmup Iteration   3: 606716.921 ops/s
[info] # Warmup Iteration   4: 597646.323 ops/s
[info] # Warmup Iteration   5: 595691.090 ops/s
[info] Iteration   1: 572238.052 ops/s
[info]                  ·gc.alloc.rate:                   1320.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3670.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 580853.248 ops/s
[info]                  ·gc.alloc.rate:                   1340.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3634.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.226 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 580030.846 ops/s
[info]                  ·gc.alloc.rate:                   1339.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3653.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 580340.242 ops/s
[info]                  ·gc.alloc.rate:                   1339.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2745.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 580860.043 ops/s
[info]                  ·gc.alloc.rate:                   1340.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3665.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce":
[info]   578864.486 ±(99.9%) 14328.496 ops/s [Average]
[info]   (min, avg, max) = (572238.052, 578864.486, 580860.043), stdev = 3721.065
[info]   CI (99.9%): [564535.990, 593192.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate":
[info]   1336.199 ±(99.9%) 33.056 MB/sec [Average]
[info]   (min, avg, max) = (1320.903, 1336.199, 1340.772), stdev = 8.584
[info]   CI (99.9%): [1303.144, 1369.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   3632.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3632.001, 3632.001, 3632.001), stdev = 0.001
[info]   CI (99.9%): [3632.001, 3632.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1277.921 ±(99.9%) 571.415 MB/sec [Average]
[info]   (min, avg, max) = (1012.738, 1277.921, 1353.229), stdev = 148.395
[info]   CI (99.9%): [706.505, 1849.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3474.089 ±(99.9%) 1568.421 B/op [Average]
[info]   (min, avg, max) = (2745.900, 3474.089, 3670.699), stdev = 407.314
[info]   CI (99.9%): [1905.668, 5042.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.125 ±(99.9%) 0.285 B/op [Average]
[info]   (min, avg, max) = (0.056, 0.125, 0.226), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 11.000), stdev = 2.881
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson
[info] # Run progress: 82.81% complete, ETA 00:05:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 472173.878 ops/s
[info] # Warmup Iteration   2: 1271546.110 ops/s
[info] # Warmup Iteration   3: 1270616.948 ops/s
[info] # Warmup Iteration   4: 1258240.088 ops/s
[info] # Warmup Iteration   5: 1280890.089 ops/s
[info] Iteration   1: 1289126.203 ops/s
[info]                  ·gc.alloc.rate:                   740.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     790.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1272920.424 ops/s
[info]                  ·gc.alloc.rate:                   731.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     803.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1272140.211 ops/s
[info]                  ·gc.alloc.rate:                   730.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1211.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1282382.246 ops/s
[info]                  ·gc.alloc.rate:                   736.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     805.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1264648.040 ops/s
[info]                  ·gc.alloc.rate:                   726.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     819.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson":
[info]   1276243.425 ±(99.9%) 36832.709 ops/s [Average]
[info]   (min, avg, max) = (1264648.040, 1276243.425, 1289126.203), stdev = 9565.338
[info]   CI (99.9%): [1239410.715, 1313076.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate":
[info]   733.261 ±(99.9%) 21.229 MB/sec [Average]
[info]   (min, avg, max) = (726.584, 733.261, 740.708), stdev = 5.513
[info]   CI (99.9%): [712.032, 754.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm":
[info]   904.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (904.000, 904.000, 904.000), stdev = 0.001
[info]   CI (99.9%): [904.000, 904.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   718.375 ±(99.9%) 561.734 MB/sec [Average]
[info]   (min, avg, max) = (647.736, 718.375, 979.204), stdev = 145.881
[info]   CI (99.9%): [156.641, 1280.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   885.963 ±(99.9%) 700.968 B/op [Average]
[info]   (min, avg, max) = (790.532, 885.963, 1211.070), stdev = 182.039
[info]   CI (99.9%): [184.994, 1586.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.041, 0.052), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.600, 14.000), stdev = 4.930
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter
[info] # Run progress: 83.59% complete, ETA 00:05:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3183258.378 ops/s
[info] # Warmup Iteration   2: 3394131.044 ops/s
[info] # Warmup Iteration   3: 3424807.825 ops/s
[info] # Warmup Iteration   4: 3408765.715 ops/s
[info] # Warmup Iteration   5: 3351311.116 ops/s
[info] Iteration   1: 3381485.473 ops/s
[info]                  ·gc.alloc.rate:               257.935 MB/sec
[info]                  ·gc.alloc.rate.norm:          120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119.059 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 3480040.794 ops/s
[info]                  ·gc.alloc.rate:      265.411 MB/sec
[info]                  ·gc.alloc.rate.norm: 120.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3454857.964 ops/s
[info]                  ·gc.alloc.rate:                   263.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.802 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.821 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3402390.416 ops/s
[info]                  ·gc.alloc.rate:                   259.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     152.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 3430455.957 ops/s
[info]                  ·gc.alloc.rate:               261.636 MB/sec
[info]                  ·gc.alloc.rate.norm:          120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 151.591 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter":
[info]   3429846.121 ±(99.9%) 152064.330 ops/s [Average]
[info]   (min, avg, max) = (3381485.473, 3429846.121, 3480040.794), stdev = 39490.624
[info]   CI (99.9%): [3277781.791, 3581910.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate":
[info]   261.596 ±(99.9%) 11.551 MB/sec [Average]
[info]   (min, avg, max) = (257.935, 261.596, 265.411), stdev = 3.000
[info]   CI (99.9%): [250.045, 273.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (120.000, 120.000, 120.000), stdev = 0.001
[info]   CI (99.9%): [120.000, 120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   249.623 ±(99.9%) 551.626 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 249.623, 330.848), stdev = 143.256
[info]   CI (99.9%): [≈ 0, 801.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   114.863 ±(99.9%) 253.208 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 114.863, 152.993), stdev = 65.757
[info]   CI (99.9%): [≈ 0, 368.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.377 ±(99.9%) 3.071 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.377, 1.802), stdev = 0.797
[info]   CI (99.9%): [≈ 0, 3.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.172 ±(99.9%) 1.398 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.172, 0.821), stdev = 0.363
[info]   CI (99.9%): [≈ 0, 1.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay
[info] # Run progress: 84.38% complete, ETA 00:05:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 74905.348 ops/s
[info] # Warmup Iteration   2: 348041.315 ops/s
[info] # Warmup Iteration   3: 342589.514 ops/s
[info] # Warmup Iteration   4: 349572.460 ops/s
[info] # Warmup Iteration   5: 346438.435 ops/s
[info] Iteration   1: 347613.142 ops/s
[info]                  ·gc.alloc.rate:                   1189.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6027.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.073 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.330 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 342386.937 ops/s
[info]                  ·gc.alloc.rate:                   1171.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4611.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 349923.658 ops/s
[info]                  ·gc.alloc.rate:                   1197.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6040.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.375 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 341294.877 ops/s
[info]                  ·gc.alloc.rate:                   1167.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4661.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 341626.423 ops/s
[info]                  ·gc.alloc.rate:                   1168.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6223.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay":
[info]   344569.007 ±(99.9%) 15169.681 ops/s [Average]
[info]   (min, avg, max) = (341294.877, 344569.007, 349923.658), stdev = 3939.518
[info]   CI (99.9%): [329399.327, 359738.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate":
[info]   1179.115 ±(99.9%) 51.919 MB/sec [Average]
[info]   (min, avg, max) = (1167.993, 1179.115, 1197.463), stdev = 13.483
[info]   CI (99.9%): [1127.196, 1231.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   5384.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5384.001, 5384.001, 5384.001), stdev = 0.001
[info]   CI (99.9%): [5384.001, 5384.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1208.244 ±(99.9%) 706.588 MB/sec [Average]
[info]   (min, avg, max) = (1003.487, 1208.244, 1351.252), stdev = 183.499
[info]   CI (99.9%): [501.656, 1914.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5512.939 ±(99.9%) 3095.991 B/op [Average]
[info]   (min, avg, max) = (4611.252, 5512.939, 6223.604), stdev = 804.019
[info]   CI (99.9%): [2416.948, 8608.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.048 ±(99.9%) 0.112 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.048, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.218 ±(99.9%) 0.500 B/op [Average]
[info]   (min, avg, max) = (0.096, 0.218, 0.375), stdev = 0.130
[info]   CI (99.9%): [≈ 0, 0.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 10.000, 16.000), stdev = 4.950
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce
[info] # Run progress: 85.16% complete, ETA 00:05:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 143639.974 ops/s
[info] # Warmup Iteration   2: 342587.083 ops/s
[info] # Warmup Iteration   3: 355449.287 ops/s
[info] # Warmup Iteration   4: 360318.834 ops/s
[info] # Warmup Iteration   5: 361541.758 ops/s
[info] Iteration   1: 359193.664 ops/s
[info]                  ·gc.alloc.rate:               971.622 MB/sec
[info]                  ·gc.alloc.rate.norm:          4256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4341.836 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 359724.783 ops/s
[info]                  ·gc.alloc.rate:                   973.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              4256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4349.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.364 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 360579.121 ops/s
[info]                  ·gc.alloc.rate:                   975.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              4256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4360.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.273 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 358302.224 ops/s
[info]                  ·gc.alloc.rate:                   969.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              4256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4402.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 357733.103 ops/s
[info]                  ·gc.alloc.rate:                   967.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              4256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4425.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce":
[info]   359106.579 ±(99.9%) 4344.391 ops/s [Average]
[info]   (min, avg, max) = (357733.103, 359106.579, 360579.121), stdev = 1128.225
[info]   CI (99.9%): [354762.188, 363450.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   971.383 ±(99.9%) 11.864 MB/sec [Average]
[info]   (min, avg, max) = (967.660, 971.383, 975.397), stdev = 3.081
[info]   CI (99.9%): [959.519, 983.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4256.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4256.001, 4256.001, 4256.001), stdev = 0.001
[info]   CI (99.9%): [4256.001, 4256.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   998.740 ±(99.9%) 23.064 MB/sec [Average]
[info]   (min, avg, max) = (991.218, 998.740, 1006.181), stdev = 5.990
[info]   CI (99.9%): [975.676, 1021.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4375.938 ±(99.9%) 139.361 B/op [Average]
[info]   (min, avg, max) = (4341.836, 4375.938, 4425.422), stdev = 36.192
[info]   CI (99.9%): [4236.577, 4515.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.201 ±(99.9%) 0.520 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.201, 0.364), stdev = 0.135
[info]   CI (99.9%): [≈ 0, 0.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 7.000), stdev = 1.817
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson
[info] # Run progress: 85.94% complete, ETA 00:04:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 76223.365 ops/s
[info] # Warmup Iteration   2: 781581.119 ops/s
[info] # Warmup Iteration   3: 796093.339 ops/s
[info] # Warmup Iteration   4: 798564.112 ops/s
[info] # Warmup Iteration   5: 793595.479 ops/s
[info] Iteration   1: 805087.966 ops/s
[info]                  ·gc.alloc.rate:                   1322.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2565.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 801673.147 ops/s
[info]                  ·gc.alloc.rate:                   1316.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2597.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 810999.254 ops/s
[info]                  ·gc.alloc.rate:                   1331.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2585.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 806900.484 ops/s
[info]                  ·gc.alloc.rate:                   1325.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2612.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.162 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 817127.460 ops/s
[info]                  ·gc.alloc.rate:                   1341.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2591.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson":
[info]   808357.662 ±(99.9%) 22893.073 ops/s [Average]
[info]   (min, avg, max) = (801673.147, 808357.662, 817127.460), stdev = 5945.258
[info]   CI (99.9%): [785464.589, 831250.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1327.581 ±(99.9%) 37.487 MB/sec [Average]
[info]   (min, avg, max) = (1316.652, 1327.581, 1341.982), stdev = 9.735
[info]   CI (99.9%): [1290.094, 1365.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2584.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2584.001, 2584.001, 2584.001), stdev = 0.001
[info]   CI (99.9%): [2584.000, 2584.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1330.856 ±(99.9%) 50.782 MB/sec [Average]
[info]   (min, avg, max) = (1312.722, 1330.856, 1346.018), stdev = 13.188
[info]   CI (99.9%): [1280.074, 1381.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2590.374 ±(99.9%) 65.885 B/op [Average]
[info]   (min, avg, max) = (2565.433, 2590.374, 2612.186), stdev = 17.110
[info]   CI (99.9%): [2524.489, 2656.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.130 ±(99.9%) 0.258 B/op [Average]
[info]   (min, avg, max) = (0.040, 0.130, 0.204), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 12.000), stdev = 3.114
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 86.72% complete, ETA 00:04:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1776262.121 ops/s
[info] # Warmup Iteration   2: 2064023.052 ops/s
[info] # Warmup Iteration   3: 2080238.499 ops/s
[info] # Warmup Iteration   4: 2081844.932 ops/s
[info] # Warmup Iteration   5: 2101441.869 ops/s
[info] Iteration   1: 2103499.556 ops/s
[info]                  ·gc.alloc.rate:                   395.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     247.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2104347.517 ops/s
[info]                  ·gc.alloc.rate:               395.916 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 247.124 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2088131.660 ops/s
[info]                  ·gc.alloc.rate:                   392.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     249.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2082769.981 ops/s
[info]                  ·gc.alloc.rate:                   391.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     499.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2075887.340 ops/s
[info]                  ·gc.alloc.rate:               390.496 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 251.008 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter":
[info]   2090927.211 ±(99.9%) 48658.553 ops/s [Average]
[info]   (min, avg, max) = (2075887.340, 2090927.211, 2104347.517), stdev = 12636.472
[info]   CI (99.9%): [2042268.658, 2139585.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   393.360 ±(99.9%) 9.227 MB/sec [Average]
[info]   (min, avg, max) = (390.496, 393.360, 395.916), stdev = 2.396
[info]   CI (99.9%): [384.132, 402.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (296.000, 296.000, 296.000), stdev = 0.001
[info]   CI (99.9%): [296.000, 296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   396.812 ±(99.9%) 568.684 MB/sec [Average]
[info]   (min, avg, max) = (330.531, 396.812, 660.999), stdev = 147.685
[info]   CI (99.9%): [≈ 0, 965.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   298.802 ±(99.9%) 431.764 B/op [Average]
[info]   (min, avg, max) = (247.124, 298.802, 499.364), stdev = 112.128
[info]   CI (99.9%): [≈ 0, 730.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.066 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.031), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 8.000), stdev = 2.950
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay
[info] # Run progress: 87.50% complete, ETA 00:04:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39046.065 ops/s
[info] # Warmup Iteration   2: 273170.573 ops/s
[info] # Warmup Iteration   3: 272930.308 ops/s
[info] # Warmup Iteration   4: 280396.345 ops/s
[info] # Warmup Iteration   5: 276910.959 ops/s
[info] Iteration   1: 275445.673 ops/s
[info]                  ·gc.alloc.rate:                   1053.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5680.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.189 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 276985.747 ops/s
[info]                  ·gc.alloc.rate:                   1059.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5677.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.237 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 279161.368 ops/s
[info]                  ·gc.alloc.rate:                   1067.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7543.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.469 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 281477.622 ops/s
[info]                  ·gc.alloc.rate:               1076.219 MB/sec
[info]                  ·gc.alloc.rate.norm:          6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5633.741 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 280068.340 ops/s
[info]                  ·gc.alloc.rate:               1070.823 MB/sec
[info]                  ·gc.alloc.rate.norm:          6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1010.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5678.662 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay":
[info]   278627.750 ±(99.9%) 9294.263 ops/s [Average]
[info]   (min, avg, max) = (275445.673, 278627.750, 281477.622), stdev = 2413.691
[info]   CI (99.9%): [269333.487, 287922.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   1065.386 ±(99.9%) 35.393 MB/sec [Average]
[info]   (min, avg, max) = (1053.195, 1065.386, 1076.219), stdev = 9.191
[info]   CI (99.9%): [1029.993, 1100.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6016.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6016.002, 6016.002, 6016.002), stdev = 0.001
[info]   CI (99.9%): [6016.001, 6016.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1070.252 ±(99.9%) 577.908 MB/sec [Average]
[info]   (min, avg, max) = (994.525, 1070.252, 1338.476), stdev = 150.081
[info]   CI (99.9%): [492.344, 1648.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6042.840 ±(99.9%) 3230.726 B/op [Average]
[info]   (min, avg, max) = (5633.741, 6042.840, 7543.293), stdev = 839.009
[info]   CI (99.9%): [2812.114, 9273.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.333 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.208), stdev = 0.086
[info]   CI (99.9%): [≈ 0, 0.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.379 ±(99.9%) 1.899 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.379, 1.189), stdev = 0.493
[info]   CI (99.9%): [≈ 0, 2.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.800, 18.000), stdev = 4.919
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce
[info] # Run progress: 88.28% complete, ETA 00:03:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 802419.253 ops/s
[info] # Warmup Iteration   2: 945994.867 ops/s
[info] # Warmup Iteration   3: 949664.031 ops/s
[info] # Warmup Iteration   4: 955240.908 ops/s
[info] # Warmup Iteration   5: 960024.433 ops/s
[info] Iteration   1: 954077.078 ops/s
[info]                  ·gc.alloc.rate:                   620.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1085.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 956261.214 ops/s
[info]                  ·gc.alloc.rate:                   622.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1084.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 951682.001 ops/s
[info]                  ·gc.alloc.rate:                   619.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.380 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1091.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 956372.042 ops/s
[info]                  ·gc.alloc.rate:                   622.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1089.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 955339.179 ops/s
[info]                  ·gc.alloc.rate:                   621.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1094.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce":
[info]   954746.303 ±(99.9%) 7488.313 ops/s [Average]
[info]   (min, avg, max) = (951682.001, 954746.303, 956372.042), stdev = 1944.691
[info]   CI (99.9%): [947257.990, 962234.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate":
[info]   621.366 ±(99.9%) 4.823 MB/sec [Average]
[info]   (min, avg, max) = (619.406, 621.366, 622.411), stdev = 1.253
[info]   CI (99.9%): [616.542, 626.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate.norm":
[info]   1024.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1024.000, 1024.000, 1024.000), stdev = 0.001
[info]   CI (99.9%): [1024.000, 1024.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   660.879 ±(99.9%) 9.399 MB/sec [Average]
[info]   (min, avg, max) = (658.332, 660.879, 664.316), stdev = 2.441
[info]   CI (99.9%): [651.480, 670.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1089.120 ±(99.9%) 15.751 B/op [Average]
[info]   (min, avg, max) = (1084.312, 1089.120, 1094.125), stdev = 4.090
[info]   CI (99.9%): [1073.369, 1104.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.089 ±(99.9%) 0.118 B/op [Average]
[info]   (min, avg, max) = (0.069, 0.089, 0.137), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 5.000), stdev = 1.414
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson
[info] # Run progress: 89.06% complete, ETA 00:03:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1332902.226 ops/s
[info] # Warmup Iteration   2: 2004287.111 ops/s
[info] # Warmup Iteration   3: 2074454.974 ops/s
[info] # Warmup Iteration   4: 2086881.683 ops/s
[info] # Warmup Iteration   5: 2063217.047 ops/s
[info] Iteration   1: 1999439.974 ops/s
[info]                  ·gc.alloc.rate:                   731.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     514.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1988495.843 ops/s
[info]                  ·gc.alloc.rate:                   727.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     519.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2023125.993 ops/s
[info]                  ·gc.alloc.rate:                   740.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     511.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1991792.682 ops/s
[info]                  ·gc.alloc.rate:                   729.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     783.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1981246.154 ops/s
[info]                  ·gc.alloc.rate:                   725.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              576.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     527.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson":
[info]   1996820.129 ±(99.9%) 61969.643 ops/s [Average]
[info]   (min, avg, max) = (1981246.154, 1996820.129, 2023125.993), stdev = 16093.319
[info]   CI (99.9%): [1934850.487, 2058789.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate":
[info]   731.004 ±(99.9%) 22.758 MB/sec [Average]
[info]   (min, avg, max) = (725.261, 731.004, 740.658), stdev = 5.910
[info]   CI (99.9%): [708.246, 753.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate.norm":
[info]   576.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (576.000, 576.000, 576.000), stdev = 0.001
[info]   CI (99.9%): [576.000, 576.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   724.632 ±(99.9%) 575.292 MB/sec [Average]
[info]   (min, avg, max) = (653.689, 724.632, 991.811), stdev = 149.402
[info]   CI (99.9%): [149.340, 1299.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   571.148 ±(99.9%) 457.651 B/op [Average]
[info]   (min, avg, max) = (511.483, 571.148, 783.492), stdev = 118.851
[info]   CI (99.9%): [113.496, 1028.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.036 ±(99.9%) 0.052 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.036, 0.049), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 8.000), stdev = 2.702
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter
[info] # Run progress: 89.84% complete, ETA 00:03:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2156212.902 ops/s
[info] # Warmup Iteration   2: 2180272.385 ops/s
[info] # Warmup Iteration   3: 2196371.276 ops/s
[info] # Warmup Iteration   4: 2140717.043 ops/s
[info] # Warmup Iteration   5: 2030295.506 ops/s
[info] Iteration   1: 1980527.112 ops/s
[info]                  ·gc.alloc.rate:                   392.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     525.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1986227.804 ops/s
[info]                  ·gc.alloc.rate:               393.868 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 261.802 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1983504.468 ops/s
[info]                  ·gc.alloc.rate:                   393.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1995178.905 ops/s
[info]                  ·gc.alloc.rate:                   395.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     260.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1998213.994 ops/s
[info]                  ·gc.alloc.rate:               396.231 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 260.766 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter":
[info]   1988730.457 ±(99.9%) 29350.209 ops/s [Average]
[info]   (min, avg, max) = (1980527.112, 1988730.457, 1998213.994), stdev = 7622.156
[info]   CI (99.9%): [1959380.248, 2018080.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate":
[info]   394.356 ±(99.9%) 5.770 MB/sec [Average]
[info]   (min, avg, max) = (392.734, 394.356, 396.231), stdev = 1.498
[info]   CI (99.9%): [388.586, 400.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (312.000, 312.000, 312.000), stdev = 0.001
[info]   CI (99.9%): [312.000, 312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   396.923 ±(99.9%) 569.115 MB/sec [Average]
[info]   (min, avg, max) = (330.498, 396.923, 661.310), stdev = 147.797
[info]   CI (99.9%): [≈ 0, 966.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   314.250 ±(99.9%) 454.451 B/op [Average]
[info]   (min, avg, max) = (260.766, 314.250, 525.366), stdev = 118.020
[info]   CI (99.9%): [≈ 0, 768.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.107 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.066), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc
[info] # Run progress: 90.63% complete, ETA 00:03:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2325862.808 ops/s
[info] # Warmup Iteration   2: 2386649.311 ops/s
[info] # Warmup Iteration   3: 2429108.237 ops/s
[info] # Warmup Iteration   4: 2421734.480 ops/s
[info] # Warmup Iteration   5: 2360543.038 ops/s
[info] Iteration   1: 2424436.373 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2425546.948 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2416611.042 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2424502.268 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2411824.754 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc":
[info]   2420584.277 ±(99.9%) 23369.731 ops/s [Average]
[info]   (min, avg, max) = (2411824.754, 2420584.277, 2425546.948), stdev = 6069.045
[info]   CI (99.9%): [2397214.546, 2443954.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay
[info] # Run progress: 91.41% complete, ETA 00:02:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1582098.693 ops/s
[info] # Warmup Iteration   2: 2066728.204 ops/s
[info] # Warmup Iteration   3: 2155452.368 ops/s
[info] # Warmup Iteration   4: 2143708.063 ops/s
[info] # Warmup Iteration   5: 2098365.363 ops/s
[info] Iteration   1: 2134479.065 ops/s
[info]                  ·gc.alloc.rate:                   900.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     726.711 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2125953.788 ops/s
[info]                  ·gc.alloc.rate:                   897.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     488.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2118427.893 ops/s
[info]                  ·gc.alloc.rate:                   894.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     738.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2160428.603 ops/s
[info]                  ·gc.alloc.rate:                   911.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     727.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2106723.718 ops/s
[info]                  ·gc.alloc.rate:                   889.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     748.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay":
[info]   2129202.613 ±(99.9%) 77847.164 ops/s [Average]
[info]   (min, avg, max) = (2106723.718, 2129202.613, 2160428.603), stdev = 20216.661
[info]   CI (99.9%): [2051355.449, 2207049.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate":
[info]   898.534 ±(99.9%) 32.843 MB/sec [Average]
[info]   (min, avg, max) = (889.013, 898.534, 911.695), stdev = 8.529
[info]   CI (99.9%): [865.691, 931.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate.norm":
[info]   664.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (664.000, 664.000, 664.000), stdev = 0.001
[info]   CI (99.9%): [664.000, 664.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space":
[info]   928.319 ±(99.9%) 577.328 MB/sec [Average]
[info]   (min, avg, max) = (660.352, 928.319, 1002.470), stdev = 149.930
[info]   CI (99.9%): [350.991, 1505.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space.norm":
[info]   685.997 ±(99.9%) 426.091 B/op [Average]
[info]   (min, avg, max) = (488.701, 685.997, 748.740), stdev = 110.655
[info]   CI (99.9%): [259.905, 1112.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.050 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.028, 0.047), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 13.000), stdev = 3.912
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce
[info] # Run progress: 92.19% complete, ETA 00:02:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 418951.140 ops/s
[info] # Warmup Iteration   2: 666974.340 ops/s
[info] # Warmup Iteration   3: 682224.651 ops/s
[info] # Warmup Iteration   4: 685415.310 ops/s
[info] # Warmup Iteration   5: 684268.932 ops/s
[info] Iteration   1: 689045.930 ops/s
[info]                  ·gc.alloc.rate:                   1201.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2277.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 687225.354 ops/s
[info]                  ·gc.alloc.rate:                   1198.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3056.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.238 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 689117.758 ops/s
[info]                  ·gc.alloc.rate:                   1201.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2295.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 690402.740 ops/s
[info]                  ·gc.alloc.rate:                   1204.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3067.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 689654.121 ops/s
[info]                  ·gc.alloc.rate:                   1202.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3080.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce":
[info]   689089.180 ±(99.9%) 4523.946 ops/s [Average]
[info]   (min, avg, max) = (687225.354, 689089.180, 690402.740), stdev = 1174.854
[info]   CI (99.9%): [684565.234, 693613.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1201.761 ±(99.9%) 7.997 MB/sec [Average]
[info]   (min, avg, max) = (1198.465, 1201.761, 1204.052), stdev = 2.077
[info]   CI (99.9%): [1193.764, 1209.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   2744.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2744.001, 2744.001, 2744.001), stdev = 0.001
[info]   CI (99.9%): [2744.001, 2744.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1206.772 ±(99.9%) 722.502 MB/sec [Average]
[info]   (min, avg, max) = (997.218, 1206.772, 1350.123), stdev = 187.631
[info]   CI (99.9%): [484.271, 1929.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2755.427 ±(99.9%) 1649.031 B/op [Average]
[info]   (min, avg, max) = (2277.072, 2755.427, 3080.027), stdev = 428.248
[info]   CI (99.9%): [1106.396, 4404.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.124 ±(99.9%) 0.279 B/op [Average]
[info]   (min, avg, max) = (0.048, 0.124, 0.238), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.400, 10.000), stdev = 2.881
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson
[info] # Run progress: 92.97% complete, ETA 00:02:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 817241.203 ops/s
[info] # Warmup Iteration   2: 1616628.693 ops/s
[info] # Warmup Iteration   3: 1625778.114 ops/s
[info] # Warmup Iteration   4: 1638018.436 ops/s
[info] # Warmup Iteration   5: 1631342.746 ops/s
[info] Iteration   1: 1624133.022 ops/s
[info]                  ·gc.alloc.rate:                   718.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     630.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1650507.795 ops/s
[info]                  ·gc.alloc.rate:                   730.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     622.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1620744.451 ops/s
[info]                  ·gc.alloc.rate:                   716.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     954.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1617766.901 ops/s
[info]                  ·gc.alloc.rate:                   715.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     640.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1644446.317 ops/s
[info]                  ·gc.alloc.rate:                   727.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     633.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson":
[info]   1631519.697 ±(99.9%) 57355.651 ops/s [Average]
[info]   (min, avg, max) = (1617766.901, 1631519.697, 1650507.795), stdev = 14895.080
[info]   CI (99.9%): [1574164.046, 1688875.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   721.710 ±(99.9%) 25.396 MB/sec [Average]
[info]   (min, avg, max) = (715.585, 721.710, 730.103), stdev = 6.595
[info]   CI (99.9%): [696.314, 747.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   696.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (696.000, 696.000, 696.000), stdev = 0.001
[info]   CI (99.9%): [696.000, 696.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   721.496 ±(99.9%) 563.508 MB/sec [Average]
[info]   (min, avg, max) = (651.013, 721.496, 983.162), stdev = 146.341
[info]   CI (99.9%): [157.989, 1285.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   696.255 ±(99.9%) 556.360 B/op [Average]
[info]   (min, avg, max) = (622.193, 696.255, 954.441), stdev = 144.485
[info]   CI (99.9%): [139.894, 1252.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.044 ±(99.9%) 0.064 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.044, 0.061), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 11.000), stdev = 3.130
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter
[info] # Run progress: 93.75% complete, ETA 00:02:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4241546.399 ops/s
[info] # Warmup Iteration   2: 4669979.504 ops/s
[info] # Warmup Iteration   3: 4775839.913 ops/s
[info] # Warmup Iteration   4: 4763239.445 ops/s
[info] # Warmup Iteration   5: 4782333.657 ops/s
[info] Iteration   1: 4799945.706 ops/s
[info]                  ·gc.alloc.rate:                   390.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4773827.022 ops/s
[info]                  ·gc.alloc.rate:               388.356 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 108.931 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 4807793.203 ops/s
[info]                  ·gc.alloc.rate:                   391.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4786509.949 ops/s
[info]                  ·gc.alloc.rate:                   389.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4779775.903 ops/s
[info]                  ·gc.alloc.rate:                   388.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     218.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter":
[info]   4789570.357 ±(99.9%) 54213.115 ops/s [Average]
[info]   (min, avg, max) = (4773827.022, 4789570.357, 4807793.203), stdev = 14078.974
[info]   CI (99.9%): [4735357.242, 4843783.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   389.654 ±(99.9%) 4.426 MB/sec [Average]
[info]   (min, avg, max) = (388.356, 389.654, 391.146), stdev = 1.149
[info]   CI (99.9%): [385.228, 394.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   397.160 ±(99.9%) 570.967 MB/sec [Average]
[info]   (min, avg, max) = (330.501, 397.160, 662.408), stdev = 148.278
[info]   CI (99.9%): [≈ 0, 968.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   130.510 ±(99.9%) 188.406 B/op [Average]
[info]   (min, avg, max) = (108.163, 130.510, 218.034), stdev = 48.929
[info]   CI (99.9%): [≈ 0, 318.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.030 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.021), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc
[info] # Run progress: 94.53% complete, ETA 00:01:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4478760.794 ops/s
[info] # Warmup Iteration   2: 4897509.065 ops/s
[info] # Warmup Iteration   3: 5028703.033 ops/s
[info] # Warmup Iteration   4: 4989927.562 ops/s
[info] # Warmup Iteration   5: 4994226.723 ops/s
[info] Iteration   1: 5031661.578 ops/s
[info]                  ·gc.alloc.rate:      153.500 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 4924090.881 ops/s
[info]                  ·gc.alloc.rate:               150.212 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 81.755 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   3: 5037129.916 ops/s
[info]                  ·gc.alloc.rate:      153.668 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 4965221.827 ops/s
[info]                  ·gc.alloc.rate:                   151.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 4898482.081 ops/s
[info]                  ·gc.alloc.rate:               149.441 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 82.190 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc":
[info]   4971317.257 ±(99.9%) 240049.826 ops/s [Average]
[info]   (min, avg, max) = (4898482.081, 4971317.257, 5037129.916), stdev = 62340.178
[info]   CI (99.9%): [4731267.430, 5211367.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate":
[info]   151.658 ±(99.9%) 7.325 MB/sec [Average]
[info]   (min, avg, max) = (149.441, 151.658, 153.668), stdev = 1.902
[info]   CI (99.9%): [144.333, 158.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space":
[info]   153.516 ±(99.9%) 539.631 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.516, 255.886), stdev = 140.141
[info]   CI (99.9%): [≈ 0, 693.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   49.005 ±(99.9%) 172.265 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 49.005, 82.190), stdev = 44.737
[info]   CI (99.9%): [≈ 0, 221.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.050 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.029), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.016 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.009), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 4.200, 12.000), stdev = 4.919
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay
[info] # Run progress: 95.31% complete, ETA 00:01:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43723.061 ops/s
[info] # Warmup Iteration   2: 211766.544 ops/s
[info] # Warmup Iteration   3: 214603.070 ops/s
[info] # Warmup Iteration   4: 212315.534 ops/s
[info] # Warmup Iteration   5: 215092.963 ops/s
[info] Iteration   1: 217420.654 ops/s
[info]                  ·gc.alloc.rate:                   1107.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7216.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.156 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 217650.236 ops/s
[info]                  ·gc.alloc.rate:               1108.873 MB/sec
[info]                  ·gc.alloc.rate.norm:          8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1000.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7232.904 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 213607.009 ops/s
[info]                  ·gc.alloc.rate:                   1088.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9875.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 212417.003 ops/s
[info]                  ·gc.alloc.rate:                   1082.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7474.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.308 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 211729.200 ops/s
[info]                  ·gc.alloc.rate:                   1078.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7519.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay":
[info]   214564.820 ±(99.9%) 10762.332 ops/s [Average]
[info]   (min, avg, max) = (211729.200, 214564.820, 217650.236), stdev = 2794.943
[info]   CI (99.9%): [203802.489, 225327.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1093.116 ±(99.9%) 55.005 MB/sec [Average]
[info]   (min, avg, max) = (1078.587, 1093.116, 1108.873), stdev = 14.285
[info]   CI (99.9%): [1038.111, 1148.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8016.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8016.002, 8016.002, 8016.002), stdev = 0.001
[info]   CI (99.9%): [8016.002, 8016.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1071.853 ±(99.9%) 579.151 MB/sec [Average]
[info]   (min, avg, max) = (997.202, 1071.853, 1340.692), stdev = 150.404
[info]   CI (99.9%): [492.703, 1651.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7863.726 ±(99.9%) 4362.726 B/op [Average]
[info]   (min, avg, max) = (7216.278, 7863.726, 9875.557), stdev = 1132.986
[info]   CI (99.9%): [3500.999, 12226.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.048 ±(99.9%) 0.240 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.048, 0.156), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.349 ±(99.9%) 1.733 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.349, 1.130), stdev = 0.450
[info]   CI (99.9%): [≈ 0, 2.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 12.000), stdev = 3.564
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce
[info] # Run progress: 96.09% complete, ETA 00:01:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3521.649 ops/s
[info] # Warmup Iteration   2: 6809.881 ops/s
[info] # Warmup Iteration   3: 7466.813 ops/s
[info] # Warmup Iteration   4: 7543.963 ops/s
[info] # Warmup Iteration   5: 7471.364 ops/s
[info] Iteration   1: 7602.481 ops/s
[info]                  ·gc.alloc.rate:                   698.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              144568.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     135967.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.309 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 7506.134 ops/s
[info]                  ·gc.alloc.rate:                   689.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              144568.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     137985.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.093 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 7417.969 ops/s
[info]                  ·gc.alloc.rate:               681.627 MB/sec
[info]                  ·gc.alloc.rate.norm:          144568.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:      990.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 210068.494 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Iteration   4: 7571.185 ops/s
[info]                  ·gc.alloc.rate:                   695.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              144577.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     137631.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.327 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 7475.121 ops/s
[info]                  ·gc.alloc.rate:               687.076 MB/sec
[info]                  ·gc.alloc.rate.norm:          144616.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139819.483 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce":
[info]   7514.578 ±(99.9%) 284.874 ops/s [Average]
[info]   (min, avg, max) = (7417.969, 7514.578, 7602.481), stdev = 73.981
[info]   CI (99.9%): [7229.704, 7799.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate":
[info]   690.549 ±(99.9%) 26.045 MB/sec [Average]
[info]   (min, avg, max) = (681.627, 690.549, 698.530), stdev = 6.764
[info]   CI (99.9%): [664.505, 716.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm":
[info]   144579.531 ±(99.9%) 80.161 B/op [Average]
[info]   (min, avg, max) = (144568.057, 144579.531, 144616.058), stdev = 20.818
[info]   CI (99.9%): [144499.370, 144659.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   726.479 ±(99.9%) 568.343 MB/sec [Average]
[info]   (min, avg, max) = (656.973, 726.479, 990.456), stdev = 147.597
[info]   CI (99.9%): [158.136, 1294.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   152294.448 ±(99.9%) 124474.553 B/op [Average]
[info]   (min, avg, max) = (135967.377, 152294.448, 210068.494), stdev = 32325.646
[info]   CI (99.9%): [27819.895, 276769.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.346 ±(99.9%) 20.583 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.346, 13.093), stdev = 5.345
[info]   CI (99.9%): [≈ 0, 24.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 15.000), stdev = 5.541
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson
[info] # Run progress: 96.88% complete, ETA 00:01:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14631.549 ops/s
[info] # Warmup Iteration   2: 35040.818 ops/s
[info] # Warmup Iteration   3: 35297.460 ops/s
[info] # Warmup Iteration   4: 34532.838 ops/s
[info] # Warmup Iteration   5: 35327.631 ops/s
[info] Iteration   1: 34956.257 ops/s
[info]                  ·gc.alloc.rate:                   446.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29031.306 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.812 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 35741.348 ops/s
[info]                  ·gc.alloc.rate:               456.570 MB/sec
[info]                  ·gc.alloc.rate.norm:          20100.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14197.694 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 35518.393 ops/s
[info]                  ·gc.alloc.rate:               453.709 MB/sec
[info]                  ·gc.alloc.rate.norm:          20100.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14300.776 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 35107.502 ops/s
[info]                  ·gc.alloc.rate:                   448.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28981.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.800 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 35234.097 ops/s
[info]                  ·gc.alloc.rate:               450.109 MB/sec
[info]                  ·gc.alloc.rate.norm:          20100.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14461.065 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson":
[info]   35311.519 ±(99.9%) 1219.775 ops/s [Average]
[info]   (min, avg, max) = (34956.257, 35311.519, 35741.348), stdev = 316.772
[info]   CI (99.9%): [34091.744, 36531.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate":
[info]   451.095 ±(99.9%) 15.505 MB/sec [Average]
[info]   (min, avg, max) = (446.579, 451.095, 456.570), stdev = 4.027
[info]   CI (99.9%): [435.591, 466.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   20100.033 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (20100.007, 20100.033, 20100.056), stdev = 0.018
[info]   CI (99.9%): [20099.963, 20100.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   452.170 ±(99.9%) 680.843 MB/sec [Average]
[info]   (min, avg, max) = (322.498, 452.170, 646.701), stdev = 176.813
[info]   CI (99.9%): [≈ 0, 1133.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   20194.557 ±(99.9%) 30977.842 B/op [Average]
[info]   (min, avg, max) = (14197.694, 20194.557, 29031.306), stdev = 8044.847
[info]   CI (99.9%): [≈ 0, 51172.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.122 ±(99.9%) 5.917 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.122, 2.812), stdev = 1.537
[info]   CI (99.9%): [≈ 0, 7.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 9.000), stdev = 2.387
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter
[info] # Run progress: 97.66% complete, ETA 00:00:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28569.200 ops/s
[info] # Warmup Iteration   2: 48776.636 ops/s
[info] # Warmup Iteration   3: 49473.287 ops/s
[info] # Warmup Iteration   4: 49360.385 ops/s
[info] # Warmup Iteration   5: 49373.494 ops/s
[info] Iteration   1: 49626.714 ops/s
[info]                  ·gc.alloc.rate:               320.727 MB/sec
[info]                  ·gc.alloc.rate.norm:          10168.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8112.283 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 49806.326 ops/s
[info]                  ·gc.alloc.rate:                   321.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              10168.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10451.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.823 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57.588 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 49933.095 ops/s
[info]                  ·gc.alloc.rate:                   322.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              10168.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10424.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.312 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 49879.002 ops/s
[info]                  ·gc.alloc.rate:               322.352 MB/sec
[info]                  ·gc.alloc.rate.norm:          10168.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10425.435 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 49989.235 ops/s
[info]                  ·gc.alloc.rate:               323.050 MB/sec
[info]                  ·gc.alloc.rate.norm:          10168.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10402.914 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter":
[info]   49846.874 ±(99.9%) 540.627 ops/s [Average]
[info]   (min, avg, max) = (49626.714, 49846.874, 49989.235), stdev = 140.399
[info]   CI (99.9%): [49306.248, 50387.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate":
[info]   322.144 ±(99.9%) 3.482 MB/sec [Average]
[info]   (min, avg, max) = (320.727, 322.144, 323.050), stdev = 0.904
[info]   CI (99.9%): [318.662, 325.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   10168.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10168.009, 10168.009, 10168.009), stdev = 0.001
[info]   CI (99.9%): [10168.008, 10168.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   315.723 ±(99.9%) 128.811 MB/sec [Average]
[info]   (min, avg, max) = (255.883, 315.723, 330.856), stdev = 33.452
[info]   CI (99.9%): [186.912, 444.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   9963.307 ±(99.9%) 3985.018 B/op [Average]
[info]   (min, avg, max) = (8112.283, 9963.307, 10451.448), stdev = 1034.896
[info]   CI (99.9%): [5978.289, 13948.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.373 ±(99.9%) 3.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.373, 1.823), stdev = 0.811
[info]   CI (99.9%): [≈ 0, 3.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   11.780 ±(99.9%) 98.630 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.780, 57.588), stdev = 25.614
[info]   CI (99.9%): [≈ 0, 110.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 6.000), stdev = 1.924
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc
[info] # Run progress: 98.44% complete, ETA 00:00:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42801.604 ops/s
[info] # Warmup Iteration   2: 59342.825 ops/s
[info] # Warmup Iteration   3: 57294.412 ops/s
[info] # Warmup Iteration   4: 59623.343 ops/s
[info] # Warmup Iteration   5: 59661.435 ops/s
[info] Iteration   1: 60021.878 ops/s
[info]                  ·gc.alloc.rate:      15.258 MB/sec
[info]                  ·gc.alloc.rate.norm: 400.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 60050.921 ops/s
[info]                  ·gc.alloc.rate:      15.266 MB/sec
[info]                  ·gc.alloc.rate.norm: 400.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 59852.374 ops/s
[info]                  ·gc.alloc.rate:      15.216 MB/sec
[info]                  ·gc.alloc.rate.norm: 400.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 60010.641 ops/s
[info]                  ·gc.alloc.rate:      15.256 MB/sec
[info]                  ·gc.alloc.rate.norm: 400.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 59874.235 ops/s
[info]                  ·gc.alloc.rate:      15.222 MB/sec
[info]                  ·gc.alloc.rate.norm: 400.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc":
[info]   59962.010 ±(99.9%) 352.806 ops/s [Average]
[info]   (min, avg, max) = (59852.374, 59962.010, 60050.921), stdev = 91.623
[info]   CI (99.9%): [59609.204, 60314.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   15.244 ±(99.9%) 0.089 MB/sec [Average]
[info]   (min, avg, max) = (15.216, 15.244, 15.266), stdev = 0.023
[info]   CI (99.9%): [15.155, 15.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   400.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (400.007, 400.007, 400.007), stdev = 0.001
[info]   CI (99.9%): [400.007, 400.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay
[info] # Run progress: 99.22% complete, ETA 00:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1042.743 ops/s
[info] # Warmup Iteration   2: 4107.307 ops/s
[info] # Warmup Iteration   3: 4349.440 ops/s
[info] # Warmup Iteration   4: 4412.443 ops/s
[info] # Warmup Iteration   5: 4405.125 ops/s
[info] Iteration   1: 4345.639 ops/s
[info]                  ·gc.alloc.rate:                   955.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              345837.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     359656.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.115 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41.463 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4463.288 ops/s
[info]                  ·gc.alloc.rate:                   981.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              345837.674 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     351639.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.341 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4421.324 ops/s
[info]                  ·gc.alloc.rate:                   971.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              345838.858 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     356757.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.820 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4417.410 ops/s
[info]                  ·gc.alloc.rate:                   970.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              345837.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     358267.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.834 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4427.038 ops/s
[info]                  ·gc.alloc.rate:               973.094 MB/sec
[info]                  ·gc.alloc.rate.norm:          345838.211 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1009.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 358642.356 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay":
[info]   4414.940 ±(99.9%) 164.876 ops/s [Average]
[info]   (min, avg, max) = (4345.639, 4414.940, 4463.288), stdev = 42.818
[info]   CI (99.9%): [4250.064, 4579.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate":
[info]   970.416 ±(99.9%) 36.142 MB/sec [Average]
[info]   (min, avg, max) = (955.262, 970.416, 981.073), stdev = 9.386
[info]   CI (99.9%): [934.274, 1006.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   345837.939 ±(99.9%) 2.574 B/op [Average]
[info]   (min, avg, max) = (345837.047, 345837.939, 345838.858), stdev = 0.668
[info]   CI (99.9%): [345835.365, 345840.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1001.662 ±(99.9%) 24.216 MB/sec [Average]
[info]   (min, avg, max) = (993.431, 1001.662, 1009.121), stdev = 6.289
[info]   CI (99.9%): [977.446, 1025.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   356992.678 ±(99.9%) 12200.404 B/op [Average]
[info]   (min, avg, max) = (351639.398, 356992.678, 359656.502), stdev = 3168.406
[info]   CI (99.9%): [344792.274, 369193.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.044 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.044, 0.115), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   15.692 ±(99.9%) 60.322 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.692, 41.463), stdev = 15.665
[info]   CI (99.9%): [≈ 0, 76.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:33:56
[info] Benchmark                                                                                         Mode  Cnt         Score        Error   Units
[info] JsonCodecMakerBenchmark.missingReqFieldCirce                                                     thrpt    5   1410902.401 ±  47290.984   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate                                      thrpt    5      2381.676 ±     79.892  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm                                 thrpt    5      2656.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space                             thrpt    5      2378.110 ±     23.762  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2652.175 ±     88.217    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.096 ±      0.193  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.107 ±      0.214    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count                                           thrpt    5        35.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time                                            thrpt    5        66.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJackson                                                   thrpt    5    199841.696 ±   1718.759   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate                                    thrpt    5       478.607 ±      4.139  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm                               thrpt    5      3768.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space                           thrpt    5       520.183 ±    685.970  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      4097.327 ±   5424.909    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.037 ±      0.174  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.296 ±      1.372    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count                                         thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time                                          thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter                                                  thrpt    5    447742.150 ±  29989.095   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate                                   thrpt    5       405.368 ±     27.238  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm                              thrpt    5      1424.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       396.865 ±    565.716  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1393.579 ±   1971.919    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.021 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.073 ±      0.283    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count                                        thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time                                         thrpt    5        15.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless                                         thrpt    5   1655808.020 ±  37345.927   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate                          thrpt    5       985.030 ±     22.189  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm                     thrpt    5       936.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space                 thrpt    5      1004.856 ±     18.647  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm            thrpt    5       954.858 ±     22.464    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space             thrpt    5         0.054 ±      0.156  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.051 ±      0.149    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count                               thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time                                thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump                                   thrpt    5   2550345.430 ± 436015.471   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate                    thrpt    5       298.254 ±     50.972  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm               thrpt    5       184.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space           thrpt    5       264.958 ±    570.342  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm      thrpt    5       164.600 ±    356.135    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space       thrpt    5         0.378 ±      3.030  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.230 ±      1.840    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count                         thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time                          thrpt    5        15.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldPlay                                                      thrpt    5    125395.110 ±   3111.475   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate                                       thrpt    5      1046.250 ±     26.039  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm                                  thrpt    5     13128.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1002.635 ±     24.340  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5     12581.294 ±    507.291    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.058 ±      0.237  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.729 ±      2.948    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count                                            thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time                                             thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.readAdtCirce                                                             thrpt    5    580535.696 ±  13704.343   ops/s
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate                                              thrpt    5      1529.050 ±     36.166  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm                                         thrpt    5      4144.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space                                     thrpt    5      1549.846 ±    708.986  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm                                thrpt    5      4201.282 ±   1954.222    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.058 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.158 ±      0.242    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.count                                                   thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.time                                                    thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.readAdtJackson                                                           thrpt    5   1067042.089 ±   8749.452   ops/s
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate                                            thrpt    5       759.579 ±      6.285  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm                                       thrpt    5      1120.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space                                   thrpt    5       721.597 ±    564.837  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm                              thrpt    5      1063.898 ±    829.851    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space                               thrpt    5         0.042 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.061 ±      0.083    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.count                                                 thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.time                                                  thrpt    5        34.000                   ms
[info] JsonCodecMakerBenchmark.readAdtJsoniter                                                          thrpt    5   2593514.557 ±  36159.771   ops/s
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate                                           thrpt    5       171.422 ±      2.420  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm                                      thrpt    5       104.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space                                  thrpt    5       204.688 ±    440.606  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm                             thrpt    5       124.356 ±    267.689    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space                              thrpt    5         0.009 ±      0.076  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.005 ±      0.046    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count                                                thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time                                                 thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.readAdtPlay                                                              thrpt    5    133954.644 ±   1488.445   ops/s
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate                                               thrpt    5      1114.282 ±     12.300  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm                                          thrpt    5     13088.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space                                      thrpt    5      1139.036 ±    714.657  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm                                 thrpt    5     13383.064 ±   8526.720    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space                                  thrpt    5         0.050 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm                             thrpt    5         0.586 ±      1.569    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.count                                                    thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.time                                                     thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsCirce                                                         thrpt    5   1233395.008 ±  46814.986   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate                                          thrpt    5      1925.308 ±     72.869  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                                     thrpt    5      2456.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1963.629 ±    580.075  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2503.995 ±    682.606    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.046 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.058 ±      0.110    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count                                               thrpt    5        29.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time                                                thrpt    5        60.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsJackson                                                       thrpt    5   1912216.490 ±  76730.718   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate                                        thrpt    5      1341.710 ±     53.808  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                                   thrpt    5      1104.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1338.763 ±     41.619  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1101.677 ±     58.148    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.062 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.051 ±      0.091    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count                                             thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time                                              thrpt    5        45.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter                                                      thrpt    5   5988344.387 ± 214862.932   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                                       thrpt    5       761.188 ±     27.480  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       200.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       799.190 ±    702.413  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       210.262 ±    190.632    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.042 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.011 ±      0.015    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count                                            thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time                                             thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsPlay                                                          thrpt    5    452058.378 ±   4545.978   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate                                           thrpt    5      1156.210 ±     11.670  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                                      thrpt    5      4024.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1140.457 ±    715.146  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      3969.229 ±   2490.605    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.044 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.152 ±      0.425    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count                                                thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time                                                 thrpt    5        39.000                   ms
[info] JsonCodecMakerBenchmark.readArraysCirce                                                          thrpt    5    612861.952 ±  17804.775   ops/s
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate                                           thrpt    5      1997.462 ±     58.045  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm                                      thrpt    5      5128.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                                  thrpt    5      2033.521 ±     29.277  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5220.757 ±    134.592    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                              thrpt    5         0.075 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.192 ±      0.181    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.count                                                thrpt    5        30.000               counts
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.time                                                 thrpt    5        54.000                   ms
[info] JsonCodecMakerBenchmark.readArraysJackson                                                        thrpt    5   1148453.149 ±  54398.185   ops/s
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate                                         thrpt    5      1080.291 ±     51.295  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm                                    thrpt    5      1480.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                                thrpt    5      1062.675 ±    573.405  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1457.067 ±    828.394    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                            thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.063 ±      0.143    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.count                                              thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.time                                               thrpt    5        34.000                   ms
[info] JsonCodecMakerBenchmark.readArraysJsoniter                                                       thrpt    5   4472846.178 ± 141401.005   ops/s
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate                                        thrpt    5      1455.519 ±     46.202  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                                   thrpt    5       512.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5      1484.890 ±    708.402  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5       521.947 ±    232.472    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5         0.058 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.021 ±      0.037    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count                                             thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time                                              thrpt    5        43.000                   ms
[info] JsonCodecMakerBenchmark.readArraysPlay                                                           thrpt    5    226981.414 ±   7017.905   ops/s
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate                                            thrpt    5      1390.672 ±     43.057  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm                                       thrpt    5      9640.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                                   thrpt    5      1413.642 ±    552.680  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5      9801.047 ±   3911.937    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                               thrpt    5         0.046 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.318 ±      0.247    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.count                                                 thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.time                                                  thrpt    5        56.000                   ms
[info] JsonCodecMakerBenchmark.readAsciiStringCirce                                                     thrpt    5    286776.867 ±  12520.041   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate                                      thrpt    5      1118.391 ±     48.892  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate.norm                                 thrpt    5      6136.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space                             thrpt    5      1138.562 ±    698.476  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      6254.029 ±   4051.186    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.251 ±      0.568    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.count                                           thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.time                                            thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.readAsciiStringJackson                                                   thrpt    5    735206.870 ±  17846.653   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate                                    thrpt    5      1540.080 ±     37.258  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate.norm                               thrpt    5      3296.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space                           thrpt    5      1548.315 ±    722.650  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      3311.753 ±   1471.687    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.075 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.160 ±      0.093    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.count                                         thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.time                                          thrpt    5        46.000                   ms
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter                                                  thrpt    5    810851.426 ±  12632.245   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate                                   thrpt    5      1364.670 ±     21.233  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate.norm                              thrpt    5      2648.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5      1348.174 ±     24.796  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      2616.018 ±     57.311    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.067 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.129 ±      0.170    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.count                                        thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.time                                         thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsJackson                                                       thrpt    5   1586734.767 ±  15922.962   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate                                        thrpt    5      1008.493 ±     10.091  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                                   thrpt    5      1000.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                               thrpt    5       992.398 ±     31.325  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5       984.037 ±     27.185    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.062 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.062 ±      0.126    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count                                             thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time                                              thrpt    5        48.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter                                                      thrpt    5   3599185.036 ± 117874.572   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate                                       thrpt    5       475.805 ±     15.617  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       208.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       463.911 ±    699.862  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       203.015 ±    308.896    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.021 ±      0.139  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.009 ±      0.061    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count                                            thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time                                             thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsPlay                                                          thrpt    5    286278.734 ±   4968.456   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate                                           thrpt    5      1308.586 ±     22.625  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                                      thrpt    5      7192.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1344.644 ±     30.224  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      7390.175 ±    104.044    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.033 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.183 ±      0.243    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count                                                thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time                                                 thrpt    5        46.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce                                                   thrpt    5    565705.304 ±  24857.329   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate                                    thrpt    5      1878.264 ±     82.605  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                               thrpt    5      5224.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                           thrpt    5      1828.413 ±    718.456  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5      5089.020 ±   2158.408    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.139 ±      0.256    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count                                         thrpt    5        27.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time                                          thrpt    5        53.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson                                                 thrpt    5    712918.203 ±  20396.808   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate                                  thrpt    5       884.497 ±     25.466  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                             thrpt    5      1952.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space                         thrpt    5       856.894 ±    688.726  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5      1892.472 ±   1549.026    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.058 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.128 ±      0.288    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count                                       thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time                                        thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter                                                thrpt    5   4253047.313 ± 281807.982   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                                 thrpt    5       194.621 ±     12.883  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                            thrpt    5        72.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       219.694 ±    489.135  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5        81.526 ±    181.072    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.375 ±      3.100  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.138 ±      1.141    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count                                      thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time                                       thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay                                                    thrpt    5    211654.028 ±  10031.944   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate                                     thrpt    5      1162.263 ±     54.981  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                                thrpt    5      8640.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1206.745 ±    705.790  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5      8983.848 ±   5610.938    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.065 ±      0.201  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.483 ±      1.513    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count                                          thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time                                           thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce                                                   thrpt    5      5417.449 ±    182.892   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate                                    thrpt    5      1394.593 ±     47.171  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm                               thrpt    5    405000.080 ±      0.003    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                           thrpt    5      1344.853 ±     29.228  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5    390578.441 ±  15330.153    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.072 ±      0.187  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        21.127 ±     55.055    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count                                         thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time                                          thrpt    5        49.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson                                                 thrpt    5     10430.078 ±    286.552   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate                                  thrpt    5       281.352 ±      7.765  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm                             thrpt    5     42440.042 ±      0.006    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                         thrpt    5       245.362 ±    540.107  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5     36931.800 ±  81158.965    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.526 ±      4.303  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5        78.964 ±    645.398    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count                                       thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time                                        thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter                                                thrpt    5     17906.034 ±    246.999   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate                                 thrpt    5       335.138 ±      4.633  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                            thrpt    5     29448.026 ±      0.015    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       331.168 ±      0.049  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5     29099.440 ±    403.997    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.381 ±      3.148  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5        33.447 ±    276.172    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count                                      thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time                                       thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay                                                    thrpt    5      1854.521 ±     56.545   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate                                     thrpt    5      1161.682 ±     35.443  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm                                thrpt    5    985528.240 ±      0.038    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1139.459 ±    715.118  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5    967338.057 ± 626401.824    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.037 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5        31.710 ±    111.177    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count                                          thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time                                           thrpt    5        36.000                   ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter                                               thrpt    5   2755135.414 ±  42105.402   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                                thrpt    5       826.533 ±     12.713  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                           thrpt    5       472.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       800.113 ±    703.017  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5       456.886 ±    400.848    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.029 ±      0.052    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count                                     thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time                                      thrpt    5        29.000                   ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay                                                   thrpt    5    250756.573 ±   2560.044   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                                    thrpt    5      1325.955 ±     13.306  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                               thrpt    5      8320.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1278.210 ±    578.225  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5      8019.412 ±   3593.059    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.042 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.261 ±      0.617    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count                                         thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time                                          thrpt    5        45.000                   ms
[info] JsonCodecMakerBenchmark.readIntArrayCirce                                                        thrpt    5     12538.984 ±    429.192   ops/s
[info] JsonCodecMakerBenchmark.readIntArrayCirce:·gc.alloc.rate                                         thrpt    5      1616.305 ±     55.332  MB/sec
[info] JsonCodecMakerBenchmark.readIntArrayCirce:·gc.alloc.rate.norm                                    thrpt    5    202807.580 ±      2.515    B/op
[info] JsonCodecMakerBenchmark.readIntArrayCirce:·gc.churn.PS_Eden_Space                                thrpt    5      1553.855 ±    717.089  MB/sec
[info] JsonCodecMakerBenchmark.readIntArrayCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5    195114.093 ±  95091.817    B/op
[info] JsonCodecMakerBenchmark.readIntArrayCirce:·gc.churn.PS_Survivor_Space                            thrpt    5         0.079 ±      0.174  MB/sec
[info] JsonCodecMakerBenchmark.readIntArrayCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         9.914 ±     21.767    B/op
[info] JsonCodecMakerBenchmark.readIntArrayCirce:·gc.count                                              thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.readIntArrayCirce:·gc.time                                               thrpt    5        55.000                   ms
[info] JsonCodecMakerBenchmark.readIntArrayJackson                                                      thrpt    5     34278.987 ±    731.350   ops/s
[info] JsonCodecMakerBenchmark.readIntArrayJackson:·gc.alloc.rate                                       thrpt    5       244.178 ±      5.217  MB/sec
[info] JsonCodecMakerBenchmark.readIntArrayJackson:·gc.alloc.rate.norm                                  thrpt    5     11208.013 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntArrayJackson:·gc.churn.PS_Eden_Space                              thrpt    5       232.544 ±    518.204  MB/sec
[info] JsonCodecMakerBenchmark.readIntArrayJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5     10673.453 ±  23763.349    B/op
[info] JsonCodecMakerBenchmark.readIntArrayJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.452 ±      3.807  MB/sec
[info] JsonCodecMakerBenchmark.readIntArrayJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5        20.830 ±    175.296    B/op
[info] JsonCodecMakerBenchmark.readIntArrayJackson:·gc.count                                            thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readIntArrayJackson:·gc.time                                             thrpt    5        17.000                   ms
[info] JsonCodecMakerBenchmark.readIntArrayJsoniter                                                     thrpt    5     67204.406 ±   2275.877   ops/s
[info] JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.alloc.rate                                      thrpt    5       523.499 ±     17.744  MB/sec
[info] JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.alloc.rate.norm                                 thrpt    5     12256.007 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       530.402 ±    699.126  MB/sec
[info] JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5     12420.931 ±  16407.717    B/op
[info] JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.025 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.582 ±      3.054    B/op
[info] JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.count                                           thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.readIntArrayJsoniter:·gc.time                                            thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.readIntArrayPlay                                                         thrpt    5      6466.462 ±    210.755   ops/s
[info] JsonCodecMakerBenchmark.readIntArrayPlay:·gc.alloc.rate                                          thrpt    5      2258.697 ±     73.921  MB/sec
[info] JsonCodecMakerBenchmark.readIntArrayPlay:·gc.alloc.rate.norm                                     thrpt    5    549544.068 ±      0.009    B/op
[info] JsonCodecMakerBenchmark.readIntArrayPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      2237.517 ±    727.922  MB/sec
[info] JsonCodecMakerBenchmark.readIntArrayPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5    544682.607 ± 191763.413    B/op
[info] JsonCodecMakerBenchmark.readIntArrayPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.071 ±      0.185  MB/sec
[info] JsonCodecMakerBenchmark.readIntArrayPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5        17.221 ±     45.020    B/op
[info] JsonCodecMakerBenchmark.readIntArrayPlay:·gc.count                                               thrpt    5        33.000               counts
[info] JsonCodecMakerBenchmark.readIntArrayPlay:·gc.time                                                thrpt    5        65.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesCirce                                                       thrpt    5    479487.988 ±  18656.736   ops/s
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate                                        thrpt    5      1747.942 ±     67.594  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm                                   thrpt    5      5736.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                               thrpt    5      1757.622 ±    586.831  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5765.431 ±   1760.404    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                           thrpt    5         0.058 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.191 ±      0.429    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.count                                             thrpt    5        26.000               counts
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.time                                              thrpt    5        48.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesJackson                                                     thrpt    5    543087.772 ±  14395.972   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate                                      thrpt    5       615.786 ±     16.348  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm                                 thrpt    5      1784.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                             thrpt    5       650.160 ±     13.709  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5      1883.677 ±     73.927    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space                         thrpt    5         0.054 ±      0.176  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.157 ±      0.506    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.count                                           thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.time                                            thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesJsoniter                                                    thrpt    5   2518084.939 ±  28187.054   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate                                     thrpt    5       998.707 ±     11.207  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                                thrpt    5       624.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5      1003.839 ±     19.496  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5       627.211 ±     14.280    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5         0.037 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.023 ±      0.089    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count                                          thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time                                           thrpt    5        35.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesPlay                                                        thrpt    5    155821.901 ±   3687.950   ops/s
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate                                         thrpt    5      1082.273 ±     25.556  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm                                    thrpt    5     10928.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                                thrpt    5      1070.215 ±    567.018  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5     10807.160 ±   5755.752    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                            thrpt    5         0.044 ±      0.205  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.442 ±      2.074    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.count                                              thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.time                                               thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.readMapsCirce                                                            thrpt    5    477343.573 ±   6478.212   ops/s
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate                                             thrpt    5      1696.542 ±     23.040  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm                                        thrpt    5      5592.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1688.533 ±     33.393  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5565.676 ±    147.980    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.054 ±      0.108  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.178 ±      0.355    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.count                                                  thrpt    5        25.000               counts
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.time                                                   thrpt    5        46.000                   ms
[info] JsonCodecMakerBenchmark.readMapsJackson                                                          thrpt    5    907045.643 ±  47105.118   ops/s
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate                                           thrpt    5      1069.984 ±     55.600  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm                                      thrpt    5      1856.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                                  thrpt    5      1058.052 ±    537.235  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5      1838.082 ±   1040.157    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.042 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.072 ±      0.102    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.count                                                thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.time                                                 thrpt    5        53.000                   ms
[info] JsonCodecMakerBenchmark.readMapsJsoniter                                                         thrpt    5   2737865.589 ±  66386.981   ops/s
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate                                          thrpt    5       682.285 ±     17.324  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                                     thrpt    5       392.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       664.428 ±      7.835  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5       381.754 ±     10.427    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.050 ±      0.146  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.029 ±      0.084    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count                                               thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time                                                thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.readMapsPlay                                                             thrpt    5    251224.062 ±   6642.851   ops/s
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate                                              thrpt    5      1290.142 ±     34.053  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm                                         thrpt    5      8080.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                                     thrpt    5      1276.968 ±    564.772  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      7995.874 ±   3473.664    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.025 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.157 ±      0.420    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.count                                                   thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.time                                                    thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce                                                thrpt    5    513095.648 ±  23920.706   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate                                 thrpt    5      1976.859 ±     88.032  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm                            thrpt    5      6064.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space                        thrpt    5      2031.824 ±     33.513  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5      6233.471 ±    366.440    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space                    thrpt    5         0.062 ±      0.139  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.191 ±      0.417    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count                                      thrpt    5        30.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time                                       thrpt    5        59.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter                                             thrpt    5   1888989.672 ±  47545.168   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate                              thrpt    5      1219.817 ±     30.513  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm                         thrpt    5      1016.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5      1210.632 ±    704.432  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5      1008.970 ±    604.771    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.042 ±      0.076    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count                                   thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time                                    thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay                                                 thrpt    5    169284.196 ±   6420.457   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate                                  thrpt    5      1211.120 ±     45.857  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm                             thrpt    5     11256.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space                         thrpt    5      1208.082 ±    723.460  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5     11238.000 ±   7007.958    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.025 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.232 ±      0.970    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count                                       thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time                                        thrpt    5        29.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsJackson                                                   thrpt    5    694620.647 ±  19062.413   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate                                    thrpt    5       900.643 ±     24.673  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                               thrpt    5      2040.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                           thrpt    5       918.918 ±    557.555  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      2081.733 ±   1269.516    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.037 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.085 ±      0.237    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count                                         thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time                                          thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter                                                  thrpt    5   1521575.236 ±  47685.124   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                                   thrpt    5       719.484 ±     22.660  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                              thrpt    5       744.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       731.499 ±    563.891  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       757.074 ±    601.987    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.033 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.034 ±      0.125    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count                                        thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time                                         thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsPlay                                                      thrpt    5    223168.703 ±   9587.639   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate                                       thrpt    5      1173.300 ±     50.514  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                                  thrpt    5      8272.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1140.387 ±    709.736  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8044.571 ±   5134.494    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.042 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.294 ±      0.570    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count                                            thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time                                             thrpt    5        51.000                   ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce                                                  thrpt    5   1042583.169 ±  40806.073   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate                                   thrpt    5      1277.578 ±     49.897  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate.norm                              thrpt    5      1928.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space                          thrpt    5      1277.541 ±    578.347  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1929.613 ±    926.291    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space                      thrpt    5         0.058 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.088 ±      0.157    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.count                                        thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.time                                         thrpt    5        70.000                   ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson                                                thrpt    5    892370.489 ±  22486.354   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate                                 thrpt    5       553.538 ±     13.898  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate.norm                            thrpt    5       976.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space                        thrpt    5       523.389 ±    688.612  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5       923.035 ±   1216.321    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space                    thrpt    5         0.033 ±      0.146  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.059 ±      0.258    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.count                                      thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.time                                       thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter                                               thrpt    5   1410347.788 ±   3005.534   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate                                thrpt    5       229.469 ±      0.494  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate.norm                           thrpt    5       256.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       234.822 ±    525.844  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5       262.005 ±    586.830    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.366 ±      3.034  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.408 ±      3.386    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.count                                     thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.time                                      thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesCirce                                                      thrpt    5    465625.342 ±  18103.949   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate                                       thrpt    5      1377.900 ±     53.513  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                                  thrpt    5      4656.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1343.451 ±     31.894  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      4539.960 ±    204.443    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.067 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.225 ±      0.219    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count                                            thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time                                             thrpt    5        39.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesJackson                                                    thrpt    5    992848.238 ±  23700.066   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate                                     thrpt    5       752.200 ±     18.042  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                                thrpt    5      1192.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       787.357 ±    686.326  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1248.161 ±   1097.350    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.037 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.059 ±      0.166    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count                                          thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time                                           thrpt    5        35.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter                                                   thrpt    5   3259113.091 ±  71439.472   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                                    thrpt    5        99.426 ±      2.177  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                               thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       102.350 ±    539.662  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5        49.648 ±    261.783    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.006 ±      0.053  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.003 ±      0.026    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count                                         thrpt    5         2.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time                                          thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesPlay                                                       thrpt    5    173749.136 ±   5825.092   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate                                        thrpt    5      1189.122 ±     39.896  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                                   thrpt    5     10768.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1208.212 ±    706.753  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5     10947.272 ±   6582.792    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.058 ±      0.174  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.527 ±      1.576    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count                                             thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time                                              thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPICirce                                                      thrpt    5      7544.338 ±    161.997   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate                                       thrpt    5      1064.426 ±     22.774  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm                                  thrpt    5    221975.717 ±     65.940    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space                              thrpt    5      1065.605 ±    550.917  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5    222287.602 ± 117520.847    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.058 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5        12.182 ±     21.986    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time                                             thrpt    5        46.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson                                                    thrpt    5     11930.636 ±    363.426   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate                                     thrpt    5       188.762 ±      5.710  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm                                thrpt    5     24893.001 ±     26.226    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space                            thrpt    5       153.520 ±    539.644  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5     20290.271 ±  71327.274    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.003 ±      0.022  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.334 ±      2.867    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count                                          thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time                                           thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter                                                   thrpt    5     24252.704 ±    226.713   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate                                    thrpt    5       267.098 ±      2.511  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm                               thrpt    5     17328.028 ±      0.089    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       234.825 ±    525.858  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5     15235.165 ±  34112.988    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.374 ±      3.124  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        24.305 ±    202.883    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count                                         thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time                                          thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay                                                       thrpt    5      3695.324 ±    115.879   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate                                        thrpt    5      1090.143 ±     34.406  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm                                   thrpt    5    464136.119 ±      0.013    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1137.072 ±    702.271  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5    483895.770 ± 291505.213    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.073 ±      0.286  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5        30.901 ±    120.906    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time                                              thrpt    5        54.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtCirce                                                            thrpt    5    405098.539 ±   6109.955   ops/s
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate                                             thrpt    5      1345.054 ±     20.373  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm                                        thrpt    5      5224.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1344.709 ±     30.607  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5222.644 ±     69.977    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.075 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.291 ±      0.473    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.count                                                  thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.time                                                   thrpt    5        45.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtJackson                                                          thrpt    5   1639022.025 ±  37252.096   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate                                           thrpt    5       583.374 ±     13.121  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm                                      thrpt    5       560.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space                                  thrpt    5       586.668 ±    562.236  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5       563.656 ±    545.906    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.046 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.044 ±      0.148    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.count                                                thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.time                                                 thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtJsoniter                                                         thrpt    5  11337825.110 ± 508934.188   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate                                          thrpt    5       576.473 ±     25.838  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm                                     thrpt    5        80.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       596.651 ±    572.204  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5        82.779 ±     79.143    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.050 ±      0.146  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.007 ±      0.020    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count                                               thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time                                                thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtPlay                                                             thrpt    5    251330.494 ±   5711.753   ops/s
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate                                              thrpt    5       808.891 ±     18.326  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm                                         thrpt    5      5064.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space                                     thrpt    5       864.698 ±    701.149  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      5417.354 ±   4471.541    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.046 ±      0.200  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.287 ±      1.246    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.count                                                   thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.time                                                    thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce                                                        thrpt    5   1404250.627 ±  23553.787   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate                                         thrpt    5      1413.827 ±     23.450  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                                    thrpt    5      1584.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                                thrpt    5      1413.656 ±    583.724  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1583.718 ±    648.284    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                            thrpt    5         0.067 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.075 ±      0.147    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count                                              thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time                                               thrpt    5        40.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson                                                      thrpt    5   4276041.067 ± 115498.089   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate                                       thrpt    5      1174.029 ±     31.820  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1197.204 ±    701.355  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       440.720 ±    263.588    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.062 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.023 ±      0.029    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count                                            thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time                                             thrpt    5        40.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter                                                     thrpt    5  15770700.264 ± 413260.310   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                                      thrpt    5       481.128 ±     12.621  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                                 thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       463.255 ±    697.541  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5        46.246 ±     69.985    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.025 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.003 ±      0.014    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count                                           thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time                                            thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc                                             thrpt    5  19007862.869 ± 236335.719   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate                              thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm                         thrpt    5        ≈ 10⁻⁵                 B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count                                   thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay                                                         thrpt    5    933407.446 ±  43545.322   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate                                          thrpt    5      1400.371 ±     66.454  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                                     thrpt    5      2360.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1414.716 ±    549.430  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2383.422 ±    875.164    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.046 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.077 ±      0.058    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count                                               thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time                                                thrpt    5        48.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysCirce                                                         thrpt    5    654656.478 ±  25756.555   ops/s
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate                                          thrpt    5      1507.933 ±     59.305  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm                                     thrpt    5      3624.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1482.243 ±    714.227  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      3565.754 ±   1847.052    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.058 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.140 ±      0.161    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.count                                               thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.time                                                thrpt    5        48.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysJackson                                                       thrpt    5   2318620.850 ±  33713.980   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate                                        thrpt    5      1343.886 ±     19.610  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm                                   thrpt    5       912.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1336.488 ±     43.323  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5       906.999 ±     36.622    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.062 ±      0.160  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.042 ±      0.109    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.count                                             thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.time                                              thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysJsoniter                                                      thrpt    5   4752692.554 ± 194701.957   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate                                       thrpt    5      1304.913 ±     53.476  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5      1279.426 ±    567.805  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       423.895 ±    198.702    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.071 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.024 ±      0.045    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count                                            thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time                                             thrpt    5        40.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysPlay                                                          thrpt    5    373788.691 ±   6710.186   ops/s
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate                                           thrpt    5      1307.605 ±     23.553  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm                                      thrpt    5      5504.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1344.833 ±     30.747  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5660.894 ±    215.802    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.042 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.175 ±      0.335    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.count                                                thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.time                                                 thrpt    5        46.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce                                                    thrpt    5    160678.000 ±  10009.525   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate                                     thrpt    5       820.200 ±     51.136  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate.norm                                thrpt    5      8032.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space                            thrpt    5       796.892 ±    691.047  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5      7801.916 ±   6700.662    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space                        thrpt    5         0.050 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.488 ±      1.296    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.count                                          thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.time                                           thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson                                                  thrpt    5    509722.323 ±  13804.420   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate                                   thrpt    5       515.740 ±     14.029  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate.norm                              thrpt    5      1592.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space                          thrpt    5       522.786 ±    686.472  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1616.142 ±   2148.008    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space                      thrpt    5         0.029 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.090 ±      0.417    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.count                                        thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.time                                         thrpt    5        30.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter                                                 thrpt    5    639389.741 ±  25099.129   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate                                  thrpt    5       539.642 ±     21.216  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate.norm                             thrpt    5      1328.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5       530.112 ±    697.524  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5      1305.580 ±   1729.019    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5         0.037 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.092 ±      0.351    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.count                                       thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.time                                        thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc                                         thrpt    5    673290.665 ±   5379.410   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate                          thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm                     thrpt    5         0.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.count                               thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay                                                     thrpt    5    603135.209 ±   7660.869   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate                                      thrpt    5       643.986 ±      8.185  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate.norm                                 thrpt    5      1680.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space                             thrpt    5       657.117 ±     11.562  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5      1714.276 ±     42.710    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space                         thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.141 ±      0.239    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.count                                           thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.time                                            thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsJackson                                                      thrpt    5   1989693.984 ±  33418.318   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate                                       thrpt    5      1052.127 ±     17.480  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                                  thrpt    5       832.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                              thrpt    5       994.306 ±     30.977  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       786.303 ±     34.626    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.079 ±      0.174  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.062 ±      0.137    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count                                            thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time                                             thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter                                                     thrpt    5   4421793.048 ± 896402.014   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                                      thrpt    5       674.475 ±    136.813  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                                 thrpt    5       240.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       664.394 ±      7.631  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5       236.978 ±     51.660    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.046 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.016 ±      0.041    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count                                           thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time                                            thrpt    5        29.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsPlay                                                         thrpt    5    501109.091 ±  11291.019   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate                                          thrpt    5      1482.852 ±     33.197  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                                     thrpt    5      4656.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1484.174 ±    719.212  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      4660.561 ±   2272.215    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.060 ±      0.108  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.190 ±      0.338    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count                                               thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time                                                thrpt    5        54.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce                                                  thrpt    5      5475.307 ±    121.429   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate                                   thrpt    5      1260.632 ±     27.763  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm                              thrpt    5    362272.081 ±      0.012    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                          thrpt    5      1274.725 ±    587.159  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5    366485.794 ± 174011.888    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                      thrpt    5         0.080 ±      0.271  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5        23.076 ±     78.258    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count                                        thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time                                         thrpt    5        41.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson                                                thrpt    5     28996.101 ±    558.135   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate                                 thrpt    5       420.336 ±      8.105  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm                            thrpt    5     22807.863 ±      0.436    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                        thrpt    5       388.872 ±    557.882  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5     21084.350 ±  29951.240    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                    thrpt    5         0.021 ±      0.139  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm               thrpt    5         1.127 ±      7.501    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count                                      thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time                                       thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter                                               thrpt    5     46303.419 ±   1087.828   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate                                thrpt    5       348.896 ±      8.174  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                           thrpt    5     11856.009 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       330.628 ±      0.685  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5     11235.552 ±    256.052    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.387 ±      3.106  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5        13.109 ±    105.295    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count                                     thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time                                      thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc                                       thrpt    5     66720.156 ±  12999.821   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate                        thrpt    5         1.018 ±      0.198  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm                   thrpt    5        24.007 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count                             thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay                                                   thrpt    5      4336.155 ±    191.156   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate                                    thrpt    5      1353.711 ±     59.503  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm                               thrpt    5    491192.083 ±      5.232    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1345.583 ±     29.259  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5    488277.840 ±  16953.695    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.029 ±      0.108  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        10.509 ±     38.878    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count                                         thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time                                          thrpt    5        50.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson                                               thrpt    5    666127.609 ±  18607.174   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                                thrpt    5      1493.640 ±     41.865  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                           thrpt    5      3528.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1471.249 ±    719.043  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      3475.185 ±   1698.843    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.050 ±      0.108  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.118 ±      0.253    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count                                     thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time                                      thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter                                              thrpt    5   2465138.156 ±  50696.696   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                               thrpt    5       363.474 ±      7.488  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       232.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       396.850 ±    569.431  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       253.370 ±    364.667    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.384 ±      3.126  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.247 ±      2.012    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count                                    thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time                                     thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay                                                  thrpt    5    273088.391 ±   8578.642   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                                   thrpt    5      1043.532 ±     30.092  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                              thrpt    5      6016.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1002.266 ±     23.535  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      5778.240 ±    140.429    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.050 ±      0.298  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.291 ±      1.742    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count                                        thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time                                         thrpt    5        37.000                   ms
[info] JsonCodecMakerBenchmark.writeIntArrayCirce                                                       thrpt    5     20484.055 ±   1885.024   ops/s
[info] JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.alloc.rate                                        thrpt    5      1073.987 ±     99.635  MB/sec
[info] JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.alloc.rate.norm                                   thrpt    5     82494.506 ±     55.838    B/op
[info] JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.churn.PS_Eden_Space                               thrpt    5      1070.342 ±    587.874  MB/sec
[info] JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5     82281.109 ±  46818.137    B/op
[info] JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.churn.PS_Survivor_Space                           thrpt    5         0.071 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         5.437 ±      5.482    B/op
[info] JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.count                                             thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeIntArrayCirce:·gc.time                                              thrpt    5        47.000                   ms
[info] JsonCodecMakerBenchmark.writeIntArrayJackson                                                     thrpt    5     95922.641 ±   2537.303   ops/s
[info] JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.alloc.rate                                      thrpt    5       542.339 ±     14.343  MB/sec
[info] JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.alloc.rate.norm                                 thrpt    5      8896.005 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.churn.PS_Eden_Space                             thrpt    5       523.400 ±    688.749  MB/sec
[info] JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5      8578.978 ±  11219.134    B/op
[info] JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.churn.PS_Survivor_Space                         thrpt    5         0.021 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.339 ±      1.844    B/op
[info] JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.count                                           thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeIntArrayJackson:·gc.time                                            thrpt    5        29.000                   ms
[info] JsonCodecMakerBenchmark.writeIntArrayJsoniter                                                    thrpt    5    133053.086 ±   2297.551   ops/s
[info] JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.alloc.rate                                     thrpt    5       330.819 ±      5.694  MB/sec
[info] JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.alloc.rate.norm                                thrpt    5      3912.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5       330.832 ±      1.313  MB/sec
[info] JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5      3912.220 ±     76.359    B/op
[info] JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5         0.373 ±      3.037  MB/sec
[info] JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         4.449 ±     36.201    B/op
[info] JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.count                                          thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.writeIntArrayJsoniter:·gc.time                                           thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeIntArrayJsoniterPrealloc                                            thrpt    5    135513.124 ±   5375.615   ops/s
[info] JsonCodecMakerBenchmark.writeIntArrayJsoniterPrealloc:·gc.alloc.rate                             thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeIntArrayJsoniterPrealloc:·gc.alloc.rate.norm                        thrpt    5         0.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntArrayJsoniterPrealloc:·gc.count                                  thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeIntArrayPlay                                                        thrpt    5      3528.463 ±    123.306   ops/s
[info] JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.alloc.rate                                         thrpt    5      1315.907 ±     45.972  MB/sec
[info] JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.alloc.rate.norm                                    thrpt    5    586768.124 ±      0.020    B/op
[info] JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.churn.PS_Eden_Space                                thrpt    5      1339.283 ±     38.303  MB/sec
[info] JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5    597227.553 ±  25693.515    B/op
[info] JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.churn.PS_Survivor_Space                            thrpt    5         0.046 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5        20.393 ±     38.729    B/op
[info] JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.count                                              thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeIntArrayPlay:·gc.time                                               thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesCirce                                                      thrpt    5    640723.495 ±  10322.916   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate                                       thrpt    5      1544.190 ±     24.908  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                                  thrpt    5      3792.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1551.505 ±    729.337  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      3810.751 ±   1819.689    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.037 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.092 ±      0.166    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count                                            thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time                                             thrpt    5        49.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesJackson                                                    thrpt    5   1290030.901 ±  20053.563   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate                                     thrpt    5       872.369 ±     13.613  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                                thrpt    5      1064.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       854.028 ±    700.152  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1041.998 ±    861.586    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.050 ±      0.146  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.061 ±      0.178    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count                                          thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time                                           thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter                                                   thrpt    5   4813898.271 ±  85011.930   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate                                    thrpt    5       538.485 ±      9.496  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                               thrpt    5       176.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       530.013 ±    697.817  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5       173.295 ±    228.835    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.021 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.007 ±      0.037    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count                                         thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time                                          thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesPlay                                                       thrpt    5    361142.745 ±  13324.700   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate                                        thrpt    5      1250.456 ±     46.198  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                                   thrpt    5      5448.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1209.621 ±    702.457  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5273.713 ±   3162.234    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.218 ±      0.530    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count                                             thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time                                              thrpt    5        37.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsCirce                                                           thrpt    5    369288.542 ±   9880.111   ops/s
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate                                            thrpt    5      1006.386 ±     26.904  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm                                       thrpt    5      4288.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                                   thrpt    5      1066.210 ±    562.212  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                              thrpt    5      4545.328 ±   2491.268    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                               thrpt    5         0.033 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.142 ±      0.387    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.count                                                 thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.time                                                  thrpt    5        45.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsJackson                                                         thrpt    5    806143.103 ±  32821.668   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate                                          thrpt    5      1217.379 ±     49.521  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm                                     thrpt    5      2376.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                                 thrpt    5      1261.547 ±    570.567  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2463.330 ±   1147.495    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                             thrpt    5         0.058 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.114 ±      0.203    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.count                                               thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.time                                                thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsJsoniter                                                        thrpt    5   2315949.856 ±  45219.713   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate                                         thrpt    5       353.268 ±      6.892  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                                    thrpt    5       240.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                                thrpt    5       396.892 ±    569.328  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                           thrpt    5       270.025 ±    394.202    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                            thrpt    5         0.396 ±      3.057  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.269 ±      2.075    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count                                              thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time                                               thrpt    5        17.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsPlay                                                            thrpt    5    294729.049 ±   6996.815   ops/s
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate                                             thrpt    5      1086.446 ±     25.746  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm                                        thrpt    5      5800.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                                    thrpt    5      1137.764 ±    703.205  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                               thrpt    5      6071.066 ±   3657.252    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                                thrpt    5         0.052 ±      0.227  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.278 ±      1.213    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.count                                                  thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.time                                                   thrpt    5        45.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce                                               thrpt    5    578864.486 ±  14328.496   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate                                thrpt    5      1336.199 ±     33.056  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm                           thrpt    5      3632.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space                       thrpt    5      1277.921 ±    571.415  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5      3474.089 ±   1568.421    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.125 ±      0.285    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count                                     thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time                                      thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson                                             thrpt    5   1276243.425 ±  36832.709   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate                              thrpt    5       733.261 ±     21.229  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm                         thrpt    5       904.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space                     thrpt    5       718.375 ±    561.734  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5       885.963 ±    700.968    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space                 thrpt    5         0.033 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.041 ±      0.053    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count                                   thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time                                    thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter                                            thrpt    5   3429846.121 ± 152064.330   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate                             thrpt    5       261.596 ±     11.551  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm                        thrpt    5       120.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5       249.623 ±    551.626  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5       114.863 ±    253.208    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5         0.377 ±      3.071  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.172 ±      1.398    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count                                  thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time                                   thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay                                                thrpt    5    344569.007 ±  15169.681   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate                                 thrpt    5      1179.115 ±     51.919  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm                            thrpt    5      5384.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space                        thrpt    5      1208.244 ±    706.588  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5      5512.939 ±   3095.991    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space                    thrpt    5         0.048 ±      0.112  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.218 ±      0.500    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count                                      thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time                                       thrpt    5        50.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce                                                    thrpt    5    359106.579 ±   4344.391   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate                                     thrpt    5       971.383 ±     11.864  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                                thrpt    5      4256.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                            thrpt    5       998.740 ±     23.064  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5      4375.938 ±    139.361    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space                        thrpt    5         0.046 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.201 ±      0.520    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count                                          thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time                                           thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson                                                  thrpt    5    808357.662 ±  22893.073   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate                                   thrpt    5      1327.581 ±     37.487  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                              thrpt    5      2584.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space                          thrpt    5      1330.856 ±     50.782  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5      2590.374 ±     65.885    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space                      thrpt    5         0.067 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.130 ±      0.258    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count                                        thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time                                         thrpt    5        41.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter                                                 thrpt    5   2090927.211 ±  48658.553   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                                  thrpt    5       393.360 ±      9.227  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                             thrpt    5       296.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5       396.812 ±    568.684  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5       298.802 ±    431.764    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5         0.025 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.019 ±      0.066    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count                                       thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time                                        thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay                                                     thrpt    5    278627.750 ±   9294.263   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate                                      thrpt    5      1065.386 ±     35.393  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                                 thrpt    5      6016.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                             thrpt    5      1070.252 ±    577.908  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5      6042.840 ±   3230.726    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space                         thrpt    5         0.067 ±      0.333  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.379 ±      1.899    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count                                           thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time                                            thrpt    5        49.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce                                                 thrpt    5    954746.303 ±   7488.313   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate                                  thrpt    5       621.366 ±      4.823  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate.norm                             thrpt    5      1024.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space                         thrpt    5       660.879 ±      9.399  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                    thrpt    5      1089.120 ±     15.751    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space                     thrpt    5         0.054 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.089 ±      0.118    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.count                                       thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.time                                        thrpt    5        15.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson                                               thrpt    5   1996820.129 ±  61969.643   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate                                thrpt    5       731.004 ±     22.758  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate.norm                           thrpt    5       576.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space                       thrpt    5       724.632 ±    575.292  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5       571.148 ±    457.651    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.036 ±      0.052    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.count                                     thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.time                                      thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter                                              thrpt    5   1988730.457 ±  29350.209   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate                               thrpt    5       394.356 ±      5.770  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate.norm                          thrpt    5       312.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       396.923 ±    569.115  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       314.250 ±    454.451    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.033 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.026 ±      0.107    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.count                                    thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.time                                     thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc                                      thrpt    5   2420584.277 ±  23369.731   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate                       thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm                  thrpt    5        ≈ 10⁻⁴                 B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.count                            thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay                                                  thrpt    5   2129202.613 ±  77847.164   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate                                   thrpt    5       898.534 ±     32.843  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate.norm                              thrpt    5       664.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space                          thrpt    5       928.319 ±    577.328  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5       685.997 ±    426.091    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.037 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.028 ±      0.050    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.count                                        thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.time                                         thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesCirce                                                     thrpt    5    689089.180 ±   4523.946   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate                                      thrpt    5      1201.761 ±      7.997  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                                 thrpt    5      2744.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                             thrpt    5      1206.772 ±    722.502  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2755.427 ±   1649.031    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.054 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.124 ±      0.279    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count                                           thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time                                            thrpt    5        37.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJackson                                                   thrpt    5   1631519.697 ±  57355.651   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate                                    thrpt    5       721.710 ±     25.396  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                               thrpt    5       696.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                           thrpt    5       721.496 ±    563.508  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5       696.255 ±    556.360    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.046 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.044 ±      0.064    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count                                         thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time                                          thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter                                                  thrpt    5   4789570.357 ±  54213.115   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                                   thrpt    5       389.654 ±      4.426  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                              thrpt    5       128.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       397.160 ±    570.967  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       130.510 ±    188.406    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.033 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.011 ±      0.030    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count                                        thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time                                         thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc                                          thrpt    5   4971317.257 ± 240049.826   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate                           thrpt    5       151.658 ±      7.325  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space                  thrpt    5       153.516 ±    539.631  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm             thrpt    5        49.005 ±    172.265    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space              thrpt    5         0.006 ±      0.050  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.002 ±      0.016    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count                                thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time                                 thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesPlay                                                      thrpt    5    214564.820 ±  10762.332   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate                                       thrpt    5      1093.116 ±     55.005  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                                  thrpt    5      8016.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1071.853 ±    579.151  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      7863.726 ±   4362.726    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.048 ±      0.240  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.349 ±      1.733    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time                                             thrpt    5        29.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce                                                     thrpt    5      7514.578 ±    284.874   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate                                      thrpt    5       690.549 ±     26.045  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm                                 thrpt    5    144579.531 ±     80.161    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space                             thrpt    5       726.479 ±    568.343  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5    152294.448 ± 124474.553    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.021 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         4.346 ±     20.583    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count                                           thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time                                            thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson                                                   thrpt    5     35311.519 ±   1219.775   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate                                    thrpt    5       451.095 ±     15.505  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm                               thrpt    5     20100.033 ±      0.069    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space                           thrpt    5       452.170 ±    680.843  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5     20194.557 ±  30977.842    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.025 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         1.122 ±      5.917    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count                                         thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time                                          thrpt    5        29.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter                                                  thrpt    5     49846.874 ±    540.627   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate                                   thrpt    5       322.144 ±      3.482  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm                              thrpt    5     10168.009 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       315.723 ±    128.811  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      9963.307 ±   3985.018    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.373 ±      3.122  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5        11.780 ±     98.630    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count                                        thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time                                         thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc                                          thrpt    5     59962.010 ±    352.806   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate                           thrpt    5        15.244 ±      0.089  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5       400.007 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count                                thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay                                                      thrpt    5      4414.940 ±    164.876   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate                                       thrpt    5       970.416 ±     36.142  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm                                  thrpt    5    345837.939 ±      2.574    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1001.662 ±     24.216  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5    356992.678 ±  12200.404    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.044 ±      0.166  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5        15.692 ±     60.322    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count                                            thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time                                             thrpt    5        19.000                   ms
[success] Total time: 2092 s, completed Dec 23, 2017 2:57:26 PM
