[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt,release.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Dec 14, 2017 12:01:17 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}core...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 4 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:247:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:255:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] two warnings found
[info] Done compiling.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.2-SNAPSHOT.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.2-SNAPSHOT.jar ...
[info] Compiling 7 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:12:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "bd");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         _bd = in.readBigDecimal(_bd);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           {
[info]             val v = x.os;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("os");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:13:52: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Arrays] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays): com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays, out: JsonWriter): Unit = e0(x, out);
[info]       private val v0: Array[Array[Int]] = new Array[Array[Int]](0);
[info]       private val v1: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private val v2: Array[Int] = new Array[Int](0);
[info]       private def d2(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               x.+=(d2(in, v2))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               x.+=(in.readBigInt(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays): com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = if (in.isNextToken('{'))
[info]         {
[info]           var _aa: Array[Array[Int]] = v0;
[info]           var _a: Array[BigInt] = v1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3104 => if (in.isCharBufEqualsTo(l, "aa"))
[info]                       _aa = d1(in, _aa)
[info]                     else
[info]                       in.skip()
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       _a = d3(in, _a)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Arrays(aa = _aa, a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e2(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: Array[Array[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e2(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.aa;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("aa");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.a;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("a");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = make[Arrays](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:14:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.BitSets] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets): com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = BitSet.newBuilder;
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               BitSet.empty;
[info]             do 
[info]               x.add(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets): com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = if (in.isNextToken('{'))
[info]         {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3153 => if (in.isCharBufEqualsTo(l, "bs"))
[info]                       _bs = d1(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 107902 => if (in.isCharBufEqualsTo(l, "mbs"))
[info]                       _mbs = d2(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.bs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("bs");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mbs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mbs");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = make[BitSets](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:15:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Iterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables): com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Vector[String]): scala.collection.immutable.Vector[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.immutable.HashSet[Long]): scala.collection.immutable.HashSet[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = HashSet.newBuilder[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: List[scala.collection.immutable.HashSet[Long]]): List[scala.collection.immutable.HashSet[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[scala.collection.immutable.HashSet[Long]];
[info]             do 
[info]               x.+=(d4(in, HashSet.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables): com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.immutable.Vector[String] = Vector.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[scala.collection.immutable.HashSet[Long]] = List.empty[scala.collection.immutable.HashSet[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 3463 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.Vector[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e4(x: scala.collection.immutable.HashSet[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: List[scala.collection.immutable.HashSet[Long]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e4(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = make[Iterables](CodecMakerConfig())
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:16:46: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Maps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Maps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Maps): com.github.plokhotnyuk.jsoniter_scala.macros.Maps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Maps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[String, Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[Long, Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), d3(in, HashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Maps): com.github.plokhotnyuk.jsoniter_scala.macros.Maps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Maps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.HashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Maps, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = make[Maps](CodecMakerConfig())
[info]                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:81: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "i");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val missingReqFieldCodec: JsonCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:82: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[String]): scala.collection.mutable.ArrayBuffer[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               ArrayBuffer.empty[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.TreeSet[Int]): scala.collection.mutable.TreeSet[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               TreeSet.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.mutable.Set[Long]): scala.collection.mutable.Set[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Set.empty[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]]): scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = ResizableArray.newBuilder[scala.collection.mutable.Set[Long]];
[info]             do 
[info]               x.+=(d4(in, Set.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.mutable.ArrayBuffer[String] = ArrayBuffer.empty[String];
[info]           var _s: scala.collection.mutable.TreeSet[Int] = TreeSet.empty[Int];
[info]           var _ls: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = ResizableArray.empty[scala.collection.mutable.Set[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 3463 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.ArrayBuffer[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.TreeSet[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e4(x: scala.collection.mutable.Set[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e4(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableIterablesCodec: JsonCodec[MutableIterables] = make[MutableIterables](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               HashMap.empty[String, Double];
[info]             do 
[info]               x.update(in.readKeyAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               OpenHashMap.empty[Long, Double];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               x.update(in.readKeyAsInt(), d3(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.OpenHashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = make[MutableMaps](CodecMakerConfig())
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:76: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = LongMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               x.update(in.readKeyAsLong(), d3(in, LongMap.empty[Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.IntMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.LongMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = make[IntAndLongMaps](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:64: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var req0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readByte();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readShort();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         _bl = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         _ch = in.readChar();
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         _dbl = in.readDouble();
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         _f = in.readFloat();
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:73: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "l");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:51: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("a");
[info]       private val r1: Array[String] = Array("b");
[info]       private val r2: Array[String] = Array("l", "r");
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         _a = in.readInt();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readString(_b);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]           else
[info]             in.requiredKeyError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = d0(in, _l);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         _r = d0(in, _r);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]           else
[info]             in.requiredKeyError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           {
[info]             in.scanToKey("type");
[info]             val l = in.readValueAsCharBuf();
[info]             (in.charBufToHashCode(l): @switch) match {
[info]               case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d1(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d2(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d3(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case _ => in.discriminatorValueError("type")
[info]             }
[info]           }
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("A")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("a");
[info]             out.writeVal(x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("B")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("C")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             e0(x.l, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("r");
[info]             e0(x.r, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]         case null => out.writeNull()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val adtCodec: JsonCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:52: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[String] {
[info]       def nullValue: String = null;
[info]       def decode(in: JsonReader, default: String): String = in.readString(default);
[info]       def encode(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonCodec[String] = make[String](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:75: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("status");
[info]       private val r1: Array[String] = Array("distance", "duration", "status");
[info]       private val r2: Array[String] = Array("text", "value");
[info]       private def d1(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         _value = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]           else
[info]             in.requiredKeyError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         _distance = d6(in, _distance);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         _duration = d6(in, _duration);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]           else
[info]             in.requiredKeyError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       _elements = d4(in, _elements)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: Seq[String] = Seq.empty[String];
[info]           var _origin_addresses: Seq[String] = Seq.empty[String];
[info]           var _rows: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       _destination_addresses = d1(in, _destination_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       _origin_addresses = d1(in, _origin_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       _rows = d2(in, _rows)
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("value");
[info]             out.writeVal(x.value)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("distance");
[info]             e6(x.distance, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("duration");
[info]             e6(x.duration, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.elements;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("elements");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e3(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.destination_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("destination_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.origin_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("origin_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.rows;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("rows");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val googleMapsAPICodec: JsonCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:64: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decode(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encode(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private val r4: Array[String] = Array("url", "description");
[info]       private val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]           else
[info]             in.requiredKeyError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         _expanded_url = in.readString(_expanded_url);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         _display_url = in.readString(_display_url);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]           else
[info]             in.requiredKeyError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       _hashtags = d3(in, _hashtags)
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       _symbols = d3(in, _symbols)
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       _user_mentions = d4(in, _user_mentions)
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = d11(in, _url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = d11(in, _description);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]           else
[info]             in.requiredKeyError(r4, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var req0 = -1;
[info]           var req1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         _location = in.readString(_location);
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = in.readString(_description);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d10(in, _entities);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         _protected = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         _followers_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         _friends_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         _listed_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         _favourites_count = in.readInt();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         _utc_offset = in.readInt();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         _time_zone = in.readString(_time_zone);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         _geo_enabled = in.readBoolean();
[info]                         req0.&=(-65537)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         _verified = in.readBoolean();
[info]                         req0.&=(-131073)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         _statuses_count = in.readInt();
[info]                         req0.&=(-262145)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-524289)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         _contributors_enabled = in.readBoolean();
[info]                         req0.&=(-1048577)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         _is_translator = in.readBoolean();
[info]                         req0.&=(-2097153)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         _is_translation_enabled = in.readBoolean();
[info]                         req0.&=(-4194305)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         _profile_background_color = in.readString(_profile_background_color);
[info]                         req0.&=(-8388609)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url);
[info]                         req0.&=(-16777217)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https);
[info]                         req0.&=(-33554433)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         _profile_background_tile = in.readBoolean();
[info]                         req0.&=(-67108865)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         _profile_image_url = in.readString(_profile_image_url);
[info]                         req0.&=(-134217729)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https);
[info]                         req0.&=(-268435457)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         _profile_banner_url = in.readString(_profile_banner_url);
[info]                         req0.&=(-536870913)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         _profile_link_color = in.readString(_profile_link_color);
[info]                         req0.&=(-1073741825)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color);
[info]                         req0.&=(2147483647)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color);
[info]                         req1.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         _profile_text_color = in.readString(_profile_text_color);
[info]                         req1.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         _profile_use_background_image = in.readBoolean();
[info]                         req1.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         _has_extended_profile = in.readBoolean();
[info]                         req1.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         _default_profile = in.readBoolean();
[info]                         req1.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         _default_profile_image = in.readBoolean();
[info]                         req1.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         _following = in.readBoolean();
[info]                         req1.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         _follow_request_sent = in.readBoolean();
[info]                         req1.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         _notifications = in.readBoolean();
[info]                         req1.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         _translator_type = in.readString(_translator_type);
[info]                         req1.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0).&&(req1.==(0)))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]           else
[info]             in.requiredKeyError(r3, req0, req1)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 32767;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d9(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredKeyError(r5, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 65535;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d9(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         _retweeted_status = d12(in, _retweeted_status);
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("expanded_url");
[info]             out.writeVal(x.expanded_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("display_url");
[info]             out.writeVal(x.display_url)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.hashtags;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("hashtags");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.symbols;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("symbols");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.user_mentions;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("user_mentions");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e9(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             e12(x.url, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("description");
[info]             e12(x.description, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("location");
[info]             out.writeVal(x.location)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("description");
[info]             out.writeVal(x.description)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e11(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("protected");
[info]             out.writeVal(x.`protected`)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("followers_count");
[info]             out.writeVal(x.followers_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("friends_count");
[info]             out.writeVal(x.friends_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("listed_count");
[info]             out.writeVal(x.listed_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favourites_count");
[info]             out.writeVal(x.favourites_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("utc_offset");
[info]             out.writeVal(x.utc_offset)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("time_zone");
[info]             out.writeVal(x.time_zone)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("geo_enabled");
[info]             out.writeVal(x.geo_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("verified");
[info]             out.writeVal(x.verified)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("statuses_count");
[info]             out.writeVal(x.statuses_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("contributors_enabled");
[info]             out.writeVal(x.contributors_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_translator");
[info]             out.writeVal(x.is_translator)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]             out.writeVal(x.is_translation_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_color");
[info]             out.writeVal(x.profile_background_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]             out.writeVal(x.profile_background_image_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]             out.writeVal(x.profile_background_image_url_https)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_tile");
[info]             out.writeVal(x.profile_background_tile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_image_url");
[info]             out.writeVal(x.profile_image_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]             out.writeVal(x.profile_image_url_https)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_banner_url");
[info]             out.writeVal(x.profile_banner_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_link_color");
[info]             out.writeVal(x.profile_link_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]             out.writeVal(x.profile_sidebar_border_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]             out.writeVal(x.profile_sidebar_fill_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_text_color");
[info]             out.writeVal(x.profile_text_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]             out.writeVal(x.profile_use_background_image)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("has_extended_profile");
[info]             out.writeVal(x.has_extended_profile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("default_profile");
[info]             out.writeVal(x.default_profile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("default_profile_image");
[info]             out.writeVal(x.default_profile_image)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("following");
[info]             out.writeVal(x.following)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("follow_request_sent");
[info]             out.writeVal(x.follow_request_sent)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("notifications");
[info]             out.writeVal(x.notifications)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("translator_type");
[info]             out.writeVal(x.translator_type)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted_status");
[info]             e13(x.retweeted_status, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val twitterAPICodec: JsonCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:14:18: local val v1 in value arraysFormat is never used
[warn]     implicit val v1: Format[Array[BigInt]] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:20:18: local val v1 in value bitSetsFormat is never used
[warn]     implicit val v1: Reads[BitSet] = Reads[BitSet](js => JsSuccess(BitSet(js.as[Array[Int]]: _*)))
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:21:18: local val v2 in value bitSetsFormat is never used
[warn]     implicit val v2: Reads[mutable.BitSet] =
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:28:18: local val v1 in value mapsFormat is never used
[warn]     implicit val v1: OFormat[HashMap[String, Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:31:18: local val v2 in value mapsFormat is never used
[warn]     implicit val v2: OFormat[Map[Int, HashMap[Long, Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:18: local val v1 in value mutableMapsFormat is never used
[warn]     implicit val v1: OFormat[mutable.HashMap[String, Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:46:18: local val v2 in value mutableMapsFormat is never used
[warn]     implicit val v2: OFormat[mutable.Map[Int, mutable.OpenHashMap[Long, Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:63:18: local val v1 in value intAndLongMapsFormat is never used
[warn]     implicit val v1: OFormat[IntMap[Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:68:18: local val v2 in value intAndLongMapsFormat is never used
[warn]     implicit val v2: OFormat[mutable.LongMap[LongMap[Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:80:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:87:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:88:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:89:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:94:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:95:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:96:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:108:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:109:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:111:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] 19 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.2-SNAPSHOT.jar ...
Processing 295 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Done packaging.
[info] Compiling 123 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.2-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.2-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecMakerBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce
[info] # Run progress: 0.00% complete, ETA 00:19:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 730097.528 ops/s
[info] # Warmup Iteration   2: 1177715.876 ops/s
[info] # Warmup Iteration   3: 1218429.887 ops/s
[info] # Warmup Iteration   4: 1296674.205 ops/s
[info] # Warmup Iteration   5: 1326919.767 ops/s
[info] Iteration   1: 1451198.098 ops/s
[info]                  ·gc.alloc.rate:                   2331.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2359.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2558.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1451486.314 ops/s
[info]                  ·gc.alloc.rate:                   2332.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2370.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2569.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1445414.431 ops/s
[info]                  ·gc.alloc.rate:                   2322.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2376.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2587.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 1467520.219 ops/s
[info]                  ·gc.alloc.rate:                   2357.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2380.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2551.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1479379.005 ops/s
[info]                  ·gc.alloc.rate:                   2377.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2383.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2534.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce":
[info]   1458999.613 ±(99.9%) 54107.740 ops/s [Average]
[info]   (min, avg, max) = (1445414.431, 1458999.613, 1479379.005), stdev = 14051.608
[info]   CI (99.9%): [1404891.873, 1513107.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate":
[info]   2344.180 ±(99.9%) 87.208 MB/sec [Average]
[info]   (min, avg, max) = (2322.247, 2344.180, 2377.090), stdev = 22.648
[info]   CI (99.9%): [2256.972, 2431.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm":
[info]   2528.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2528.000, 2528.000, 2528.000), stdev = 0.001
[info]   CI (99.9%): [2528.000, 2528.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space":
[info]   2374.109 ±(99.9%) 36.126 MB/sec [Average]
[info]   (min, avg, max) = (2359.859, 2374.109, 2383.657), stdev = 9.382
[info]   CI (99.9%): [2337.982, 2410.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2560.415 ±(99.9%) 75.194 B/op [Average]
[info]   (min, avg, max) = (2534.985, 2560.415, 2587.332), stdev = 19.528
[info]   CI (99.9%): [2485.220, 2635.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.083, 0.146), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.090 ±(99.9%) 0.163 B/op [Average]
[info]   (min, avg, max) = (0.044, 0.090, 0.158), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.000, 16.000), stdev = 4.062
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson
[info] # Run progress: 0.84% complete, ETA 00:32:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58884.074 ops/s
[info] # Warmup Iteration   2: 179166.413 ops/s
[info] # Warmup Iteration   3: 177462.514 ops/s
[info] # Warmup Iteration   4: 205116.061 ops/s
[info] # Warmup Iteration   5: 205668.077 ops/s
[info] Iteration   1: 209030.319 ops/s
[info]                  ·gc.alloc.rate:                   488.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              3680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2440.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.470 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 207731.051 ops/s
[info]                  ·gc.alloc.rate:                   485.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              3680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4915.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.315 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 210030.215 ops/s
[info]                  ·gc.alloc.rate:                   491.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              3680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2433.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 207104.400 ops/s
[info]                  ·gc.alloc.rate:                   484.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              3680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4940.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.316 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 207220.949 ops/s
[info]                  ·gc.alloc.rate:               484.672 MB/sec
[info]                  ·gc.alloc.rate.norm:          3680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2471.625 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson":
[info]   208223.387 ±(99.9%) 4876.493 ops/s [Average]
[info]   (min, avg, max) = (207104.400, 208223.387, 210030.215), stdev = 1266.410
[info]   CI (99.9%): [203346.894, 213099.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate":
[info]   487.032 ±(99.9%) 11.375 MB/sec [Average]
[info]   (min, avg, max) = (484.429, 487.032, 491.242), stdev = 2.954
[info]   CI (99.9%): [475.657, 498.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm":
[info]   3680.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3680.002, 3680.002, 3680.002), stdev = 0.001
[info]   CI (99.9%): [3680.002, 3680.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space":
[info]   454.813 ±(99.9%) 685.223 MB/sec [Average]
[info]   (min, avg, max) = (324.194, 454.813, 650.410), stdev = 177.950
[info]   CI (99.9%): [≈ 0, 1140.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3440.418 ±(99.9%) 5230.803 B/op [Average]
[info]   (min, avg, max) = (2433.557, 3440.418, 4940.884), stdev = 1358.423
[info]   CI (99.9%): [≈ 0, 8671.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.252 ±(99.9%) 0.690 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.252, 0.470), stdev = 0.179
[info]   CI (99.9%): [≈ 0, 0.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 4.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter
[info] # Run progress: 1.68% complete, ETA 00:31:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 424116.179 ops/s
[info] # Warmup Iteration   2: 439058.799 ops/s
[info] # Warmup Iteration   3: 441854.134 ops/s
[info] # Warmup Iteration   4: 401878.930 ops/s
[info] # Warmup Iteration   5: 403569.793 ops/s
[info] Iteration   1: 434887.195 ops/s
[info]                  ·gc.alloc.rate:                   400.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1199.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.226 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 449948.009 ops/s
[info]                  ·gc.alloc.rate:               414.082 MB/sec
[info]                  ·gc.alloc.rate.norm:          1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1158.055 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 451450.276 ops/s
[info]                  ·gc.alloc.rate:                   415.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2308.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.290 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 456719.521 ops/s
[info]                  ·gc.alloc.rate:               420.326 MB/sec
[info]                  ·gc.alloc.rate.norm:          1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1140.907 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 454315.063 ops/s
[info]                  ·gc.alloc.rate:               418.077 MB/sec
[info]                  ·gc.alloc.rate.norm:          1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1148.145 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter":
[info]   449464.013 ±(99.9%) 32947.103 ops/s [Average]
[info]   (min, avg, max) = (434887.195, 449464.013, 456719.521), stdev = 8556.258
[info]   CI (99.9%): [416516.910, 482411.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate":
[info]   413.636 ±(99.9%) 30.389 MB/sec [Average]
[info]   (min, avg, max) = (400.185, 413.636, 420.326), stdev = 7.892
[info]   CI (99.9%): [383.247, 444.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm":
[info]   1448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1448.001, 1448.001, 1448.001), stdev = 0.001
[info]   CI (99.9%): [1448.001, 1448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space":
[info]   397.547 ±(99.9%) 570.126 MB/sec [Average]
[info]   (min, avg, max) = (331.167, 397.547, 662.404), stdev = 148.060
[info]   CI (99.9%): [≈ 0, 967.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1390.982 ±(99.9%) 1976.736 B/op [Average]
[info]   (min, avg, max) = (1140.907, 1390.982, 2308.401), stdev = 513.352
[info]   CI (99.9%): [≈ 0, 3367.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.103 ±(99.9%) 0.551 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.103, 0.290), stdev = 0.143
[info]   CI (99.9%): [≈ 0, 0.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless
[info] # Run progress: 2.52% complete, ETA 00:31:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1610026.819 ops/s
[info] # Warmup Iteration   2: 1692910.322 ops/s
[info] # Warmup Iteration   3: 1779106.004 ops/s
[info] # Warmup Iteration   4: 1770269.299 ops/s
[info] # Warmup Iteration   5: 1765678.682 ops/s
[info] Iteration   1: 1675075.128 ops/s
[info]                  ·gc.alloc.rate:                   1039.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     939.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1566872.401 ops/s
[info]                  ·gc.alloc.rate:                   972.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1005.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1540347.397 ops/s
[info]                  ·gc.alloc.rate:                   955.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1027.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1726618.186 ops/s
[info]                  ·gc.alloc.rate:                   1071.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     919.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1730765.295 ops/s
[info]                  ·gc.alloc.rate:                   1073.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     919.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless":
[info]   1647935.682 ±(99.9%) 344060.613 ops/s [Average]
[info]   (min, avg, max) = (1540347.397, 1647935.682, 1730765.295), stdev = 89351.449
[info]   CI (99.9%): [1303875.069, 1991996.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate":
[info]   1022.386 ±(99.9%) 212.791 MB/sec [Average]
[info]   (min, avg, max) = (955.512, 1022.386, 1073.599), stdev = 55.261
[info]   CI (99.9%): [809.594, 1235.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.000), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   1005.509 ±(99.9%) 18.556 MB/sec [Average]
[info]   (min, avg, max) = (999.828, 1005.509, 1011.133), stdev = 4.819
[info]   CI (99.9%): [986.953, 1024.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   962.070 ±(99.9%) 195.170 B/op [Average]
[info]   (min, avg, max) = (919.213, 962.070, 1027.382), stdev = 50.685
[info]   CI (99.9%): [766.899, 1157.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.044 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (0.019, 0.044, 0.064), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.140
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump
[info] # Run progress: 3.36% complete, ETA 00:30:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2254741.871 ops/s
[info] # Warmup Iteration   2: 2235649.989 ops/s
[info] # Warmup Iteration   3: 2279415.929 ops/s
[info] # Warmup Iteration   4: 2562883.699 ops/s
[info] # Warmup Iteration   5: 2579916.587 ops/s
[info] Iteration   1: 2471019.113 ops/s
[info]                  ·gc.alloc.rate:                   326.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.794 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.142 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2275460.053 ops/s
[info]                  ·gc.alloc.rate:               300.815 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 229.227 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2286768.724 ops/s
[info]                  ·gc.alloc.rate:                   302.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2553835.708 ops/s
[info]                  ·gc.alloc.rate:                   337.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     204.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2592049.810 ops/s
[info]                  ·gc.alloc.rate:               342.669 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 201.023 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump":
[info]   2435826.682 ±(99.9%) 569537.553 ops/s [Average]
[info]   (min, avg, max) = (2275460.053, 2435826.682, 2592049.810), stdev = 147907.094
[info]   CI (99.9%): [1866289.128, 3005364.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   322.012 ±(99.9%) 75.303 MB/sec [Average]
[info]   (min, avg, max) = (300.815, 322.012, 342.669), stdev = 19.556
[info]   CI (99.9%): [246.708, 397.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   331.306 ±(99.9%) 0.732 MB/sec [Average]
[info]   (min, avg, max) = (331.161, 331.306, 331.515), stdev = 0.190
[info]   CI (99.9%): [330.575, 332.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   214.646 ±(99.9%) 50.874 B/op [Average]
[info]   (min, avg, max) = (201.023, 214.646, 229.227), stdev = 13.212
[info]   CI (99.9%): [163.772, 265.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.367 ±(99.9%) 3.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.367, 1.794), stdev = 0.798
[info]   CI (99.9%): [≈ 0, 3.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.234 ±(99.9%) 1.956 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.234, 1.142), stdev = 0.508
[info]   CI (99.9%): [≈ 0, 2.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay
[info] # Run progress: 4.20% complete, ETA 00:30:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14594.378 ops/s
[info] # Warmup Iteration   2: 119695.178 ops/s
[info] # Warmup Iteration   3: 127352.711 ops/s
[info] # Warmup Iteration   4: 129135.817 ops/s
[info] # Warmup Iteration   5: 128910.279 ops/s
[info] Iteration   1: 129182.241 ops/s
[info]                  ·gc.alloc.rate:                   1077.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12096.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.268 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 128431.531 ops/s
[info]                  ·gc.alloc.rate:                   1071.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12243.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.510 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 129247.290 ops/s
[info]                  ·gc.alloc.rate:               1078.503 MB/sec
[info]                  ·gc.alloc.rate.norm:          13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16300.979 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 128660.015 ops/s
[info]                  ·gc.alloc.rate:                   1073.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12325.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 126378.868 ops/s
[info]                  ·gc.alloc.rate:               1054.453 MB/sec
[info]                  ·gc.alloc.rate.norm:          13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1010.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12584.870 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay":
[info]   128379.989 ±(99.9%) 4507.629 ops/s [Average]
[info]   (min, avg, max) = (126378.868, 128379.989, 129247.290), stdev = 1170.617
[info]   CI (99.9%): [123872.360, 132887.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate":
[info]   1071.191 ±(99.9%) 37.718 MB/sec [Average]
[info]   (min, avg, max) = (1054.453, 1071.191, 1078.503), stdev = 9.795
[info]   CI (99.9%): [1033.473, 1108.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm":
[info]   13128.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13128.003, 13128.003, 13128.004), stdev = 0.001
[info]   CI (99.9%): [13128.003, 13128.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space":
[info]   1070.102 ±(99.9%) 579.813 MB/sec [Average]
[info]   (min, avg, max) = (993.201, 1070.102, 1339.172), stdev = 150.576
[info]   CI (99.9%): [490.288, 1649.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm":
[info]   13110.327 ±(99.9%) 6901.921 B/op [Average]
[info]   (min, avg, max) = (12096.862, 13110.327, 16300.979), stdev = 1792.407
[info]   CI (99.9%): [6208.406, 20012.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.559 ±(99.9%) 2.230 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.559, 1.268), stdev = 0.579
[info]   CI (99.9%): [≈ 0, 2.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce
[info] # Run progress: 5.04% complete, ETA 00:30:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 392836.225 ops/s
[info] # Warmup Iteration   2: 595655.066 ops/s
[info] # Warmup Iteration   3: 606205.183 ops/s
[info] # Warmup Iteration   4: 610061.711 ops/s
[info] # Warmup Iteration   5: 614917.372 ops/s
[info] Iteration   1: 606614.892 ops/s
[info]                  ·gc.alloc.rate:                   1597.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3474.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.270 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 610206.303 ops/s
[info]                  ·gc.alloc.rate:                   1607.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4336.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.215 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 598676.090 ops/s
[info]                  ·gc.alloc.rate:                   1576.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4439.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 612821.054 ops/s
[info]                  ·gc.alloc.rate:                   1614.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4349.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 605948.954 ops/s
[info]                  ·gc.alloc.rate:                   1595.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1357.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3524.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce":
[info]   606853.459 ±(99.9%) 20610.674 ops/s [Average]
[info]   (min, avg, max) = (598676.090, 606853.459, 612821.054), stdev = 5352.527
[info]   CI (99.9%): [586242.785, 627464.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate":
[info]   1598.335 ±(99.9%) 54.290 MB/sec [Average]
[info]   (min, avg, max) = (1576.844, 1598.335, 1614.084), stdev = 14.099
[info]   CI (99.9%): [1544.046, 1652.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm":
[info]   4144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4144.001, 4144.001, 4144.001), stdev = 0.001
[info]   CI (99.9%): [4144.001, 4144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space":
[info]   1552.357 ±(99.9%) 717.864 MB/sec [Average]
[info]   (min, avg, max) = (1339.273, 1552.357, 1693.942), stdev = 186.427
[info]   CI (99.9%): [834.493, 2270.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4024.721 ±(99.9%) 1854.788 B/op [Average]
[info]   (min, avg, max) = (3474.023, 4024.721, 4439.438), stdev = 481.683
[info]   CI (99.9%): [2169.932, 5879.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.183 ±(99.9%) 0.278 B/op [Average]
[info]   (min, avg, max) = (0.107, 0.183, 0.270), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson
[info] # Run progress: 5.88% complete, ETA 00:29:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 592842.235 ops/s
[info] # Warmup Iteration   2: 1280257.356 ops/s
[info] # Warmup Iteration   3: 1268183.226 ops/s
[info] # Warmup Iteration   4: 1259433.945 ops/s
[info] # Warmup Iteration   5: 1264189.633 ops/s
[info] Iteration   1: 1275168.349 ops/s
[info]                  ·gc.alloc.rate:                   907.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1207.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1276226.594 ops/s
[info]                  ·gc.alloc.rate:                   908.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1212.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1271486.157 ops/s
[info]                  ·gc.alloc.rate:                   905.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1224.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1270309.694 ops/s
[info]                  ·gc.alloc.rate:                   904.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     821.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1264263.918 ops/s
[info]                  ·gc.alloc.rate:                   899.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1243.507 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson":
[info]   1271490.942 ±(99.9%) 18222.027 ops/s [Average]
[info]   (min, avg, max) = (1264263.918, 1271490.942, 1276226.594), stdev = 4732.203
[info]   CI (99.9%): [1253268.915, 1289712.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate":
[info]   905.121 ±(99.9%) 12.947 MB/sec [Average]
[info]   (min, avg, max) = (899.964, 905.121, 908.498), stdev = 3.362
[info]   CI (99.9%): [892.174, 918.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space":
[info]   922.789 ±(99.9%) 559.850 MB/sec [Average]
[info]   (min, avg, max) = (663.064, 922.789, 999.206), stdev = 145.391
[info]   CI (99.9%): [362.939, 1482.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1141.830 ±(99.9%) 692.191 B/op [Average]
[info]   (min, avg, max) = (821.214, 1141.830, 1243.507), stdev = 179.760
[info]   CI (99.9%): [449.639, 1834.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.077 ±(99.9%) 0.099 B/op [Average]
[info]   (min, avg, max) = (0.051, 0.077, 0.103), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 10.000), stdev = 2.950
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter
[info] # Run progress: 6.72% complete, ETA 00:29:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1791802.558 ops/s
[info] # Warmup Iteration   2: 2512357.891 ops/s
[info] # Warmup Iteration   3: 2581752.708 ops/s
[info] # Warmup Iteration   4: 2572674.147 ops/s
[info] # Warmup Iteration   5: 2560427.167 ops/s
[info] Iteration   1: 2574931.664 ops/s
[info]                  ·gc.alloc.rate:      170.205 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2575548.057 ops/s
[info]                  ·gc.alloc.rate:               170.248 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 156.315 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 2572124.057 ops/s
[info]                  ·gc.alloc.rate:                   170.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     156.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2587018.722 ops/s
[info]                  ·gc.alloc.rate:      170.997 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2551576.073 ops/s
[info]                  ·gc.alloc.rate:               168.650 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 157.787 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter":
[info]   2572239.715 ±(99.9%) 49597.514 ops/s [Average]
[info]   (min, avg, max) = (2551576.073, 2572239.715, 2587018.722), stdev = 12880.317
[info]   CI (99.9%): [2522642.200, 2621837.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate":
[info]   170.021 ±(99.9%) 3.290 MB/sec [Average]
[info]   (min, avg, max) = (168.650, 170.021, 170.997), stdev = 0.854
[info]   CI (99.9%): [166.732, 173.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm":
[info]   104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (104.000, 104.000, 104.000), stdev = 0.001
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   153.526 ±(99.9%) 539.667 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.526, 255.887), stdev = 140.150
[info]   CI (99.9%): [≈ 0, 693.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   94.126 ±(99.9%) 330.873 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 94.126, 157.787), stdev = 85.927
[info]   CI (99.9%): [≈ 0, 424.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.044 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.025), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 5.000), stdev = 2.121
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay
[info] # Run progress: 7.56% complete, ETA 00:29:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29466.986 ops/s
[info] # Warmup Iteration   2: 128838.171 ops/s
[info] # Warmup Iteration   3: 128057.658 ops/s
[info] # Warmup Iteration   4: 129184.569 ops/s
[info] # Warmup Iteration   5: 127351.685 ops/s
[info] Iteration   1: 130090.421 ops/s
[info]                  ·gc.alloc.rate:                   1082.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12052.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.267 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 131667.734 ops/s
[info]                  ·gc.alloc.rate:                   1095.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11955.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.995 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 131646.310 ops/s
[info]                  ·gc.alloc.rate:               1095.080 MB/sec
[info]                  ·gc.alloc.rate.norm:          13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12013.739 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 128652.921 ops/s
[info]                  ·gc.alloc.rate:                   1070.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16444.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 130755.306 ops/s
[info]                  ·gc.alloc.rate:                   1087.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12167.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.251 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay":
[info]   130562.539 ±(99.9%) 4833.560 ops/s [Average]
[info]   (min, avg, max) = (128652.921, 130562.539, 131667.734), stdev = 1255.260
[info]   CI (99.9%): [125728.978, 135396.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate":
[info]   1086.067 ±(99.9%) 40.334 MB/sec [Average]
[info]   (min, avg, max) = (1070.129, 1086.067, 1095.347), stdev = 10.475
[info]   CI (99.9%): [1045.733, 1126.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm":
[info]   13088.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13088.003, 13088.003, 13088.004), stdev = 0.001
[info]   CI (99.9%): [13088.003, 13088.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space":
[info]   1071.590 ±(99.9%) 587.909 MB/sec [Average]
[info]   (min, avg, max) = (996.538, 1071.590, 1344.537), stdev = 152.678
[info]   CI (99.9%): [483.681, 1659.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   12926.624 ±(99.9%) 7577.473 B/op [Average]
[info]   (min, avg, max) = (11955.811, 12926.624, 16444.097), stdev = 1967.846
[info]   CI (99.9%): [5349.151, 20504.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.281 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.187), stdev = 0.073
[info]   CI (99.9%): [≈ 0, 0.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.906 ±(99.9%) 3.402 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.906, 2.267), stdev = 0.884
[info]   CI (99.9%): [≈ 0, 4.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce
[info] # Run progress: 8.40% complete, ETA 00:29:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 821548.494 ops/s
[info] # Warmup Iteration   2: 1173077.429 ops/s
[info] # Warmup Iteration   3: 1209978.543 ops/s
[info] # Warmup Iteration   4: 1215502.325 ops/s
[info] # Warmup Iteration   5: 1224717.973 ops/s
[info] Iteration   1: 1215504.251 ops/s
[info]                  ·gc.alloc.rate:                   1909.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2178.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1204132.432 ops/s
[info]                  ·gc.alloc.rate:                   1891.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2649.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.218 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1214502.345 ops/s
[info]                  ·gc.alloc.rate:                   1908.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2634.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1210800.067 ops/s
[info]                  ·gc.alloc.rate:                   1902.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2207.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1218756.239 ops/s
[info]                  ·gc.alloc.rate:                   1914.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2633.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce":
[info]   1212739.067 ±(99.9%) 21508.150 ops/s [Average]
[info]   (min, avg, max) = (1204132.432, 1212739.067, 1218756.239), stdev = 5585.598
[info]   CI (99.9%): [1191230.916, 1234247.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1905.450 ±(99.9%) 33.870 MB/sec [Average]
[info]   (min, avg, max) = (1891.912, 1905.450, 1914.896), stdev = 8.796
[info]   CI (99.9%): [1871.581, 1939.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2472.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2472.000, 2472.000, 2472.000), stdev = 0.001
[info]   CI (99.9%): [2472.000, 2472.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1896.614 ±(99.9%) 723.726 MB/sec [Average]
[info]   (min, avg, max) = (1683.245, 1896.614, 2039.723), stdev = 187.949
[info]   CI (99.9%): [1172.888, 2620.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2460.630 ±(99.9%) 942.249 B/op [Average]
[info]   (min, avg, max) = (2178.690, 2460.630, 2649.566), stdev = 244.699
[info]   CI (99.9%): [1518.381, 3402.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.167), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.103 ±(99.9%) 0.262 B/op [Average]
[info]   (min, avg, max) = (0.054, 0.103, 0.218), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson
[info] # Run progress: 9.24% complete, ETA 00:28:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 937181.361 ops/s
[info] # Warmup Iteration   2: 1880490.413 ops/s
[info] # Warmup Iteration   3: 1879977.414 ops/s
[info] # Warmup Iteration   4: 1911984.005 ops/s
[info] # Warmup Iteration   5: 1894982.893 ops/s
[info] Iteration   1: 1930238.335 ops/s
[info]                  ·gc.alloc.rate:                   1354.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1078.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1928063.007 ops/s
[info]                  ·gc.alloc.rate:                   1352.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1086.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1929162.389 ops/s
[info]                  ·gc.alloc.rate:                   1353.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1365.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1923268.034 ops/s
[info]                  ·gc.alloc.rate:                   1349.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1101.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1904377.594 ops/s
[info]                  ·gc.alloc.rate:                   1336.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1115.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson":
[info]   1923021.872 ±(99.9%) 41421.995 ops/s [Average]
[info]   (min, avg, max) = (1904377.594, 1923021.872, 1930238.335), stdev = 10757.161
[info]   CI (99.9%): [1881599.877, 1964443.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1349.284 ±(99.9%) 29.381 MB/sec [Average]
[info]   (min, avg, max) = (1336.040, 1349.284, 1354.281), stdev = 7.630
[info]   CI (99.9%): [1319.903, 1378.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1404.922 ±(99.9%) 581.852 MB/sec [Average]
[info]   (min, avg, max) = (1322.598, 1404.922, 1674.481), stdev = 151.105
[info]   CI (99.9%): [823.070, 1986.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1149.406 ±(99.9%) 468.794 B/op [Average]
[info]   (min, avg, max) = (1078.172, 1149.406, 1365.650), stdev = 121.744
[info]   CI (99.9%): [680.612, 1618.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.083, 0.146), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.130 B/op [Average]
[info]   (min, avg, max) = (0.034, 0.068, 0.119), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 8.000), stdev = 1.517
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter
[info] # Run progress: 10.08% complete, ETA 00:28:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5700007.451 ops/s
[info] # Warmup Iteration   2: 6076279.218 ops/s
[info] # Warmup Iteration   3: 6239691.275 ops/s
[info] # Warmup Iteration   4: 6139163.093 ops/s
[info] # Warmup Iteration   5: 6113551.224 ops/s
[info] Iteration   1: 6230692.077 ops/s
[info]                  ·gc.alloc.rate:                   792.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 6257802.224 ops/s
[info]                  ·gc.alloc.rate:               795.472 MB/sec
[info]                  ·gc.alloc.rate.norm:          200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 167.208 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 6260707.837 ops/s
[info]                  ·gc.alloc.rate:                   795.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     251.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 6277595.566 ops/s
[info]                  ·gc.alloc.rate:                   797.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.338 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 6256968.529 ops/s
[info]                  ·gc.alloc.rate:                   795.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     252.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter":
[info]   6256753.247 ±(99.9%) 64731.270 ops/s [Average]
[info]   (min, avg, max) = (6230692.077, 6256753.247, 6277595.566), stdev = 16810.505
[info]   CI (99.9%): [6192021.977, 6321484.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   795.330 ±(99.9%) 8.219 MB/sec [Average]
[info]   (min, avg, max) = (792.018, 795.330, 797.972), stdev = 2.134
[info]   CI (99.9%): [787.111, 803.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   800.427 ±(99.9%) 710.466 MB/sec [Average]
[info]   (min, avg, max) = (663.705, 800.427, 1005.189), stdev = 184.506
[info]   CI (99.9%): [89.961, 1510.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   201.271 ±(99.9%) 178.400 B/op [Average]
[info]   (min, avg, max) = (167.208, 201.271, 252.764), stdev = 46.330
[info]   CI (99.9%): [22.871, 379.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.016), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay
[info] # Run progress: 10.92% complete, ETA 00:28:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106287.043 ops/s
[info] # Warmup Iteration   2: 438405.875 ops/s
[info] # Warmup Iteration   3: 447601.064 ops/s
[info] # Warmup Iteration   4: 444806.868 ops/s
[info] # Warmup Iteration   5: 444027.746 ops/s
[info] Iteration   1: 444007.799 ops/s
[info]                  ·gc.alloc.rate:                   1122.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4713.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.590 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 445528.343 ops/s
[info]                  ·gc.alloc.rate:                   1125.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3540.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.221 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 440021.415 ops/s
[info]                  ·gc.alloc.rate:                   1111.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3596.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.298 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 449248.122 ops/s
[info]                  ·gc.alloc.rate:                   1135.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4714.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 448586.649 ops/s
[info]                  ·gc.alloc.rate:               1133.576 MB/sec
[info]                  ·gc.alloc.rate.norm:          3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1012.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3550.043 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay":
[info]   445478.466 ±(99.9%) 14384.083 ops/s [Average]
[info]   (min, avg, max) = (440021.415, 445478.466, 449248.122), stdev = 3735.501
[info]   CI (99.9%): [431094.383, 459862.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1125.720 ±(99.9%) 36.305 MB/sec [Average]
[info]   (min, avg, max) = (1111.960, 1125.720, 1135.254), stdev = 9.428
[info]   CI (99.9%): [1089.415, 1162.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   3976.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3976.001, 3976.001, 3976.001), stdev = 0.001
[info]   CI (99.9%): [3976.001, 3976.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1139.299 ±(99.9%) 699.081 MB/sec [Average]
[info]   (min, avg, max) = (1002.395, 1139.299, 1346.029), stdev = 181.549
[info]   CI (99.9%): [440.218, 1838.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4022.867 ±(99.9%) 2429.711 B/op [Average]
[info]   (min, avg, max) = (3540.229, 4022.867, 4714.201), stdev = 630.988
[info]   CI (99.9%): [1593.155, 6452.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.238 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.167), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.251 ±(99.9%) 0.844 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.251, 0.590), stdev = 0.219
[info]   CI (99.9%): [≈ 0, 1.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 9.000), stdev = 2.302
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce
[info] # Run progress: 11.76% complete, ETA 00:27:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 389698.959 ops/s
[info] # Warmup Iteration   2: 607842.226 ops/s
[info] # Warmup Iteration   3: 615153.115 ops/s
[info] # Warmup Iteration   4: 615046.406 ops/s
[info] # Warmup Iteration   5: 615426.730 ops/s
[info] Iteration   1: 614829.031 ops/s
[info]                  ·gc.alloc.rate:                   2003.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5174.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 616767.859 ops/s
[info]                  ·gc.alloc.rate:                   2010.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5179.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 629358.238 ops/s
[info]                  ·gc.alloc.rate:                   2051.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5089.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 624126.385 ops/s
[info]                  ·gc.alloc.rate:                   2034.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5140.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 615610.624 ops/s
[info]                  ·gc.alloc.rate:                   2006.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2041.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5218.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce":
[info]   620138.427 ±(99.9%) 24426.573 ops/s [Average]
[info]   (min, avg, max) = (614829.031, 620138.427, 629358.238), stdev = 6343.503
[info]   CI (99.9%): [595711.854, 644565.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2021.206 ±(99.9%) 79.479 MB/sec [Average]
[info]   (min, avg, max) = (2003.937, 2021.206, 2051.239), stdev = 20.640
[info]   CI (99.9%): [1941.727, 2100.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5128.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5128.001, 5128.001, 5128.001), stdev = 0.001
[info]   CI (99.9%): [5128.001, 5128.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2033.791 ±(99.9%) 29.949 MB/sec [Average]
[info]   (min, avg, max) = (2022.108, 2033.791, 2041.744), stdev = 7.778
[info]   CI (99.9%): [2003.842, 2063.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5160.296 ±(99.9%) 186.148 B/op [Average]
[info]   (min, avg, max) = (5089.301, 5160.296, 5218.033), stdev = 48.342
[info]   CI (99.9%): [4974.147, 5346.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.083, 0.104), stdev = 0.021
[info]   CI (99.9%): [0.003, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.212 ±(99.9%) 0.208 B/op [Average]
[info]   (min, avg, max) = (0.156, 0.212, 0.266), stdev = 0.054
[info]   CI (99.9%): [0.004, 0.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 11.000), stdev = 2.345
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson
[info] # Run progress: 12.61% complete, ETA 00:27:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 605926.576 ops/s
[info] # Warmup Iteration   2: 1210130.241 ops/s
[info] # Warmup Iteration   3: 1253774.455 ops/s
[info] # Warmup Iteration   4: 1253511.365 ops/s
[info] # Warmup Iteration   5: 1250392.830 ops/s
[info] Iteration   1: 1257031.256 ops/s
[info]                  ·gc.alloc.rate:                   1182.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1649.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1249800.532 ops/s
[info]                  ·gc.alloc.rate:                   1175.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1250.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1248000.308 ops/s
[info]                  ·gc.alloc.rate:                   1173.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1680.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1258014.116 ops/s
[info]                  ·gc.alloc.rate:                   1183.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1257.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1259462.383 ops/s
[info]                  ·gc.alloc.rate:                   1184.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1679.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson":
[info]   1254461.719 ±(99.9%) 19981.204 ops/s [Average]
[info]   (min, avg, max) = (1248000.308, 1254461.719, 1259462.383), stdev = 5189.055
[info]   CI (99.9%): [1234480.515, 1274442.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1180.014 ±(99.9%) 18.873 MB/sec [Average]
[info]   (min, avg, max) = (1173.898, 1180.014, 1184.752), stdev = 4.901
[info]   CI (99.9%): [1161.141, 1198.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1198.864 ±(99.9%) 702.494 MB/sec [Average]
[info]   (min, avg, max) = (993.546, 1198.864, 1344.726), stdev = 182.435
[info]   CI (99.9%): [496.370, 1901.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1503.576 ±(99.9%) 878.912 B/op [Average]
[info]   (min, avg, max) = (1250.773, 1503.576, 1680.950), stdev = 228.251
[info]   CI (99.9%): [624.664, 2382.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.015
[info]   CI (99.9%): [0.006, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.078 ±(99.9%) 0.071 B/op [Average]
[info]   (min, avg, max) = (0.052, 0.078, 0.104), stdev = 0.018
[info]   CI (99.9%): [0.007, 0.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 11.000), stdev = 2.881
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter
[info] # Run progress: 13.45% complete, ETA 00:27:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1882393.493 ops/s
[info] # Warmup Iteration   2: 2455781.072 ops/s
[info] # Warmup Iteration   3: 2507002.295 ops/s
[info] # Warmup Iteration   4: 2523981.880 ops/s
[info] # Warmup Iteration   5: 2489548.625 ops/s
[info] Iteration   1: 2510468.689 ops/s
[info]                  ·gc.alloc.rate:                   1046.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     626.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2501675.768 ops/s
[info]                  ·gc.alloc.rate:                   1042.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     630.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2490910.158 ops/s
[info]                  ·gc.alloc.rate:                   1038.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     634.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2488364.874 ops/s
[info]                  ·gc.alloc.rate:                   1037.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     637.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2479882.027 ops/s
[info]                  ·gc.alloc.rate:                   1033.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     641.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter":
[info]   2494260.303 ±(99.9%) 45983.174 ops/s [Average]
[info]   (min, avg, max) = (2479882.027, 2494260.303, 2510468.689), stdev = 11941.684
[info]   CI (99.9%): [2448277.129, 2540243.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1039.919 ±(99.9%) 19.495 MB/sec [Average]
[info]   (min, avg, max) = (1033.846, 1039.919, 1046.844), stdev = 5.063
[info]   CI (99.9%): [1020.425, 1059.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1004.948 ±(99.9%) 17.636 MB/sec [Average]
[info]   (min, avg, max) = (999.324, 1004.948, 1010.773), stdev = 4.580
[info]   CI (99.9%): [987.311, 1022.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   633.962 ±(99.9%) 22.902 B/op [Average]
[info]   (min, avg, max) = (626.222, 633.962, 641.360), stdev = 5.948
[info]   CI (99.9%): [611.060, 656.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.061 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.039, 0.065), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 7.000), stdev = 2.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay
[info] # Run progress: 14.29% complete, ETA 00:27:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45509.137 ops/s
[info] # Warmup Iteration   2: 232965.575 ops/s
[info] # Warmup Iteration   3: 234367.523 ops/s
[info] # Warmup Iteration   4: 237993.153 ops/s
[info] # Warmup Iteration   5: 237175.763 ops/s
[info] Iteration   1: 238486.277 ops/s
[info]                  ·gc.alloc.rate:                   1409.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              9296.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8823.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.412 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 238233.464 ops/s
[info]                  ·gc.alloc.rate:                   1407.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              9296.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8872.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.550 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 234167.674 ops/s
[info]                  ·gc.alloc.rate:                   1383.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              9296.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.990 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9057.280 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.700 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 235189.213 ops/s
[info]                  ·gc.alloc.rate:                   1389.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              9296.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9044.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 240071.584 ops/s
[info]                  ·gc.alloc.rate:                   1418.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              9296.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8878.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.273 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay":
[info]   237229.642 ±(99.9%) 9471.806 ops/s [Average]
[info]   (min, avg, max) = (234167.674, 237229.642, 240071.584), stdev = 2459.798
[info]   CI (99.9%): [227757.836, 246701.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1401.635 ±(99.9%) 56.016 MB/sec [Average]
[info]   (min, avg, max) = (1383.519, 1401.635, 1418.517), stdev = 14.547
[info]   CI (99.9%): [1345.619, 1457.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9296.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9296.002, 9296.002, 9296.002), stdev = 0.001
[info]   CI (99.9%): [9296.002, 9296.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1347.092 ±(99.9%) 26.730 MB/sec [Average]
[info]   (min, avg, max) = (1337.374, 1347.092, 1354.764), stdev = 6.942
[info]   CI (99.9%): [1320.362, 1373.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8935.069 ±(99.9%) 415.729 B/op [Average]
[info]   (min, avg, max) = (8823.052, 8935.069, 9057.280), stdev = 107.964
[info]   CI (99.9%): [8519.340, 9350.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.443 ±(99.9%) 0.705 B/op [Average]
[info]   (min, avg, max) = (0.273, 0.443, 0.700), stdev = 0.183
[info]   CI (99.9%): [≈ 0, 1.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 8.000), stdev = 1.414
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce
[info] # Run progress: 15.13% complete, ETA 00:26:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 250202.469 ops/s
[info] # Warmup Iteration   2: 279835.061 ops/s
[info] # Warmup Iteration   3: 289461.856 ops/s
[info] # Warmup Iteration   4: 290798.224 ops/s
[info] # Warmup Iteration   5: 287512.247 ops/s
[info] Iteration   1: 287813.958 ops/s
[info]                  ·gc.alloc.rate:               1122.482 MB/sec
[info]                  ·gc.alloc.rate.norm:          6136.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      998.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5458.696 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 289550.521 ops/s
[info]                  ·gc.alloc.rate:                   1129.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              6136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5444.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.453 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 286656.566 ops/s
[info]                  ·gc.alloc.rate:                   1117.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              6136.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7362.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.229 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 287882.397 ops/s
[info]                  ·gc.alloc.rate:               1122.753 MB/sec
[info]                  ·gc.alloc.rate.norm:          6136.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1009.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5519.070 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 288350.786 ops/s
[info]                  ·gc.alloc.rate:                   1124.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              6136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5521.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.227 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce":
[info]   288050.846 ±(99.9%) 4023.645 ops/s [Average]
[info]   (min, avg, max) = (286656.566, 288050.846, 289550.521), stdev = 1044.928
[info]   CI (99.9%): [284027.201, 292074.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate":
[info]   1123.392 ±(99.9%) 15.701 MB/sec [Average]
[info]   (min, avg, max) = (1117.950, 1123.392, 1129.255), stdev = 4.078
[info]   CI (99.9%): [1107.691, 1139.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate.norm":
[info]   6136.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6136.001, 6136.002, 6136.002), stdev = 0.001
[info]   CI (99.9%): [6136.001, 6136.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   1072.714 ±(99.9%) 578.724 MB/sec [Average]
[info]   (min, avg, max) = (998.580, 1072.714, 1341.388), stdev = 150.293
[info]   CI (99.9%): [493.990, 1651.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5861.050 ±(99.9%) 3234.461 B/op [Average]
[info]   (min, avg, max) = (5444.115, 5861.050, 7362.368), stdev = 839.979
[info]   CI (99.9%): [2626.589, 9095.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.182 ±(99.9%) 0.730 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.182, 0.453), stdev = 0.190
[info]   CI (99.9%): [≈ 0, 0.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson
[info] # Run progress: 15.97% complete, ETA 00:26:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 541508.542 ops/s
[info] # Warmup Iteration   2: 801015.918 ops/s
[info] # Warmup Iteration   3: 826746.394 ops/s
[info] # Warmup Iteration   4: 823541.429 ops/s
[info] # Warmup Iteration   5: 828492.406 ops/s
[info] Iteration   1: 824362.992 ops/s
[info]                  ·gc.alloc.rate:                   1764.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              3368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3195.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 828390.374 ops/s
[info]                  ·gc.alloc.rate:                   1773.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              3368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3197.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 826076.765 ops/s
[info]                  ·gc.alloc.rate:                   1768.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              3368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3864.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 826351.978 ops/s
[info]                  ·gc.alloc.rate:                   1768.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              3368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3227.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 820715.755 ops/s
[info]                  ·gc.alloc.rate:                   1756.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              3368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3256.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson":
[info]   825179.573 ±(99.9%) 11073.733 ops/s [Average]
[info]   (min, avg, max) = (820715.755, 825179.573, 828390.374), stdev = 2875.813
[info]   CI (99.9%): [814105.839, 836253.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate":
[info]   1766.370 ±(99.9%) 23.684 MB/sec [Average]
[info]   (min, avg, max) = (1756.800, 1766.370, 1773.209), stdev = 6.151
[info]   CI (99.9%): [1742.686, 1790.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate.norm":
[info]   3368.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3368.001, 3368.001, 3368.001), stdev = 0.001
[info]   CI (99.9%): [3368.000, 3368.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   1755.988 ±(99.9%) 588.429 MB/sec [Average]
[info]   (min, avg, max) = (1674.389, 1755.988, 2028.809), stdev = 152.813
[info]   CI (99.9%): [1167.559, 2344.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3348.118 ±(99.9%) 1115.272 B/op [Average]
[info]   (min, avg, max) = (3195.696, 3348.118, 3864.311), stdev = 289.633
[info]   CI (99.9%): [2232.846, 4463.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.127 ±(99.9%) 0.168 B/op [Average]
[info]   (min, avg, max) = (0.079, 0.127, 0.160), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.304
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter
[info] # Run progress: 16.81% complete, ETA 00:26:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 817366.937 ops/s
[info] # Warmup Iteration   2: 822717.489 ops/s
[info] # Warmup Iteration   3: 830607.699 ops/s
[info] # Warmup Iteration   4: 817197.531 ops/s
[info] # Warmup Iteration   5: 832257.261 ops/s
[info] Iteration   1: 835167.336 ops/s
[info]                  ·gc.alloc.rate:                   1405.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2525.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 842265.966 ops/s
[info]                  ·gc.alloc.rate:                   1417.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2514.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.194 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 834899.124 ops/s
[info]                  ·gc.alloc.rate:                   1405.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2544.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 838792.838 ops/s
[info]                  ·gc.alloc.rate:                   1411.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3174.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 830766.182 ops/s
[info]                  ·gc.alloc.rate:                   1398.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              2648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2568.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter":
[info]   836378.289 ±(99.9%) 16745.306 ops/s [Average]
[info]   (min, avg, max) = (830766.182, 836378.289, 842265.966), stdev = 4348.703
[info]   CI (99.9%): [819632.983, 853123.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate":
[info]   1407.614 ±(99.9%) 28.202 MB/sec [Average]
[info]   (min, avg, max) = (1398.198, 1407.614, 1417.529), stdev = 7.324
[info]   CI (99.9%): [1379.412, 1435.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   2648.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2648.001, 2648.001, 2648.001), stdev = 0.001
[info]   CI (99.9%): [2648.000, 2648.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   1417.026 ±(99.9%) 592.703 MB/sec [Average]
[info]   (min, avg, max) = (1340.644, 1417.026, 1692.180), stdev = 153.923
[info]   CI (99.9%): [824.323, 2009.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   2665.407 ±(99.9%) 1097.789 B/op [Average]
[info]   (min, avg, max) = (2514.362, 2665.407, 3174.064), stdev = 285.092
[info]   CI (99.9%): [1567.619, 3763.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.110 ±(99.9%) 0.246 B/op [Average]
[info]   (min, avg, max) = (0.039, 0.110, 0.194), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 8.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson
[info] # Run progress: 17.65% complete, ETA 00:26:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 892258.943 ops/s
[info] # Warmup Iteration   2: 1759119.917 ops/s
[info] # Warmup Iteration   3: 1780370.743 ops/s
[info] # Warmup Iteration   4: 1788224.777 ops/s
[info] # Warmup Iteration   5: 1799445.309 ops/s
[info] Iteration   1: 1827627.559 ops/s
[info]                  ·gc.alloc.rate:                   1161.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     848.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1817577.160 ops/s
[info]                  ·gc.alloc.rate:                   1155.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1145.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1808027.199 ops/s
[info]                  ·gc.alloc.rate:                   1149.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     868.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1813224.878 ops/s
[info]                  ·gc.alloc.rate:                   1152.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1161.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1820667.470 ops/s
[info]                  ·gc.alloc.rate:                   1157.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     870.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson":
[info]   1817424.853 ±(99.9%) 28595.320 ops/s [Average]
[info]   (min, avg, max) = (1808027.199, 1817424.853, 1827627.559), stdev = 7426.114
[info]   CI (99.9%): [1788829.533, 1846020.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1155.092 ±(99.9%) 18.245 MB/sec [Average]
[info]   (min, avg, max) = (1149.056, 1155.092, 1161.599), stdev = 4.738
[info]   CI (99.9%): [1136.846, 1173.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1000.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1000.000, 1000.000, 1000.000), stdev = 0.001
[info]   CI (99.9%): [1000.000, 1000.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1130.563 ±(99.9%) 704.498 MB/sec [Average]
[info]   (min, avg, max) = (985.202, 1130.563, 1338.070), stdev = 182.956
[info]   CI (99.9%): [426.066, 1835.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   978.916 ±(99.9%) 614.348 B/op [Average]
[info]   (min, avg, max) = (848.143, 978.916, 1161.020), stdev = 159.544
[info]   CI (99.9%): [364.569, 1593.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.050 ±(99.9%) 0.124 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.050, 0.090), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 7.000), stdev = 1.517
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter
[info] # Run progress: 18.49% complete, ETA 00:25:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4657796.848 ops/s
[info] # Warmup Iteration   2: 3485276.805 ops/s
[info] # Warmup Iteration   3: 3656198.191 ops/s
[info] # Warmup Iteration   4: 3702378.079 ops/s
[info] # Warmup Iteration   5: 3726472.308 ops/s
[info] Iteration   1: 3726967.667 ops/s
[info]                  ·gc.alloc.rate:                   492.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     139.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 3735300.284 ops/s
[info]                  ·gc.alloc.rate:                   493.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     279.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3743464.077 ops/s
[info]                  ·gc.alloc.rate:               494.841 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139.338 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 3708673.683 ops/s
[info]                  ·gc.alloc.rate:                   490.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     281.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3730377.794 ops/s
[info]                  ·gc.alloc.rate:               493.102 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139.962 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter":
[info]   3728956.701 ±(99.9%) 49764.324 ops/s [Average]
[info]   (min, avg, max) = (3708673.683, 3728956.701, 3743464.077), stdev = 12923.637
[info]   CI (99.9%): [3679192.377, 3778721.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   492.943 ±(99.9%) 6.543 MB/sec [Average]
[info]   (min, avg, max) = (490.270, 492.943, 494.841), stdev = 1.699
[info]   CI (99.9%): [486.400, 499.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   464.030 ±(99.9%) 698.841 MB/sec [Average]
[info]   (min, avg, max) = (331.177, 464.030, 663.323), stdev = 181.487
[info]   CI (99.9%): [≈ 0, 1162.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   195.906 ±(99.9%) 296.364 B/op [Average]
[info]   (min, avg, max) = (139.338, 195.906, 281.419), stdev = 76.965
[info]   CI (99.9%): [≈ 0, 492.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.028 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.018), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 6.000), stdev = 2.168
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay
[info] # Run progress: 19.33% complete, ETA 00:25:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46025.220 ops/s
[info] # Warmup Iteration   2: 286719.042 ops/s
[info] # Warmup Iteration   3: 286046.240 ops/s
[info] # Warmup Iteration   4: 285443.815 ops/s
[info] # Warmup Iteration   5: 288825.227 ops/s
[info] Iteration   1: 288238.515 ops/s
[info]                  ·gc.alloc.rate:                   1308.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7278.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.568 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 290268.103 ops/s
[info]                  ·gc.alloc.rate:                   1317.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7267.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.451 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 288346.179 ops/s
[info]                  ·gc.alloc.rate:                   1309.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7344.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 292492.210 ops/s
[info]                  ·gc.alloc.rate:                   1327.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7265.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.336 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 290243.569 ops/s
[info]                  ·gc.alloc.rate:                   1317.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7336.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.339 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay":
[info]   289917.715 ±(99.9%) 6710.075 ops/s [Average]
[info]   (min, avg, max) = (288238.515, 289917.715, 292492.210), stdev = 1742.585
[info]   CI (99.9%): [283207.640, 296627.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1316.344 ±(99.9%) 30.431 MB/sec [Average]
[info]   (min, avg, max) = (1308.701, 1316.344, 1327.977), stdev = 7.903
[info]   CI (99.9%): [1285.913, 1346.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7144.001, 7144.002, 7144.002), stdev = 0.001
[info]   CI (99.9%): [7144.001, 7144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1344.800 ±(99.9%) 30.962 MB/sec [Average]
[info]   (min, avg, max) = (1333.311, 1344.800, 1353.425), stdev = 8.041
[info]   CI (99.9%): [1313.838, 1375.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7298.517 ±(99.9%) 149.528 B/op [Average]
[info]   (min, avg, max) = (7265.722, 7298.517, 7344.802), stdev = 38.832
[info]   CI (99.9%): [7148.989, 7448.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.362 ±(99.9%) 0.649 B/op [Average]
[info]   (min, avg, max) = (0.114, 0.362, 0.568), stdev = 0.168
[info]   CI (99.9%): [≈ 0, 1.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 12.000), stdev = 2.950
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce
[info] # Run progress: 20.17% complete, ETA 00:25:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 367493.713 ops/s
[info] # Warmup Iteration   2: 550970.084 ops/s
[info] # Warmup Iteration   3: 563445.349 ops/s
[info] # Warmup Iteration   4: 556775.955 ops/s
[info] # Warmup Iteration   5: 558320.017 ops/s
[info] Iteration   1: 557569.850 ops/s
[info]                  ·gc.alloc.rate:                   1851.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5696.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 561469.673 ops/s
[info]                  ·gc.alloc.rate:                   1864.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4733.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 561960.785 ops/s
[info]                  ·gc.alloc.rate:                   1865.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5693.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.350 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 565055.473 ops/s
[info]                  ·gc.alloc.rate:                   1876.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4727.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.174 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 553277.089 ops/s
[info]                  ·gc.alloc.rate:                   1837.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5799.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce":
[info]   559866.574 ±(99.9%) 17495.719 ops/s [Average]
[info]   (min, avg, max) = (553277.089, 559866.574, 565055.473), stdev = 4543.583
[info]   CI (99.9%): [542370.855, 577362.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1858.901 ±(99.9%) 58.094 MB/sec [Average]
[info]   (min, avg, max) = (1837.079, 1858.901, 1876.171), stdev = 15.087
[info]   CI (99.9%): [1800.807, 1916.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1895.713 ±(99.9%) 711.336 MB/sec [Average]
[info]   (min, avg, max) = (1689.249, 1895.713, 2039.387), stdev = 184.732
[info]   CI (99.9%): [1184.377, 2607.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5330.053 ±(99.9%) 2113.851 B/op [Average]
[info]   (min, avg, max) = (4727.486, 5330.053, 5799.294), stdev = 548.960
[info]   CI (99.9%): [3216.202, 7443.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.125), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.210 ±(99.9%) 0.406 B/op [Average]
[info]   (min, avg, max) = (0.118, 0.210, 0.350), stdev = 0.105
[info]   CI (99.9%): [≈ 0, 0.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 9.000), stdev = 1.140
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson
[info] # Run progress: 21.01% complete, ETA 00:24:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 310393.433 ops/s
[info] # Warmup Iteration   2: 704874.481 ops/s
[info] # Warmup Iteration   3: 709176.555 ops/s
[info] # Warmup Iteration   4: 717824.996 ops/s
[info] # Warmup Iteration   5: 719060.615 ops/s
[info] Iteration   1: 708279.475 ops/s
[info]                  ·gc.alloc.rate:                   878.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2175.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 715633.575 ops/s
[info]                  ·gc.alloc.rate:                   887.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.405 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1443.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.229 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 712264.352 ops/s
[info]                  ·gc.alloc.rate:                   883.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2185.846 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 711140.863 ops/s
[info]                  ·gc.alloc.rate:               882.248 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2198.028 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 713875.758 ops/s
[info]                  ·gc.alloc.rate:                   885.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1467.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson":
[info]   712238.805 ±(99.9%) 10734.685 ops/s [Average]
[info]   (min, avg, max) = (708279.475, 712238.805, 715633.575), stdev = 2787.764
[info]   CI (99.9%): [701504.119, 722973.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   883.640 ±(99.9%) 13.291 MB/sec [Average]
[info]   (min, avg, max) = (878.767, 883.640, 887.893), stdev = 3.452
[info]   CI (99.9%): [870.349, 896.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   856.858 ±(99.9%) 688.791 MB/sec [Average]
[info]   (min, avg, max) = (656.405, 856.858, 993.446), stdev = 178.877
[info]   CI (99.9%): [168.067, 1545.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1893.865 ±(99.9%) 1542.907 B/op [Average]
[info]   (min, avg, max) = (1443.083, 1893.865, 2198.028), stdev = 400.688
[info]   CI (99.9%): [350.958, 3436.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.073 ±(99.9%) 0.343 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.073, 0.229), stdev = 0.089
[info]   CI (99.9%): [≈ 0, 0.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 6.000), stdev = 2.121
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 21.85% complete, ETA 00:24:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3939727.589 ops/s
[info] # Warmup Iteration   2: 4048808.462 ops/s
[info] # Warmup Iteration   3: 4209016.439 ops/s
[info] # Warmup Iteration   4: 4190252.670 ops/s
[info] # Warmup Iteration   5: 4254600.497 ops/s
[info] Iteration   1: 4087581.440 ops/s
[info]                  ·gc.alloc.rate:               187.050 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 98.486 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 4211551.287 ops/s
[info]                  ·gc.alloc.rate:                   192.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4192286.360 ops/s
[info]                  ·gc.alloc.rate:               191.824 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 96.031 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 4187374.348 ops/s
[info]                  ·gc.alloc.rate:      191.626 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4218849.426 ops/s
[info]                  ·gc.alloc.rate:                   193.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.769 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.660 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter":
[info]   4179528.572 ±(99.9%) 204212.832 ops/s [Average]
[info]   (min, avg, max) = (4087581.440, 4179528.572, 4218849.426), stdev = 53033.424
[info]   CI (99.9%): [3975315.740, 4383741.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   191.260 ±(99.9%) 9.355 MB/sec [Average]
[info]   (min, avg, max) = (187.050, 191.260, 193.065), stdev = 2.429
[info]   CI (99.9%): [181.906, 200.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   219.756 ±(99.9%) 489.428 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 219.756, 331.183), stdev = 127.103
[info]   CI (99.9%): [≈ 0, 709.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   82.724 ±(99.9%) 183.642 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 82.724, 123.509), stdev = 47.691
[info]   CI (99.9%): [≈ 0, 266.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.356 ±(99.9%) 3.041 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.356, 1.769), stdev = 0.790
[info]   CI (99.9%): [≈ 0, 3.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.133 ±(99.9%) 1.134 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.133, 0.660), stdev = 0.295
[info]   CI (99.9%): [≈ 0, 1.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.400, 4.000), stdev = 1.517
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay
[info] # Run progress: 22.69% complete, ETA 00:24:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26058.099 ops/s
[info] # Warmup Iteration   2: 220752.882 ops/s
[info] # Warmup Iteration   3: 225767.210 ops/s
[info] # Warmup Iteration   4: 223804.160 ops/s
[info] # Warmup Iteration   5: 229371.397 ops/s
[info] Iteration   1: 228073.900 ops/s
[info]                  ·gc.alloc.rate:                   1166.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9170.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.862 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 228749.110 ops/s
[info]                  ·gc.alloc.rate:                   1170.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6895.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 228895.662 ops/s
[info]                  ·gc.alloc.rate:                   1170.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9224.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 231313.184 ops/s
[info]                  ·gc.alloc.rate:                   1183.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6868.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.283 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 229797.971 ops/s
[info]                  ·gc.alloc.rate:               1175.476 MB/sec
[info]                  ·gc.alloc.rate.norm:          8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9243.419 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay":
[info]   229365.966 ±(99.9%) 4813.081 ops/s [Average]
[info]   (min, avg, max) = (228073.900, 229365.966, 231313.184), stdev = 1249.942
[info]   CI (99.9%): [224552.885, 234179.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1173.251 ±(99.9%) 24.637 MB/sec [Average]
[info]   (min, avg, max) = (1166.589, 1173.251, 1183.197), stdev = 6.398
[info]   CI (99.9%): [1148.614, 1197.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8048.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8048.002, 8048.002, 8048.002), stdev = 0.001
[info]   CI (99.9%): [8048.002, 8048.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1206.772 ±(99.9%) 705.726 MB/sec [Average]
[info]   (min, avg, max) = (1002.528, 1206.772, 1350.076), stdev = 183.275
[info]   CI (99.9%): [501.046, 1912.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8280.613 ±(99.9%) 4916.847 B/op [Average]
[info]   (min, avg, max) = (6868.916, 8280.613, 9243.419), stdev = 1276.890
[info]   CI (99.9%): [3363.766, 13197.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.344 ±(99.9%) 1.213 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.344, 0.862), stdev = 0.315
[info]   CI (99.9%): [≈ 0, 1.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce
[info] # Run progress: 23.53% complete, ETA 00:24:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3213.131 ops/s
[info] # Warmup Iteration   2: 4978.600 ops/s
[info] # Warmup Iteration   3: 5267.702 ops/s
[info] # Warmup Iteration   4: 5329.514 ops/s
[info] # Warmup Iteration   5: 5374.081 ops/s
[info] Iteration   1: 5374.264 ops/s
[info]                  ·gc.alloc.rate:                   1383.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     390095.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.190 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 5424.577 ops/s
[info]                  ·gc.alloc.rate:                   1396.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     388433.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.116 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.781 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 5298.026 ops/s
[info]                  ·gc.alloc.rate:                   1363.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.082 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     399325.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.368 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 5362.395 ops/s
[info]                  ·gc.alloc.rate:                   1380.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     395855.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.262 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76.934 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 5261.190 ops/s
[info]                  ·gc.alloc.rate:                   1354.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              405000.088 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     404524.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.227 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce":
[info]   5344.091 ±(99.9%) 248.941 ops/s [Average]
[info]   (min, avg, max) = (5261.190, 5344.091, 5424.577), stdev = 64.649
[info]   CI (99.9%): [5095.150, 5593.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1375.675 ±(99.9%) 64.432 MB/sec [Average]
[info]   (min, avg, max) = (1354.279, 1375.675, 1396.497), stdev = 16.733
[info]   CI (99.9%): [1311.242, 1440.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   405000.083 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (405000.080, 405000.083, 405000.088), stdev = 0.003
[info]   CI (99.9%): [405000.070, 405000.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   1343.693 ±(99.9%) 30.603 MB/sec [Average]
[info]   (min, avg, max) = (1332.648, 1343.693, 1352.689), stdev = 7.948
[info]   CI (99.9%): [1313.090, 1374.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   395646.738 ±(99.9%) 25488.023 B/op [Average]
[info]   (min, avg, max) = (388433.056, 395646.738, 404524.759), stdev = 6619.159
[info]   CI (99.9%): [370158.715, 421134.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.097 ±(99.9%) 0.383 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.097, 0.262), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   28.300 ±(99.9%) 112.196 B/op [Average]
[info]   (min, avg, max) = (6.227, 28.300, 76.934), stdev = 29.137
[info]   CI (99.9%): [≈ 0, 140.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson
[info] # Run progress: 24.37% complete, ETA 00:23:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5009.303 ops/s
[info] # Warmup Iteration   2: 9979.294 ops/s
[info] # Warmup Iteration   3: 10139.231 ops/s
[info] # Warmup Iteration   4: 10091.933 ops/s
[info] # Warmup Iteration   5: 10108.085 ops/s
[info] Iteration   1: 10167.105 ops/s
[info]                  ·gc.alloc.rate:                   370.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              57368.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50005.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.595 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 401.657 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 10254.543 ops/s
[info]                  ·gc.alloc.rate:                   373.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              57368.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49586.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.390 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 10206.325 ops/s
[info]                  ·gc.alloc.rate:               372.134 MB/sec
[info]                  ·gc.alloc.rate.norm:          57368.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:      647.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 99742.094 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 10178.338 ops/s
[info]                  ·gc.alloc.rate:                   371.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              57368.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50054.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.437 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 10189.819 ops/s
[info]                  ·gc.alloc.rate:               371.544 MB/sec
[info]                  ·gc.alloc.rate.norm:          57368.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 49995.873 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson":
[info]   10199.226 ±(99.9%) 131.528 ops/s [Average]
[info]   (min, avg, max) = (10167.105, 10199.226, 10254.543), stdev = 34.157
[info]   CI (99.9%): [10067.698, 10330.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   371.881 ±(99.9%) 4.836 MB/sec [Average]
[info]   (min, avg, max) = (370.697, 371.881, 373.916), stdev = 1.256
[info]   CI (99.9%): [367.045, 376.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   57368.044 ±(99.9%) 0.006 B/op [Average]
[info]   (min, avg, max) = (57368.042, 57368.044, 57368.046), stdev = 0.002
[info]   CI (99.9%): [57368.037, 57368.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   388.186 ±(99.9%) 557.128 MB/sec [Average]
[info]   (min, avg, max) = (323.125, 388.186, 647.005), stdev = 144.684
[info]   CI (99.9%): [≈ 0, 945.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   59877.025 ±(99.9%) 85815.636 B/op [Average]
[info]   (min, avg, max) = (49586.521, 59877.025, 99742.094), stdev = 22286.048
[info]   CI (99.9%): [≈ 0, 145692.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.536 ±(99.9%) 4.434 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.536, 2.595), stdev = 1.152
[info]   CI (99.9%): [≈ 0, 4.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   82.897 ±(99.9%) 686.266 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 82.897, 401.657), stdev = 178.221
[info]   CI (99.9%): [≈ 0, 769.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 5.000), stdev = 1.949
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter
[info] # Run progress: 25.21% complete, ETA 00:23:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14420.170 ops/s
[info] # Warmup Iteration   2: 17831.607 ops/s
[info] # Warmup Iteration   3: 17854.422 ops/s
[info] # Warmup Iteration   4: 17724.490 ops/s
[info] # Warmup Iteration   5: 17857.481 ops/s
[info] Iteration   1: 17870.815 ops/s
[info]                  ·gc.alloc.rate:                   334.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29185.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.788 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 157.408 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 17887.754 ops/s
[info]                  ·gc.alloc.rate:                   334.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29158.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.495 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 17873.648 ops/s
[info]                  ·gc.alloc.rate:                   334.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29151.551 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.833 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 17783.495 ops/s
[info]                  ·gc.alloc.rate:               332.848 MB/sec
[info]                  ·gc.alloc.rate.norm:          29448.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29299.054 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 17822.854 ops/s
[info]                  ·gc.alloc.rate:                   333.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29233.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.676 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter":
[info]   17847.713 ±(99.9%) 167.310 ops/s [Average]
[info]   (min, avg, max) = (17783.495, 17847.713, 17887.754), stdev = 43.450
[info]   CI (99.9%): [17680.403, 18015.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   334.052 ±(99.9%) 3.140 MB/sec [Average]
[info]   (min, avg, max) = (332.848, 334.052, 334.824), stdev = 0.815
[info]   CI (99.9%): [330.912, 337.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   29448.027 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (29448.024, 29448.027, 29448.035), stdev = 0.005
[info]   CI (99.9%): [29448.009, 29448.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   331.300 ±(99.9%) 0.721 MB/sec [Average]
[info]   (min, avg, max) = (331.159, 331.300, 331.527), stdev = 0.187
[info]   CI (99.9%): [330.579, 332.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   29205.547 ±(99.9%) 236.412 B/op [Average]
[info]   (min, avg, max) = (29151.551, 29205.547, 29299.054), stdev = 61.395
[info]   CI (99.9%): [28969.136, 29441.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.383 ±(99.9%) 3.026 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.383, 1.788), stdev = 0.786
[info]   CI (99.9%): [≈ 0, 3.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   33.682 ±(99.9%) 266.446 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 33.682, 157.408), stdev = 69.195
[info]   CI (99.9%): [≈ 0, 300.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay
[info] # Run progress: 26.05% complete, ETA 00:23:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 424.628 ops/s
[info] # Warmup Iteration   2: 1861.522 ops/s
[info] # Warmup Iteration   3: 1874.467 ops/s
[info] # Warmup Iteration   4: 1887.501 ops/s
[info] # Warmup Iteration   5: 1902.040 ops/s
[info] Iteration   1: 1917.816 ops/s
[info]                  ·gc.alloc.rate:                   1164.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1090103.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 170.756 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1924.202 ops/s
[info]                  ·gc.alloc.rate:                   1168.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     819251.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1893.816 ops/s
[info]                  ·gc.alloc.rate:               1149.950 MB/sec
[info]                  ·gc.alloc.rate.norm:          955216.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1114146.584 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 1910.490 ops/s
[info]                  ·gc.alloc.rate:               1159.831 MB/sec
[info]                  ·gc.alloc.rate.norm:          955216.226 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1009.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 831014.313 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 1913.647 ops/s
[info]                  ·gc.alloc.rate:               1161.753 MB/sec
[info]                  ·gc.alloc.rate.norm:          955216.226 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1109934.679 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay":
[info]   1911.994 ±(99.9%) 43.835 ops/s [Average]
[info]   (min, avg, max) = (1893.816, 1911.994, 1924.202), stdev = 11.384
[info]   CI (99.9%): [1868.159, 1955.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1160.888 ±(99.9%) 26.577 MB/sec [Average]
[info]   (min, avg, max) = (1149.950, 1160.888, 1168.340), stdev = 6.902
[info]   CI (99.9%): [1134.310, 1187.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   955216.229 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (955216.225, 955216.229, 955216.241), stdev = 0.007
[info]   CI (99.9%): [955216.203, 955216.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1206.257 ±(99.9%) 706.221 MB/sec [Average]
[info]   (min, avg, max) = (1002.039, 1206.257, 1349.925), stdev = 183.403
[info]   CI (99.9%): [500.035, 1912.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   992890.081 ±(99.9%) 590943.223 B/op [Average]
[info]   (min, avg, max) = (819251.067, 992890.081, 1114146.584), stdev = 153466.078
[info]   CI (99.9%): [401946.859, 1583833.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.351 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.208), stdev = 0.091
[info]   CI (99.9%): [≈ 0, 0.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   37.556 ±(99.9%) 288.124 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 37.556, 170.756), stdev = 74.825
[info]   CI (99.9%): [≈ 0, 325.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 7.000), stdev = 1.140
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 26.89% complete, ETA 00:23:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2475223.792 ops/s
[info] # Warmup Iteration   2: 2803746.622 ops/s
[info] # Warmup Iteration   3: 2844801.748 ops/s
[info] # Warmup Iteration   4: 2849478.346 ops/s
[info] # Warmup Iteration   5: 2844776.614 ops/s
[info] Iteration   1: 2858507.907 ops/s
[info]                  ·gc.alloc.rate:                   857.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     365.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2842822.337 ops/s
[info]                  ·gc.alloc.rate:                   852.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     553.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2826637.521 ops/s
[info]                  ·gc.alloc.rate:                   847.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     371.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2850130.550 ops/s
[info]                  ·gc.alloc.rate:                   854.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     554.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2866674.319 ops/s
[info]                  ·gc.alloc.rate:                   859.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          671.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     368.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter":
[info]   2848954.527 ±(99.9%) 59101.226 ops/s [Average]
[info]   (min, avg, max) = (2826637.521, 2848954.527, 2866674.319), stdev = 15348.401
[info]   CI (99.9%): [2789853.301, 2908055.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   854.640 ±(99.9%) 17.788 MB/sec [Average]
[info]   (min, avg, max) = (847.881, 854.640, 859.965), stdev = 4.619
[info]   CI (99.9%): [836.852, 872.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   472.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (472.000, 472.000, 472.000), stdev = 0.001
[info]   CI (99.9%): [472.000, 472.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   801.069 ±(99.9%) 704.788 MB/sec [Average]
[info]   (min, avg, max) = (663.657, 801.069, 1003.817), stdev = 183.031
[info]   CI (99.9%): [96.281, 1505.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   442.482 ±(99.9%) 390.649 B/op [Average]
[info]   (min, avg, max) = (365.308, 442.482, 554.163), stdev = 101.450
[info]   CI (99.9%): [51.833, 833.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.073 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.025, 0.058), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 27.73% complete, ETA 00:22:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 55903.444 ops/s
[info] # Warmup Iteration   2: 247903.570 ops/s
[info] # Warmup Iteration   3: 250408.540 ops/s
[info] # Warmup Iteration   4: 255210.798 ops/s
[info] # Warmup Iteration   5: 255472.991 ops/s
[info] Iteration   1: 255204.559 ops/s
[info]                  ·gc.alloc.rate:                   1356.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              8360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8232.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.770 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 255955.273 ops/s
[info]                  ·gc.alloc.rate:                   1359.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              8360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8249.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 253596.120 ops/s
[info]                  ·gc.alloc.rate:                   1347.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              8360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8359.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 257574.467 ops/s
[info]                  ·gc.alloc.rate:                   1368.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              8360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8254.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 256583.896 ops/s
[info]                  ·gc.alloc.rate:                   1363.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              8360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8302.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.511 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay":
[info]   255782.863 ±(99.9%) 5775.166 ops/s [Average]
[info]   (min, avg, max) = (253596.120, 255782.863, 257574.467), stdev = 1499.792
[info]   CI (99.9%): [250007.697, 261558.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1359.024 ±(99.9%) 30.276 MB/sec [Average]
[info]   (min, avg, max) = (1347.501, 1359.024, 1368.313), stdev = 7.863
[info]   CI (99.9%): [1328.748, 1389.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8360.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8360.002, 8360.002, 8360.002), stdev = 0.001
[info]   CI (99.9%): [8360.001, 8360.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1345.967 ±(99.9%) 28.617 MB/sec [Average]
[info]   (min, avg, max) = (1335.382, 1345.967, 1354.021), stdev = 7.432
[info]   CI (99.9%): [1317.350, 1374.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8279.822 ±(99.9%) 198.259 B/op [Average]
[info]   (min, avg, max) = (8232.664, 8279.822, 8359.173), stdev = 51.487
[info]   CI (99.9%): [8081.564, 8478.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.410 ±(99.9%) 0.950 B/op [Average]
[info]   (min, avg, max) = (0.128, 0.410, 0.770), stdev = 0.247
[info]   CI (99.9%): [≈ 0, 1.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 8.000), stdev = 1.225
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce
[info] # Run progress: 28.57% complete, ETA 00:22:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 305075.603 ops/s
[info] # Warmup Iteration   2: 481654.595 ops/s
[info] # Warmup Iteration   3: 496902.316 ops/s
[info] # Warmup Iteration   4: 499013.928 ops/s
[info] # Warmup Iteration   5: 502025.115 ops/s
[info] Iteration   1: 495384.454 ops/s
[info]                  ·gc.alloc.rate:                   1806.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6406.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 505756.818 ops/s
[info]                  ·gc.alloc.rate:                   1843.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1688.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5251.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.389 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 504606.785 ops/s
[info]                  ·gc.alloc.rate:                   1839.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5278.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 499058.209 ops/s
[info]                  ·gc.alloc.rate:                   1819.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6419.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 505774.445 ops/s
[info]                  ·gc.alloc.rate:                   1843.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              5736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5285.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.194 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce":
[info]   502116.142 ±(99.9%) 18010.517 ops/s [Average]
[info]   (min, avg, max) = (495384.454, 502116.142, 505774.445), stdev = 4677.274
[info]   CI (99.9%): [484105.625, 520126.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1830.523 ±(99.9%) 65.440 MB/sec [Average]
[info]   (min, avg, max) = (1806.097, 1830.523, 1843.791), stdev = 16.995
[info]   CI (99.9%): [1765.083, 1895.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5736.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5736.001, 5736.001, 5736.001), stdev = 0.001
[info]   CI (99.9%): [5736.001, 5736.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1826.707 ±(99.9%) 703.617 MB/sec [Average]
[info]   (min, avg, max) = (1688.207, 1826.707, 2036.260), stdev = 182.727
[info]   CI (99.9%): [1123.090, 2530.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5728.474 ±(99.9%) 2406.867 B/op [Average]
[info]   (min, avg, max) = (5251.981, 5728.474, 6419.849), stdev = 625.056
[info]   CI (99.9%): [3321.607, 8135.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.125), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.195 ±(99.9%) 0.429 B/op [Average]
[info]   (min, avg, max) = (0.130, 0.195, 0.389), stdev = 0.112
[info]   CI (99.9%): [≈ 0, 0.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 1.000
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson
[info] # Run progress: 29.41% complete, ETA 00:22:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 197187.362 ops/s
[info] # Warmup Iteration   2: 524648.015 ops/s
[info] # Warmup Iteration   3: 528519.445 ops/s
[info] # Warmup Iteration   4: 527794.309 ops/s
[info] # Warmup Iteration   5: 534124.957 ops/s
[info] Iteration   1: 530309.407 ops/s
[info]                  ·gc.alloc.rate:                   617.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1917.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 535055.254 ops/s
[info]                  ·gc.alloc.rate:                   623.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1903.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.245 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 535617.833 ops/s
[info]                  ·gc.alloc.rate:                   623.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1908.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 529507.837 ops/s
[info]                  ·gc.alloc.rate:               616.554 MB/sec
[info]                  ·gc.alloc.rate.norm:          1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1938.401 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 533355.356 ops/s
[info]                  ·gc.alloc.rate:                   620.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1932.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson":
[info]   532769.137 ±(99.9%) 10610.498 ops/s [Average]
[info]   (min, avg, max) = (529507.837, 532769.137, 535617.833), stdev = 2755.513
[info]   CI (99.9%): [522158.639, 543379.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   620.351 ±(99.9%) 12.370 MB/sec [Average]
[info]   (min, avg, max) = (616.554, 620.351, 623.692), stdev = 3.212
[info]   CI (99.9%): [607.981, 632.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1832.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1832.001, 1832.001, 1832.001), stdev = 0.001
[info]   CI (99.9%): [1832.001, 1832.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   650.167 ±(99.9%) 13.688 MB/sec [Average]
[info]   (min, avg, max) = (646.378, 650.167, 655.000), stdev = 3.555
[info]   CI (99.9%): [636.479, 663.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1920.098 ±(99.9%) 57.715 B/op [Average]
[info]   (min, avg, max) = (1903.591, 1920.098, 1938.401), stdev = 14.988
[info]   CI (99.9%): [1862.382, 1977.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.147 ±(99.9%) 0.358 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.147, 0.245), stdev = 0.093
[info]   CI (99.9%): [≈ 0, 0.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter
[info] # Run progress: 30.25% complete, ETA 00:22:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1721630.582 ops/s
[info] # Warmup Iteration   2: 2360103.153 ops/s
[info] # Warmup Iteration   3: 2575264.936 ops/s
[info] # Warmup Iteration   4: 2562051.155 ops/s
[info] # Warmup Iteration   5: 2600737.862 ops/s
[info] Iteration   1: 2581519.649 ops/s
[info]                  ·gc.alloc.rate:                   1023.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     607.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2598056.031 ops/s
[info]                  ·gc.alloc.rate:                   1030.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     606.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2556572.451 ops/s
[info]                  ·gc.alloc.rate:                   1013.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     617.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2559869.059 ops/s
[info]                  ·gc.alloc.rate:                   1015.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     825.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2580824.426 ops/s
[info]                  ·gc.alloc.rate:                   1023.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     616.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter":
[info]   2575368.323 ±(99.9%) 66020.633 ops/s [Average]
[info]   (min, avg, max) = (2556572.451, 2575368.323, 2598056.031), stdev = 17145.349
[info]   CI (99.9%): [2509347.690, 2641388.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   1021.395 ±(99.9%) 26.177 MB/sec [Average]
[info]   (min, avg, max) = (1013.949, 1021.395, 1030.411), stdev = 6.798
[info]   CI (99.9%): [995.218, 1047.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   624.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (624.000, 624.000, 624.000), stdev = 0.001
[info]   CI (99.9%): [624.000, 624.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   1071.357 ±(99.9%) 585.888 MB/sec [Average]
[info]   (min, avg, max) = (997.537, 1071.357, 1343.399), stdev = 152.153
[info]   CI (99.9%): [485.469, 1657.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   654.799 ±(99.9%) 368.344 B/op [Average]
[info]   (min, avg, max) = (606.315, 654.799, 825.682), stdev = 95.658
[info]   CI (99.9%): [286.455, 1023.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.036 ±(99.9%) 0.064 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.036, 0.051), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay
[info] # Run progress: 31.09% complete, ETA 00:21:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19781.379 ops/s
[info] # Warmup Iteration   2: 169843.511 ops/s
[info] # Warmup Iteration   3: 172768.718 ops/s
[info] # Warmup Iteration   4: 172730.074 ops/s
[info] # Warmup Iteration   5: 175628.475 ops/s
[info] Iteration   1: 175759.792 ops/s
[info]                  ·gc.alloc.rate:                   1211.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              10848.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8932.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 175963.769 ops/s
[info]                  ·gc.alloc.rate:                   1213.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              10848.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11958.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.559 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 175392.114 ops/s
[info]                  ·gc.alloc.rate:                   1209.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              10848.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12051.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.560 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 175263.277 ops/s
[info]                  ·gc.alloc.rate:                   1208.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              10848.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9077.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.374 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 174922.429 ops/s
[info]                  ·gc.alloc.rate:               1206.041 MB/sec
[info]                  ·gc.alloc.rate.norm:          10848.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1351.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12155.179 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay":
[info]   175460.276 ±(99.9%) 1582.925 ops/s [Average]
[info]   (min, avg, max) = (174922.429, 175460.276, 175963.769), stdev = 411.081
[info]   CI (99.9%): [173877.351, 177043.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1209.743 ±(99.9%) 10.964 MB/sec [Average]
[info]   (min, avg, max) = (1206.041, 1209.743, 1213.211), stdev = 2.847
[info]   CI (99.9%): [1198.778, 1220.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10848.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10848.002, 10848.002, 10848.003), stdev = 0.001
[info]   CI (99.9%): [10848.002, 10848.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1208.219 ±(99.9%) 716.665 MB/sec [Average]
[info]   (min, avg, max) = (997.833, 1208.219, 1351.368), stdev = 186.116
[info]   CI (99.9%): [491.554, 1924.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10834.840 ±(99.9%) 6441.065 B/op [Average]
[info]   (min, avg, max) = (8932.186, 10834.840, 12155.179), stdev = 1672.724
[info]   CI (99.9%): [4393.776, 17275.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.336 ±(99.9%) 0.937 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.336, 0.560), stdev = 0.243
[info]   CI (99.9%): [≈ 0, 1.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.581
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce
[info] # Run progress: 31.93% complete, ETA 00:21:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 252307.885 ops/s
[info] # Warmup Iteration   2: 454662.484 ops/s
[info] # Warmup Iteration   3: 473275.190 ops/s
[info] # Warmup Iteration   4: 476617.154 ops/s
[info] # Warmup Iteration   5: 472210.281 ops/s
[info] Iteration   1: 466434.628 ops/s
[info]                  ·gc.alloc.rate:                   1657.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5654.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.211 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 472037.530 ops/s
[info]                  ·gc.alloc.rate:                   1677.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1684.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5613.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.278 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 473299.166 ops/s
[info]                  ·gc.alloc.rate:                   1682.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5619.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 473128.332 ops/s
[info]                  ·gc.alloc.rate:                   1681.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5635.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.277 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 454163.653 ops/s
[info]                  ·gc.alloc.rate:                   1614.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5881.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce":
[info]   467812.662 ±(99.9%) 31306.589 ops/s [Average]
[info]   (min, avg, max) = (454163.653, 467812.662, 473299.166), stdev = 8130.222
[info]   CI (99.9%): [436506.073, 499119.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1662.662 ±(99.9%) 111.299 MB/sec [Average]
[info]   (min, avg, max) = (1614.117, 1662.662, 1682.104), stdev = 28.904
[info]   CI (99.9%): [1551.363, 1773.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1688.637 ±(99.9%) 33.071 MB/sec [Average]
[info]   (min, avg, max) = (1676.250, 1688.637, 1697.752), stdev = 8.588
[info]   CI (99.9%): [1655.566, 1721.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5680.887 ±(99.9%) 436.526 B/op [Average]
[info]   (min, avg, max) = (5613.837, 5680.887, 5881.747), stdev = 113.364
[info]   CI (99.9%): [5244.361, 6117.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.071, 0.083), stdev = 0.011
[info]   CI (99.9%): [0.027, 0.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.238 ±(99.9%) 0.139 B/op [Average]
[info]   (min, avg, max) = (0.208, 0.238, 0.278), stdev = 0.036
[info]   CI (99.9%): [0.099, 0.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 17.000), stdev = 5.413
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson
[info] # Run progress: 32.77% complete, ETA 00:21:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 306125.133 ops/s
[info] # Warmup Iteration   2: 874481.841 ops/s
[info] # Warmup Iteration   3: 892321.274 ops/s
[info] # Warmup Iteration   4: 901343.145 ops/s
[info] # Warmup Iteration   5: 897389.223 ops/s
[info] Iteration   1: 894340.560 ops/s
[info]                  ·gc.alloc.rate:                   1054.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1722.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 888324.235 ops/s
[info]                  ·gc.alloc.rate:                   1047.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1746.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 889011.650 ops/s
[info]                  ·gc.alloc.rate:                   1048.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2342.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 895236.087 ops/s
[info]                  ·gc.alloc.rate:                   1056.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1754.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 899510.770 ops/s
[info]                  ·gc.alloc.rate:                   1060.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1755.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson":
[info]   893284.660 ±(99.9%) 17911.897 ops/s [Average]
[info]   (min, avg, max) = (888324.235, 893284.660, 899510.770), stdev = 4651.663
[info]   CI (99.9%): [875372.764, 911196.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1053.717 ±(99.9%) 21.020 MB/sec [Average]
[info]   (min, avg, max) = (1047.904, 1053.717, 1060.983), stdev = 5.459
[info]   CI (99.9%): [1032.697, 1074.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.000, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1058.087 ±(99.9%) 572.265 MB/sec [Average]
[info]   (min, avg, max) = (979.161, 1058.087, 1323.372), stdev = 148.615
[info]   CI (99.9%): [485.822, 1630.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1864.257 ±(99.9%) 1030.050 B/op [Average]
[info]   (min, avg, max) = (1722.676, 1864.257, 2342.188), stdev = 267.501
[info]   CI (99.9%): [834.208, 2894.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.110 ±(99.9%) 0.200 B/op [Average]
[info]   (min, avg, max) = (0.037, 0.110, 0.148), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter
[info] # Run progress: 33.61% complete, ETA 00:20:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2359691.492 ops/s
[info] # Warmup Iteration   2: 2739631.217 ops/s
[info] # Warmup Iteration   3: 2742740.210 ops/s
[info] # Warmup Iteration   4: 2758891.170 ops/s
[info] # Warmup Iteration   5: 2752256.155 ops/s
[info] Iteration   1: 2786212.707 ops/s
[info]                  ·gc.alloc.rate:                   694.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     374.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2780305.364 ops/s
[info]                  ·gc.alloc.rate:                   692.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     375.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2778812.371 ops/s
[info]                  ·gc.alloc.rate:               692.353 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 376.543 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 2780482.364 ops/s
[info]                  ·gc.alloc.rate:                   692.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     377.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2773378.795 ops/s
[info]                  ·gc.alloc.rate:                   690.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     378.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter":
[info]   2779838.320 ±(99.9%) 17650.463 ops/s [Average]
[info]   (min, avg, max) = (2773378.795, 2779838.320, 2786212.707), stdev = 4583.769
[info]   CI (99.9%): [2762187.857, 2797488.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   692.618 ±(99.9%) 4.456 MB/sec [Average]
[info]   (min, avg, max) = (690.975, 692.618, 694.211), stdev = 1.157
[info]   CI (99.9%): [688.162, 697.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   665.122 ±(99.9%) 7.636 MB/sec [Average]
[info]   (min, avg, max) = (662.739, 665.122, 667.667), stdev = 1.983
[info]   CI (99.9%): [657.486, 672.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   376.440 ±(99.9%) 6.525 B/op [Average]
[info]   (min, avg, max) = (374.229, 376.440, 378.777), stdev = 1.695
[info]   CI (99.9%): [369.915, 382.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.047), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay
[info] # Run progress: 34.45% complete, ETA 00:20:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53256.621 ops/s
[info] # Warmup Iteration   2: 257217.260 ops/s
[info] # Warmup Iteration   3: 256089.014 ops/s
[info] # Warmup Iteration   4: 260822.582 ops/s
[info] # Warmup Iteration   5: 260074.795 ops/s
[info] Iteration   1: 262409.029 ops/s
[info]                  ·gc.alloc.rate:               1342.150 MB/sec
[info]                  ·gc.alloc.rate.norm:          8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1335.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8010.466 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 260923.702 ops/s
[info]                  ·gc.alloc.rate:                   1334.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8092.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.502 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 262281.222 ops/s
[info]                  ·gc.alloc.rate:                   1341.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8080.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 261955.675 ops/s
[info]                  ·gc.alloc.rate:                   1339.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8114.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 262692.510 ops/s
[info]                  ·gc.alloc.rate:                   1343.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8109.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.249 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay":
[info]   262052.428 ±(99.9%) 2634.667 ops/s [Average]
[info]   (min, avg, max) = (260923.702, 262052.428, 262692.510), stdev = 684.215
[info]   CI (99.9%): [259417.760, 264687.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1340.397 ±(99.9%) 13.540 MB/sec [Average]
[info]   (min, avg, max) = (1334.597, 1340.397, 1343.721), stdev = 3.516
[info]   CI (99.9%): [1326.857, 1353.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8048.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8048.002, 8048.002, 8048.002), stdev = 0.001
[info]   CI (99.9%): [8048.001, 8048.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1345.972 ±(99.9%) 27.842 MB/sec [Average]
[info]   (min, avg, max) = (1335.890, 1345.972, 1354.035), stdev = 7.230
[info]   CI (99.9%): [1318.130, 1373.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8081.491 ±(99.9%) 161.603 B/op [Average]
[info]   (min, avg, max) = (8010.466, 8081.491, 8114.426), stdev = 41.968
[info]   CI (99.9%): [7919.888, 8243.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.200 ±(99.9%) 0.733 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.200, 0.502), stdev = 0.190
[info]   CI (99.9%): [≈ 0, 0.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce
[info] # Run progress: 35.29% complete, ETA 00:20:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 307743.031 ops/s
[info] # Warmup Iteration   2: 504610.271 ops/s
[info] # Warmup Iteration   3: 527380.515 ops/s
[info] # Warmup Iteration   4: 526723.346 ops/s
[info] # Warmup Iteration   5: 520321.426 ops/s
[info] Iteration   1: 514330.085 ops/s
[info]                  ·gc.alloc.rate:                   1982.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6185.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 524429.960 ops/s
[info]                  ·gc.alloc.rate:                   2021.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6090.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.250 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 529143.568 ops/s
[info]                  ·gc.alloc.rate:                   2039.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6052.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 530662.146 ops/s
[info]                  ·gc.alloc.rate:                   2045.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6045.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 530668.194 ops/s
[info]                  ·gc.alloc.rate:                   2045.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              6064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2041.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6053.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce":
[info]   525846.791 ±(99.9%) 26674.169 ops/s [Average]
[info]   (min, avg, max) = (514330.085, 525846.791, 530668.194), stdev = 6927.197
[info]   CI (99.9%): [499172.622, 552520.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate":
[info]   2026.668 ±(99.9%) 102.566 MB/sec [Average]
[info]   (min, avg, max) = (1982.384, 2026.668, 2045.224), stdev = 26.636
[info]   CI (99.9%): [1924.102, 2129.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   6064.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6064.001, 6064.001, 6064.001), stdev = 0.001
[info]   CI (99.9%): [6064.001, 6064.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   2033.627 ±(99.9%) 29.893 MB/sec [Average]
[info]   (min, avg, max) = (2022.117, 2033.627, 2041.649), stdev = 7.763
[info]   CI (99.9%): [2003.734, 2063.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   6085.439 ±(99.9%) 225.884 B/op [Average]
[info]   (min, avg, max) = (6045.636, 6085.439, 6185.540), stdev = 58.661
[info]   CI (99.9%): [5859.555, 6311.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.162 ±(99.9%) 0.214 B/op [Average]
[info]   (min, avg, max) = (0.123, 0.162, 0.250), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter
[info] # Run progress: 36.13% complete, ETA 00:20:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1800310.834 ops/s
[info] # Warmup Iteration   2: 1750229.757 ops/s
[info] # Warmup Iteration   3: 1786022.841 ops/s
[info] # Warmup Iteration   4: 1805539.703 ops/s
[info] # Warmup Iteration   5: 1790326.511 ops/s
[info] Iteration   1: 1766528.518 ops/s
[info]                  ·gc.alloc.rate:                   1140.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1189.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1768633.190 ops/s
[info]                  ·gc.alloc.rate:                   1142.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     894.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1766182.193 ops/s
[info]                  ·gc.alloc.rate:                   1140.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1197.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1805435.964 ops/s
[info]                  ·gc.alloc.rate:                   1165.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     881.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1785620.711 ops/s
[info]                  ·gc.alloc.rate:                   1152.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1191.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter":
[info]   1778480.115 ±(99.9%) 65818.065 ops/s [Average]
[info]   (min, avg, max) = (1766182.193, 1778480.115, 1805435.964), stdev = 17092.742
[info]   CI (99.9%): [1712662.050, 1844298.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate":
[info]   1148.422 ±(99.9%) 42.354 MB/sec [Average]
[info]   (min, avg, max) = (1140.475, 1148.422, 1165.798), stdev = 10.999
[info]   CI (99.9%): [1106.068, 1190.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   1209.651 ±(99.9%) 708.582 MB/sec [Average]
[info]   (min, avg, max) = (1005.212, 1209.651, 1351.945), stdev = 184.017
[info]   CI (99.9%): [501.069, 1918.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1070.788 ±(99.9%) 643.843 B/op [Average]
[info]   (min, avg, max) = (881.234, 1070.788, 1197.811), stdev = 167.204
[info]   CI (99.9%): [426.944, 1714.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.078 B/op [Average]
[info]   (min, avg, max) = (0.019, 0.041, 0.074), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 8.000), stdev = 2.074
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay
[info] # Run progress: 36.97% complete, ETA 00:19:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15761.461 ops/s
[info] # Warmup Iteration   2: 155297.887 ops/s
[info] # Warmup Iteration   3: 162301.501 ops/s
[info] # Warmup Iteration   4: 164887.147 ops/s
[info] # Warmup Iteration   5: 164700.475 ops/s
[info] Iteration   1: 163153.026 ops/s
[info]                  ·gc.alloc.rate:                   1169.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              11280.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12826.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.205 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 165097.853 ops/s
[info]                  ·gc.alloc.rate:               1183.584 MB/sec
[info]                  ·gc.alloc.rate.norm:          11280.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1002.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9553.985 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 164716.047 ops/s
[info]                  ·gc.alloc.rate:                   1180.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              11280.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12819.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.597 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 162578.023 ops/s
[info]                  ·gc.alloc.rate:                   1165.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              11280.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9772.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.605 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 162346.441 ops/s
[info]                  ·gc.alloc.rate:                   1163.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              11280.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13089.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.404 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay":
[info]   163578.278 ±(99.9%) 4833.439 ops/s [Average]
[info]   (min, avg, max) = (162346.441, 163578.278, 165097.853), stdev = 1255.229
[info]   CI (99.9%): [158744.839, 168411.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate":
[info]   1172.717 ±(99.9%) 34.536 MB/sec [Average]
[info]   (min, avg, max) = (1163.893, 1172.717, 1183.584), stdev = 8.969
[info]   CI (99.9%): [1138.181, 1207.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   11280.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11280.003, 11280.003, 11280.003), stdev = 0.001
[info]   CI (99.9%): [11280.002, 11280.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1206.982 ±(99.9%) 706.558 MB/sec [Average]
[info]   (min, avg, max) = (1002.477, 1206.982, 1350.594), stdev = 183.491
[info]   CI (99.9%): [500.424, 1913.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11612.347 ±(99.9%) 6870.225 B/op [Average]
[info]   (min, avg, max) = (9553.985, 11612.347, 13089.442), stdev = 1784.176
[info]   CI (99.9%): [4742.122, 18482.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.562 ±(99.9%) 1.675 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.562, 1.205), stdev = 0.435
[info]   CI (99.9%): [≈ 0, 2.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 7.000), stdev = 1.483
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson
[info] # Run progress: 37.82% complete, ETA 00:19:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80942.172 ops/s
[info] # Warmup Iteration   2: 651637.726 ops/s
[info] # Warmup Iteration   3: 655903.089 ops/s
[info] # Warmup Iteration   4: 672063.400 ops/s
[info] # Warmup Iteration   5: 671736.114 ops/s
[info] Iteration   1: 665692.026 ops/s
[info]                  ·gc.alloc.rate:                   863.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          974.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2303.280 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 666993.696 ops/s
[info]                  ·gc.alloc.rate:               864.845 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1538.873 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 667001.468 ops/s
[info]                  ·gc.alloc.rate:                   864.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2319.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 673823.507 ops/s
[info]                  ·gc.alloc.rate:                   873.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2311.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 667989.875 ops/s
[info]                  ·gc.alloc.rate:                   866.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1561.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson":
[info]   668300.114 ±(99.9%) 12297.889 ops/s [Average]
[info]   (min, avg, max) = (665692.026, 668300.114, 673823.507), stdev = 3193.723
[info]   CI (99.9%): [656002.226, 680598.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   866.526 ±(99.9%) 15.924 MB/sec [Average]
[info]   (min, avg, max) = (863.158, 866.526, 873.691), stdev = 4.135
[info]   CI (99.9%): [850.601, 882.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   852.620 ±(99.9%) 685.696 MB/sec [Average]
[info]   (min, avg, max) = (652.395, 852.620, 989.894), stdev = 178.073
[info]   CI (99.9%): [166.925, 1538.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2006.878 ±(99.9%) 1605.482 B/op [Average]
[info]   (min, avg, max) = (1538.873, 2006.878, 2319.239), stdev = 416.938
[info]   CI (99.9%): [401.396, 3612.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.118 ±(99.9%) 0.316 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.118, 0.196), stdev = 0.082
[info]   CI (99.9%): [≈ 0, 0.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 5.000), stdev = 1.140
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter
[info] # Run progress: 38.66% complete, ETA 00:19:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2102109.393 ops/s
[info] # Warmup Iteration   2: 1196236.426 ops/s
[info] # Warmup Iteration   3: 1219442.179 ops/s
[info] # Warmup Iteration   4: 1210888.060 ops/s
[info] # Warmup Iteration   5: 1204428.125 ops/s
[info] Iteration   1: 1211088.354 ops/s
[info]                  ·gc.alloc.rate:                   572.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     860.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1207086.241 ops/s
[info]                  ·gc.alloc.rate:               570.772 MB/sec
[info]                  ·gc.alloc.rate.norm:          744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 432.120 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1216559.941 ops/s
[info]                  ·gc.alloc.rate:                   575.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     859.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1208852.517 ops/s
[info]                  ·gc.alloc.rate:                   571.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     866.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1203552.349 ops/s
[info]                  ·gc.alloc.rate:                   569.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     871.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter":
[info]   1209427.880 ±(99.9%) 18662.682 ops/s [Average]
[info]   (min, avg, max) = (1203552.349, 1209427.880, 1216559.941), stdev = 4846.639
[info]   CI (99.9%): [1190765.198, 1228090.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   571.900 ±(99.9%) 8.894 MB/sec [Average]
[info]   (min, avg, max) = (569.114, 571.900, 575.302), stdev = 2.310
[info]   CI (99.9%): [563.005, 580.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   598.263 ±(99.9%) 574.241 MB/sec [Average]
[info]   (min, avg, max) = (331.508, 598.263, 666.997), stdev = 149.129
[info]   CI (99.9%): [24.021, 1172.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   778.141 ±(99.9%) 745.083 B/op [Average]
[info]   (min, avg, max) = (432.120, 778.141, 871.962), stdev = 193.496
[info]   CI (99.9%): [33.057, 1523.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.059 ±(99.9%) 0.200 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.059, 0.135), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay
[info] # Run progress: 39.50% complete, ETA 00:19:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49299.606 ops/s
[info] # Warmup Iteration   2: 223314.273 ops/s
[info] # Warmup Iteration   3: 225533.500 ops/s
[info] # Warmup Iteration   4: 228505.332 ops/s
[info] # Warmup Iteration   5: 229252.372 ops/s
[info] Iteration   1: 230031.713 ops/s
[info]                  ·gc.alloc.rate:                   1211.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9108.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 228622.680 ops/s
[info]                  ·gc.alloc.rate:                   1204.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6906.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.430 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 228676.198 ops/s
[info]                  ·gc.alloc.rate:                   1204.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9242.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.573 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 229428.448 ops/s
[info]                  ·gc.alloc.rate:                   1208.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9244.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 230426.190 ops/s
[info]                  ·gc.alloc.rate:                   1213.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1013.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6922.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay":
[info]   229437.046 ±(99.9%) 3089.041 ops/s [Average]
[info]   (min, avg, max) = (228622.680, 229437.046, 230426.190), stdev = 802.214
[info]   CI (99.9%): [226348.005, 232526.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1208.593 ±(99.9%) 16.225 MB/sec [Average]
[info]   (min, avg, max) = (1204.350, 1208.593, 1213.787), stdev = 4.214
[info]   CI (99.9%): [1192.369, 1224.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8288.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8288.002, 8288.002, 8288.002), stdev = 0.001
[info]   CI (99.9%): [8288.002, 8288.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1208.102 ±(99.9%) 701.442 MB/sec [Average]
[info]   (min, avg, max) = (1003.555, 1208.102, 1348.052), stdev = 182.162
[info]   CI (99.9%): [506.660, 1909.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8285.053 ±(99.9%) 4822.546 B/op [Average]
[info]   (min, avg, max) = (6906.189, 8285.053, 9244.856), stdev = 1252.400
[info]   CI (99.9%): [3462.507, 13107.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.315 ±(99.9%) 0.721 B/op [Average]
[info]   (min, avg, max) = (0.142, 0.315, 0.573), stdev = 0.187
[info]   CI (99.9%): [≈ 0, 1.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce
[info] # Run progress: 40.34% complete, ETA 00:18:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 917185.628 ops/s
[info] # Warmup Iteration   2: 1046719.064 ops/s
[info] # Warmup Iteration   3: 1060299.650 ops/s
[info] # Warmup Iteration   4: 1048572.874 ops/s
[info] # Warmup Iteration   5: 1037959.257 ops/s
[info] Iteration   1: 1041350.279 ops/s
[info]                  ·gc.alloc.rate:                   1276.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2017.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1055368.398 ops/s
[info]                  ·gc.alloc.rate:                   1293.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1998.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1053850.360 ops/s
[info]                  ·gc.alloc.rate:                   1291.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1506.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1058402.719 ops/s
[info]                  ·gc.alloc.rate:                   1296.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.687 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2006.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1043156.442 ops/s
[info]                  ·gc.alloc.rate:                   1278.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              1928.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2041.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce":
[info]   1050425.639 ±(99.9%) 29514.424 ops/s [Average]
[info]   (min, avg, max) = (1041350.279, 1050425.639, 1058402.719), stdev = 7664.802
[info]   CI (99.9%): [1020911.215, 1079940.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate":
[info]   1287.138 ±(99.9%) 36.227 MB/sec [Average]
[info]   (min, avg, max) = (1276.092, 1287.138, 1296.949), stdev = 9.408
[info]   CI (99.9%): [1250.912, 1323.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate.norm":
[info]   1928.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1928.000, 1928.000, 1928.000), stdev = 0.001
[info]   CI (99.9%): [1928.000, 1928.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   1277.581 ±(99.9%) 578.489 MB/sec [Average]
[info]   (min, avg, max) = (1009.133, 1277.581, 1353.062), stdev = 150.232
[info]   CI (99.9%): [699.092, 1856.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1914.083 ±(99.9%) 879.073 B/op [Average]
[info]   (min, avg, max) = (1506.702, 1914.083, 2041.048), stdev = 228.292
[info]   CI (99.9%): [1035.010, 2793.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.081 ±(99.9%) 0.160 B/op [Average]
[info]   (min, avg, max) = (0.031, 0.081, 0.124), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson
[info] # Run progress: 41.18% complete, ETA 00:18:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 605099.533 ops/s
[info] # Warmup Iteration   2: 892688.871 ops/s
[info] # Warmup Iteration   3: 913457.011 ops/s
[info] # Warmup Iteration   4: 915984.472 ops/s
[info] # Warmup Iteration   5: 919038.182 ops/s
[info] Iteration   1: 922691.716 ops/s
[info]                  ·gc.alloc.rate:               530.133 MB/sec
[info]                  ·gc.alloc.rate.norm:          904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 555.637 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 920931.327 ops/s
[info]                  ·gc.alloc.rate:                   529.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1115.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 920215.782 ops/s
[info]                  ·gc.alloc.rate:                   528.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     559.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 902803.912 ops/s
[info]                  ·gc.alloc.rate:               518.707 MB/sec
[info]                  ·gc.alloc.rate.norm:          904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1142.164 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 919684.142 ops/s
[info]                  ·gc.alloc.rate:                   528.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1124.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson":
[info]   917265.376 ±(99.9%) 31434.890 ops/s [Average]
[info]   (min, avg, max) = (902803.912, 917265.376, 922691.716), stdev = 8163.541
[info]   CI (99.9%): [885830.486, 948700.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate":
[info]   527.018 ±(99.9%) 18.064 MB/sec [Average]
[info]   (min, avg, max) = (518.707, 527.018, 530.133), stdev = 4.691
[info]   CI (99.9%): [508.954, 545.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate.norm":
[info]   904.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (904.000, 904.000, 904.001), stdev = 0.001
[info]   CI (99.9%): [904.000, 904.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   523.750 ±(99.9%) 693.332 MB/sec [Average]
[info]   (min, avg, max) = (325.842, 523.750, 657.350), stdev = 180.056
[info]   CI (99.9%): [≈ 0, 1217.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   899.500 ±(99.9%) 1202.668 B/op [Average]
[info]   (min, avg, max) = (555.637, 899.500, 1142.164), stdev = 312.329
[info]   CI (99.9%): [≈ 0, 2102.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.075 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.036), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter
[info] # Run progress: 42.02% complete, ETA 00:18:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1382040.450 ops/s
[info] # Warmup Iteration   2: 1396089.087 ops/s
[info] # Warmup Iteration   3: 1395579.884 ops/s
[info] # Warmup Iteration   4: 1414321.324 ops/s
[info] # Warmup Iteration   5: 1416861.680 ops/s
[info] Iteration   1: 1411680.714 ops/s
[info]                  ·gc.alloc.rate:                   229.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     285.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.061 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1419438.570 ops/s
[info]                  ·gc.alloc.rate:               230.943 MB/sec
[info]                  ·gc.alloc.rate.norm:          256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 283.637 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1408920.214 ops/s
[info]                  ·gc.alloc.rate:                   229.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     370.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.815 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.027 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1432773.731 ops/s
[info]                  ·gc.alloc.rate:      233.120 MB/sec
[info]                  ·gc.alloc.rate.norm: 256.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1416284.896 ops/s
[info]                  ·gc.alloc.rate:                   230.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     368.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter":
[info]   1417819.625 ±(99.9%) 35786.521 ops/s [Average]
[info]   (min, avg, max) = (1408920.214, 1417819.625, 1432773.731), stdev = 9293.646
[info]   CI (99.9%): [1382033.104, 1453606.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate":
[info]   230.685 ±(99.9%) 5.815 MB/sec [Average]
[info]   (min, avg, max) = (229.240, 230.685, 233.120), stdev = 1.510
[info]   CI (99.9%): [224.870, 236.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   256.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (256.000, 256.000, 256.000), stdev = 0.001
[info]   CI (99.9%): [256.000, 256.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   234.950 ±(99.9%) 526.290 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 234.950, 331.517), stdev = 136.676
[info]   CI (99.9%): [≈ 0, 761.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   261.462 ±(99.9%) 586.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 261.462, 370.215), stdev = 152.196
[info]   CI (99.9%): [≈ 0, 847.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.384 ±(99.9%) 3.083 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.384, 1.815), stdev = 0.801
[info]   CI (99.9%): [≈ 0, 3.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.428 ±(99.9%) 3.443 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.428, 2.027), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 4.000), stdev = 1.581
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce
[info] # Run progress: 42.86% complete, ETA 00:18:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 147079.009 ops/s
[info] # Warmup Iteration   2: 456301.921 ops/s
[info] # Warmup Iteration   3: 472728.454 ops/s
[info] # Warmup Iteration   4: 468995.911 ops/s
[info] # Warmup Iteration   5: 469050.222 ops/s
[info] Iteration   1: 471084.439 ops/s
[info]                  ·gc.alloc.rate:                   1394.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4447.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 468324.130 ops/s
[info]                  ·gc.alloc.rate:                   1385.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5625.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.280 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 462321.001 ops/s
[info]                  ·gc.alloc.rate:                   1368.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4580.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 468729.607 ops/s
[info]                  ·gc.alloc.rate:                   1387.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4531.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 463442.395 ops/s
[info]                  ·gc.alloc.rate:               1371.442 MB/sec
[info]                  ·gc.alloc.rate.norm:          4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1353.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4594.394 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce":
[info]   466780.314 ±(99.9%) 14373.761 ops/s [Average]
[info]   (min, avg, max) = (462321.001, 466780.314, 471084.439), stdev = 3732.820
[info]   CI (99.9%): [452406.553, 481154.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1381.316 ±(99.9%) 42.687 MB/sec [Average]
[info]   (min, avg, max) = (1368.039, 1381.316, 1394.103), stdev = 11.086
[info]   CI (99.9%): [1338.629, 1424.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1411.094 ±(99.9%) 567.868 MB/sec [Average]
[info]   (min, avg, max) = (1331.745, 1411.094, 1674.493), stdev = 147.474
[info]   CI (99.9%): [843.226, 1978.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4755.983 ±(99.9%) 1884.455 B/op [Average]
[info]   (min, avg, max) = (4447.739, 4755.983, 5625.374), stdev = 489.387
[info]   CI (99.9%): [2871.528, 6640.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.154 ±(99.9%) 0.399 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.154, 0.280), stdev = 0.104
[info]   CI (99.9%): [≈ 0, 0.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 11.000), stdev = 2.881
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson
[info] # Run progress: 43.70% complete, ETA 00:17:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 445344.559 ops/s
[info] # Warmup Iteration   2: 1022435.392 ops/s
[info] # Warmup Iteration   3: 1029768.328 ops/s
[info] # Warmup Iteration   4: 1040465.499 ops/s
[info] # Warmup Iteration   5: 1049174.223 ops/s
[info] Iteration   1: 1058421.001 ops/s
[info]                  ·gc.alloc.rate:                   801.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     968.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1044182.216 ops/s
[info]                  ·gc.alloc.rate:                   791.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1479.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1056399.915 ops/s
[info]                  ·gc.alloc.rate:                   800.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     979.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1050222.079 ops/s
[info]                  ·gc.alloc.rate:                   795.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     988.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1050133.702 ops/s
[info]                  ·gc.alloc.rate:                   795.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1488.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson":
[info]   1051871.783 ±(99.9%) 21805.333 ops/s [Average]
[info]   (min, avg, max) = (1044182.216, 1051871.783, 1058421.001), stdev = 5662.776
[info]   CI (99.9%): [1030066.450, 1073677.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   796.892 ±(99.9%) 16.513 MB/sec [Average]
[info]   (min, avg, max) = (791.089, 796.892, 801.879), stdev = 4.288
[info]   CI (99.9%): [780.380, 813.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1192.000, 1192.000, 1192.000), stdev = 0.001
[info]   CI (99.9%): [1192.000, 1192.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   788.925 ±(99.9%) 698.788 MB/sec [Average]
[info]   (min, avg, max) = (651.686, 788.925, 993.422), stdev = 181.473
[info]   CI (99.9%): [90.137, 1487.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1181.001 ±(99.9%) 1065.456 B/op [Average]
[info]   (min, avg, max) = (968.736, 1181.001, 1488.523), stdev = 276.695
[info]   CI (99.9%): [115.546, 2246.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.050 ±(99.9%) 0.107 B/op [Average]
[info]   (min, avg, max) = (0.031, 0.050, 0.093), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 6.000), stdev = 1.643
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter
[info] # Run progress: 44.54% complete, ETA 00:17:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3082538.684 ops/s
[info] # Warmup Iteration   2: 3267669.062 ops/s
[info] # Warmup Iteration   3: 3256212.669 ops/s
[info] # Warmup Iteration   4: 3286810.486 ops/s
[info] # Warmup Iteration   5: 3267450.574 ops/s
[info] Iteration   1: 3306474.726 ops/s
[info]                  ·gc.alloc.rate:      100.873 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3304336.172 ops/s
[info]                  ·gc.alloc.rate:      100.812 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3278401.775 ops/s
[info]                  ·gc.alloc.rate:                   100.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3296751.094 ops/s
[info]                  ·gc.alloc.rate:      100.571 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3279278.186 ops/s
[info]                  ·gc.alloc.rate:               100.043 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 122.772 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter":
[info]   3293048.391 ±(99.9%) 51859.911 ops/s [Average]
[info]   (min, avg, max) = (3278401.775, 3293048.391, 3306474.726), stdev = 13467.854
[info]   CI (99.9%): [3241188.480, 3344908.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   100.462 ±(99.9%) 1.587 MB/sec [Average]
[info]   (min, avg, max) = (100.013, 100.462, 100.873), stdev = 0.412
[info]   CI (99.9%): [98.875, 102.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   102.350 ±(99.9%) 539.663 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.350, 255.885), stdev = 140.149
[info]   CI (99.9%): [≈ 0, 642.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   49.114 ±(99.9%) 258.966 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 49.114, 122.800), stdev = 67.253
[info]   CI (99.9%): [≈ 0, 308.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.035 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.020), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.010), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay
[info] # Run progress: 45.38% complete, ETA 00:17:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34942.716 ops/s
[info] # Warmup Iteration   2: 172340.147 ops/s
[info] # Warmup Iteration   3: 173391.596 ops/s
[info] # Warmup Iteration   4: 178038.448 ops/s
[info] # Warmup Iteration   5: 179839.164 ops/s
[info] Iteration   1: 175442.496 ops/s
[info]                  ·gc.alloc.rate:                   1203.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              10792.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11942.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.934 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 179886.032 ops/s
[info]                  ·gc.alloc.rate:               1233.862 MB/sec
[info]                  ·gc.alloc.rate.norm:          10792.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8777.036 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 177886.391 ops/s
[info]                  ·gc.alloc.rate:                   1220.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              10792.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11882.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.921 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 174739.927 ops/s
[info]                  ·gc.alloc.rate:                   1198.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              10792.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12137.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.375 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 177797.040 ops/s
[info]                  ·gc.alloc.rate:                   1219.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              10792.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1013.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8971.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay":
[info]   177150.377 ±(99.9%) 7978.090 ops/s [Average]
[info]   (min, avg, max) = (174739.927, 177150.377, 179886.032), stdev = 2071.885
[info]   CI (99.9%): [169172.287, 185128.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1215.115 ±(99.9%) 54.663 MB/sec [Average]
[info]   (min, avg, max) = (1198.534, 1215.115, 1233.862), stdev = 14.196
[info]   CI (99.9%): [1160.452, 1269.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10792.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10792.002, 10792.002, 10792.003), stdev = 0.001
[info]   CI (99.9%): [10792.002, 10792.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1208.107 ±(99.9%) 701.587 MB/sec [Average]
[info]   (min, avg, max) = (1003.488, 1208.107, 1347.961), stdev = 182.200
[info]   CI (99.9%): [506.520, 1909.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10742.259 ±(99.9%) 6580.962 B/op [Average]
[info]   (min, avg, max) = (8777.036, 10742.259, 12137.491), stdev = 1709.055
[info]   CI (99.9%): [4161.298, 17323.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.483 ±(99.9%) 1.644 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.483, 0.934), stdev = 0.427
[info]   CI (99.9%): [≈ 0, 2.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.600, 17.000), stdev = 4.722
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce
[info] # Run progress: 46.22% complete, ETA 00:16:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3339.044 ops/s
[info] # Warmup Iteration   2: 5881.056 ops/s
[info] # Warmup Iteration   3: 7481.301 ops/s
[info] # Warmup Iteration   4: 8332.768 ops/s
[info] # Warmup Iteration   5: 8318.562 ops/s
[info] Iteration   1: 8302.815 ops/s
[info]                  ·gc.alloc.rate:                   1171.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              221968.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     250812.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.673 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 8308.088 ops/s
[info]                  ·gc.alloc.rate:                   1172.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              221968.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     188895.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.716 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 8224.678 ops/s
[info]                  ·gc.alloc.rate:                   1160.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              221968.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255706.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31.868 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 8268.490 ops/s
[info]                  ·gc.alloc.rate:                   1166.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              221992.437 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     191520.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.849 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 8332.418 ops/s
[info]                  ·gc.alloc.rate:                   1175.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              222008.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     254217.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.796 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce":
[info]   8287.298 ±(99.9%) 160.897 ops/s [Average]
[info]   (min, avg, max) = (8224.678, 8287.298, 8332.418), stdev = 41.785
[info]   CI (99.9%): [8126.401, 8448.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate":
[info]   1169.276 ±(99.9%) 22.981 MB/sec [Average]
[info]   (min, avg, max) = (1160.305, 1169.276, 1175.774), stdev = 5.968
[info]   CI (99.9%): [1146.295, 1192.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm":
[info]   221980.930 ±(99.9%) 71.144 B/op [Average]
[info]   (min, avg, max) = (221968.052, 221980.930, 222008.052), stdev = 18.476
[info]   CI (99.9%): [221909.786, 222052.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   1202.150 ±(99.9%) 704.194 MB/sec [Average]
[info]   (min, avg, max) = (997.541, 1202.150, 1346.357), stdev = 182.877
[info]   CI (99.9%): [497.956, 1906.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   228230.393 ±(99.9%) 133877.062 B/op [Average]
[info]   (min, avg, max) = (188895.099, 228230.393, 255706.717), stdev = 34767.448
[info]   CI (99.9%): [94353.331, 362107.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.108 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.108, 0.167), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   20.580 ±(99.9%) 29.657 B/op [Average]
[info]   (min, avg, max) = (11.796, 20.580, 31.868), stdev = 7.702
[info]   CI (99.9%): [≈ 0, 50.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson
[info] # Run progress: 47.06% complete, ETA 00:16:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3000.584 ops/s
[info] # Warmup Iteration   2: 11298.661 ops/s
[info] # Warmup Iteration   3: 11844.209 ops/s
[info] # Warmup Iteration   4: 11704.629 ops/s
[info] # Warmup Iteration   5: 11843.691 ops/s
[info] Iteration   1: 11815.109 ops/s
[info]                  ·gc.alloc.rate:                   186.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              24880.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34074.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.457 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 11981.455 ops/s
[info]                  ·gc.alloc.rate:      189.467 MB/sec
[info]                  ·gc.alloc.rate.norm: 24880.039 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 11884.500 ops/s
[info]                  ·gc.alloc.rate:               187.933 MB/sec
[info]                  ·gc.alloc.rate.norm:          24880.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33876.256 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 11792.571 ops/s
[info]                  ·gc.alloc.rate:                   186.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              24880.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34137.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.556 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 11794.456 ops/s
[info]                  ·gc.alloc.rate:      186.511 MB/sec
[info]                  ·gc.alloc.rate.norm: 24880.050 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson":
[info]   11853.618 ±(99.9%) 310.485 ops/s [Average]
[info]   (min, avg, max) = (11792.571, 11853.618, 11981.455), stdev = 80.632
[info]   CI (99.9%): [11543.133, 12164.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate":
[info]   187.450 ±(99.9%) 4.896 MB/sec [Average]
[info]   (min, avg, max) = (186.490, 187.450, 189.467), stdev = 1.271
[info]   CI (99.9%): [182.554, 192.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   24880.040 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (24880.036, 24880.040, 24880.050), stdev = 0.006
[info]   CI (99.9%): [24880.017, 24880.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   153.532 ±(99.9%) 539.688 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.532, 255.895), stdev = 140.155
[info]   CI (99.9%): [≈ 0, 693.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   20417.587 ±(99.9%) 71771.654 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20417.587, 34137.616), stdev = 18638.871
[info]   CI (99.9%): [≈ 0, 92189.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.071 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.603 ±(99.9%) 9.445 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.603, 5.556), stdev = 2.453
[info]   CI (99.9%): [≈ 0, 11.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.400, 7.000), stdev = 3.209
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter
[info] # Run progress: 47.90% complete, ETA 00:16:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11085.220 ops/s
[info] # Warmup Iteration   2: 16959.016 ops/s
[info] # Warmup Iteration   3: 23799.044 ops/s
[info] # Warmup Iteration   4: 23766.278 ops/s
[info] # Warmup Iteration   5: 23624.064 ops/s
[info] Iteration   1: 23794.336 ops/s
[info]                  ·gc.alloc.rate:                   264.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              17488.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16918.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.754 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 24011.178 ops/s
[info]                  ·gc.alloc.rate:               266.899 MB/sec
[info]                  ·gc.alloc.rate.norm:          17488.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16766.737 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 23920.299 ops/s
[info]                  ·gc.alloc.rate:                   265.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              17488.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21782.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.773 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 116.634 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 23891.999 ops/s
[info]                  ·gc.alloc.rate:                   265.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              17488.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21808.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.743 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 24126.643 ops/s
[info]                  ·gc.alloc.rate:      268.184 MB/sec
[info]                  ·gc.alloc.rate.norm: 17488.018 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter":
[info]   23948.891 ±(99.9%) 484.848 ops/s [Average]
[info]   (min, avg, max) = (23794.336, 23948.891, 24126.643), stdev = 125.914
[info]   CI (99.9%): [23464.043, 24433.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate":
[info]   266.211 ±(99.9%) 5.396 MB/sec [Average]
[info]   (min, avg, max) = (264.476, 266.211, 268.184), stdev = 1.401
[info]   CI (99.9%): [260.815, 271.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   17488.028 ±(99.9%) 0.089 B/op [Average]
[info]   (min, avg, max) = (17488.018, 17488.028, 17488.070), stdev = 0.023
[info]   CI (99.9%): [17487.940, 17488.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   234.834 ±(99.9%) 525.889 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 234.834, 331.205), stdev = 136.572
[info]   CI (99.9%): [≈ 0, 760.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   15455.349 ±(99.9%) 34609.031 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15455.349, 21808.766), stdev = 8987.855
[info]   CI (99.9%): [≈ 0, 50064.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.371 ±(99.9%) 3.019 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.371, 1.773), stdev = 0.784
[info]   CI (99.9%): [≈ 0, 3.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   24.426 ±(99.9%) 198.555 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.426, 116.634), stdev = 51.564
[info]   CI (99.9%): [≈ 0, 222.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 4.000), stdev = 1.643
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay
[info] # Run progress: 48.74% complete, ETA 00:16:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 527.604 ops/s
[info] # Warmup Iteration   2: 3462.349 ops/s
[info] # Warmup Iteration   3: 3616.475 ops/s
[info] # Warmup Iteration   4: 3751.075 ops/s
[info] # Warmup Iteration   5: 3744.807 ops/s
[info] Iteration   1: 3773.891 ops/s
[info]                  ·gc.alloc.rate:                   1106.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              461416.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     553037.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60.762 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3757.454 ops/s
[info]                  ·gc.alloc.rate:                   1102.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              461416.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     418844.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.152 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3773.718 ops/s
[info]                  ·gc.alloc.rate:                   1106.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              461416.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     419013.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.361 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3763.905 ops/s
[info]                  ·gc.alloc.rate:               1103.940 MB/sec
[info]                  ·gc.alloc.rate.norm:          461416.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 562025.596 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 3800.450 ops/s
[info]                  ·gc.alloc.rate:                   1114.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              461416.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     418630.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.242 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay":
[info]   3773.884 ±(99.9%) 63.134 ops/s [Average]
[info]   (min, avg, max) = (3757.454, 3773.884, 3800.450), stdev = 16.396
[info]   CI (99.9%): [3710.749, 3837.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate":
[info]   1106.806 ±(99.9%) 18.301 MB/sec [Average]
[info]   (min, avg, max) = (1102.034, 1106.806, 1114.511), stdev = 4.753
[info]   CI (99.9%): [1088.505, 1125.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   461416.116 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (461416.114, 461416.116, 461416.123), stdev = 0.004
[info]   CI (99.9%): [461416.101, 461416.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1137.556 ±(99.9%) 696.760 MB/sec [Average]
[info]   (min, avg, max) = (1000.358, 1137.556, 1344.649), stdev = 180.946
[info]   CI (99.9%): [440.796, 1834.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   474310.273 ±(99.9%) 292789.997 B/op [Average]
[info]   (min, avg, max) = (418630.381, 474310.273, 562025.596), stdev = 76036.632
[info]   CI (99.9%): [181520.276, 767100.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.208 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.146), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   24.303 ±(99.9%) 86.562 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.303, 60.762), stdev = 22.480
[info]   CI (99.9%): [≈ 0, 110.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.342
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce
[info] # Run progress: 49.58% complete, ETA 00:15:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 274245.517 ops/s
[info] # Warmup Iteration   2: 419398.722 ops/s
[info] # Warmup Iteration   3: 429921.547 ops/s
[info] # Warmup Iteration   4: 426530.877 ops/s
[info] # Warmup Iteration   5: 417381.710 ops/s
[info] Iteration   1: 414174.354 ops/s
[info]                  ·gc.alloc.rate:                   1381.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              5248.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5072.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.237 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 425339.269 ops/s
[info]                  ·gc.alloc.rate:                   1418.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              5248.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4964.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.385 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 420850.923 ops/s
[info]                  ·gc.alloc.rate:                   1403.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              5248.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5035.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.234 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 418102.896 ops/s
[info]                  ·gc.alloc.rate:                   1394.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              5248.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6356.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.235 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 423034.409 ops/s
[info]                  ·gc.alloc.rate:                   1411.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              5248.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5038.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.232 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce":
[info]   420300.370 ±(99.9%) 16732.094 ops/s [Average]
[info]   (min, avg, max) = (414174.354, 420300.370, 425339.269), stdev = 4345.272
[info]   CI (99.9%): [403568.277, 437032.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate":
[info]   1401.937 ±(99.9%) 55.843 MB/sec [Average]
[info]   (min, avg, max) = (1381.523, 1401.937, 1418.808), stdev = 14.502
[info]   CI (99.9%): [1346.094, 1457.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm":
[info]   5248.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5248.001, 5248.001, 5248.001), stdev = 0.001
[info]   CI (99.9%): [5248.001, 5248.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space":
[info]   1413.697 ±(99.9%) 593.838 MB/sec [Average]
[info]   (min, avg, max) = (1335.327, 1413.697, 1689.279), stdev = 154.218
[info]   CI (99.9%): [819.859, 2007.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5293.680 ±(99.9%) 2293.627 B/op [Average]
[info]   (min, avg, max) = (4964.391, 5293.680, 6356.875), stdev = 595.648
[info]   CI (99.9%): [3000.054, 7587.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.071, 0.104), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.265 ±(99.9%) 0.259 B/op [Average]
[info]   (min, avg, max) = (0.232, 0.265, 0.385), stdev = 0.067
[info]   CI (99.9%): [0.005, 0.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson
[info] # Run progress: 50.42% complete, ETA 00:15:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 828129.329 ops/s
[info] # Warmup Iteration   2: 1555854.643 ops/s
[info] # Warmup Iteration   3: 1590571.563 ops/s
[info] # Warmup Iteration   4: 1587281.550 ops/s
[info] # Warmup Iteration   5: 1605934.646 ops/s
[info] Iteration   1: 1581762.987 ops/s
[info]                  ·gc.alloc.rate:                   659.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          649.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     646.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1600416.229 ops/s
[info]                  ·gc.alloc.rate:                   667.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     640.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1586055.804 ops/s
[info]                  ·gc.alloc.rate:               661.277 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 648.481 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1590172.322 ops/s
[info]                  ·gc.alloc.rate:                   663.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     649.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1604252.823 ops/s
[info]                  ·gc.alloc.rate:                   668.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     645.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson":
[info]   1592532.033 ±(99.9%) 36683.301 ops/s [Average]
[info]   (min, avg, max) = (1581762.987, 1592532.033, 1604252.823), stdev = 9526.537
[info]   CI (99.9%): [1555848.732, 1629215.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate":
[info]   663.964 ±(99.9%) 15.313 MB/sec [Average]
[info]   (min, avg, max) = (659.439, 663.964, 668.866), stdev = 3.977
[info]   CI (99.9%): [648.650, 679.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space":
[info]   653.805 ±(99.9%) 14.000 MB/sec [Average]
[info]   (min, avg, max) = (649.620, 653.805, 658.362), stdev = 3.636
[info]   CI (99.9%): [639.805, 667.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   645.973 ±(99.9%) 14.112 B/op [Average]
[info]   (min, avg, max) = (640.027, 645.973, 649.428), stdev = 3.665
[info]   CI (99.9%): [631.862, 660.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.037 ±(99.9%) 0.118 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.082), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter
[info] # Run progress: 51.26% complete, ETA 00:15:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5110988.947 ops/s
[info] # Warmup Iteration   2: 11239206.011 ops/s
[info] # Warmup Iteration   3: 11381477.445 ops/s
[info] # Warmup Iteration   4: 11336024.206 ops/s
[info] # Warmup Iteration   5: 11573856.797 ops/s
[info] Iteration   1: 11466452.055 ops/s
[info]                  ·gc.alloc.rate:                   583.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 11493506.584 ops/s
[info]                  ·gc.alloc.rate:               584.386 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45.337 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 11615570.295 ops/s
[info]                  ·gc.alloc.rate:                   590.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 11541038.030 ops/s
[info]                  ·gc.alloc.rate:                   586.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 11528121.491 ops/s
[info]                  ·gc.alloc.rate:                   586.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter":
[info]   11528937.691 ±(99.9%) 217928.336 ops/s [Average]
[info]   (min, avg, max) = (11466452.055, 11528937.691, 11615570.295), stdev = 56595.297
[info]   CI (99.9%): [11311009.355, 11746866.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate":
[info]   586.185 ±(99.9%) 11.025 MB/sec [Average]
[info]   (min, avg, max) = (583.028, 586.185, 590.567), stdev = 2.863
[info]   CI (99.9%): [575.161, 597.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   596.903 ±(99.9%) 572.008 MB/sec [Average]
[info]   (min, avg, max) = (331.178, 596.903, 664.992), stdev = 148.549
[info]   CI (99.9%): [24.894, 1168.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   81.437 ±(99.9%) 77.727 B/op [Average]
[info]   (min, avg, max) = (45.337, 81.437, 90.885), stdev = 20.185
[info]   CI (99.9%): [3.710, 159.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.010 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay
[info] # Run progress: 52.10% complete, ETA 00:15:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68955.473 ops/s
[info] # Warmup Iteration   2: 238865.412 ops/s
[info] # Warmup Iteration   3: 235027.258 ops/s
[info] # Warmup Iteration   4: 239850.329 ops/s
[info] # Warmup Iteration   5: 239929.119 ops/s
[info] Iteration   1: 239783.604 ops/s
[info]                  ·gc.alloc.rate:               771.713 MB/sec
[info]                  ·gc.alloc.rate.norm:          5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4324.016 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 240276.771 ops/s
[info]                  ·gc.alloc.rate:                   773.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4332.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 237360.758 ops/s
[info]                  ·gc.alloc.rate:                   763.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6609.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.414 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 241196.220 ops/s
[info]                  ·gc.alloc.rate:               776.340 MB/sec
[info]                  ·gc.alloc.rate.norm:          5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4351.172 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 239422.623 ops/s
[info]                  ·gc.alloc.rate:                   770.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              5064.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4396.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.274 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay":
[info]   239607.995 ±(99.9%) 5474.484 ops/s [Average]
[info]   (min, avg, max) = (237360.758, 239607.995, 241196.220), stdev = 1421.706
[info]   CI (99.9%): [234133.511, 245082.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate":
[info]   771.190 ±(99.9%) 17.648 MB/sec [Average]
[info]   (min, avg, max) = (763.966, 771.190, 776.340), stdev = 4.583
[info]   CI (99.9%): [753.542, 788.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm":
[info]   5064.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5064.002, 5064.002, 5064.002), stdev = 0.001
[info]   CI (99.9%): [5064.002, 5064.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space":
[info]   730.775 ±(99.9%) 573.618 MB/sec [Average]
[info]   (min, avg, max) = (658.945, 730.775, 997.157), stdev = 148.967
[info]   CI (99.9%): [157.157, 1304.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4802.868 ±(99.9%) 3890.880 B/op [Average]
[info]   (min, avg, max) = (4324.016, 4802.868, 6609.721), stdev = 1010.449
[info]   CI (99.9%): [911.988, 8693.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.165 ±(99.9%) 0.692 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.165, 0.414), stdev = 0.180
[info]   CI (99.9%): [≈ 0, 0.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.304
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce
[info] # Run progress: 52.94% complete, ETA 00:14:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1108221.504 ops/s
[info] # Warmup Iteration   2: 1497147.767 ops/s
[info] # Warmup Iteration   3: 1531363.408 ops/s
[info] # Warmup Iteration   4: 1556977.141 ops/s
[info] # Warmup Iteration   5: 1560468.600 ops/s
[info] Iteration   1: 1548389.838 ops/s
[info]                  ·gc.alloc.rate:                   1487.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              1512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1699.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1576908.112 ops/s
[info]                  ·gc.alloc.rate:                   1515.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              1512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.676 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1341.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1569158.481 ops/s
[info]                  ·gc.alloc.rate:                   1507.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              1512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1691.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1571337.494 ops/s
[info]                  ·gc.alloc.rate:                   1509.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              1512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1355.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1555284.762 ops/s
[info]                  ·gc.alloc.rate:                   1494.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              1512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1371.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce":
[info]   1564215.737 ±(99.9%) 45823.793 ops/s [Average]
[info]   (min, avg, max) = (1548389.838, 1564215.737, 1576908.112), stdev = 11900.293
[info]   CI (99.9%): [1518391.945, 1610039.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1503.175 ±(99.9%) 44.033 MB/sec [Average]
[info]   (min, avg, max) = (1487.991, 1503.175, 1515.413), stdev = 11.435
[info]   CI (99.9%): [1459.142, 1547.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1512.000, 1512.000, 1512.000), stdev = 0.001
[info]   CI (99.9%): [1512.000, 1512.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1482.736 ±(99.9%) 693.375 MB/sec [Average]
[info]   (min, avg, max) = (1344.676, 1482.736, 1686.856), stdev = 180.067
[info]   CI (99.9%): [789.361, 2176.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1491.966 ±(99.9%) 717.189 B/op [Average]
[info]   (min, avg, max) = (1341.648, 1491.966, 1699.862), stdev = 186.252
[info]   CI (99.9%): [774.777, 2209.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.050 ±(99.9%) 0.134 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 8.000), stdev = 1.817
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson
[info] # Run progress: 53.78% complete, ETA 00:14:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2098415.167 ops/s
[info] # Warmup Iteration   2: 4141185.784 ops/s
[info] # Warmup Iteration   3: 4235996.500 ops/s
[info] # Warmup Iteration   4: 4263493.493 ops/s
[info] # Warmup Iteration   5: 4313008.614 ops/s
[info] Iteration   1: 4244788.819 ops/s
[info]                  ·gc.alloc.rate:                   1165.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     487.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 4322581.078 ops/s
[info]                  ·gc.alloc.rate:                   1186.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     361.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4334430.090 ops/s
[info]                  ·gc.alloc.rate:                   1190.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     483.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 4336664.967 ops/s
[info]                  ·gc.alloc.rate:                   1190.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     364.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4217557.920 ops/s
[info]                  ·gc.alloc.rate:                   1157.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     501.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson":
[info]   4291204.575 ±(99.9%) 215238.850 ops/s [Average]
[info]   (min, avg, max) = (4217557.920, 4291204.575, 4336664.967), stdev = 55896.846
[info]   CI (99.9%): [4075965.725, 4506443.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1178.192 ±(99.9%) 59.008 MB/sec [Average]
[info]   (min, avg, max) = (1157.991, 1178.192, 1190.667), stdev = 15.324
[info]   CI (99.9%): [1119.184, 1237.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1197.048 ±(99.9%) 702.126 MB/sec [Average]
[info]   (min, avg, max) = (991.862, 1197.048, 1343.283), stdev = 182.340
[info]   CI (99.9%): [494.923, 1899.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   439.416 ±(99.9%) 271.393 B/op [Average]
[info]   (min, avg, max) = (361.042, 439.416, 501.125), stdev = 70.480
[info]   CI (99.9%): [168.022, 710.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.026, 0.039), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 1.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 54.62% complete, ETA 00:14:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12935260.640 ops/s
[info] # Warmup Iteration   2: 14627788.172 ops/s
[info] # Warmup Iteration   3: 15437417.726 ops/s
[info] # Warmup Iteration   4: 15576214.764 ops/s
[info] # Warmup Iteration   5: 15440617.602 ops/s
[info] Iteration   1: 15622822.585 ops/s
[info]                  ·gc.alloc.rate:               476.616 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.286 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   2: 15579939.734 ops/s
[info]                  ·gc.alloc.rate:                   475.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 15612684.208 ops/s
[info]                  ·gc.alloc.rate:               476.323 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.375 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 15627320.644 ops/s
[info]                  ·gc.alloc.rate:                   476.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 15658734.994 ops/s
[info]                  ·gc.alloc.rate:               477.709 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.344 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter":
[info]   15620300.433 ±(99.9%) 109249.985 ops/s [Average]
[info]   (min, avg, max) = (15579939.734, 15620300.433, 15658734.994), stdev = 28371.874
[info]   CI (99.9%): [15511050.448, 15729550.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   476.538 ±(99.9%) 3.323 MB/sec [Average]
[info]   (min, avg, max) = (475.307, 476.538, 477.709), stdev = 0.863
[info]   CI (99.9%): [473.216, 479.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   463.504 ±(99.9%) 697.704 MB/sec [Average]
[info]   (min, avg, max) = (330.510, 463.504, 662.324), stdev = 181.192
[info]   CI (99.9%): [≈ 0, 1161.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   46.702 ±(99.9%) 70.481 B/op [Average]
[info]   (min, avg, max) = (33.286, 46.702, 66.819), stdev = 18.304
[info]   CI (99.9%): [≈ 0, 117.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.011 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc
[info] # Run progress: 55.46% complete, ETA 00:14:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17475250.589 ops/s
[info] # Warmup Iteration   2: 18318127.970 ops/s
[info] # Warmup Iteration   3: 19278091.938 ops/s
[info] # Warmup Iteration   4: 19280079.233 ops/s
[info] # Warmup Iteration   5: 19126631.301 ops/s
[info] Iteration   1: 19261883.167 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 19254317.855 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 19163907.932 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 19117890.670 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 19213673.685 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc":
[info]   19202334.662 ±(99.9%) 235679.004 ops/s [Average]
[info]   (min, avg, max) = (19117890.670, 19202334.662, 19261883.167), stdev = 61205.089
[info]   CI (99.9%): [18966655.658, 19438013.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay
[info] # Run progress: 56.30% complete, ETA 00:13:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 314552.803 ops/s
[info] # Warmup Iteration   2: 996235.264 ops/s
[info] # Warmup Iteration   3: 1017408.139 ops/s
[info] # Warmup Iteration   4: 1003853.656 ops/s
[info] # Warmup Iteration   5: 1012740.341 ops/s
[info] Iteration   1: 1015515.959 ops/s
[info]                  ·gc.alloc.rate:                   1502.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2054.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 999062.497 ops/s
[info]                  ·gc.alloc.rate:                   1478.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2632.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 996105.713 ops/s
[info]                  ·gc.alloc.rate:                   1473.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2124.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 998416.333 ops/s
[info]                  ·gc.alloc.rate:                   1477.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2126.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1010033.217 ops/s
[info]                  ·gc.alloc.rate:               1494.513 MB/sec
[info]                  ·gc.alloc.rate.norm:          2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1691.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2635.539 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay":
[info]   1003826.744 ±(99.9%) 32602.414 ops/s [Average]
[info]   (min, avg, max) = (996105.713, 1003826.744, 1015515.959), stdev = 8466.743
[info]   CI (99.9%): [971224.330, 1036429.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1485.326 ±(99.9%) 48.222 MB/sec [Average]
[info]   (min, avg, max) = (1473.891, 1485.326, 1502.609), stdev = 12.523
[info]   CI (99.9%): [1437.104, 1533.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2328.000, 2328.000, 2328.000), stdev = 0.001
[info]   CI (99.9%): [2328.000, 2328.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1476.809 ±(99.9%) 721.830 MB/sec [Average]
[info]   (min, avg, max) = (1326.040, 1476.809, 1691.944), stdev = 187.457
[info]   CI (99.9%): [754.979, 2198.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2314.667 ±(99.9%) 1128.069 B/op [Average]
[info]   (min, avg, max) = (2054.442, 2314.667, 2635.539), stdev = 292.956
[info]   CI (99.9%): [1186.597, 3442.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.113 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.066), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 7.000), stdev = 1.414
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce
[info] # Run progress: 57.14% complete, ETA 00:13:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 433361.258 ops/s
[info] # Warmup Iteration   2: 736533.704 ops/s
[info] # Warmup Iteration   3: 728764.965 ops/s
[info] # Warmup Iteration   4: 740760.150 ops/s
[info] # Warmup Iteration   5: 746105.729 ops/s
[info] Iteration   1: 743993.048 ops/s
[info]                  ·gc.alloc.rate:                   1713.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              3624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3549.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 745331.461 ops/s
[info]                  ·gc.alloc.rate:                   1716.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              3624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3558.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 740693.990 ops/s
[info]                  ·gc.alloc.rate:                   1705.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              3624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3592.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 744566.246 ops/s
[info]                  ·gc.alloc.rate:                   1715.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              3624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3582.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 739133.107 ops/s
[info]                  ·gc.alloc.rate:                   1702.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              3624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3615.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce":
[info]   742743.570 ±(99.9%) 10335.366 ops/s [Average]
[info]   (min, avg, max) = (739133.107, 742743.570, 745331.461), stdev = 2684.062
[info]   CI (99.9%): [732408.205, 753078.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1710.755 ±(99.9%) 23.973 MB/sec [Average]
[info]   (min, avg, max) = (1702.483, 1710.755, 1716.743), stdev = 6.226
[info]   CI (99.9%): [1686.782, 1734.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3624.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3624.001, 3624.001, 3624.001), stdev = 0.001
[info]   CI (99.9%): [3624.001, 3624.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1689.786 ±(99.9%) 30.841 MB/sec [Average]
[info]   (min, avg, max) = (1678.216, 1689.786, 1698.515), stdev = 8.009
[info]   CI (99.9%): [1658.945, 1720.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3579.646 ±(99.9%) 102.371 B/op [Average]
[info]   (min, avg, max) = (3549.080, 3579.646, 3615.554), stdev = 26.585
[info]   CI (99.9%): [3477.275, 3682.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.125), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.132 ±(99.9%) 0.293 B/op [Average]
[info]   (min, avg, max) = (0.088, 0.132, 0.264), stdev = 0.076
[info]   CI (99.9%): [≈ 0, 0.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson
[info] # Run progress: 57.98% complete, ETA 00:13:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1214988.878 ops/s
[info] # Warmup Iteration   2: 2505012.216 ops/s
[info] # Warmup Iteration   3: 2540507.503 ops/s
[info] # Warmup Iteration   4: 2527079.685 ops/s
[info] # Warmup Iteration   5: 2525674.619 ops/s
[info] Iteration   1: 2508303.021 ops/s
[info]                  ·gc.alloc.rate:                   1454.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1658.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1040.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2488192.760 ops/s
[info]                  ·gc.alloc.rate:                   1442.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     844.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2500188.395 ops/s
[info]                  ·gc.alloc.rate:                   1449.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     845.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2512300.194 ops/s
[info]                  ·gc.alloc.rate:                   1456.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     844.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2468371.278 ops/s
[info]                  ·gc.alloc.rate:                   1430.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1077.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson":
[info]   2495471.130 ±(99.9%) 68274.428 ops/s [Average]
[info]   (min, avg, max) = (2468371.278, 2495471.130, 2512300.194), stdev = 17730.652
[info]   CI (99.9%): [2427196.702, 2563745.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1446.579 ±(99.9%) 39.675 MB/sec [Average]
[info]   (min, avg, max) = (1430.866, 1446.579, 1456.325), stdev = 10.303
[info]   CI (99.9%): [1406.904, 1486.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1475.332 ±(99.9%) 701.939 MB/sec [Average]
[info]   (min, avg, max) = (1336.029, 1475.332, 1690.630), stdev = 182.291
[info]   CI (99.9%): [773.392, 2177.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   930.429 ±(99.9%) 454.354 B/op [Average]
[info]   (min, avg, max) = (844.221, 930.429, 1077.568), stdev = 117.994
[info]   CI (99.9%): [476.074, 1384.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.034, 0.053), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 11.000), stdev = 1.949
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter
[info] # Run progress: 58.82% complete, ETA 00:12:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5529680.187 ops/s
[info] # Warmup Iteration   2: 4614636.370 ops/s
[info] # Warmup Iteration   3: 4708173.876 ops/s
[info] # Warmup Iteration   4: 4706634.068 ops/s
[info] # Warmup Iteration   5: 4740898.497 ops/s
[info] Iteration   1: 4674705.348 ops/s
[info]                  ·gc.alloc.rate:                   1283.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     450.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 4725996.426 ops/s
[info]                  ·gc.alloc.rate:                   1297.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     447.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4681773.962 ops/s
[info]                  ·gc.alloc.rate:                   1285.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     339.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 4656311.862 ops/s
[info]                  ·gc.alloc.rate:                   1278.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     456.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 4706541.506 ops/s
[info]                  ·gc.alloc.rate:                   1292.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     452.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter":
[info]   4689065.821 ±(99.9%) 105480.330 ops/s [Average]
[info]   (min, avg, max) = (4656311.862, 4689065.821, 4725996.426), stdev = 27392.907
[info]   CI (99.9%): [4583585.491, 4794546.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1287.492 ±(99.9%) 28.942 MB/sec [Average]
[info]   (min, avg, max) = (1278.521, 1287.492, 1297.634), stdev = 7.516
[info]   CI (99.9%): [1258.550, 1316.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1279.493 ±(99.9%) 578.645 MB/sec [Average]
[info]   (min, avg, max) = (1010.914, 1279.493, 1354.027), stdev = 150.272
[info]   CI (99.9%): [700.848, 1858.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   429.294 ±(99.9%) 193.270 B/op [Average]
[info]   (min, avg, max) = (339.713, 429.294, 456.519), stdev = 50.192
[info]   CI (99.9%): [236.024, 622.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.079, 0.104), stdev = 0.017
[info]   CI (99.9%): [0.012, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.027, 0.035), stdev = 0.006
[info]   CI (99.9%): [0.004, 0.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 11.000), stdev = 2.702
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay
[info] # Run progress: 59.66% complete, ETA 00:12:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71732.424 ops/s
[info] # Warmup Iteration   2: 319493.774 ops/s
[info] # Warmup Iteration   3: 332513.442 ops/s
[info] # Warmup Iteration   4: 333256.610 ops/s
[info] # Warmup Iteration   5: 324172.410 ops/s
[info] Iteration   1: 334644.105 ops/s
[info]                  ·gc.alloc.rate:                   1194.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4691.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.392 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 332779.048 ops/s
[info]                  ·gc.alloc.rate:                   1187.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6326.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 331178.971 ops/s
[info]                  ·gc.alloc.rate:                   1182.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4785.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.297 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 329237.546 ops/s
[info]                  ·gc.alloc.rate:               1175.084 MB/sec
[info]                  ·gc.alloc.rate.norm:          5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6438.999 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 330621.705 ops/s
[info]                  ·gc.alloc.rate:                   1179.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1013.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4821.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.198 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay":
[info]   331692.275 ±(99.9%) 8014.908 ops/s [Average]
[info]   (min, avg, max) = (329237.546, 331692.275, 334644.105), stdev = 2081.446
[info]   CI (99.9%): [323677.367, 339707.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1183.937 ±(99.9%) 28.998 MB/sec [Average]
[info]   (min, avg, max) = (1175.084, 1183.937, 1194.572), stdev = 7.531
[info]   CI (99.9%): [1154.939, 1212.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1140.755 ±(99.9%) 710.483 MB/sec [Average]
[info]   (min, avg, max) = (997.971, 1140.755, 1347.286), stdev = 184.510
[info]   CI (99.9%): [430.273, 1851.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5412.786 ±(99.9%) 3417.613 B/op [Average]
[info]   (min, avg, max) = (4691.731, 5412.786, 6438.999), stdev = 887.543
[info]   CI (99.9%): [1995.173, 8830.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.217 ±(99.9%) 0.560 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.217, 0.392), stdev = 0.146
[info]   CI (99.9%): [≈ 0, 0.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce
[info] # Run progress: 60.50% complete, ETA 00:12:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 135394.495 ops/s
[info] # Warmup Iteration   2: 155347.560 ops/s
[info] # Warmup Iteration   3: 162518.027 ops/s
[info] # Warmup Iteration   4: 162901.103 ops/s
[info] # Warmup Iteration   5: 162544.225 ops/s
[info] Iteration   1: 160518.139 ops/s
[info]                  ·gc.alloc.rate:                   819.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9702.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 160527.394 ops/s
[info]                  ·gc.alloc.rate:                   819.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6491.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.816 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 162142.424 ops/s
[info]                  ·gc.alloc.rate:                   827.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9679.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.606 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 161000.812 ops/s
[info]                  ·gc.alloc.rate:               821.928 MB/sec
[info]                  ·gc.alloc.rate.norm:          8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6518.476 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 160118.088 ops/s
[info]                  ·gc.alloc.rate:                   817.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              8032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6570.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.409 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce":
[info]   160861.371 ±(99.9%) 3008.902 ops/s [Average]
[info]   (min, avg, max) = (160118.088, 160861.371, 162142.424), stdev = 781.402
[info]   CI (99.9%): [157852.469, 163870.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate":
[info]   821.191 ±(99.9%) 15.429 MB/sec [Average]
[info]   (min, avg, max) = (817.395, 821.191, 827.757), stdev = 4.007
[info]   CI (99.9%): [805.762, 836.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate.norm":
[info]   8032.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8032.003, 8032.003, 8032.003), stdev = 0.001
[info]   CI (99.9%): [8032.002, 8032.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   797.083 ±(99.9%) 691.305 MB/sec [Average]
[info]   (min, avg, max) = (662.295, 797.083, 997.577), stdev = 179.530
[info]   CI (99.9%): [105.778, 1488.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   7792.572 ±(99.9%) 6674.994 B/op [Average]
[info]   (min, avg, max) = (6491.477, 7792.572, 9702.626), stdev = 1733.475
[info]   CI (99.9%): [1117.578, 14467.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.407 ±(99.9%) 1.239 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.407, 0.816), stdev = 0.322
[info]   CI (99.9%): [≈ 0, 1.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson
[info] # Run progress: 61.34% complete, ETA 00:12:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 372912.677 ops/s
[info] # Warmup Iteration   2: 492665.486 ops/s
[info] # Warmup Iteration   3: 497420.449 ops/s
[info] # Warmup Iteration   4: 501879.603 ops/s
[info] # Warmup Iteration   5: 527091.640 ops/s
[info] Iteration   1: 525497.783 ops/s
[info]                  ·gc.alloc.rate:                   531.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1951.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 519381.851 ops/s
[info]                  ·gc.alloc.rate:                   525.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1978.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 498637.128 ops/s
[info]                  ·gc.alloc.rate:               504.510 MB/sec
[info]                  ·gc.alloc.rate.norm:          1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1032.398 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 494400.391 ops/s
[info]                  ·gc.alloc.rate:                   500.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2085.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 490548.047 ops/s
[info]                  ·gc.alloc.rate:               496.304 MB/sec
[info]                  ·gc.alloc.rate.norm:          1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1052.596 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson":
[info]   505693.040 ±(99.9%) 60465.287 ops/s [Average]
[info]   (min, avg, max) = (490548.047, 505693.040, 525497.783), stdev = 15702.643
[info]   CI (99.9%): [445227.753, 566158.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate":
[info]   511.655 ±(99.9%) 61.244 MB/sec [Average]
[info]   (min, avg, max) = (496.304, 511.655, 531.719), stdev = 15.905
[info]   CI (99.9%): [450.411, 572.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate.norm":
[info]   1592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1592.001, 1592.001, 1592.001), stdev = 0.001
[info]   CI (99.9%): [1592.001, 1592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   523.071 ±(99.9%) 686.923 MB/sec [Average]
[info]   (min, avg, max) = (327.170, 523.071, 655.315), stdev = 178.392
[info]   CI (99.9%): [≈ 0, 1209.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1620.015 ±(99.9%) 2039.438 B/op [Average]
[info]   (min, avg, max) = (1032.398, 1620.015, 2085.570), stdev = 529.636
[info]   CI (99.9%): [≈ 0, 3659.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.103 ±(99.9%) 0.424 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.103, 0.265), stdev = 0.110
[info]   CI (99.9%): [≈ 0, 0.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 1.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter
[info] # Run progress: 62.18% complete, ETA 00:11:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 615063.969 ops/s
[info] # Warmup Iteration   2: 647919.265 ops/s
[info] # Warmup Iteration   3: 644691.380 ops/s
[info] # Warmup Iteration   4: 647761.772 ops/s
[info] # Warmup Iteration   5: 655787.651 ops/s
[info] Iteration   1: 653134.606 ops/s
[info]                  ·gc.alloc.rate:                   551.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1595.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 655088.348 ops/s
[info]                  ·gc.alloc.rate:                   552.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1591.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 649717.381 ops/s
[info]                  ·gc.alloc.rate:               548.350 MB/sec
[info]                  ·gc.alloc.rate.norm:          1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 802.818 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 648430.611 ops/s
[info]                  ·gc.alloc.rate:                   547.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.709 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1610.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 652565.906 ops/s
[info]                  ·gc.alloc.rate:                   550.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1603.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter":
[info]   651787.370 ±(99.9%) 10344.965 ops/s [Average]
[info]   (min, avg, max) = (648430.611, 651787.370, 655088.348), stdev = 2686.555
[info]   CI (99.9%): [641442.405, 662132.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate":
[info]   550.105 ±(99.9%) 8.656 MB/sec [Average]
[info]   (min, avg, max) = (547.321, 550.105, 552.879), stdev = 2.248
[info]   CI (99.9%): [541.449, 558.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   1328.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1328.001, 1328.001, 1328.001), stdev = 0.001
[info]   CI (99.9%): [1328.001, 1328.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   597.015 ±(99.9%) 571.565 MB/sec [Average]
[info]   (min, avg, max) = (331.495, 597.015, 664.935), stdev = 148.434
[info]   CI (99.9%): [25.450, 1168.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1440.757 ±(99.9%) 1373.494 B/op [Average]
[info]   (min, avg, max) = (802.818, 1440.757, 1610.400), stdev = 356.692
[info]   CI (99.9%): [67.263, 2814.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.121 ±(99.9%) 0.324 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.121, 0.202), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc
[info] # Run progress: 63.03% complete, ETA 00:11:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 672017.568 ops/s
[info] # Warmup Iteration   2: 686124.896 ops/s
[info] # Warmup Iteration   3: 697109.747 ops/s
[info] # Warmup Iteration   4: 699304.409 ops/s
[info] # Warmup Iteration   5: 698862.693 ops/s
[info] Iteration   1: 696900.053 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 691233.644 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 697052.297 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 696422.529 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 695421.905 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc":
[info]   695406.086 ±(99.9%) 9310.405 ops/s [Average]
[info]   (min, avg, max) = (691233.644, 695406.086, 697052.297), stdev = 2417.883
[info]   CI (99.9%): [686095.681, 704716.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay
[info] # Run progress: 63.87% complete, ETA 00:11:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 472338.102 ops/s
[info] # Warmup Iteration   2: 601761.015 ops/s
[info] # Warmup Iteration   3: 603608.348 ops/s
[info] # Warmup Iteration   4: 602325.923 ops/s
[info] # Warmup Iteration   5: 607458.094 ops/s
[info] Iteration   1: 612272.186 ops/s
[info]                  ·gc.alloc.rate:                   653.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1681.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 606722.110 ops/s
[info]                  ·gc.alloc.rate:                   647.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1700.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 607547.865 ops/s
[info]                  ·gc.alloc.rate:                   648.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1703.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 612285.277 ops/s
[info]                  ·gc.alloc.rate:                   653.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1693.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 610010.444 ops/s
[info]                  ·gc.alloc.rate:                   651.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1706.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay":
[info]   609767.576 ±(99.9%) 9980.684 ops/s [Average]
[info]   (min, avg, max) = (606722.110, 609767.576, 612285.277), stdev = 2591.952
[info]   CI (99.9%): [599786.892, 619748.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate":
[info]   651.070 ±(99.9%) 10.640 MB/sec [Average]
[info]   (min, avg, max) = (647.810, 651.070, 653.779), stdev = 2.763
[info]   CI (99.9%): [640.429, 661.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate.norm":
[info]   1680.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1680.001, 1680.001, 1680.001), stdev = 0.001
[info]   CI (99.9%): [1680.001, 1680.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space":
[info]   657.673 ±(99.9%) 11.153 MB/sec [Average]
[info]   (min, avg, max) = (654.291, 657.673, 661.706), stdev = 2.897
[info]   CI (99.9%): [646.520, 668.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space.norm":
[info]   1697.063 ±(99.9%) 38.338 B/op [Average]
[info]   (min, avg, max) = (1681.524, 1697.063, 1706.698), stdev = 9.956
[info]   CI (99.9%): [1658.725, 1735.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.129 ±(99.9%) 0.187 B/op [Average]
[info]   (min, avg, max) = (0.107, 0.129, 0.216), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson
[info] # Run progress: 64.71% complete, ETA 00:11:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1121618.553 ops/s
[info] # Warmup Iteration   2: 1968761.003 ops/s
[info] # Warmup Iteration   3: 2005538.587 ops/s
[info] # Warmup Iteration   4: 1997222.903 ops/s
[info] # Warmup Iteration   5: 1996201.239 ops/s
[info] Iteration   1: 2025175.058 ops/s
[info]                  ·gc.alloc.rate:                   1070.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     764.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2029747.316 ops/s
[info]                  ·gc.alloc.rate:                   1073.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     766.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2023321.362 ops/s
[info]                  ·gc.alloc.rate:                   1070.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1031.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2019087.586 ops/s
[info]                  ·gc.alloc.rate:                   1067.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     780.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2030505.179 ops/s
[info]                  ·gc.alloc.rate:                   1073.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     778.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson":
[info]   2025567.300 ±(99.9%) 18167.529 ops/s [Average]
[info]   (min, avg, max) = (2019087.586, 2025567.300, 2030505.179), stdev = 4718.050
[info]   CI (99.9%): [2007399.771, 2043734.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1071.208 ±(99.9%) 9.410 MB/sec [Average]
[info]   (min, avg, max) = (1067.689, 1071.208, 1073.674), stdev = 2.444
[info]   CI (99.9%): [1061.798, 1080.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   832.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (832.000, 832.000, 832.000), stdev = 0.001
[info]   CI (99.9%): [832.000, 832.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1061.323 ±(99.9%) 573.186 MB/sec [Average]
[info]   (min, avg, max) = (983.925, 1061.323, 1327.160), stdev = 148.854
[info]   CI (99.9%): [488.137, 1634.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   824.368 ±(99.9%) 446.937 B/op [Average]
[info]   (min, avg, max) = (764.390, 824.368, 1031.614), stdev = 116.068
[info]   CI (99.9%): [377.431, 1271.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.036 ±(99.9%) 0.068 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.036, 0.049), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 8.000), stdev = 1.517
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter
[info] # Run progress: 65.55% complete, ETA 00:10:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4259058.828 ops/s
[info] # Warmup Iteration   2: 4510321.074 ops/s
[info] # Warmup Iteration   3: 4567519.431 ops/s
[info] # Warmup Iteration   4: 4594903.252 ops/s
[info] # Warmup Iteration   5: 4602017.208 ops/s
[info] Iteration   1: 4609708.347 ops/s
[info]                  ·gc.alloc.rate:                   703.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     339.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4608094.960 ops/s
[info]                  ·gc.alloc.rate:                   702.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     226.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4600700.933 ops/s
[info]                  ·gc.alloc.rate:                   701.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4563958.420 ops/s
[info]                  ·gc.alloc.rate:                   696.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     229.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4559181.492 ops/s
[info]                  ·gc.alloc.rate:                   695.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     230.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter":
[info]   4588328.830 ±(99.9%) 95188.369 ops/s [Average]
[info]   (min, avg, max) = (4559181.492, 4588328.830, 4609708.347), stdev = 24720.117
[info]   CI (99.9%): [4493140.461, 4683517.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   699.901 ±(99.9%) 14.518 MB/sec [Average]
[info]   (min, avg, max) = (695.445, 699.901, 703.170), stdev = 3.770
[info]   CI (99.9%): [685.383, 714.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   731.393 ±(99.9%) 564.336 MB/sec [Average]
[info]   (min, avg, max) = (663.693, 731.393, 993.543), stdev = 146.556
[info]   CI (99.9%): [167.057, 1295.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   250.702 ±(99.9%) 190.405 B/op [Average]
[info]   (min, avg, max) = (226.608, 250.702, 339.108), stdev = 49.448
[info]   CI (99.9%): [60.297, 441.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.015
[info]   CI (99.9%): [0.006, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.021, 0.028), stdev = 0.005
[info]   CI (99.9%): [0.002, 0.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay
[info] # Run progress: 66.39% complete, ETA 00:10:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 109186.664 ops/s
[info] # Warmup Iteration   2: 495000.694 ops/s
[info] # Warmup Iteration   3: 499552.046 ops/s
[info] # Warmup Iteration   4: 500474.172 ops/s
[info] # Warmup Iteration   5: 505944.529 ops/s
[info] Iteration   1: 501028.803 ops/s
[info]                  ·gc.alloc.rate:                   1482.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1655.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5198.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 494387.258 ops/s
[info]                  ·gc.alloc.rate:                   1463.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4251.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.331 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 501017.842 ops/s
[info]                  ·gc.alloc.rate:                   1482.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4218.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 503412.631 ops/s
[info]                  ·gc.alloc.rate:               1489.618 MB/sec
[info]                  ·gc.alloc.rate.norm:          4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1686.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5271.236 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 500506.172 ops/s
[info]                  ·gc.alloc.rate:                   1481.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4254.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay":
[info]   500070.541 ±(99.9%) 12983.394 ops/s [Average]
[info]   (min, avg, max) = (494387.258, 500070.541, 503412.631), stdev = 3371.746
[info]   CI (99.9%): [487087.148, 513053.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1479.777 ±(99.9%) 38.227 MB/sec [Average]
[info]   (min, avg, max) = (1463.046, 1479.777, 1489.618), stdev = 9.927
[info]   CI (99.9%): [1441.550, 1518.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1474.929 ±(99.9%) 690.996 MB/sec [Average]
[info]   (min, avg, max) = (1336.066, 1474.929, 1686.453), stdev = 179.449
[info]   CI (99.9%): [783.933, 2165.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4639.029 ±(99.9%) 2098.301 B/op [Average]
[info]   (min, avg, max) = (4218.746, 4639.029, 5271.236), stdev = 544.922
[info]   CI (99.9%): [2540.729, 6737.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.158 ±(99.9%) 0.527 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.158, 0.331), stdev = 0.137
[info]   CI (99.9%): [≈ 0, 0.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 7.000), stdev = 1.140
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce
[info] # Run progress: 67.23% complete, ETA 00:10:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3957.463 ops/s
[info] # Warmup Iteration   2: 5231.608 ops/s
[info] # Warmup Iteration   3: 5535.070 ops/s
[info] # Warmup Iteration   4: 5461.343 ops/s
[info] # Warmup Iteration   5: 5569.533 ops/s
[info] Iteration   1: 5590.419 ops/s
[info]                  ·gc.alloc.rate:                   1287.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     374558.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.860 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 5484.458 ops/s
[info]                  ·gc.alloc.rate:                   1262.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     383706.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35.838 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 5585.287 ops/s
[info]                  ·gc.alloc.rate:                   1286.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     378365.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.110 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30.959 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5549.647 ops/s
[info]                  ·gc.alloc.rate:                   1277.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     286559.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.806 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5506.793 ops/s
[info]                  ·gc.alloc.rate:                   1268.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              362272.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     386077.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.797 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce":
[info]   5543.321 ±(99.9%) 180.801 ops/s [Average]
[info]   (min, avg, max) = (5484.458, 5543.321, 5590.419), stdev = 46.954
[info]   CI (99.9%): [5362.520, 5724.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1276.407 ±(99.9%) 41.718 MB/sec [Average]
[info]   (min, avg, max) = (1262.801, 1276.407, 1287.333), stdev = 10.834
[info]   CI (99.9%): [1234.688, 1318.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   362272.079 ±(99.9%) 0.009 B/op [Average]
[info]   (min, avg, max) = (362272.077, 362272.079, 362272.083), stdev = 0.002
[info]   CI (99.9%): [362272.070, 362272.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   1274.758 ±(99.9%) 568.905 MB/sec [Average]
[info]   (min, avg, max) = (1010.806, 1274.758, 1351.330), stdev = 147.743
[info]   CI (99.9%): [705.853, 1843.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   361853.440 ±(99.9%) 163001.665 B/op [Average]
[info]   (min, avg, max) = (286559.141, 361853.440, 386077.002), stdev = 42331.015
[info]   CI (99.9%): [198851.775, 524855.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.076 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.076, 0.125), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   21.652 ±(99.9%) 48.662 B/op [Average]
[info]   (min, avg, max) = (5.860, 21.652, 35.838), stdev = 12.637
[info]   CI (99.9%): [≈ 0, 70.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson
[info] # Run progress: 68.07% complete, ETA 00:10:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15058.582 ops/s
[info] # Warmup Iteration   2: 29701.924 ops/s
[info] # Warmup Iteration   3: 29573.236 ops/s
[info] # Warmup Iteration   4: 29334.499 ops/s
[info] # Warmup Iteration   5: 29984.402 ops/s
[info] Iteration   1: 29978.027 ops/s
[info]                  ·gc.alloc.rate:                   434.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16995.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.186 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 29590.916 ops/s
[info]                  ·gc.alloc.rate:                   428.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.915 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34437.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.214 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 30132.115 ops/s
[info]                  ·gc.alloc.rate:               436.828 MB/sec
[info]                  ·gc.alloc.rate.norm:          22807.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16944.504 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 30127.193 ops/s
[info]                  ·gc.alloc.rate:                   436.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.925 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16947.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.175 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 29194.109 ops/s
[info]                  ·gc.alloc.rate:                   423.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35048.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.367 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson":
[info]   29804.472 ±(99.9%) 1563.866 ops/s [Average]
[info]   (min, avg, max) = (29194.109, 29804.472, 30132.115), stdev = 406.131
[info]   CI (99.9%): [28240.606, 31368.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   432.053 ±(99.9%) 22.702 MB/sec [Average]
[info]   (min, avg, max) = (423.190, 432.053, 436.828), stdev = 5.896
[info]   CI (99.9%): [409.350, 454.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   22807.847 ±(99.9%) 0.423 B/op [Average]
[info]   (min, avg, max) = (22807.706, 22807.847, 22807.939), stdev = 0.110
[info]   CI (99.9%): [22807.424, 22808.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   454.170 ±(99.9%) 684.856 MB/sec [Average]
[info]   (min, avg, max) = (323.819, 454.170, 650.310), stdev = 177.855
[info]   CI (99.9%): [≈ 0, 1139.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   24074.633 ±(99.9%) 37509.962 B/op [Average]
[info]   (min, avg, max) = (16944.504, 24074.633, 35048.294), stdev = 9741.218
[info]   CI (99.9%): [≈ 0, 61584.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.988 ±(99.9%) 4.707 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.988, 3.367), stdev = 1.222
[info]   CI (99.9%): [≈ 0, 6.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 5.000), stdev = 1.924
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter
[info] # Run progress: 68.91% complete, ETA 00:09:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42158.470 ops/s
[info] # Warmup Iteration   2: 46920.880 ops/s
[info] # Warmup Iteration   3: 46840.969 ops/s
[info] # Warmup Iteration   4: 46586.810 ops/s
[info] # Warmup Iteration   5: 46302.798 ops/s
[info] Iteration   1: 46425.524 ops/s
[info]                  ·gc.alloc.rate:                   349.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11223.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.813 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.428 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 46662.314 ops/s
[info]                  ·gc.alloc.rate:                   351.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11166.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.106 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 46966.904 ops/s
[info]                  ·gc.alloc.rate:               353.919 MB/sec
[info]                  ·gc.alloc.rate.norm:          11856.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11094.271 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 46668.649 ops/s
[info]                  ·gc.alloc.rate:                   351.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11165.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.702 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 46053.165 ops/s
[info]                  ·gc.alloc.rate:                   347.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22627.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.423 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter":
[info]   46555.311 ±(99.9%) 1309.642 ops/s [Average]
[info]   (min, avg, max) = (46053.165, 46555.311, 46966.904), stdev = 340.110
[info]   CI (99.9%): [45245.669, 47864.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   350.814 ±(99.9%) 9.880 MB/sec [Average]
[info]   (min, avg, max) = (347.024, 350.814, 353.919), stdev = 2.566
[info]   CI (99.9%): [340.935, 360.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   11856.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11856.009, 11856.010, 11856.010), stdev = 0.001
[info]   CI (99.9%): [11856.008, 11856.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   397.405 ±(99.9%) 570.239 MB/sec [Average]
[info]   (min, avg, max) = (331.168, 397.405, 662.315), stdev = 148.089
[info]   CI (99.9%): [≈ 0, 967.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   13455.509 ±(99.9%) 19744.972 B/op [Average]
[info]   (min, avg, max) = (11094.271, 13455.509, 22627.861), stdev = 5127.706
[info]   CI (99.9%): [≈ 0, 33200.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.388 ±(99.9%) 3.069 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.388, 1.813), stdev = 0.797
[info]   CI (99.9%): [≈ 0, 3.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   13.132 ±(99.9%) 104.006 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.132, 61.428), stdev = 27.010
[info]   CI (99.9%): [≈ 0, 117.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc
[info] # Run progress: 69.75% complete, ETA 00:09:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52566.586 ops/s
[info] # Warmup Iteration   2: 56933.671 ops/s
[info] # Warmup Iteration   3: 56843.921 ops/s
[info] # Warmup Iteration   4: 56892.003 ops/s
[info] # Warmup Iteration   5: 56614.668 ops/s
[info] Iteration   1: 56748.240 ops/s
[info]                  ·gc.alloc.rate:      0.866 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 56881.472 ops/s
[info]                  ·gc.alloc.rate:      0.868 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 56889.568 ops/s
[info]                  ·gc.alloc.rate:      0.868 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 56922.007 ops/s
[info]                  ·gc.alloc.rate:      0.869 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 56853.281 ops/s
[info]                  ·gc.alloc.rate:      0.867 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc":
[info]   56858.914 ±(99.9%) 256.217 ops/s [Average]
[info]   (min, avg, max) = (56748.240, 56858.914, 56922.007), stdev = 66.539
[info]   CI (99.9%): [56602.696, 57115.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   0.868 ±(99.9%) 0.004 MB/sec [Average]
[info]   (min, avg, max) = (0.866, 0.868, 0.869), stdev = 0.001
[info]   CI (99.9%): [0.864, 0.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   24.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (24.008, 24.008, 24.008), stdev = 0.001
[info]   CI (99.9%): [24.008, 24.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay
[info] # Run progress: 70.59% complete, ETA 00:09:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1574.016 ops/s
[info] # Warmup Iteration   2: 4185.966 ops/s
[info] # Warmup Iteration   3: 4411.662 ops/s
[info] # Warmup Iteration   4: 4469.747 ops/s
[info] # Warmup Iteration   5: 4419.224 ops/s
[info] Iteration   1: 4471.787 ops/s
[info]                  ·gc.alloc.rate:               1327.654 MB/sec
[info]                  ·gc.alloc.rate.norm:          467102.746 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1335.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 470018.976 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 4417.766 ops/s
[info]                  ·gc.alloc.rate:                   1311.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              467104.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     478016.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.246 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 4502.557 ops/s
[info]                  ·gc.alloc.rate:                   1336.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              467103.702 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     470858.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.275 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 4477.202 ops/s
[info]                  ·gc.alloc.rate:                   1329.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              467104.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     474890.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.948 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 4395.879 ops/s
[info]                  ·gc.alloc.rate:               1305.188 MB/sec
[info]                  ·gc.alloc.rate.norm:          467104.577 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1354.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 484710.097 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay":
[info]   4453.038 ±(99.9%) 171.114 ops/s [Average]
[info]   (min, avg, max) = (4395.879, 4453.038, 4502.557), stdev = 44.438
[info]   CI (99.9%): [4281.925, 4624.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1322.093 ±(99.9%) 50.812 MB/sec [Average]
[info]   (min, avg, max) = (1305.188, 1322.093, 1336.905), stdev = 13.196
[info]   CI (99.9%): [1271.282, 1372.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   467103.818 ±(99.9%) 2.605 B/op [Average]
[info]   (min, avg, max) = (467102.746, 467103.818, 467104.577), stdev = 0.676
[info]   CI (99.9%): [467101.213, 467106.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1346.299 ±(99.9%) 28.304 MB/sec [Average]
[info]   (min, avg, max) = (1335.943, 1346.299, 1354.381), stdev = 7.350
[info]   CI (99.9%): [1317.995, 1374.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   475698.987 ±(99.9%) 23017.223 B/op [Average]
[info]   (min, avg, max) = (470018.976, 475698.987, 484710.097), stdev = 5977.500
[info]   CI (99.9%): [452681.764, 498716.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   10.294 ±(99.9%) 43.039 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.294, 22.246), stdev = 11.177
[info]   CI (99.9%): [≈ 0, 53.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.095
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 71.43% complete, ETA 00:09:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 166255.066 ops/s
[info] # Warmup Iteration   2: 669438.127 ops/s
[info] # Warmup Iteration   3: 676364.791 ops/s
[info] # Warmup Iteration   4: 669409.294 ops/s
[info] # Warmup Iteration   5: 685485.241 ops/s
[info] Iteration   1: 675792.669 ops/s
[info]                  ·gc.alloc.rate:                   1481.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1652.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3847.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 683542.027 ops/s
[info]                  ·gc.alloc.rate:                   1498.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.676 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3065.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 684622.108 ops/s
[info]                  ·gc.alloc.rate:                   1500.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3849.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 688209.737 ops/s
[info]                  ·gc.alloc.rate:                   1508.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3080.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 688424.618 ops/s
[info]                  ·gc.alloc.rate:                   1508.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3860.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson":
[info]   684118.232 ±(99.9%) 19746.171 ops/s [Average]
[info]   (min, avg, max) = (675792.669, 684118.232, 688424.618), stdev = 5128.018
[info]   CI (99.9%): [664372.061, 703864.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1499.225 ±(99.9%) 43.119 MB/sec [Average]
[info]   (min, avg, max) = (1481.016, 1499.225, 1508.510), stdev = 11.198
[info]   CI (99.9%): [1456.106, 1542.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   3448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3448.001, 3448.001, 3448.001), stdev = 0.001
[info]   CI (99.9%): [3448.001, 3448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1539.123 ±(99.9%) 703.826 MB/sec [Average]
[info]   (min, avg, max) = (1331.676, 1539.123, 1689.044), stdev = 182.781
[info]   CI (99.9%): [835.297, 2242.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3540.537 ±(99.9%) 1644.939 B/op [Average]
[info]   (min, avg, max) = (3065.160, 3540.537, 3860.647), stdev = 427.185
[info]   CI (99.9%): [1895.598, 5185.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.096 ±(99.9%) 0.226 B/op [Average]
[info]   (min, avg, max) = (0.048, 0.096, 0.191), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 17.000), stdev = 4.930
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 72.27% complete, ETA 00:08:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2311827.446 ops/s
[info] # Warmup Iteration   2: 2509358.914 ops/s
[info] # Warmup Iteration   3: 2541626.124 ops/s
[info] # Warmup Iteration   4: 2513980.195 ops/s
[info] # Warmup Iteration   5: 2521767.820 ops/s
[info] Iteration   1: 2533063.821 ops/s
[info]                  ·gc.alloc.rate:                   412.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2499567.239 ops/s
[info]                  ·gc.alloc.rate:                   406.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     416.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2535372.331 ops/s
[info]                  ·gc.alloc.rate:               412.502 MB/sec
[info]                  ·gc.alloc.rate.norm:          256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 205.525 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2510118.563 ops/s
[info]                  ·gc.alloc.rate:                   408.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     207.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2537697.585 ops/s
[info]                  ·gc.alloc.rate:               412.896 MB/sec
[info]                  ·gc.alloc.rate.norm:          256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 205.334 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter":
[info]   2523163.908 ±(99.9%) 66284.377 ops/s [Average]
[info]   (min, avg, max) = (2499567.239, 2523163.908, 2537697.585), stdev = 17213.842
[info]   CI (99.9%): [2456879.531, 2589448.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   410.538 ±(99.9%) 10.768 MB/sec [Average]
[info]   (min, avg, max) = (406.706, 410.538, 412.896), stdev = 2.797
[info]   CI (99.9%): [399.769, 421.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   256.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (256.000, 256.000, 256.000), stdev = 0.001
[info]   CI (99.9%): [256.000, 256.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   397.416 ±(99.9%) 570.323 MB/sec [Average]
[info]   (min, avg, max) = (331.169, 397.416, 662.365), stdev = 148.111
[info]   CI (99.9%): [≈ 0, 967.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   248.215 ±(99.9%) 363.176 B/op [Average]
[info]   (min, avg, max) = (205.334, 248.215, 416.924), stdev = 94.316
[info]   CI (99.9%): [≈ 0, 611.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.061 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.039), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 4.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 73.11% complete, ETA 00:08:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32544.622 ops/s
[info] # Warmup Iteration   2: 246698.671 ops/s
[info] # Warmup Iteration   3: 244746.929 ops/s
[info] # Warmup Iteration   4: 254304.705 ops/s
[info] # Warmup Iteration   5: 254488.160 ops/s
[info] Iteration   1: 257051.099 ops/s
[info]                  ·gc.alloc.rate:                   994.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6083.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 256366.343 ops/s
[info]                  ·gc.alloc.rate:               991.968 MB/sec
[info]                  ·gc.alloc.rate.norm:          6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      997.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6124.000 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 254883.663 ops/s
[info]                  ·gc.alloc.rate:               986.250 MB/sec
[info]                  ·gc.alloc.rate.norm:          6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6192.580 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 255491.378 ops/s
[info]                  ·gc.alloc.rate:                   988.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6198.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 255500.461 ops/s
[info]                  ·gc.alloc.rate:                   988.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6220.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay":
[info]   255858.589 ±(99.9%) 3275.015 ops/s [Average]
[info]   (min, avg, max) = (254883.663, 255858.589, 257051.099), stdev = 850.511
[info]   CI (99.9%): [252583.574, 259133.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   990.037 ±(99.9%) 12.580 MB/sec [Average]
[info]   (min, avg, max) = (986.250, 990.037, 994.612), stdev = 3.267
[info]   CI (99.9%): [977.457, 1002.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6088.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6088.002, 6088.002, 6088.002), stdev = 0.001
[info]   CI (99.9%): [6088.002, 6088.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1002.341 ±(99.9%) 25.383 MB/sec [Average]
[info]   (min, avg, max) = (993.841, 1002.341, 1010.240), stdev = 6.592
[info]   CI (99.9%): [976.958, 1027.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6163.798 ±(99.9%) 222.302 B/op [Average]
[info]   (min, avg, max) = (6083.283, 6163.798, 6220.690), stdev = 57.731
[info]   CI (99.9%): [5941.496, 6386.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.027 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.166 ±(99.9%) 0.641 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.166, 0.382), stdev = 0.166
[info]   CI (99.9%): [≈ 0, 0.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce
[info] # Run progress: 73.95% complete, ETA 00:08:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 402134.423 ops/s
[info] # Warmup Iteration   2: 605823.927 ops/s
[info] # Warmup Iteration   3: 621423.465 ops/s
[info] # Warmup Iteration   4: 628692.747 ops/s
[info] # Warmup Iteration   5: 621952.173 ops/s
[info] Iteration   1: 627553.185 ops/s
[info]                  ·gc.alloc.rate:                   1512.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4194.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 631608.524 ops/s
[info]                  ·gc.alloc.rate:                   1522.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3349.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.363 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 627371.849 ops/s
[info]                  ·gc.alloc.rate:                   1511.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4230.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 620081.061 ops/s
[info]                  ·gc.alloc.rate:                   1494.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3433.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.211 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 619743.171 ops/s
[info]                  ·gc.alloc.rate:                   1493.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              3792.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3442.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce":
[info]   625271.558 ±(99.9%) 19941.587 ops/s [Average]
[info]   (min, avg, max) = (619743.171, 625271.558, 631608.524), stdev = 5178.767
[info]   CI (99.9%): [605329.971, 645213.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1506.905 ±(99.9%) 47.937 MB/sec [Average]
[info]   (min, avg, max) = (1493.634, 1506.905, 1522.100), stdev = 12.449
[info]   CI (99.9%): [1458.967, 1554.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   3792.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3792.001, 3792.001, 3792.001), stdev = 0.001
[info]   CI (99.9%): [3792.001, 3792.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1482.710 ±(99.9%) 693.335 MB/sec [Average]
[info]   (min, avg, max) = (1344.603, 1482.710, 1686.785), stdev = 180.057
[info]   CI (99.9%): [789.375, 2176.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3730.209 ±(99.9%) 1701.219 B/op [Average]
[info]   (min, avg, max) = (3349.802, 3730.209, 4230.568), stdev = 441.801
[info]   CI (99.9%): [2028.990, 5431.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.075, 0.146), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.188 ±(99.9%) 0.437 B/op [Average]
[info]   (min, avg, max) = (0.053, 0.188, 0.363), stdev = 0.113
[info]   CI (99.9%): [≈ 0, 0.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 1.000
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson
[info] # Run progress: 74.79% complete, ETA 00:07:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 511261.791 ops/s
[info] # Warmup Iteration   2: 1081676.745 ops/s
[info] # Warmup Iteration   3: 1090275.980 ops/s
[info] # Warmup Iteration   4: 1102476.665 ops/s
[info] # Warmup Iteration   5: 1094198.421 ops/s
[info] Iteration   1: 1103123.908 ops/s
[info]                  ·gc.alloc.rate:                   746.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          971.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1385.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1103700.372 ops/s
[info]                  ·gc.alloc.rate:                   746.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     928.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1105384.222 ops/s
[info]                  ·gc.alloc.rate:                   747.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     930.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1091509.051 ops/s
[info]                  ·gc.alloc.rate:                   738.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.373 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     946.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1100802.181 ops/s
[info]                  ·gc.alloc.rate:               744.409 MB/sec
[info]                  ·gc.alloc.rate.norm:          1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1414.864 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson":
[info]   1100903.947 ±(99.9%) 21186.898 ops/s [Average]
[info]   (min, avg, max) = (1091509.051, 1100903.947, 1105384.222), stdev = 5502.170
[info]   CI (99.9%): [1079717.049, 1122090.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   744.557 ±(99.9%) 14.376 MB/sec [Average]
[info]   (min, avg, max) = (738.171, 744.557, 747.429), stdev = 3.733
[info]   CI (99.9%): [730.181, 758.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   1064.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1064.000, 1064.000, 1064.000), stdev = 0.001
[info]   CI (99.9%): [1064.000, 1064.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   784.523 ±(99.9%) 690.537 MB/sec [Average]
[info]   (min, avg, max) = (650.998, 784.523, 989.885), stdev = 179.330
[info]   CI (99.9%): [93.986, 1475.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1120.936 ±(99.9%) 982.385 B/op [Average]
[info]   (min, avg, max) = (928.043, 1120.936, 1414.864), stdev = 255.122
[info]   CI (99.9%): [138.551, 2103.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.054 ±(99.9%) 0.170 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.119), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 8.000), stdev = 2.302
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter
[info] # Run progress: 75.63% complete, ETA 00:07:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4521162.346 ops/s
[info] # Warmup Iteration   2: 5166452.049 ops/s
[info] # Warmup Iteration   3: 5208612.334 ops/s
[info] # Warmup Iteration   4: 5280839.446 ops/s
[info] # Warmup Iteration   5: 5260831.470 ops/s
[info] Iteration   1: 5271602.026 ops/s
[info]                  ·gc.alloc.rate:                   643.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.349 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     197.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 5209336.172 ops/s
[info]                  ·gc.alloc.rate:                   635.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     200.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 5215671.266 ops/s
[info]                  ·gc.alloc.rate:                   636.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     200.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 5275291.502 ops/s
[info]                  ·gc.alloc.rate:                   643.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 5245160.090 ops/s
[info]                  ·gc.alloc.rate:                   640.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     199.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter":
[info]   5243412.211 ±(99.9%) 117818.793 ops/s [Average]
[info]   (min, avg, max) = (5209336.172, 5243412.211, 5275291.502), stdev = 30597.166
[info]   CI (99.9%): [5125593.418, 5361231.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   639.842 ±(99.9%) 14.485 MB/sec [Average]
[info]   (min, avg, max) = (635.666, 639.842, 643.773), stdev = 3.762
[info]   CI (99.9%): [625.357, 654.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (192.000, 192.000, 192.000), stdev = 0.001
[info]   CI (99.9%): [192.000, 192.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   663.931 ±(99.9%) 6.757 MB/sec [Average]
[info]   (min, avg, max) = (662.320, 663.931, 666.352), stdev = 1.755
[info]   CI (99.9%): [657.174, 670.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   199.234 ±(99.9%) 4.395 B/op [Average]
[info]   (min, avg, max) = (197.687, 199.234, 200.198), stdev = 1.141
[info]   CI (99.9%): [194.839, 203.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.015, 0.031), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay
[info] # Run progress: 76.47% complete, ETA 00:07:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 84576.194 ops/s
[info] # Warmup Iteration   2: 365634.721 ops/s
[info] # Warmup Iteration   3: 368737.140 ops/s
[info] # Warmup Iteration   4: 365792.557 ops/s
[info] # Warmup Iteration   5: 366605.176 ops/s
[info] Iteration   1: 371095.019 ops/s
[info]                  ·gc.alloc.rate:                   1292.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              5480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5658.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 364547.913 ops/s
[info]                  ·gc.alloc.rate:                   1269.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              5480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5789.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.270 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 365657.080 ops/s
[info]                  ·gc.alloc.rate:                   1273.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              5480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5797.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 365483.810 ops/s
[info]                  ·gc.alloc.rate:                   1272.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              5480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4360.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 365665.047 ops/s
[info]                  ·gc.alloc.rate:                   1273.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              5480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5823.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay":
[info]   366489.774 ±(99.9%) 10071.592 ops/s [Average]
[info]   (min, avg, max) = (364547.913, 366489.774, 371095.019), stdev = 2615.560
[info]   CI (99.9%): [356418.182, 376561.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1276.443 ±(99.9%) 35.017 MB/sec [Average]
[info]   (min, avg, max) = (1269.641, 1276.443, 1292.443), stdev = 9.094
[info]   CI (99.9%): [1241.426, 1311.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5480.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5480.001, 5480.001, 5480.001), stdev = 0.001
[info]   CI (99.9%): [5480.001, 5480.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1277.889 ±(99.9%) 571.158 MB/sec [Average]
[info]   (min, avg, max) = (1012.844, 1277.889, 1353.432), stdev = 148.328
[info]   CI (99.9%): [706.731, 1849.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5485.773 ±(99.9%) 2435.145 B/op [Average]
[info]   (min, avg, max) = (4360.258, 5485.773, 5823.192), stdev = 632.399
[info]   CI (99.9%): [3050.629, 7920.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.143 ±(99.9%) 0.311 B/op [Average]
[info]   (min, avg, max) = (0.088, 0.143, 0.270), stdev = 0.081
[info]   CI (99.9%): [≈ 0, 0.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 7.000), stdev = 1.304
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce
[info] # Run progress: 77.31% complete, ETA 00:07:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 160038.067 ops/s
[info] # Warmup Iteration   2: 362298.308 ops/s
[info] # Warmup Iteration   3: 371161.078 ops/s
[info] # Warmup Iteration   4: 372949.924 ops/s
[info] # Warmup Iteration   5: 375801.437 ops/s
[info] Iteration   1: 372061.155 ops/s
[info]                  ·gc.alloc.rate:                   1019.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              4312.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4194.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 373990.256 ops/s
[info]                  ·gc.alloc.rate:                   1024.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              4312.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4192.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.350 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 370726.740 ops/s
[info]                  ·gc.alloc.rate:                   1015.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              4312.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4246.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 375189.478 ops/s
[info]                  ·gc.alloc.rate:                   1028.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              4312.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4211.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 377379.416 ops/s
[info]                  ·gc.alloc.rate:               1034.239 MB/sec
[info]                  ·gc.alloc.rate.norm:          4312.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4200.605 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce":
[info]   373869.409 ±(99.9%) 10045.585 ops/s [Average]
[info]   (min, avg, max) = (370726.740, 373869.409, 377379.416), stdev = 2608.806
[info]   CI (99.9%): [363823.825, 383914.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1024.612 ±(99.9%) 27.611 MB/sec [Average]
[info]   (min, avg, max) = (1015.992, 1024.612, 1034.239), stdev = 7.171
[info]   CI (99.9%): [997.001, 1052.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4312.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4312.001, 4312.001, 4312.001), stdev = 0.001
[info]   CI (99.9%): [4312.001, 4312.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1000.128 ±(99.9%) 23.875 MB/sec [Average]
[info]   (min, avg, max) = (991.813, 1000.128, 1007.521), stdev = 6.200
[info]   CI (99.9%): [976.253, 1024.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4209.027 ±(99.9%) 85.109 B/op [Average]
[info]   (min, avg, max) = (4192.409, 4209.027, 4246.329), stdev = 22.102
[info]   CI (99.9%): [4123.918, 4294.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.141 ±(99.9%) 0.512 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.141, 0.350), stdev = 0.133
[info]   CI (99.9%): [≈ 0, 0.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 5.000), stdev = 1.140
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson
[info] # Run progress: 78.15% complete, ETA 00:06:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82670.309 ops/s
[info] # Warmup Iteration   2: 741916.269 ops/s
[info] # Warmup Iteration   3: 760913.505 ops/s
[info] # Warmup Iteration   4: 759174.183 ops/s
[info] # Warmup Iteration   5: 747166.084 ops/s
[info] Iteration   1: 770911.634 ops/s
[info]                  ·gc.alloc.rate:                   1175.970 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2003.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.170 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 753203.411 ops/s
[info]                  ·gc.alloc.rate:                   1148.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2753.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.217 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 767333.513 ops/s
[info]                  ·gc.alloc.rate:                   1170.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2040.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 756276.864 ops/s
[info]                  ·gc.alloc.rate:                   1153.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2778.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 763263.067 ops/s
[info]                  ·gc.alloc.rate:               1164.165 MB/sec
[info]                  ·gc.alloc.rate.norm:          2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2074.217 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson":
[info]   762197.698 ±(99.9%) 28518.027 ops/s [Average]
[info]   (min, avg, max) = (753203.411, 762197.698, 770911.634), stdev = 7406.041
[info]   CI (99.9%): [733679.671, 790715.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1162.654 ±(99.9%) 43.481 MB/sec [Average]
[info]   (min, avg, max) = (1148.949, 1162.654, 1175.970), stdev = 11.292
[info]   CI (99.9%): [1119.173, 1206.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   2400.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2400.001, 2400.001, 2400.001), stdev = 0.001
[info]   CI (99.9%): [2400.001, 2400.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1127.343 ±(99.9%) 702.026 MB/sec [Average]
[info]   (min, avg, max) = (981.898, 1127.343, 1335.406), stdev = 182.314
[info]   CI (99.9%): [425.317, 1829.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2330.005 ±(99.9%) 1534.686 B/op [Average]
[info]   (min, avg, max) = (2003.926, 2330.005, 2778.078), stdev = 398.553
[info]   CI (99.9%): [795.319, 3864.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.104), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.129 ±(99.9%) 0.334 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.129, 0.217), stdev = 0.087
[info]   CI (99.9%): [≈ 0, 0.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.581
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter
[info] # Run progress: 78.99% complete, ETA 00:06:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2092032.281 ops/s
[info] # Warmup Iteration   2: 2317575.137 ops/s
[info] # Warmup Iteration   3: 2331264.072 ops/s
[info] # Warmup Iteration   4: 2340528.565 ops/s
[info] # Warmup Iteration   5: 2358700.555 ops/s
[info] Iteration   1: 2346504.120 ops/s
[info]                  ·gc.alloc.rate:                   357.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     222.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.815 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.217 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2358764.861 ops/s
[info]                  ·gc.alloc.rate:                   359.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     220.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2315041.789 ops/s
[info]                  ·gc.alloc.rate:                   353.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     450.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2334257.902 ops/s
[info]                  ·gc.alloc.rate:               356.078 MB/sec
[info]                  ·gc.alloc.rate.norm:          240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 223.225 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 2330662.731 ops/s
[info]                  ·gc.alloc.rate:                   355.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.190 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     223.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter":
[info]   2337046.281 ±(99.9%) 63677.528 ops/s [Average]
[info]   (min, avg, max) = (2315041.789, 2337046.281, 2358764.861), stdev = 16536.852
[info]   CI (99.9%): [2273368.753, 2400723.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   356.491 ±(99.9%) 9.685 MB/sec [Average]
[info]   (min, avg, max) = (353.138, 356.491, 359.799), stdev = 2.515
[info]   CI (99.9%): [346.806, 366.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   397.414 ±(99.9%) 570.329 MB/sec [Average]
[info]   (min, avg, max) = (331.150, 397.414, 662.365), stdev = 148.113
[info]   CI (99.9%): [≈ 0, 967.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   267.983 ±(99.9%) 392.166 B/op [Average]
[info]   (min, avg, max) = (220.906, 267.983, 450.158), stdev = 101.844
[info]   CI (99.9%): [≈ 0, 660.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.384 ±(99.9%) 3.081 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.384, 1.815), stdev = 0.800
[info]   CI (99.9%): [≈ 0, 3.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.257 ±(99.9%) 2.066 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.257, 1.217), stdev = 0.537
[info]   CI (99.9%): [≈ 0, 2.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.800, 9.000), stdev = 3.347
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay
[info] # Run progress: 79.83% complete, ETA 00:06:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34287.790 ops/s
[info] # Warmup Iteration   2: 281764.162 ops/s
[info] # Warmup Iteration   3: 286223.641 ops/s
[info] # Warmup Iteration   4: 290236.510 ops/s
[info] # Warmup Iteration   5: 286145.368 ops/s
[info] Iteration   1: 286365.749 ops/s
[info]                  ·gc.alloc.rate:                   1055.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5468.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.343 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 292429.605 ops/s
[info]                  ·gc.alloc.rate:                   1077.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5379.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.224 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 286461.962 ops/s
[info]                  ·gc.alloc.rate:                   1056.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7358.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.229 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 290003.138 ops/s
[info]                  ·gc.alloc.rate:                   1068.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5473.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.226 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 287383.256 ops/s
[info]                  ·gc.alloc.rate:                   1059.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5535.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay":
[info]   288528.742 ±(99.9%) 10124.491 ops/s [Average]
[info]   (min, avg, max) = (286365.749, 288528.742, 292429.605), stdev = 2629.298
[info]   CI (99.9%): [278404.251, 298653.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   1063.570 ±(99.9%) 37.337 MB/sec [Average]
[info]   (min, avg, max) = (1055.554, 1063.570, 1077.973), stdev = 9.696
[info]   CI (99.9%): [1026.233, 1100.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.001, 5800.002, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.001, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1070.902 ±(99.9%) 579.109 MB/sec [Average]
[info]   (min, avg, max) = (995.141, 1070.902, 1339.681), stdev = 150.393
[info]   CI (99.9%): [491.793, 1650.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5842.961 ±(99.9%) 3268.398 B/op [Average]
[info]   (min, avg, max) = (5379.326, 5842.961, 7358.049), stdev = 848.793
[info]   CI (99.9%): [2574.563, 9111.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.227 ±(99.9%) 0.312 B/op [Average]
[info]   (min, avg, max) = (0.114, 0.227, 0.343), stdev = 0.081
[info]   CI (99.9%): [≈ 0, 0.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce
[info] # Run progress: 80.67% complete, ETA 00:06:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 403541.622 ops/s
[info] # Warmup Iteration   2: 608847.153 ops/s
[info] # Warmup Iteration   3: 616679.338 ops/s
[info] # Warmup Iteration   4: 616003.563 ops/s
[info] # Warmup Iteration   5: 608225.191 ops/s
[info] Iteration   1: 610307.949 ops/s
[info]                  ·gc.alloc.rate:                   1408.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.037 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3441.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 607929.316 ops/s
[info]                  ·gc.alloc.rate:                   1403.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3472.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 600734.857 ops/s
[info]                  ·gc.alloc.rate:                   1386.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1684.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4410.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 616964.160 ops/s
[info]                  ·gc.alloc.rate:                   1424.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3447.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 612909.262 ops/s
[info]                  ·gc.alloc.rate:                   1414.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              3632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3477.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce":
[info]   609769.109 ±(99.9%) 23337.112 ops/s [Average]
[info]   (min, avg, max) = (600734.857, 609769.109, 616964.160), stdev = 6060.574
[info]   CI (99.9%): [586431.996, 633106.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate":
[info]   1407.585 ±(99.9%) 54.023 MB/sec [Average]
[info]   (min, avg, max) = (1386.642, 1407.585, 1424.209), stdev = 14.030
[info]   CI (99.9%): [1353.562, 1461.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   3632.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3632.001, 3632.001, 3632.001), stdev = 0.001
[info]   CI (99.9%): [3632.001, 3632.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1413.490 ±(99.9%) 583.120 MB/sec [Average]
[info]   (min, avg, max) = (1335.037, 1413.490, 1684.013), stdev = 151.434
[info]   CI (99.9%): [830.369, 1996.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3650.086 ±(99.9%) 1638.780 B/op [Average]
[info]   (min, avg, max) = (3441.635, 3650.086, 4410.900), stdev = 425.586
[info]   CI (99.9%): [2011.306, 5288.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.119 ±(99.9%) 0.273 B/op [Average]
[info]   (min, avg, max) = (0.053, 0.119, 0.216), stdev = 0.071
[info]   CI (99.9%): [≈ 0, 0.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 15.000), stdev = 4.207
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson
[info] # Run progress: 81.51% complete, ETA 00:05:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 471304.727 ops/s
[info] # Warmup Iteration   2: 1231834.196 ops/s
[info] # Warmup Iteration   3: 1242191.603 ops/s
[info] # Warmup Iteration   4: 1223986.562 ops/s
[info] # Warmup Iteration   5: 1236502.561 ops/s
[info] Iteration   1: 1236599.618 ops/s
[info]                  ·gc.alloc.rate:                   710.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          647.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     824.507 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1241278.603 ops/s
[info]                  ·gc.alloc.rate:                   713.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     823.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1237955.816 ops/s
[info]                  ·gc.alloc.rate:                   711.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.349 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1243357.225 ops/s
[info]                  ·gc.alloc.rate:                   714.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     828.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1235040.297 ops/s
[info]                  ·gc.alloc.rate:                   709.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1257.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson":
[info]   1238846.312 ±(99.9%) 13141.750 ops/s [Average]
[info]   (min, avg, max) = (1235040.297, 1238846.312, 1243357.225), stdev = 3412.871
[info]   CI (99.9%): [1225704.561, 1251988.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate":
[info]   711.774 ±(99.9%) 7.581 MB/sec [Average]
[info]   (min, avg, max) = (709.605, 711.774, 714.395), stdev = 1.969
[info]   CI (99.9%): [704.193, 719.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm":
[info]   904.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (904.000, 904.000, 904.000), stdev = 0.001
[info]   CI (99.9%): [904.000, 904.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   718.509 ±(99.9%) 578.390 MB/sec [Average]
[info]   (min, avg, max) = (647.984, 718.509, 987.165), stdev = 150.206
[info]   CI (99.9%): [140.119, 1296.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   912.816 ±(99.9%) 742.224 B/op [Average]
[info]   (min, avg, max) = (823.962, 912.816, 1257.597), stdev = 192.753
[info]   CI (99.9%): [170.592, 1655.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.053 ±(99.9%) 0.102 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.053, 0.080), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 11.000), stdev = 3.493
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter
[info] # Run progress: 82.35% complete, ETA 00:05:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3218128.319 ops/s
[info] # Warmup Iteration   2: 4438236.454 ops/s
[info] # Warmup Iteration   3: 4478024.629 ops/s
[info] # Warmup Iteration   4: 4450845.348 ops/s
[info] # Warmup Iteration   5: 4475868.205 ops/s
[info] Iteration   1: 4499571.580 ops/s
[info]                  ·gc.alloc.rate:                   343.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.775 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.621 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4477177.409 ops/s
[info]                  ·gc.alloc.rate:                   341.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 4523241.273 ops/s
[info]                  ·gc.alloc.rate:                   344.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4519232.528 ops/s
[info]                  ·gc.alloc.rate:               344.677 MB/sec
[info]                  ·gc.alloc.rate.norm:          120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 115.300 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 4512949.843 ops/s
[info]                  ·gc.alloc.rate:               344.161 MB/sec
[info]                  ·gc.alloc.rate.norm:          120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 115.460 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter":
[info]   4506434.527 ±(99.9%) 71827.255 ops/s [Average]
[info]   (min, avg, max) = (4477177.409, 4506434.527, 4523241.273), stdev = 18653.310
[info]   CI (99.9%): [4434607.272, 4578261.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate":
[info]   343.695 ±(99.9%) 5.412 MB/sec [Average]
[info]   (min, avg, max) = (341.502, 343.695, 344.971), stdev = 1.405
[info]   CI (99.9%): [338.283, 349.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (120.000, 120.000, 120.000), stdev = 0.001
[info]   CI (99.9%): [120.000, 120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   331.174 ±(99.9%) 0.109 MB/sec [Average]
[info]   (min, avg, max) = (331.139, 331.174, 331.218), stdev = 0.028
[info]   CI (99.9%): [331.064, 331.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   115.630 ±(99.9%) 1.852 B/op [Average]
[info]   (min, avg, max) = (115.200, 115.630, 116.386), stdev = 0.481
[info]   CI (99.9%): [113.778, 117.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.372 ±(99.9%) 3.023 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.372, 1.775), stdev = 0.785
[info]   CI (99.9%): [≈ 0, 3.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.130 ±(99.9%) 1.057 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.130, 0.621), stdev = 0.274
[info]   CI (99.9%): [≈ 0, 1.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay
[info] # Run progress: 83.19% complete, ETA 00:05:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 88275.737 ops/s
[info] # Warmup Iteration   2: 375162.805 ops/s
[info] # Warmup Iteration   3: 370434.744 ops/s
[info] # Warmup Iteration   4: 378532.327 ops/s
[info] # Warmup Iteration   5: 381951.211 ops/s
[info] Iteration   1: 377469.509 ops/s
[info]                  ·gc.alloc.rate:                   1307.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4174.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 376177.669 ops/s
[info]                  ·gc.alloc.rate:                   1302.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5610.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.174 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 377366.303 ops/s
[info]                  ·gc.alloc.rate:                   1306.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5617.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.174 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 374593.091 ops/s
[info]                  ·gc.alloc.rate:               1297.056 MB/sec
[info]                  ·gc.alloc.rate.norm:          5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5673.304 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 374134.475 ops/s
[info]                  ·gc.alloc.rate:                   1295.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5694.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay":
[info]   375948.209 ±(99.9%) 5935.481 ops/s [Average]
[info]   (min, avg, max) = (374134.475, 375948.209, 377469.509), stdev = 1541.425
[info]   CI (99.9%): [370012.729, 381883.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate":
[info]   1301.780 ±(99.9%) 20.678 MB/sec [Average]
[info]   (min, avg, max) = (1295.474, 1301.780, 1307.023), stdev = 5.370
[info]   CI (99.9%): [1281.102, 1322.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   5448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5448.001, 5448.001, 5448.001), stdev = 0.001
[info]   CI (99.9%): [5448.001, 5448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1279.014 ±(99.9%) 597.645 MB/sec [Average]
[info]   (min, avg, max) = (1001.497, 1279.014, 1354.017), stdev = 155.207
[info]   CI (99.9%): [681.369, 1876.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5354.004 ±(99.9%) 2542.708 B/op [Average]
[info]   (min, avg, max) = (4174.495, 5354.004, 5694.198), stdev = 660.333
[info]   CI (99.9%): [2811.296, 7896.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.104 ±(99.9%) 0.280 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.104, 0.174), stdev = 0.073
[info]   CI (99.9%): [≈ 0, 0.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.095
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce
[info] # Run progress: 84.03% complete, ETA 00:05:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 152041.961 ops/s
[info] # Warmup Iteration   2: 358956.735 ops/s
[info] # Warmup Iteration   3: 357529.952 ops/s
[info] # Warmup Iteration   4: 369705.454 ops/s
[info] # Warmup Iteration   5: 365786.564 ops/s
[info] Iteration   1: 364106.993 ops/s
[info]                  ·gc.alloc.rate:               977.521 MB/sec
[info]                  ·gc.alloc.rate.norm:          4224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4284.591 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 364908.789 ops/s
[info]                  ·gc.alloc.rate:                   979.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              4224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4292.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.539 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 360341.964 ops/s
[info]                  ·gc.alloc.rate:                   967.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              4224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4364.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.273 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 364463.756 ops/s
[info]                  ·gc.alloc.rate:                   978.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              4224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.704 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4329.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 364965.087 ops/s
[info]                  ·gc.alloc.rate:                   979.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              4224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4342.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce":
[info]   363757.318 ±(99.9%) 7474.259 ops/s [Average]
[info]   (min, avg, max) = (360341.964, 363757.318, 364965.087), stdev = 1941.041
[info]   CI (99.9%): [356283.059, 371231.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   976.505 ±(99.9%) 20.094 MB/sec [Average]
[info]   (min, avg, max) = (967.322, 976.505, 979.723), stdev = 5.218
[info]   CI (99.9%): [956.411, 996.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4224.001, 4224.001, 4224.001), stdev = 0.001
[info]   CI (99.9%): [4224.001, 4224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   999.268 ±(99.9%) 23.358 MB/sec [Average]
[info]   (min, avg, max) = (991.543, 999.268, 1007.128), stdev = 6.066
[info]   CI (99.9%): [975.910, 1022.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4322.555 ±(99.9%) 129.342 B/op [Average]
[info]   (min, avg, max) = (4284.591, 4322.555, 4364.181), stdev = 33.590
[info]   CI (99.9%): [4193.213, 4451.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.216 ±(99.9%) 0.797 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.216, 0.539), stdev = 0.207
[info]   CI (99.9%): [≈ 0, 1.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson
[info] # Run progress: 84.87% complete, ETA 00:04:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 86633.679 ops/s
[info] # Warmup Iteration   2: 754431.579 ops/s
[info] # Warmup Iteration   3: 759675.136 ops/s
[info] # Warmup Iteration   4: 755342.553 ops/s
[info] # Warmup Iteration   5: 763903.963 ops/s
[info] Iteration   1: 763673.473 ops/s
[info]                  ·gc.alloc.rate:                   1254.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1312.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2704.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 786928.579 ops/s
[info]                  ·gc.alloc.rate:                   1292.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2645.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 793378.588 ops/s
[info]                  ·gc.alloc.rate:                   1303.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1981.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 793529.842 ops/s
[info]                  ·gc.alloc.rate:                   1303.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2654.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 794861.970 ops/s
[info]                  ·gc.alloc.rate:                   1305.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              2584.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2661.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson":
[info]   786474.490 ±(99.9%) 50496.572 ops/s [Average]
[info]   (min, avg, max) = (763673.473, 786474.490, 794861.970), stdev = 13113.799
[info]   CI (99.9%): [735977.918, 836971.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1291.633 ±(99.9%) 82.868 MB/sec [Average]
[info]   (min, avg, max) = (1254.214, 1291.633, 1305.355), stdev = 21.520
[info]   CI (99.9%): [1208.766, 1374.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2584.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2584.001, 2584.001, 2584.001), stdev = 0.001
[info]   CI (99.9%): [2584.000, 2584.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1263.650 ±(99.9%) 571.324 MB/sec [Average]
[info]   (min, avg, max) = (999.178, 1263.650, 1344.360), stdev = 148.371
[info]   CI (99.9%): [692.327, 1834.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2529.484 ±(99.9%) 1182.923 B/op [Average]
[info]   (min, avg, max) = (1981.445, 2529.484, 2704.614), stdev = 307.201
[info]   CI (99.9%): [1346.561, 3712.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.100 ±(99.9%) 0.190 B/op [Average]
[info]   (min, avg, max) = (0.041, 0.100, 0.172), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 11.000), stdev = 2.702
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 85.71% complete, ETA 00:04:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1861413.042 ops/s
[info] # Warmup Iteration   2: 2110257.972 ops/s
[info] # Warmup Iteration   3: 2146022.207 ops/s
[info] # Warmup Iteration   4: 2131314.173 ops/s
[info] # Warmup Iteration   5: 2127149.773 ops/s
[info] Iteration   1: 2143211.259 ops/s
[info]                  ·gc.alloc.rate:                   403.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     242.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2150969.018 ops/s
[info]                  ·gc.alloc.rate:               404.656 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 241.759 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2125145.274 ops/s
[info]                  ·gc.alloc.rate:                   399.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     489.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2140086.030 ops/s
[info]                  ·gc.alloc.rate:               402.622 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 243.230 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 2108499.896 ops/s
[info]                  ·gc.alloc.rate:               396.660 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 247.104 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter":
[info]   2133582.296 ±(99.9%) 64938.564 ops/s [Average]
[info]   (min, avg, max) = (2108499.896, 2133582.296, 2150969.018), stdev = 16864.339
[info]   CI (99.9%): [2068643.732, 2198520.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   401.382 ±(99.9%) 12.239 MB/sec [Average]
[info]   (min, avg, max) = (396.660, 401.382, 404.656), stdev = 3.179
[info]   CI (99.9%): [389.143, 413.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (296.000, 296.000, 296.000), stdev = 0.001
[info]   CI (99.9%): [296.000, 296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   396.927 ±(99.9%) 569.098 MB/sec [Average]
[info]   (min, avg, max) = (330.504, 396.927, 661.307), stdev = 147.793
[info]   CI (99.9%): [≈ 0, 966.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   292.924 ±(99.9%) 423.517 B/op [Average]
[info]   (min, avg, max) = (241.759, 292.924, 489.640), stdev = 109.986
[info]   CI (99.9%): [≈ 0, 716.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.084 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.046), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay
[info] # Run progress: 86.55% complete, ETA 00:04:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41208.336 ops/s
[info] # Warmup Iteration   2: 251642.264 ops/s
[info] # Warmup Iteration   3: 252225.876 ops/s
[info] # Warmup Iteration   4: 260201.488 ops/s
[info] # Warmup Iteration   5: 257940.844 ops/s
[info] Iteration   1: 256684.517 ops/s
[info]                  ·gc.alloc.rate:                   981.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6092.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.893 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 258848.741 ops/s
[info]                  ·gc.alloc.rate:                   989.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6065.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 258717.012 ops/s
[info]                  ·gc.alloc.rate:                   989.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6096.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 258160.287 ops/s
[info]                  ·gc.alloc.rate:                   987.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6130.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.381 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 258557.800 ops/s
[info]                  ·gc.alloc.rate:                   988.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6140.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.253 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay":
[info]   258193.671 ±(99.9%) 3397.663 ops/s [Average]
[info]   (min, avg, max) = (256684.517, 258193.671, 258848.741), stdev = 882.362
[info]   CI (99.9%): [254796.008, 261591.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   987.231 ±(99.9%) 12.949 MB/sec [Average]
[info]   (min, avg, max) = (981.490, 987.231, 989.721), stdev = 3.363
[info]   CI (99.9%): [974.282, 1000.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6016.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6016.002, 6016.002, 6016.002), stdev = 0.001
[info]   CI (99.9%): [6016.001, 6016.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1001.850 ±(99.9%) 23.484 MB/sec [Average]
[info]   (min, avg, max) = (993.909, 1001.850, 1009.174), stdev = 6.099
[info]   CI (99.9%): [978.366, 1025.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6105.087 ±(99.9%) 117.607 B/op [Average]
[info]   (min, avg, max) = (6065.359, 6105.087, 6140.975), stdev = 30.542
[info]   CI (99.9%): [5987.479, 6222.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.146), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.356 ±(99.9%) 1.226 B/op [Average]
[info]   (min, avg, max) = (0.127, 0.356, 0.893), stdev = 0.318
[info]   CI (99.9%): [≈ 0, 1.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 8.000), stdev = 2.049
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce
[info] # Run progress: 87.39% complete, ETA 00:03:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 800543.656 ops/s
[info] # Warmup Iteration   2: 945503.694 ops/s
[info] # Warmup Iteration   3: 947471.692 ops/s
[info] # Warmup Iteration   4: 948033.748 ops/s
[info] # Warmup Iteration   5: 957263.877 ops/s
[info] Iteration   1: 950895.125 ops/s
[info]                  ·gc.alloc.rate:                   618.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1089.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 959009.164 ops/s
[info]                  ·gc.alloc.rate:                   624.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1082.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 958099.178 ops/s
[info]                  ·gc.alloc.rate:                   623.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1085.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 948221.472 ops/s
[info]                  ·gc.alloc.rate:                   617.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1099.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 947612.839 ops/s
[info]                  ·gc.alloc.rate:               616.735 MB/sec
[info]                  ·gc.alloc.rate.norm:          1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.366 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1103.084 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce":
[info]   952767.556 ±(99.9%) 20925.676 ops/s [Average]
[info]   (min, avg, max) = (947612.839, 952767.556, 959009.164), stdev = 5434.332
[info]   CI (99.9%): [931841.880, 973693.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate":
[info]   620.096 ±(99.9%) 13.626 MB/sec [Average]
[info]   (min, avg, max) = (616.735, 620.096, 624.161), stdev = 3.539
[info]   CI (99.9%): [606.469, 633.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate.norm":
[info]   1024.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1024.000, 1024.000, 1024.000), stdev = 0.001
[info]   CI (99.9%): [1024.000, 1024.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   661.172 ±(99.9%) 8.950 MB/sec [Average]
[info]   (min, avg, max) = (658.375, 661.172, 664.366), stdev = 2.324
[info]   CI (99.9%): [652.222, 670.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1091.871 ±(99.9%) 34.173 B/op [Average]
[info]   (min, avg, max) = (1082.325, 1091.871, 1103.084), stdev = 8.875
[info]   CI (99.9%): [1057.698, 1126.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.062 ±(99.9%) 0.172 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson
[info] # Run progress: 88.24% complete, ETA 00:03:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1454540.595 ops/s
[info] # Warmup Iteration   2: 2037577.338 ops/s
[info] # Warmup Iteration   3: 2010186.400 ops/s
[info] # Warmup Iteration   4: 2033610.444 ops/s
[info] # Warmup Iteration   5: 2019381.547 ops/s
[info] Iteration   1: 2022930.189 ops/s
[info]                  ·gc.alloc.rate:                   833.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     764.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2056220.273 ops/s
[info]                  ·gc.alloc.rate:                   846.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     503.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2066628.458 ops/s
[info]                  ·gc.alloc.rate:                   851.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.714 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     755.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2082364.137 ops/s
[info]                  ·gc.alloc.rate:               857.617 MB/sec
[info]                  ·gc.alloc.rate.norm:          648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 501.719 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 2055728.535 ops/s
[info]                  ·gc.alloc.rate:                   846.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     764.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson":
[info]   2056774.318 ±(99.9%) 83895.639 ops/s [Average]
[info]   (min, avg, max) = (2022930.189, 2056774.318, 2082364.137), stdev = 21787.431
[info]   CI (99.9%): [1972878.679, 2140669.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate":
[info]   847.073 ±(99.9%) 34.415 MB/sec [Average]
[info]   (min, avg, max) = (833.215, 847.073, 857.617), stdev = 8.937
[info]   CI (99.9%): [812.658, 881.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate.norm":
[info]   648.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (648.000, 648.000, 648.000), stdev = 0.001
[info]   CI (99.9%): [648.000, 648.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   859.430 ±(99.9%) 697.393 MB/sec [Average]
[info]   (min, avg, max) = (658.264, 859.430, 999.503), stdev = 181.111
[info]   CI (99.9%): [162.037, 1556.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   658.100 ±(99.9%) 546.399 B/op [Average]
[info]   (min, avg, max) = (501.719, 658.100, 764.996), stdev = 141.898
[info]   CI (99.9%): [111.701, 1204.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.080 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.049), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 8.000), stdev = 2.510
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter
[info] # Run progress: 89.08% complete, ETA 00:03:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2160221.114 ops/s
[info] # Warmup Iteration   2: 2212790.075 ops/s
[info] # Warmup Iteration   3: 2241300.047 ops/s
[info] # Warmup Iteration   4: 2250242.784 ops/s
[info] # Warmup Iteration   5: 2262300.389 ops/s
[info] Iteration   1: 2257437.045 ops/s
[info]                  ·gc.alloc.rate:                   447.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     230.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2255031.766 ops/s
[info]                  ·gc.alloc.rate:               447.174 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 231.061 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 2256093.617 ops/s
[info]                  ·gc.alloc.rate:                   447.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     461.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2268978.408 ops/s
[info]                  ·gc.alloc.rate:               449.941 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 229.644 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2264573.057 ops/s
[info]                  ·gc.alloc.rate:               449.067 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 230.098 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter":
[info]   2260422.779 ±(99.9%) 23354.630 ops/s [Average]
[info]   (min, avg, max) = (2255031.766, 2260422.779, 2268978.408), stdev = 6065.123
[info]   CI (99.9%): [2237068.149, 2283777.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate":
[info]   448.240 ±(99.9%) 4.648 MB/sec [Average]
[info]   (min, avg, max) = (447.174, 448.240, 449.941), stdev = 1.207
[info]   CI (99.9%): [443.592, 452.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (312.000, 312.000, 312.000), stdev = 0.001
[info]   CI (99.9%): [312.000, 312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   397.408 ±(99.9%) 570.257 MB/sec [Average]
[info]   (min, avg, max) = (331.168, 397.408, 662.326), stdev = 148.094
[info]   CI (99.9%): [≈ 0, 967.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   276.710 ±(99.9%) 398.691 B/op [Average]
[info]   (min, avg, max) = (229.644, 276.710, 461.923), stdev = 103.539
[info]   CI (99.9%): [≈ 0, 675.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.100 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.058), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc
[info] # Run progress: 89.92% complete, ETA 00:03:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2326305.133 ops/s
[info] # Warmup Iteration   2: 2386294.570 ops/s
[info] # Warmup Iteration   3: 2417320.323 ops/s
[info] # Warmup Iteration   4: 2413681.943 ops/s
[info] # Warmup Iteration   5: 2423550.142 ops/s
[info] Iteration   1: 2426035.704 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2430877.020 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2419307.992 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2430675.452 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2427151.009 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc":
[info]   2426809.435 ±(99.9%) 18110.140 ops/s [Average]
[info]   (min, avg, max) = (2419307.992, 2426809.435, 2430877.020), stdev = 4703.146
[info]   CI (99.9%): [2408699.296, 2444919.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay
[info] # Run progress: 90.76% complete, ETA 00:02:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1487759.936 ops/s
[info] # Warmup Iteration   2: 1987394.613 ops/s
[info] # Warmup Iteration   3: 2049315.288 ops/s
[info] # Warmup Iteration   4: 2032449.696 ops/s
[info] # Warmup Iteration   5: 2059853.255 ops/s
[info] Iteration   1: 2014464.298 ops/s
[info]                  ·gc.alloc.rate:                   850.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     768.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2033609.088 ops/s
[info]                  ·gc.alloc.rate:                   858.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     765.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2062007.850 ops/s
[info]                  ·gc.alloc.rate:                   870.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     505.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2028654.074 ops/s
[info]                  ·gc.alloc.rate:                   856.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     773.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2050773.308 ops/s
[info]                  ·gc.alloc.rate:                   865.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     511.711 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay":
[info]   2037901.724 ±(99.9%) 72040.024 ops/s [Average]
[info]   (min, avg, max) = (2014464.298, 2037901.724, 2062007.850), stdev = 18708.566
[info]   CI (99.9%): [1965861.699, 2109941.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate":
[info]   860.022 ±(99.9%) 30.354 MB/sec [Average]
[info]   (min, avg, max) = (850.165, 860.022, 870.205), stdev = 7.883
[info]   CI (99.9%): [829.668, 890.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate.norm":
[info]   664.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (664.000, 664.000, 664.000), stdev = 0.001
[info]   CI (99.9%): [664.000, 664.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space":
[info]   860.173 ±(99.9%) 687.524 MB/sec [Average]
[info]   (min, avg, max) = (662.367, 860.173, 997.189), stdev = 178.548
[info]   CI (99.9%): [172.650, 1547.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space.norm":
[info]   665.067 ±(99.9%) 550.302 B/op [Average]
[info]   (min, avg, max) = (505.411, 665.067, 773.391), stdev = 142.912
[info]   CI (99.9%): [114.764, 1215.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.125), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.129 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.039, 0.097), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 5.000), stdev = 1.789
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce
[info] # Run progress: 91.60% complete, ETA 00:02:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 420255.411 ops/s
[info] # Warmup Iteration   2: 666073.458 ops/s
[info] # Warmup Iteration   3: 684274.807 ops/s
[info] # Warmup Iteration   4: 673385.474 ops/s
[info] # Warmup Iteration   5: 674732.203 ops/s
[info] Iteration   1: 682417.842 ops/s
[info]                  ·gc.alloc.rate:                   1190.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2299.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 679407.179 ops/s
[info]                  ·gc.alloc.rate:                   1184.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3092.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 684044.710 ops/s
[info]                  ·gc.alloc.rate:                   1192.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2313.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 683733.755 ops/s
[info]                  ·gc.alloc.rate:               1192.361 MB/sec
[info]                  ·gc.alloc.rate.norm:          2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3097.446 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 680618.401 ops/s
[info]                  ·gc.alloc.rate:                   1186.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              2744.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2339.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce":
[info]   682044.377 ±(99.9%) 7697.202 ops/s [Average]
[info]   (min, avg, max) = (679407.179, 682044.377, 684044.710), stdev = 1998.939
[info]   CI (99.9%): [674347.175, 689741.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1189.434 ±(99.9%) 13.523 MB/sec [Average]
[info]   (min, avg, max) = (1184.793, 1189.434, 1192.963), stdev = 3.512
[info]   CI (99.9%): [1175.911, 1202.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   2744.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2744.001, 2744.001, 2744.001), stdev = 0.001
[info]   CI (99.9%): [2744.001, 2744.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1139.284 ±(99.9%) 708.164 MB/sec [Average]
[info]   (min, avg, max) = (997.196, 1139.284, 1345.945), stdev = 183.908
[info]   CI (99.9%): [431.120, 1847.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2628.541 ±(99.9%) 1640.661 B/op [Average]
[info]   (min, avg, max) = (2299.168, 2628.541, 3097.446), stdev = 426.075
[info]   CI (99.9%): [987.879, 4269.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.077 ±(99.9%) 0.212 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.077, 0.145), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson
[info] # Run progress: 92.44% complete, ETA 00:02:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 833622.928 ops/s
[info] # Warmup Iteration   2: 1642547.222 ops/s
[info] # Warmup Iteration   3: 1641961.819 ops/s
[info] # Warmup Iteration   4: 1674178.729 ops/s
[info] # Warmup Iteration   5: 1657888.154 ops/s
[info] Iteration   1: 1670624.464 ops/s
[info]                  ·gc.alloc.rate:                   739.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     613.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1668360.556 ops/s
[info]                  ·gc.alloc.rate:                   737.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          979.442 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     923.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1658057.529 ops/s
[info]                  ·gc.alloc.rate:                   733.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     622.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1661848.816 ops/s
[info]                  ·gc.alloc.rate:                   735.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     623.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1653735.507 ops/s
[info]                  ·gc.alloc.rate:                   731.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     629.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson":
[info]   1662525.374 ±(99.9%) 27045.513 ops/s [Average]
[info]   (min, avg, max) = (1653735.507, 1662525.374, 1670624.464), stdev = 7023.634
[info]   CI (99.9%): [1635479.862, 1689570.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   735.442 ±(99.9%) 11.880 MB/sec [Average]
[info]   (min, avg, max) = (731.582, 735.442, 739.018), stdev = 3.085
[info]   CI (99.9%): [723.562, 747.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   696.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (696.000, 696.000, 696.000), stdev = 0.001
[info]   CI (99.9%): [696.000, 696.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   721.511 ±(99.9%) 555.423 MB/sec [Average]
[info]   (min, avg, max) = (651.034, 721.511, 979.442), stdev = 144.242
[info]   CI (99.9%): [166.087, 1276.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   682.624 ±(99.9%) 519.459 B/op [Average]
[info]   (min, avg, max) = (613.138, 682.624, 923.714), stdev = 134.902
[info]   CI (99.9%): [163.165, 1202.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.076 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.039, 0.059), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 8.000), stdev = 1.517
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter
[info] # Run progress: 93.28% complete, ETA 00:02:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4197025.998 ops/s
[info] # Warmup Iteration   2: 4679970.735 ops/s
[info] # Warmup Iteration   3: 4761982.842 ops/s
[info] # Warmup Iteration   4: 4713179.605 ops/s
[info] # Warmup Iteration   5: 4775394.691 ops/s
[info] Iteration   1: 4778566.787 ops/s
[info]                  ·gc.alloc.rate:                   388.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4765658.537 ops/s
[info]                  ·gc.alloc.rate:               387.687 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 109.338 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 4783611.834 ops/s
[info]                  ·gc.alloc.rate:                   389.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4784362.542 ops/s
[info]                  ·gc.alloc.rate:                   389.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4699296.985 ops/s
[info]                  ·gc.alloc.rate:                   382.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter":
[info]   4762299.337 ±(99.9%) 138652.834 ops/s [Average]
[info]   (min, avg, max) = (4699296.985, 4762299.337, 4784362.542), stdev = 36007.701
[info]   CI (99.9%): [4623646.503, 4900952.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   387.422 ±(99.9%) 11.268 MB/sec [Average]
[info]   (min, avg, max) = (382.304, 387.422, 389.229), stdev = 2.926
[info]   CI (99.9%): [376.153, 398.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   397.405 ±(99.9%) 570.332 MB/sec [Average]
[info]   (min, avg, max) = (331.148, 397.405, 662.359), stdev = 148.113
[info]   CI (99.9%): [≈ 0, 967.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   131.597 ±(99.9%) 194.097 B/op [Average]
[info]   (min, avg, max) = (108.910, 131.597, 221.766), stdev = 50.406
[info]   CI (99.9%): [≈ 0, 325.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.031 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.021), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc
[info] # Run progress: 94.12% complete, ETA 00:01:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4497683.373 ops/s
[info] # Warmup Iteration   2: 4875825.039 ops/s
[info] # Warmup Iteration   3: 5091095.799 ops/s
[info] # Warmup Iteration   4: 5071217.453 ops/s
[info] # Warmup Iteration   5: 5029209.006 ops/s
[info] Iteration   1: 5076260.158 ops/s
[info]                  ·gc.alloc.rate:      154.861 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 4953468.389 ops/s
[info]                  ·gc.alloc.rate:               151.110 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 81.271 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 5064980.464 ops/s
[info]                  ·gc.alloc.rate:      154.509 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 5060433.839 ops/s
[info]                  ·gc.alloc.rate:                   154.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.038 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5068234.451 ops/s
[info]                  ·gc.alloc.rate:               154.619 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79.437 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc":
[info]   5044675.460 ±(99.9%) 197586.898 ops/s [Average]
[info]   (min, avg, max) = (4953468.389, 5044675.460, 5076260.158), stdev = 51312.690
[info]   CI (99.9%): [4847088.562, 5242262.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate":
[info]   153.897 ±(99.9%) 6.037 MB/sec [Average]
[info]   (min, avg, max) = (151.110, 153.897, 154.861), stdev = 1.568
[info]   CI (99.9%): [147.860, 159.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space":
[info]   153.524 ±(99.9%) 539.658 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.524, 255.885), stdev = 140.147
[info]   CI (99.9%): [≈ 0, 693.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   48.053 ±(99.9%) 168.936 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.053, 81.271), stdev = 43.872
[info]   CI (99.9%): [≈ 0, 216.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.066 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.038), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.020 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.012), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 4.000), stdev = 1.789
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay
[info] # Run progress: 94.96% complete, ETA 00:01:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36915.133 ops/s
[info] # Warmup Iteration   2: 212705.563 ops/s
[info] # Warmup Iteration   3: 218997.018 ops/s
[info] # Warmup Iteration   4: 219026.344 ops/s
[info] # Warmup Iteration   5: 218335.597 ops/s
[info] Iteration   1: 219973.557 ops/s
[info]                  ·gc.alloc.rate:                   1120.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7131.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.596 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 215768.073 ops/s
[info]                  ·gc.alloc.rate:                   1099.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9741.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.759 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 219795.108 ops/s
[info]                  ·gc.alloc.rate:               1119.805 MB/sec
[info]                  ·gc.alloc.rate.norm:          8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7204.929 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 220814.206 ops/s
[info]                  ·gc.alloc.rate:                   1124.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7197.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.297 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 220768.730 ops/s
[info]                  ·gc.alloc.rate:                   1124.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9621.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.297 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay":
[info]   219423.935 ±(99.9%) 8064.895 ops/s [Average]
[info]   (min, avg, max) = (215768.073, 219423.935, 220814.206), stdev = 2094.428
[info]   CI (99.9%): [211359.040, 227488.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1117.860 ±(99.9%) 41.247 MB/sec [Average]
[info]   (min, avg, max) = (1099.150, 1117.860, 1124.926), stdev = 10.712
[info]   CI (99.9%): [1076.613, 1159.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8016.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8016.002, 8016.002, 8016.002), stdev = 0.001
[info]   CI (99.9%): [8016.002, 8016.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1139.880 ±(99.9%) 714.069 MB/sec [Average]
[info]   (min, avg, max) = (997.086, 1139.880, 1349.967), stdev = 185.442
[info]   CI (99.9%): [425.811, 1853.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8179.475 ±(99.9%) 5283.772 B/op [Average]
[info]   (min, avg, max) = (7131.857, 8179.475, 9741.834), stdev = 1372.179
[info]   CI (99.9%): [2895.703, 13463.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.390 ±(99.9%) 1.136 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.390, 0.759), stdev = 0.295
[info]   CI (99.9%): [≈ 0, 1.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 11.000), stdev = 2.950
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce
[info] # Run progress: 95.80% complete, ETA 00:01:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3609.698 ops/s
[info] # Warmup Iteration   2: 7162.913 ops/s
[info] # Warmup Iteration   3: 7888.223 ops/s
[info] # Warmup Iteration   4: 7918.099 ops/s
[info] # Warmup Iteration   5: 7916.777 ops/s
[info] Iteration   1: 7861.627 ops/s
[info]                  ·gc.alloc.rate:                   722.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              144568.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131605.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.895 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 7802.733 ops/s
[info]                  ·gc.alloc.rate:               716.972 MB/sec
[info]                  ·gc.alloc.rate.norm:          144568.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:      658.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 132868.887 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 7873.966 ops/s
[info]                  ·gc.alloc.rate:                   723.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              144568.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     132020.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.322 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 7935.477 ops/s
[info]                  ·gc.alloc.rate:                   729.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              144595.486 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131385.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.933 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7890.638 ops/s
[info]                  ·gc.alloc.rate:                   725.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              144616.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     198899.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.596 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce":
[info]   7872.888 ±(99.9%) 185.494 ops/s [Average]
[info]   (min, avg, max) = (7802.733, 7872.888, 7935.477), stdev = 48.172
[info]   CI (99.9%): [7687.395, 8058.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate":
[info]   723.491 ±(99.9%) 17.338 MB/sec [Average]
[info]   (min, avg, max) = (716.972, 723.491, 729.346), stdev = 4.503
[info]   CI (99.9%): [706.153, 740.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm":
[info]   144583.142 ±(99.9%) 84.327 B/op [Average]
[info]   (min, avg, max) = (144568.055, 144583.142, 144616.055), stdev = 21.900
[info]   CI (99.9%): [144498.815, 144667.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   727.493 ±(99.9%) 581.179 MB/sec [Average]
[info]   (min, avg, max) = (657.593, 727.493, 997.463), stdev = 150.930
[info]   CI (99.9%): [146.314, 1308.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   145356.131 ±(99.9%) 115277.731 B/op [Average]
[info]   (min, avg, max) = (131385.767, 145356.131, 198899.933), stdev = 29937.261
[info]   CI (99.9%): [30078.399, 260633.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.035 ±(99.9%) 0.109 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.070), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.949 ±(99.9%) 21.661 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.949, 13.933), stdev = 5.625
[info]   CI (99.9%): [≈ 0, 28.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson
[info] # Run progress: 96.64% complete, ETA 00:01:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14893.213 ops/s
[info] # Warmup Iteration   2: 35297.916 ops/s
[info] # Warmup Iteration   3: 35837.848 ops/s
[info] # Warmup Iteration   4: 36024.611 ops/s
[info] # Warmup Iteration   5: 36423.750 ops/s
[info] Iteration   1: 36543.183 ops/s
[info]                  ·gc.alloc.rate:                   466.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27786.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.483 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 36420.874 ops/s
[info]                  ·gc.alloc.rate:               465.279 MB/sec
[info]                  ·gc.alloc.rate.norm:          20100.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:      322.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13931.887 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 36481.388 ops/s
[info]                  ·gc.alloc.rate:                   466.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27875.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.592 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 36453.122 ops/s
[info]                  ·gc.alloc.rate:               465.671 MB/sec
[info]                  ·gc.alloc.rate.norm:          20099.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13977.179 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 35819.427 ops/s
[info]                  ·gc.alloc.rate:               457.566 MB/sec
[info]                  ·gc.alloc.rate.norm:          20100.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14224.528 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson":
[info]   36343.599 ±(99.9%) 1141.544 ops/s [Average]
[info]   (min, avg, max) = (35819.427, 36343.599, 36543.183), stdev = 296.455
[info]   CI (99.9%): [35202.055, 37485.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate":
[info]   464.286 ±(99.9%) 14.634 MB/sec [Average]
[info]   (min, avg, max) = (457.566, 464.286, 466.839), stdev = 3.800
[info]   CI (99.9%): [449.652, 478.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   20100.023 ±(99.9%) 0.093 B/op [Average]
[info]   (min, avg, max) = (20099.997, 20100.023, 20100.062), stdev = 0.024
[info]   CI (99.9%): [20099.930, 20100.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   452.373 ±(99.9%) 680.164 MB/sec [Average]
[info]   (min, avg, max) = (322.497, 452.373, 646.368), stdev = 176.636
[info]   CI (99.9%): [≈ 0, 1132.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   19559.131 ±(99.9%) 29080.309 B/op [Average]
[info]   (min, avg, max) = (13931.887, 19559.131, 27875.431), stdev = 7552.064
[info]   CI (99.9%): [≈ 0, 48639.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.615 ±(99.9%) 8.601 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.615, 4.483), stdev = 2.234
[info]   CI (99.9%): [≈ 0, 10.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter
[info] # Run progress: 97.48% complete, ETA 00:00:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33242.833 ops/s
[info] # Warmup Iteration   2: 50302.106 ops/s
[info] # Warmup Iteration   3: 52125.616 ops/s
[info] # Warmup Iteration   4: 51665.059 ops/s
[info] # Warmup Iteration   5: 51446.648 ops/s
[info] Iteration   1: 52169.700 ops/s
[info]                  ·gc.alloc.rate:                   346.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              10448.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9977.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.836 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.364 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 52346.581 ops/s
[info]                  ·gc.alloc.rate:                   347.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              10448.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9943.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.626 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 52717.595 ops/s
[info]                  ·gc.alloc.rate:                   350.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              10448.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9864.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.621 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 52852.747 ops/s
[info]                  ·gc.alloc.rate:               350.979 MB/sec
[info]                  ·gc.alloc.rate.norm:          10448.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      330.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9838.706 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 52745.888 ops/s
[info]                  ·gc.alloc.rate:                   350.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              10448.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          330.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9868.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.863 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter":
[info]   52566.502 ±(99.9%) 1127.195 ops/s [Average]
[info]   (min, avg, max) = (52169.700, 52566.502, 52852.747), stdev = 292.729
[info]   CI (99.9%): [51439.307, 53693.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate":
[info]   349.071 ±(99.9%) 7.478 MB/sec [Average]
[info]   (min, avg, max) = (346.441, 349.071, 350.979), stdev = 1.942
[info]   CI (99.9%): [341.593, 356.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   10448.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10448.008, 10448.008, 10448.009), stdev = 0.001
[info]   CI (99.9%): [10448.007, 10448.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   330.708 ±(99.9%) 0.677 MB/sec [Average]
[info]   (min, avg, max) = (330.510, 330.708, 330.847), stdev = 0.176
[info]   CI (99.9%): [330.031, 331.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   9898.661 ±(99.9%) 227.725 B/op [Average]
[info]   (min, avg, max) = (9838.706, 9898.661, 9977.730), stdev = 59.139
[info]   CI (99.9%): [9670.936, 10126.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.388 ±(99.9%) 3.118 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.388, 1.836), stdev = 0.810
[info]   CI (99.9%): [≈ 0, 3.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   11.695 ±(99.9%) 94.037 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.695, 55.364), stdev = 24.421
[info]   CI (99.9%): [≈ 0, 105.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc
[info] # Run progress: 98.32% complete, ETA 00:00:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41224.938 ops/s
[info] # Warmup Iteration   2: 58767.640 ops/s
[info] # Warmup Iteration   3: 59556.651 ops/s
[info] # Warmup Iteration   4: 60057.402 ops/s
[info] # Warmup Iteration   5: 60102.831 ops/s
[info] Iteration   1: 60056.977 ops/s
[info]                  ·gc.alloc.rate:      13.436 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 59974.042 ops/s
[info]                  ·gc.alloc.rate:      13.418 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 60194.074 ops/s
[info]                  ·gc.alloc.rate:      13.467 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 59939.917 ops/s
[info]                  ·gc.alloc.rate:      13.410 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 59981.027 ops/s
[info]                  ·gc.alloc.rate:      13.418 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc":
[info]   60029.208 ±(99.9%) 391.222 ops/s [Average]
[info]   (min, avg, max) = (59939.917, 60029.208, 60194.074), stdev = 101.599
[info]   CI (99.9%): [59637.986, 60420.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   13.430 ±(99.9%) 0.089 MB/sec [Average]
[info]   (min, avg, max) = (13.410, 13.430, 13.467), stdev = 0.023
[info]   CI (99.9%): [13.341, 13.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   352.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (352.007, 352.007, 352.007), stdev = 0.001
[info]   CI (99.9%): [352.007, 352.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_151, VM 25.151-b12
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay
[info] # Run progress: 99.16% complete, ETA 00:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1257.136 ops/s
[info] # Warmup Iteration   2: 4391.594 ops/s
[info] # Warmup Iteration   3: 4856.901 ops/s
[info] # Warmup Iteration   4: 4872.822 ops/s
[info] # Warmup Iteration   5: 4857.649 ops/s
[info] Iteration   1: 4793.813 ops/s
[info]                  ·gc.alloc.rate:                   1222.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              401245.814 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     437143.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.423 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 4869.751 ops/s
[info]                  ·gc.alloc.rate:                   1242.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              401245.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     432690.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.454 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4839.516 ops/s
[info]                  ·gc.alloc.rate:                   1234.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              401246.904 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     327612.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.769 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 4875.999 ops/s
[info]                  ·gc.alloc.rate:               1243.522 MB/sec
[info]                  ·gc.alloc.rate.norm:          401244.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 435168.715 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 4807.369 ops/s
[info]                  ·gc.alloc.rate:                   1226.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              401246.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     442722.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.446 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay":
[info]   4837.290 ±(99.9%) 140.727 ops/s [Average]
[info]   (min, avg, max) = (4793.813, 4837.290, 4875.999), stdev = 36.546
[info]   CI (99.9%): [4696.563, 4978.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate":
[info]   1233.708 ±(99.9%) 35.900 MB/sec [Average]
[info]   (min, avg, max) = (1222.627, 1233.708, 1243.522), stdev = 9.323
[info]   CI (99.9%): [1197.808, 1269.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   401245.887 ±(99.9%) 2.729 B/op [Average]
[info]   (min, avg, max) = (401244.967, 401245.887, 401246.904), stdev = 0.709
[info]   CI (99.9%): [401243.158, 401248.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1276.123 ±(99.9%) 578.398 MB/sec [Average]
[info]   (min, avg, max) = (1007.811, 1276.123, 1352.765), stdev = 150.208
[info]   CI (99.9%): [697.725, 1854.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   415067.595 ±(99.9%) 188791.559 B/op [Average]
[info]   (min, avg, max) = (327612.312, 415067.595, 442722.396), stdev = 49028.568
[info]   CI (99.9%): [226276.036, 603859.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.052 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.052, 0.135), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   17.018 ±(99.9%) 65.860 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17.018, 44.423), stdev = 17.104
[info]   CI (99.9%): [≈ 0, 82.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.095
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:31:31
[info] Benchmark                                                                                         Mode  Cnt         Score        Error   Units
[info] JsonCodecMakerBenchmark.missingReqFieldCirce                                                     thrpt    5   1458999.613 ±  54107.740   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate                                      thrpt    5      2344.180 ±     87.208  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm                                 thrpt    5      2528.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space                             thrpt    5      2374.109 ±     36.126  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2560.415 ±     75.194    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.083 ±      0.150  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.090 ±      0.163    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count                                           thrpt    5        35.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time                                            thrpt    5        45.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJackson                                                   thrpt    5    208223.387 ±   4876.493   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate                                    thrpt    5       487.032 ±     11.375  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm                               thrpt    5      3680.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space                           thrpt    5       454.813 ±    685.223  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      3440.418 ±   5230.803    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.033 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.252 ±      0.690    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count                                         thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time                                          thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter                                                  thrpt    5    449464.013 ±  32947.103   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate                                   thrpt    5       413.636 ±     30.389  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm                              thrpt    5      1448.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       397.547 ±    570.126  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1390.982 ±   1976.736    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.029 ±      0.156  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.103 ±      0.551    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count                                        thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time                                         thrpt    5         5.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless                                         thrpt    5   1647935.682 ± 344060.613   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate                          thrpt    5      1022.386 ±    212.791  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm                     thrpt    5       976.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space                 thrpt    5      1005.509 ±     18.556  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm            thrpt    5       962.070 ±    195.170    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space             thrpt    5         0.046 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.044 ±      0.069    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count                               thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time                                thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump                                   thrpt    5   2435826.682 ± 569537.553   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate                    thrpt    5       322.012 ±     75.303  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm               thrpt    5       208.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space           thrpt    5       331.306 ±      0.732  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm      thrpt    5       214.646 ±     50.874    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space       thrpt    5         0.367 ±      3.072  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.234 ±      1.956    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count                         thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time                          thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldPlay                                                      thrpt    5    128379.989 ±   4507.629   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate                                       thrpt    5      1071.191 ±     37.718  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm                                  thrpt    5     13128.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1070.102 ±    579.813  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5     13110.327 ±   6901.921    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±      0.183  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.559 ±      2.230    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time                                             thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.readAdtCirce                                                             thrpt    5    606853.459 ±  20610.674   ops/s
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate                                              thrpt    5      1598.335 ±     54.290  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm                                         thrpt    5      4144.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space                                     thrpt    5      1552.357 ±    717.864  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm                                thrpt    5      4024.721 ±   1854.788    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.071 ±      0.108  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.183 ±      0.278    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.count                                                   thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.time                                                    thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readAdtJackson                                                           thrpt    5   1271490.942 ±  18222.027   ops/s
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate                                            thrpt    5       905.121 ±     12.947  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm                                       thrpt    5      1120.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space                                   thrpt    5       922.789 ±    559.850  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm                              thrpt    5      1141.830 ±    692.191    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space                               thrpt    5         0.062 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.077 ±      0.099    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.count                                                 thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.time                                                  thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.readAdtJsoniter                                                          thrpt    5   2572239.715 ±  49597.514   ops/s
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate                                           thrpt    5       170.021 ±      3.290  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm                                      thrpt    5       104.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space                                  thrpt    5       153.526 ±    539.667  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm                             thrpt    5        94.126 ±    330.873    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space                              thrpt    5         0.008 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.005 ±      0.044    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count                                                thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time                                                 thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.readAdtPlay                                                              thrpt    5    130562.539 ±   4833.560   ops/s
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate                                               thrpt    5      1086.067 ±     40.334  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm                                          thrpt    5     13088.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space                                      thrpt    5      1071.590 ±    587.909  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm                                 thrpt    5     12926.624 ±   7577.473    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space                                  thrpt    5         0.075 ±      0.281  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm                             thrpt    5         0.906 ±      3.402    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.count                                                    thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.time                                                     thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsCirce                                                         thrpt    5   1212739.067 ±  21508.150   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate                                          thrpt    5      1905.450 ±     33.870  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                                     thrpt    5      2472.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1896.614 ±    723.726  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2460.630 ±    942.249    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.079 ±      0.200  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.103 ±      0.262    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count                                               thrpt    5        28.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time                                                thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsJackson                                                       thrpt    5   1923021.872 ±  41421.995   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate                                        thrpt    5      1349.284 ±     29.381  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                                   thrpt    5      1104.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1404.922 ±    581.852  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1149.406 ±    468.794    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.083 ±      0.160  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.068 ±      0.130    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count                                             thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time                                              thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter                                                      thrpt    5   6256753.247 ±  64731.270   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                                       thrpt    5       795.330 ±      8.219  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       200.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       800.427 ±    710.466  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       201.271 ±    178.400    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.033 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.008 ±      0.023    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count                                            thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time                                             thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsPlay                                                          thrpt    5    445478.466 ±  14384.083   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate                                           thrpt    5      1125.720 ±     36.305  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                                      thrpt    5      3976.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1139.299 ±    699.081  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      4022.867 ±   2429.711    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.071 ±      0.238  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.251 ±      0.844    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count                                                thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time                                                 thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.readArraysCirce                                                          thrpt    5    620138.427 ±  24426.573   ops/s
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate                                           thrpt    5      2021.206 ±     79.479  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm                                      thrpt    5      5128.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                                  thrpt    5      2033.791 ±     29.949  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5160.296 ±    186.148    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                              thrpt    5         0.083 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.212 ±      0.208    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.count                                                thrpt    5        30.000               counts
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.time                                                 thrpt    5        40.000                   ms
[info] JsonCodecMakerBenchmark.readArraysJackson                                                        thrpt    5   1254461.719 ±  19981.204   ops/s
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate                                         thrpt    5      1180.014 ±     18.873  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm                                    thrpt    5      1480.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                                thrpt    5      1198.864 ±    702.494  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1503.576 ±    878.912    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                            thrpt    5         0.062 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.078 ±      0.071    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.count                                              thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.time                                               thrpt    5        37.000                   ms
[info] JsonCodecMakerBenchmark.readArraysJsoniter                                                       thrpt    5   2494260.303 ±  45983.174   ops/s
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate                                        thrpt    5      1039.919 ±     19.495  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                                   thrpt    5       656.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5      1004.948 ±     17.636  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5       633.962 ±     22.902    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5         0.062 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.039 ±      0.061    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count                                             thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time                                              thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.readArraysPlay                                                           thrpt    5    237229.642 ±   9471.806   ops/s
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate                                            thrpt    5      1401.635 ±     56.016  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm                                       thrpt    5      9296.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                                   thrpt    5      1347.092 ±     26.730  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5      8935.069 ±    415.729    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                               thrpt    5         0.067 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.443 ±      0.705    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.count                                                 thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.time                                                  thrpt    5        30.000                   ms
[info] JsonCodecMakerBenchmark.readAsciiStringCirce                                                     thrpt    5    288050.846 ±   4023.645   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate                                      thrpt    5      1123.392 ±     15.701  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate.norm                                 thrpt    5      6136.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space                             thrpt    5      1072.714 ±    578.724  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      5861.050 ±   3234.461    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.033 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.182 ±      0.730    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.count                                           thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.time                                            thrpt    5        17.000                   ms
[info] JsonCodecMakerBenchmark.readAsciiStringJackson                                                   thrpt    5    825179.573 ±  11073.733   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate                                    thrpt    5      1766.370 ±     23.684  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate.norm                               thrpt    5      3368.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space                           thrpt    5      1755.988 ±    588.429  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      3348.118 ±   1115.272    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.067 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.127 ±      0.168    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.count                                         thrpt    5        26.000               counts
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.time                                          thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter                                                  thrpt    5    836378.289 ±  16745.306   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate                                   thrpt    5      1407.614 ±     28.202  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate.norm                              thrpt    5      2648.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5      1417.026 ±    592.703  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      2665.407 ±   1097.789    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.058 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.110 ±      0.246    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.count                                        thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.time                                         thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsJackson                                                       thrpt    5   1817424.853 ±  28595.320   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate                                        thrpt    5      1155.092 ±     18.245  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                                   thrpt    5      1000.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1130.563 ±    704.498  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5       978.916 ±    614.348    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.058 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.050 ±      0.124    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time                                              thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter                                                      thrpt    5   3728956.701 ±  49764.324   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate                                       thrpt    5       492.943 ±      6.543  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       208.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       464.030 ±    698.841  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       195.906 ±    296.364    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.017 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.007 ±      0.028    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count                                            thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time                                             thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsPlay                                                          thrpt    5    289917.715 ±   6710.075   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate                                           thrpt    5      1316.344 ±     30.431  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                                      thrpt    5      7144.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1344.800 ±     30.962  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      7298.517 ±    149.528    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.067 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.362 ±      0.649    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count                                                thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time                                                 thrpt    5        36.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce                                                   thrpt    5    559866.574 ±  17495.719   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate                                    thrpt    5      1858.901 ±     58.094  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                               thrpt    5      5224.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                           thrpt    5      1895.713 ±    711.336  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5      5330.053 ±   2113.851    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.075 ±      0.146  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.210 ±      0.406    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count                                         thrpt    5        28.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time                                          thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson                                                 thrpt    5    712238.805 ±  10734.685   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate                                  thrpt    5       883.640 ±     13.291  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                             thrpt    5      1952.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space                         thrpt    5       856.858 ±    688.791  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5      1893.865 ±   1542.907    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.033 ±      0.156  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.073 ±      0.343    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count                                       thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time                                        thrpt    5        15.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter                                                thrpt    5   4179528.572 ± 204212.832   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                                 thrpt    5       191.260 ±      9.355  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                            thrpt    5        72.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       219.756 ±    489.428  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5        82.724 ±    183.642    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.356 ±      3.041  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.133 ±      1.134    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count                                      thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time                                       thrpt    5        12.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay                                                    thrpt    5    229365.966 ±   4813.081   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate                                     thrpt    5      1173.251 ±     24.637  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                                thrpt    5      8048.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1206.772 ±    705.726  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5      8280.613 ±   4916.847    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.050 ±      0.176  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.344 ±      1.213    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count                                          thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time                                           thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce                                                   thrpt    5      5344.091 ±    248.941   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate                                    thrpt    5      1375.675 ±     64.432  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm                               thrpt    5    405000.083 ±      0.013    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                           thrpt    5      1343.693 ±     30.603  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5    395646.738 ±  25488.023    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.097 ±      0.383  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        28.300 ±    112.196    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count                                         thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time                                          thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson                                                 thrpt    5     10199.226 ±    131.528   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate                                  thrpt    5       371.881 ±      4.836  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm                             thrpt    5     57368.044 ±      0.006    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                         thrpt    5       388.186 ±    557.128  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5     59877.025 ±  85815.636    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.536 ±      4.434  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5        82.897 ±    686.266    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count                                       thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time                                        thrpt    5        12.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter                                                thrpt    5     17847.713 ±    167.310   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate                                 thrpt    5       334.052 ±      3.140  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                            thrpt    5     29448.027 ±      0.018    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       331.300 ±      0.721  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5     29205.547 ±    236.412    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.383 ±      3.026  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5        33.682 ±    266.446    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count                                      thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time                                       thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay                                                    thrpt    5      1911.994 ±     43.835   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate                                     thrpt    5      1160.888 ±     26.577  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm                                thrpt    5    955216.229 ±      0.026    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1206.257 ±    706.221  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5    992890.081 ± 590943.223    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.046 ±      0.351  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5        37.556 ±    288.124    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count                                          thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time                                           thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter                                               thrpt    5   2848954.527 ±  59101.226   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                                thrpt    5       854.640 ±     17.788  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                           thrpt    5       472.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       801.069 ±    704.788  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5       442.482 ±    390.649    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.025 ±      0.073    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count                                     thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time                                      thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay                                                   thrpt    5    255782.863 ±   5775.166   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                                    thrpt    5      1359.024 ±     30.276  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                               thrpt    5      8360.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1345.967 ±     28.617  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5      8279.822 ±    198.259    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.067 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.410 ±      0.950    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count                                         thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time                                          thrpt    5        30.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesCirce                                                       thrpt    5    502116.142 ±  18010.517   ops/s
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate                                        thrpt    5      1830.523 ±     65.440  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm                                   thrpt    5      5736.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                               thrpt    5      1826.707 ±    703.617  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5728.474 ±   2406.867    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                           thrpt    5         0.062 ±      0.139  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.195 ±      0.429    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.count                                             thrpt    5        27.000               counts
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.time                                              thrpt    5        30.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesJackson                                                     thrpt    5    532769.137 ±  10610.498   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate                                      thrpt    5       620.351 ±     12.370  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm                                 thrpt    5      1832.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                             thrpt    5       650.167 ±     13.688  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5      1920.098 ±     57.715    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space                         thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.147 ±      0.358    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.count                                           thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.time                                            thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesJsoniter                                                    thrpt    5   2575368.323 ±  66020.633   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate                                     thrpt    5      1021.395 ±     26.177  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                                thrpt    5       624.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5      1071.357 ±    585.888  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5       654.799 ±    368.344    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5         0.058 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.036 ±      0.064    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count                                          thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time                                           thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesPlay                                                        thrpt    5    175460.276 ±   1582.925   ops/s
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate                                         thrpt    5      1209.743 ±     10.964  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm                                    thrpt    5     10848.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                                thrpt    5      1208.219 ±    716.665  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5     10834.840 ±   6441.065    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                            thrpt    5         0.037 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.336 ±      0.937    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.count                                              thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.time                                               thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.readMapsCirce                                                            thrpt    5    467812.662 ±  31306.589   ops/s
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate                                             thrpt    5      1662.662 ±    111.299  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm                                        thrpt    5      5592.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1688.637 ±     33.071  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5680.887 ±    436.526    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.071 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.238 ±      0.139    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.count                                                  thrpt    5        25.000               counts
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.time                                                   thrpt    5        37.000                   ms
[info] JsonCodecMakerBenchmark.readMapsJackson                                                          thrpt    5    893284.660 ±  17911.897   ops/s
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate                                           thrpt    5      1053.717 ±     21.020  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm                                      thrpt    5      1856.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                                  thrpt    5      1058.087 ±    572.265  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5      1864.257 ±   1030.050    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.062 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.110 ±      0.200    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.count                                                thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.time                                                 thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.readMapsJsoniter                                                         thrpt    5   2779838.320 ±  17650.463   ops/s
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate                                          thrpt    5       692.618 ±      4.456  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                                     thrpt    5       392.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       665.122 ±      7.636  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5       376.440 ±      6.525    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.033 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.019 ±      0.069    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count                                               thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time                                                thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.readMapsPlay                                                             thrpt    5    262052.428 ±   2634.667   ops/s
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate                                              thrpt    5      1340.397 ±     13.540  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm                                         thrpt    5      8048.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                                     thrpt    5      1345.972 ±     27.842  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      8081.491 ±    161.603    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.033 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.200 ±      0.733    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.count                                                   thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.time                                                    thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce                                                thrpt    5    525846.791 ±  26674.169   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate                                 thrpt    5      2026.668 ±    102.566  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm                            thrpt    5      6064.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space                        thrpt    5      2033.627 ±     29.893  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5      6085.439 ±    225.884    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space                    thrpt    5         0.054 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.162 ±      0.214    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count                                      thrpt    5        30.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time                                       thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter                                             thrpt    5   1778480.115 ±  65818.065   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate                              thrpt    5      1148.422 ±     42.354  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm                         thrpt    5      1016.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5      1209.651 ±    708.582  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5      1070.788 ±    643.843    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.046 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.041 ±      0.078    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count                                   thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time                                    thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay                                                 thrpt    5    163578.278 ±   4833.439   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate                                  thrpt    5      1172.717 ±     34.536  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm                             thrpt    5     11280.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space                         thrpt    5      1206.982 ±    706.558  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5     11612.347 ±   6870.225    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.058 ±      0.174  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.562 ±      1.675    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count                                       thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time                                        thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsJackson                                                   thrpt    5    668300.114 ±  12297.889   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate                                    thrpt    5       866.526 ±     15.924  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                               thrpt    5      2040.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                           thrpt    5       852.620 ±    685.696  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      2006.878 ±   1605.482    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.050 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.118 ±      0.316    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count                                         thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time                                          thrpt    5        17.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter                                                  thrpt    5   1209427.880 ±  18662.682   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                                   thrpt    5       571.900 ±      8.894  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                              thrpt    5       744.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       598.263 ±    574.241  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       778.141 ±    745.083    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.046 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.059 ±      0.200    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count                                        thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time                                         thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsPlay                                                      thrpt    5    229437.046 ±   3089.041   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate                                       thrpt    5      1208.593 ±     16.225  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                                  thrpt    5      8288.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1208.102 ±    701.442  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8285.053 ±   4822.546    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.315 ±      0.721    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count                                            thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time                                             thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce                                                  thrpt    5   1050425.639 ±  29514.424   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate                                   thrpt    5      1287.138 ±     36.227  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate.norm                              thrpt    5      1928.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space                          thrpt    5      1277.581 ±    578.489  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1914.083 ±    879.073    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space                      thrpt    5         0.054 ±      0.108  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.081 ±      0.160    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.count                                        thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.time                                         thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson                                                thrpt    5    917265.376 ±  31434.890   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate                                 thrpt    5       527.018 ±     18.064  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate.norm                            thrpt    5       904.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space                        thrpt    5       523.750 ±    693.332  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5       899.500 ±   1202.668    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space                    thrpt    5         0.012 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.021 ±      0.075    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.count                                      thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.time                                       thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter                                               thrpt    5   1417819.625 ±  35786.521   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate                                thrpt    5       230.685 ±      5.815  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate.norm                           thrpt    5       256.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       234.950 ±    526.290  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5       261.462 ±    586.054    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.384 ±      3.083  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.428 ±      3.443    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.count                                     thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.time                                      thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesCirce                                                      thrpt    5    466780.314 ±  14373.761   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate                                       thrpt    5      1381.316 ±     42.687  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                                  thrpt    5      4656.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1411.094 ±    567.868  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      4755.983 ±   1884.455    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.154 ±      0.399    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count                                            thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time                                             thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesJackson                                                    thrpt    5   1051871.783 ±  21805.333   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate                                     thrpt    5       796.892 ±     16.513  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                                thrpt    5      1192.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       788.925 ±    698.788  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1181.001 ±   1065.456    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.033 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.050 ±      0.107    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count                                          thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time                                           thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter                                                   thrpt    5   3293048.391 ±  51859.911   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                                    thrpt    5       100.462 ±      1.587  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                               thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       102.350 ±    539.663  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5        49.114 ±    258.966    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.004 ±      0.035  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.002 ±      0.017    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count                                         thrpt    5         2.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time                                          thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesPlay                                                       thrpt    5    177150.377 ±   7978.090   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate                                        thrpt    5      1215.115 ±     54.663  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                                   thrpt    5     10792.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1208.107 ±    701.587  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5     10742.259 ±   6580.962    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.054 ±      0.185  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.483 ±      1.644    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count                                             thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time                                              thrpt    5        48.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPICirce                                                      thrpt    5      8287.298 ±    160.897   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate                                       thrpt    5      1169.276 ±     22.981  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm                                  thrpt    5    221980.930 ±     71.144    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space                              thrpt    5      1202.150 ±    704.194  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5    228230.393 ± 133877.062    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.108 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5        20.580 ±     29.657    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count                                            thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time                                             thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson                                                    thrpt    5     11853.618 ±    310.485   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate                                     thrpt    5       187.450 ±      4.896  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm                                thrpt    5     24880.040 ±      0.023    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space                            thrpt    5       153.532 ±    539.688  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5     20417.587 ±  71771.654    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.012 ±      0.071  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         1.603 ±      9.445    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count                                          thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time                                           thrpt    5        17.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter                                                   thrpt    5     23948.891 ±    484.848   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate                                    thrpt    5       266.211 ±      5.396  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm                               thrpt    5     17488.028 ±      0.089    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       234.834 ±    525.889  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5     15455.349 ±  34609.031    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.371 ±      3.019  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        24.426 ±    198.555    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count                                         thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time                                          thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay                                                       thrpt    5      3773.884 ±     63.134   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate                                        thrpt    5      1106.806 ±     18.301  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm                                   thrpt    5    461416.116 ±      0.015    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1137.556 ±    696.760  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5    474310.273 ± 292789.997    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.058 ±      0.208  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5        24.303 ±     86.562    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time                                              thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtCirce                                                            thrpt    5    420300.370 ±  16732.094   ops/s
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate                                             thrpt    5      1401.937 ±     55.843  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm                                        thrpt    5      5248.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1413.697 ±    593.838  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5293.680 ±   2293.627    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.071 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.265 ±      0.259    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.count                                                  thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.time                                                   thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtJackson                                                          thrpt    5   1592532.033 ±  36683.301   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate                                           thrpt    5       663.964 ±     15.313  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm                                      thrpt    5       656.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space                                  thrpt    5       653.805 ±     14.000  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5       645.973 ±     14.112    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.037 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.037 ±      0.118    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.count                                                thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.time                                                 thrpt    5        12.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtJsoniter                                                         thrpt    5  11528937.691 ± 217928.336   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate                                          thrpt    5       586.185 ±     11.025  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm                                     thrpt    5        80.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       596.903 ±    572.008  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5        81.437 ±     77.727    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.033 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.005 ±      0.010    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count                                               thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time                                                thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtPlay                                                             thrpt    5    239607.995 ±   5474.484   ops/s
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate                                              thrpt    5       771.190 ±     17.648  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm                                         thrpt    5      5064.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space                                     thrpt    5       730.775 ±    573.618  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      4802.868 ±   3890.880    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.025 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.165 ±      0.692    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.count                                                   thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.time                                                    thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce                                                        thrpt    5   1564215.737 ±  45823.793   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate                                         thrpt    5      1503.175 ±     44.033  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                                    thrpt    5      1512.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                                thrpt    5      1482.736 ±    693.375  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1491.966 ±    717.189    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                            thrpt    5         0.050 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.050 ±      0.134    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count                                              thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time                                               thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson                                                      thrpt    5   4291204.575 ± 215238.850   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate                                       thrpt    5      1178.192 ±     59.008  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1197.048 ±    702.126  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       439.416 ±    271.393    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.071 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.026 ±      0.035    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count                                            thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time                                             thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter                                                     thrpt    5  15620300.433 ± 109249.985   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                                      thrpt    5       476.538 ±      3.323  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                                 thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       463.504 ±    697.704  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5        46.702 ±     70.481    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.021 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.002 ±      0.011    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count                                           thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time                                            thrpt    5         5.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc                                             thrpt    5  19202334.662 ± 235679.004   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate                              thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm                         thrpt    5        ≈ 10⁻⁵                 B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count                                   thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay                                                         thrpt    5   1003826.744 ±  32602.414   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate                                          thrpt    5      1485.326 ±     48.222  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                                     thrpt    5      2328.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1476.809 ±    721.830  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2314.667 ±   1128.069    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.029 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.046 ±      0.113    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count                                               thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time                                                thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysCirce                                                         thrpt    5    742743.570 ±  10335.366   ops/s
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate                                          thrpt    5      1710.755 ±     23.973  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm                                     thrpt    5      3624.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1689.786 ±     30.841  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      3579.646 ±    102.371    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.062 ±      0.139  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.132 ±      0.293    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.count                                               thrpt    5        25.000               counts
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.time                                                thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysJackson                                                       thrpt    5   2495471.130 ±  68274.428   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate                                        thrpt    5      1446.579 ±     39.675  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm                                   thrpt    5       912.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1475.332 ±    701.939  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5       930.429 ±    454.354    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.034 ±      0.058    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.count                                             thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.time                                              thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysJsoniter                                                      thrpt    5   4689065.821 ± 105480.330   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate                                       thrpt    5      1287.492 ±     28.942  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5      1279.493 ±    578.645  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       429.294 ±    193.270    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.079 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.027 ±      0.022    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count                                            thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time                                             thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysPlay                                                          thrpt    5    331692.275 ±   8014.908   ops/s
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate                                           thrpt    5      1183.937 ±     28.998  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm                                      thrpt    5      5616.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1140.755 ±    710.483  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5412.786 ±   3417.613    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.046 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.217 ±      0.560    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.count                                                thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.time                                                 thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce                                                    thrpt    5    160861.371 ±   3008.902   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate                                     thrpt    5       821.191 ±     15.429  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate.norm                                thrpt    5      8032.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space                            thrpt    5       797.083 ±    691.305  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5      7792.572 ±   6674.994    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space                        thrpt    5         0.042 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.407 ±      1.239    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.count                                          thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.time                                           thrpt    5        12.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson                                                  thrpt    5    505693.040 ±  60465.287   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate                                   thrpt    5       511.655 ±     61.244  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate.norm                              thrpt    5      1592.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space                          thrpt    5       523.071 ±    686.923  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1620.015 ±   2039.438    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space                      thrpt    5         0.033 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.103 ±      0.424    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.count                                        thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.time                                         thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter                                                 thrpt    5    651787.370 ±  10344.965   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate                                  thrpt    5       550.105 ±      8.656  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate.norm                             thrpt    5      1328.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5       597.015 ±    571.565  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5      1440.757 ±   1373.494    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5         0.050 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.121 ±      0.324    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.count                                       thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.time                                        thrpt    5        15.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc                                         thrpt    5    695406.086 ±   9310.405   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate                          thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm                     thrpt    5         0.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.count                               thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay                                                     thrpt    5    609767.576 ±   9980.684   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate                                      thrpt    5       651.070 ±     10.640  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate.norm                                 thrpt    5      1680.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space                             thrpt    5       657.673 ±     11.153  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5      1697.063 ±     38.338    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space                         thrpt    5         0.050 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.129 ±      0.187    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.count                                           thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.time                                            thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsJackson                                                      thrpt    5   2025567.300 ±  18167.529   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate                                       thrpt    5      1071.208 ±      9.410  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                                  thrpt    5       832.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1061.323 ±    573.186  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       824.368 ±    446.937    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.036 ±      0.068    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time                                             thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter                                                     thrpt    5   4588328.830 ±  95188.369   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                                      thrpt    5       699.901 ±     14.518  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                                 thrpt    5       240.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       731.393 ±    564.336  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5       250.702 ±    190.405    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.062 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.021 ±      0.019    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count                                           thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time                                            thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsPlay                                                         thrpt    5    500070.541 ±  12983.394   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate                                          thrpt    5      1479.777 ±     38.227  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                                     thrpt    5      4656.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1474.929 ±    690.996  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      4639.029 ±   2098.301    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.050 ±      0.166  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.158 ±      0.527    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count                                               thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time                                                thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce                                                  thrpt    5      5543.321 ±    180.801   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate                                   thrpt    5      1276.407 ±     41.718  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm                              thrpt    5    362272.079 ±      0.009    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                          thrpt    5      1274.758 ±    568.905  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5    361853.440 ± 163001.665    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                      thrpt    5         0.076 ±      0.170  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5        21.652 ±     48.662    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count                                        thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time                                         thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson                                                thrpt    5     29804.472 ±   1563.866   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate                                 thrpt    5       432.053 ±     22.702  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm                            thrpt    5     22807.847 ±      0.423    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                        thrpt    5       454.170 ±    684.856  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5     24074.633 ±  37509.962    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                    thrpt    5         0.037 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm               thrpt    5         1.988 ±      4.707    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count                                      thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time                                       thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter                                               thrpt    5     46555.311 ±   1309.642   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate                                thrpt    5       350.814 ±      9.880  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                           thrpt    5     11856.010 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       397.405 ±    570.239  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5     13455.509 ±  19744.972    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.388 ±      3.069  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5        13.132 ±    104.006    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count                                     thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time                                      thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc                                       thrpt    5     56858.914 ±    256.217   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate                        thrpt    5         0.868 ±      0.004  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm                   thrpt    5        24.008 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count                             thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay                                                   thrpt    5      4453.038 ±    171.114   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate                                    thrpt    5      1322.093 ±     50.812  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm                               thrpt    5    467103.818 ±      2.605    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1346.299 ±     28.304  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5    475698.987 ±  23017.223    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.029 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        10.294 ±     43.039    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count                                         thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time                                          thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson                                               thrpt    5    684118.232 ±  19746.171   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                                thrpt    5      1499.225 ±     43.119  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                           thrpt    5      3448.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1539.123 ±    703.826  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      3540.537 ±   1644.939    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.042 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.096 ±      0.226    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count                                     thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time                                      thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter                                              thrpt    5   2523163.908 ±  66284.377   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                               thrpt    5       410.538 ±     10.768  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       256.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       397.416 ±    570.323  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       248.215 ±    363.176    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.021 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.013 ±      0.061    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count                                    thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time                                     thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay                                                  thrpt    5    255858.589 ±   3275.015   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                                   thrpt    5       990.037 ±     12.580  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                              thrpt    5      6088.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1002.341 ±     25.383  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      6163.798 ±    222.302    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.027 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.166 ±      0.641    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count                                        thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time                                         thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesCirce                                                      thrpt    5    625271.558 ±  19941.587   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate                                       thrpt    5      1506.905 ±     47.937  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                                  thrpt    5      3792.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1482.710 ±    693.335  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      3730.209 ±   1701.219    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.075 ±      0.176  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.188 ±      0.437    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count                                            thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time                                             thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesJackson                                                    thrpt    5   1100903.947 ±  21186.898   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate                                     thrpt    5       744.557 ±     14.376  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                                thrpt    5      1064.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       784.523 ±    690.537  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1120.936 ±    982.385    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.037 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.054 ±      0.170    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count                                          thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time                                           thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter                                                   thrpt    5   5243412.211 ± 117818.793   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate                                    thrpt    5       639.842 ±     14.485  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                               thrpt    5       192.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       663.931 ±      6.757  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5       199.234 ±      4.395    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.050 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.015 ±      0.041    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count                                         thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time                                          thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesPlay                                                       thrpt    5    366489.774 ±  10071.592   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate                                        thrpt    5      1276.443 ±     35.017  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                                   thrpt    5      5480.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1277.889 ±    571.158  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5485.773 ±   2435.145    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.033 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.143 ±      0.311    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count                                             thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time                                              thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsCirce                                                           thrpt    5    373869.409 ±  10045.585   ops/s
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate                                            thrpt    5      1024.612 ±     27.611  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm                                       thrpt    5      4312.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                                   thrpt    5      1000.128 ±     23.875  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                              thrpt    5      4209.027 ±     85.109    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                               thrpt    5         0.033 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.141 ±      0.512    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.count                                                 thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.time                                                  thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsJackson                                                         thrpt    5    762197.698 ±  28518.027   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate                                          thrpt    5      1162.654 ±     43.481  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm                                     thrpt    5      2400.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                                 thrpt    5      1127.343 ±    702.026  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2330.005 ±   1534.686    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                             thrpt    5         0.062 ±      0.160  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.129 ±      0.334    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.count                                               thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.time                                                thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsJsoniter                                                        thrpt    5   2337046.281 ±  63677.528   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate                                         thrpt    5       356.491 ±      9.685  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                                    thrpt    5       240.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                                thrpt    5       397.414 ±    570.329  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                           thrpt    5       267.983 ±    392.166    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                            thrpt    5         0.384 ±      3.081  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.257 ±      2.066    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count                                              thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time                                               thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsPlay                                                            thrpt    5    288528.742 ±  10124.491   ops/s
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate                                             thrpt    5      1063.570 ±     37.337  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm                                        thrpt    5      5800.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                                    thrpt    5      1070.902 ±    579.109  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5842.961 ±   3268.398    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                                thrpt    5         0.042 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.227 ±      0.312    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.count                                                  thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.time                                                   thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce                                               thrpt    5    609769.109 ±  23337.112   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate                                thrpt    5      1407.585 ±     54.023  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm                           thrpt    5      3632.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space                       thrpt    5      1413.490 ±    583.120  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5      3650.086 ±   1638.780    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.119 ±      0.273    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count                                     thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time                                      thrpt    5        39.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson                                             thrpt    5   1238846.312 ±  13141.750   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate                              thrpt    5       711.774 ±      7.581  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm                         thrpt    5       904.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space                     thrpt    5       718.509 ±    578.390  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5       912.816 ±    742.224    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space                 thrpt    5         0.042 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.053 ±      0.102    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count                                   thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time                                    thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter                                            thrpt    5   4506434.527 ±  71827.255   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate                             thrpt    5       343.695 ±      5.412  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm                        thrpt    5       120.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5       331.174 ±      0.109  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5       115.630 ±      1.852    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5         0.372 ±      3.023  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.130 ±      1.057    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count                                  thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time                                   thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay                                                thrpt    5    375948.209 ±   5935.481   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate                                 thrpt    5      1301.780 ±     20.678  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm                            thrpt    5      5448.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space                        thrpt    5      1279.014 ±    597.645  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5      5354.004 ±   2542.708    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space                    thrpt    5         0.025 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.104 ±      0.280    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count                                      thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time                                       thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce                                                    thrpt    5    363757.318 ±   7474.259   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate                                     thrpt    5       976.505 ±     20.094  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                                thrpt    5      4224.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                            thrpt    5       999.268 ±     23.358  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5      4322.555 ±    129.342    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space                        thrpt    5         0.050 ±      0.185  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.216 ±      0.797    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count                                          thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time                                           thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson                                                  thrpt    5    786474.490 ±  50496.572   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate                                   thrpt    5      1291.633 ±     82.868  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                              thrpt    5      2584.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space                          thrpt    5      1263.650 ±    571.324  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5      2529.484 ±   1182.923    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space                      thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.100 ±      0.190    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count                                        thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time                                         thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter                                                 thrpt    5   2133582.296 ±  64938.564   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                                  thrpt    5       401.382 ±     12.239  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                             thrpt    5       296.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5       396.927 ±    569.098  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5       292.924 ±    423.517    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5         0.021 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.015 ±      0.084    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count                                       thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time                                        thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay                                                     thrpt    5    258193.671 ±   3397.663   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate                                      thrpt    5       987.231 ±     12.949  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                                 thrpt    5      6016.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                             thrpt    5      1001.850 ±     23.484  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5      6105.087 ±    117.607    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space                         thrpt    5         0.058 ±      0.200  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.356 ±      1.226    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count                                           thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time                                            thrpt    5        29.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce                                                 thrpt    5    952767.556 ±  20925.676   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate                                  thrpt    5       620.096 ±     13.626  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate.norm                             thrpt    5      1024.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space                         thrpt    5       661.172 ±      8.950  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                    thrpt    5      1091.871 ±     34.173    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space                     thrpt    5         0.037 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.062 ±      0.172    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.count                                       thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.time                                        thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson                                               thrpt    5   2056774.318 ±  83895.639   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate                                thrpt    5       847.073 ±     34.415  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate.norm                           thrpt    5       648.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space                       thrpt    5       859.430 ±    697.393  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5       658.100 ±    546.399    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.035 ±      0.080    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.count                                     thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.time                                      thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter                                              thrpt    5   2260422.779 ±  23354.630   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate                               thrpt    5       448.240 ±      4.648  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate.norm                          thrpt    5       312.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       397.408 ±    570.257  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       276.710 ±    398.691    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.025 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.017 ±      0.100    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.count                                    thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.time                                     thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc                                      thrpt    5   2426809.435 ±  18110.140   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate                       thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm                  thrpt    5        ≈ 10⁻⁴                 B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.count                            thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay                                                  thrpt    5   2037901.724 ±  72040.024   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate                                   thrpt    5       860.022 ±     30.354  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate.norm                              thrpt    5       664.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space                          thrpt    5       860.173 ±    687.524  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5       665.067 ±    550.302    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.050 ±      0.166  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.039 ±      0.129    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.count                                        thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.time                                         thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesCirce                                                     thrpt    5    682044.377 ±   7697.202   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate                                      thrpt    5      1189.434 ±     13.523  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                                 thrpt    5      2744.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                             thrpt    5      1139.284 ±    708.164  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2628.541 ±   1640.661    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.033 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.077 ±      0.212    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count                                           thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time                                            thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJackson                                                   thrpt    5   1662525.374 ±  27045.513   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate                                    thrpt    5       735.442 ±     11.880  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                               thrpt    5       696.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                           thrpt    5       721.511 ±    555.423  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5       682.624 ±    519.459    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.042 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.039 ±      0.076    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count                                         thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time                                          thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter                                                  thrpt    5   4762299.337 ± 138652.834   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                                   thrpt    5       387.422 ±     11.268  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                              thrpt    5       128.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       397.405 ±    570.332  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       131.597 ±    194.097    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.033 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.011 ±      0.031    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count                                        thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time                                         thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc                                          thrpt    5   5044675.460 ± 197586.898   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate                           thrpt    5       153.897 ±      6.037  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space                  thrpt    5       153.524 ±    539.658  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm             thrpt    5        48.053 ±    168.936    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space              thrpt    5         0.008 ±      0.066  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.002 ±      0.020    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count                                thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time                                 thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesPlay                                                      thrpt    5    219423.935 ±   8064.895   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate                                       thrpt    5      1117.860 ±     41.247  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                                  thrpt    5      8016.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1139.880 ±    714.069  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8179.475 ±   5283.772    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.054 ±      0.156  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.390 ±      1.136    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count                                            thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time                                             thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce                                                     thrpt    5      7872.888 ±    185.494   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate                                      thrpt    5       723.491 ±     17.338  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm                                 thrpt    5    144583.142 ±     84.327    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space                             thrpt    5       727.493 ±    581.179  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5    145356.131 ± 115277.731    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.035 ±      0.109  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         6.949 ±     21.661    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count                                           thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time                                            thrpt    5        12.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson                                                   thrpt    5     36343.599 ±   1141.544   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate                                    thrpt    5       464.286 ±     14.634  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm                               thrpt    5     20100.023 ±      0.093    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space                           thrpt    5       452.373 ±    680.164  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5     19559.131 ±  29080.309    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.037 ±      0.200  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         1.615 ±      8.601    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count                                         thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time                                          thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter                                                  thrpt    5     52566.502 ±   1127.195   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate                                   thrpt    5       349.071 ±      7.478  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm                              thrpt    5     10448.008 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       330.708 ±      0.677  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      9898.661 ±    227.725    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.388 ±      3.118  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5        11.695 ±     94.037    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count                                        thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time                                         thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc                                          thrpt    5     60029.208 ±    391.222   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate                           thrpt    5        13.430 ±      0.089  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5       352.007 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count                                thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay                                                      thrpt    5      4837.290 ±    140.727   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate                                       thrpt    5      1233.708 ±     35.900  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm                                  thrpt    5    401245.887 ±      2.729    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1276.123 ±    578.398  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5    415067.595 ± 188791.559    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.052 ±      0.200  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5        17.018 ±     65.860    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count                                            thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time                                             thrpt    5        26.000                   ms
[success] Total time: 1957 s, completed Dec 14, 2017 12:33:54 PM
